{
	"CreateThread": {
		"scope": "lua",
		"prefix": "CreateThread",
		"body": [
			"CreateThread(${1:threadFunction})"
		]
	},
	"Citizen.CreateThread": {
		"scope": "lua",
		"prefix": "Citizen.CreateThread",
		"body": [
			"Citizen.CreateThread(${1:threadFunction})"
		]
	},
	"Wait": {
		"scope": "lua",
		"prefix": "Wait",
		"body": [
			"Wait(${1:msec})"
		]
	},
	"Citizen.Wait": {
		"scope": "lua",
		"prefix": "Citizen.Wait",
		"body": [
			"Citizen.Wait(${1:msec})"
		]
	},
	"Citizen.CreateThreadNow": {
		"scope": "lua",
		"prefix": "Citizen.CreateThreadNow",
		"body": [
			"Citizen.CreateThreadNow(${1:threadFunction}, ${2:name})"
		]
	},
	"Citizen.Await": {
		"scope": "lua",
		"prefix": "Citizen.Await",
		"body": [
			"Citizen.Await(${1:promise})"
		]
	},
	"SetTimeout": {
		"scope": "lua",
		"prefix": "SetTimeout",
		"body": [
			"SetTimeout(${1:msec}, ${2:callback})"
		]
	},
	"Citizen.SetTimeout": {
		"scope": "lua",
		"prefix": "Citizen.SetTimeout",
		"body": [
			"Citizen.SetTimeout(${1:msec}, ${2:callback})"
		]
	},
	"AddEventHandler": {
		"scope": "lua",
		"prefix": "AddEventHandler",
		"body": [
			"AddEventHandler(${1:eventName}, ${2:eventRoutine})"
		]
	},
	"RemoveEventHandler": {
		"scope": "lua",
		"prefix": "RemoveEventHandler",
		"body": [
			"RemoveEventHandler(${1:eventData})"
		]
	},
	"RegisterNetEvent": {
		"scope": "lua",
		"prefix": "RegisterNetEvent",
		"body": [
			"RegisterNetEvent(${1:eventName}, ${2:cb})"
		]
	},
	"RegisterServerEvent": {
		"scope": "lua",
		"prefix": "RegisterServerEvent",
		"body": [
			"RegisterServerEvent(${1:eventName}, ${2:cb})"
		]
	},
	"TriggerEvent": {
		"scope": "lua",
		"prefix": "TriggerEvent",
		"body": [
			"TriggerEvent(${1:eventName}, ${2:...})"
		]
	},
	"TriggerClientEvent": {
		"scope": "lua",
		"prefix": "TriggerClientEvent",
		"body": [
			"TriggerClientEvent(${1:eventName}, ${2:playerId}, ${3:...})"
		]
	},
	"TriggerLatentClientEvent": {
		"scope": "lua",
		"prefix": "TriggerLatentClientEvent",
		"body": [
			"TriggerLatentClientEvent(${1:eventName}, ${2:playerId}, ${3:bps}, ${4:...})"
		]
	},
	"GetPlayerIdentifiers": {
		"scope": "lua",
		"prefix": "GetPlayerIdentifiers",
		"body": [
			"GetPlayerIdentifiers(${1:player})"
		]
	},
	"GetPlayers": {
		"scope": "lua",
		"prefix": "GetPlayers",
		"body": [
			"GetPlayers()"
		]
	},
	"PerformHttpRequest": {
		"scope": "lua",
		"prefix": "PerformHttpRequest",
		"body": [
			"PerformHttpRequest(${1:url}, ${2:cb}, ${3:method}, ${4:data}, ${5:headers}, ${6:options})"
		]
	},
	"TriggerServerEvent": {
		"scope": "lua",
		"prefix": "TriggerServerEvent",
		"body": [
			"TriggerServerEvent(${1:eventName}, ${2:...})"
		]
	},
	"TriggerLatentServerEvent": {
		"scope": "lua",
		"prefix": "TriggerLatentServerEvent",
		"body": [
			"TriggerLatentServerEvent(${1:eventName}, ${2:bps}, ${3:...})"
		]
	},
	"Citizen.GetFunctionReference": {
		"scope": "lua",
		"prefix": "Citizen.GetFunctionReference",
		"body": [
			"Citizen.GetFunctionReference(${1:func})"
		]
	},
	"RegisterNUICallback": {
		"scope": "lua",
		"prefix": "RegisterNUICallback",
		"body": [
			"RegisterNUICallback(${1:type}, ${2:callback})"
		]
	},
	"SendNUIMessage": {
		"scope": "lua",
		"prefix": "SendNUIMessage",
		"body": [
			"SendNUIMessage(${1:message})"
		]
	},
	"vec": {
		"scope": "lua",
		"prefix": "vec",
		"body": [
			"vec(${1:x})"
		]
	},
	"vector2": {
		"scope": "lua",
		"prefix": "vector2",
		"body": [
			"vector2(${1:x}, ${2:y})"
		]
	},
	"vector3": {
		"scope": "lua",
		"prefix": "vector3",
		"body": [
			"vector3(${1:x}, ${2:y}, ${3:z})"
		]
	},
	"vector4": {
		"scope": "lua",
		"prefix": "vector4",
		"body": [
			"vector4(${1:x}, ${2:y}, ${3:z}, ${4:w})"
		]
	},
	"quat": {
		"scope": "lua",
		"prefix": "quat",
		"body": [
			"quat(${1:w}, ${2:z}, ${3:y}, ${4:x})"
		]
	},
	"Entity": {
		"scope": "lua",
		"prefix": "Entity",
		"body": [
			"Entity(${1:ent})"
		]
	},
	"Player": {
		"scope": "lua",
		"prefix": "Player",
		"body": [
			"Player(${1:ent})"
		]
	},
	"Absf": {
		"body": [
			"Absf(${1:value})"
		],
		"scope": "lua",
		"prefix": "Absf"
	},
	"Absi": {
		"body": [
			"Absi(${1:value})"
		],
		"scope": "lua",
		"prefix": "Absi"
	},
	"Acos": {
		"body": [
			"Acos(${1:p0})"
		],
		"scope": "lua",
		"prefix": "Acos"
	},
	"ActivateAudioSlowmoMode": {
		"body": [
			"ActivateAudioSlowmoMode(${1:p0})"
		],
		"scope": "lua",
		"prefix": "ActivateAudioSlowmoMode"
	},
	"ActivateDamageTrackerOnNetworkId": {
		"body": [
			"ActivateDamageTrackerOnNetworkId(${1:netID}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "ActivateDamageTrackerOnNetworkId"
	},
	"ActivateDamageTrackerOnPlayer": {
		"body": [
			"ActivateDamageTrackerOnPlayer(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "ActivateDamageTrackerOnPlayer"
	},
	"ActivateFrontendMenu": {
		"body": [
			"ActivateFrontendMenu(${1:menuhash}, ${2:togglePause}, ${3:component})"
		],
		"scope": "lua",
		"prefix": "ActivateFrontendMenu"
	},
	"ActivateInteriorEntitySet": {
		"body": [
			"ActivateInteriorEntitySet(${1:interior}, ${2:entitySetName})"
		],
		"scope": "lua",
		"prefix": "ActivateInteriorEntitySet"
	},
	"ActivatePhysics": {
		"body": [
			"ActivatePhysics(${1:entity})"
		],
		"scope": "lua",
		"prefix": "ActivatePhysics"
	},
	"ActivateRockstarEditor": {
		"body": [
			"ActivateRockstarEditor()"
		],
		"scope": "lua",
		"prefix": "ActivateRockstarEditor"
	},
	"AddAmmoToPed": {
		"body": [
			"AddAmmoToPed(${1:ped}, ${2:weaponHash}, ${3:ammo})"
		],
		"scope": "lua",
		"prefix": "AddAmmoToPed"
	},
	"AddAmmoToPedByType": {
		"body": [
			"AddAmmoToPedByType(${1:ped}, ${2:ammoType}, ${3:ammo})"
		],
		"scope": "lua",
		"prefix": "AddAmmoToPedByType"
	},
	"AddArmourToPed": {
		"body": [
			"AddArmourToPed(${1:ped}, ${2:amount})"
		],
		"scope": "lua",
		"prefix": "AddArmourToPed"
	},
	"AddAudioSubmixOutput": {
		"body": [
			"AddAudioSubmixOutput(${1:submixId}, ${2:outputSubmixId})"
		],
		"scope": "lua",
		"prefix": "AddAudioSubmixOutput"
	},
	"AddBlipForArea": {
		"body": [
			"AddBlipForArea(${1:x}, ${2:y}, ${3:z}, ${4:width}, ${5:height})"
		],
		"scope": "lua",
		"prefix": "AddBlipForArea"
	},
	"AddBlipForCoord": {
		"body": [
			"AddBlipForCoord(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "AddBlipForCoord"
	},
	"AddBlipForEntity": {
		"body": [
			"AddBlipForEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "AddBlipForEntity"
	},
	"AddBlipForPickup": {
		"body": [
			"AddBlipForPickup(${1:pickup})"
		],
		"scope": "lua",
		"prefix": "AddBlipForPickup"
	},
	"AddBlipForRadius": {
		"body": [
			"AddBlipForRadius(${1:posX}, ${2:posY}, ${3:posZ}, ${4:radius})"
		],
		"scope": "lua",
		"prefix": "AddBlipForRadius"
	},
	"AddCamSplineNode": {
		"body": [
			"AddCamSplineNode(${1:camera}, ${2:x}, ${3:y}, ${4:z}, ${5:xRot}, ${6:yRot}, ${7:zRot}, ${8:length}, ${9:p8}, ${10:transitionType})"
		],
		"scope": "lua",
		"prefix": "AddCamSplineNode"
	},
	"AddCamSplineNodeUsingCamera": {
		"body": [
			"AddCamSplineNodeUsingCamera(${1:cam}, ${2:cam2}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "AddCamSplineNodeUsingCamera"
	},
	"AddCamSplineNodeUsingCameraFrame": {
		"body": [
			"AddCamSplineNodeUsingCameraFrame(${1:cam}, ${2:cam2}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "AddCamSplineNodeUsingCameraFrame"
	},
	"AddCamSplineNodeUsingGameplayFrame": {
		"body": [
			"AddCamSplineNodeUsingGameplayFrame(${1:cam}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "AddCamSplineNodeUsingGameplayFrame"
	},
	"AddCoverBlockingArea": {
		"body": [
			"AddCoverBlockingArea(${1:playerX}, ${2:playerY}, ${3:playerZ}, ${4:radiusX}, ${5:radiusY}, ${6:radiusZ}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "AddCoverBlockingArea"
	},
	"AddCoverPoint": {
		"body": [
			"AddCoverPoint(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "AddCoverPoint"
	},
	"AddCurrentRise": {
		"body": [
			"AddCurrentRise(${1:xLow}, ${2:yLow}, ${3:xHigh}, ${4:yHigh}, ${5:height})"
		],
		"scope": "lua",
		"prefix": "AddCurrentRise"
	},
	"AddDecal": {
		"body": [
			"AddDecal(${1:decalType}, ${2:posX}, ${3:posY}, ${4:posZ}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:width}, ${12:height}, ${13:rCoef}, ${14:gCoef}, ${15:bCoef}, ${16:opacity}, ${17:timeout}, ${18:p17}, ${19:p18}, ${20:p19})"
		],
		"scope": "lua",
		"prefix": "AddDecal"
	},
	"AddDispatchSpawnBlockingAngledArea": {
		"body": [
			"AddDispatchSpawnBlockingAngledArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:width})"
		],
		"scope": "lua",
		"prefix": "AddDispatchSpawnBlockingAngledArea"
	},
	"AddDispatchSpawnBlockingArea": {
		"body": [
			"AddDispatchSpawnBlockingArea(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "AddDispatchSpawnBlockingArea"
	},
	"AddDoorToSystem": {
		"body": [
			"AddDoorToSystem(${1:doorHash}, ${2:modelHash}, ${3:x}, ${4:y}, ${5:z}, ${6:p5}, ${7:scriptDoor}, ${8:isLocal})"
		],
		"scope": "lua",
		"prefix": "AddDoorToSystem"
	},
	"AddEntityIcon": {
		"body": [
			"AddEntityIcon(${1:entity}, ${2:icon})"
		],
		"scope": "lua",
		"prefix": "AddEntityIcon"
	},
	"AddEntityToAudioMixGroup": {
		"body": [
			"AddEntityToAudioMixGroup(${1:entity}, ${2:groupName}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "AddEntityToAudioMixGroup"
	},
	"AddExplosion": {
		"body": [
			"AddExplosion(${1:x}, ${2:y}, ${3:z}, ${4:explosionType}, ${5:damageScale}, ${6:isAudible}, ${7:isInvisible}, ${8:cameraShake})"
		],
		"scope": "lua",
		"prefix": "AddExplosion"
	},
	"AddExplosionWithUserVfx": {
		"body": [
			"AddExplosionWithUserVfx(${1:x}, ${2:y}, ${3:z}, ${4:explosionType}, ${5:explosionFx}, ${6:damageScale}, ${7:isAudible}, ${8:isInvisible}, ${9:cameraShake})"
		],
		"scope": "lua",
		"prefix": "AddExplosionWithUserVfx"
	},
	"AddHospitalRestart": {
		"body": [
			"AddHospitalRestart(${1:x}, ${2:y}, ${3:z}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "AddHospitalRestart"
	},
	"AddLineToConversation": {
		"body": [
			"AddLineToConversation(${1:index}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11}, ${13:p12})"
		],
		"scope": "lua",
		"prefix": "AddLineToConversation"
	},
	"AddMinimapOverlay": {
		"body": [
			"AddMinimapOverlay(${1:name})"
		],
		"scope": "lua",
		"prefix": "AddMinimapOverlay"
	},
	"AddModelToCreatorBudget": {
		"body": [
			"AddModelToCreatorBudget(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "AddModelToCreatorBudget"
	},
	"AddNavmeshBlockingObject": {
		"body": [
			"AddNavmeshBlockingObject(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "AddNavmeshBlockingObject"
	},
	"AddNavmeshRequiredRegion": {
		"body": [
			"AddNavmeshRequiredRegion(${1:x}, ${2:y}, ${3:radius})"
		],
		"scope": "lua",
		"prefix": "AddNavmeshRequiredRegion"
	},
	"AddNextMessageToPreviousBriefs": {
		"body": [
			"AddNextMessageToPreviousBriefs(${1:p0})"
		],
		"scope": "lua",
		"prefix": "AddNextMessageToPreviousBriefs"
	},
	"AddOwnedExplosion": {
		"body": [
			"AddOwnedExplosion(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:explosionType}, ${6:damageScale}, ${7:isAudible}, ${8:isInvisible}, ${9:cameraShake})"
		],
		"scope": "lua",
		"prefix": "AddOwnedExplosion"
	},
	"AddPatrolRouteLink": {
		"body": [
			"AddPatrolRouteLink(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "AddPatrolRouteLink"
	},
	"AddPatrolRouteNode": {
		"body": [
			"AddPatrolRouteNode(${1:p0}, ${2:p1}, ${3:x1}, ${4:y1}, ${5:z1}, ${6:x2}, ${7:y2}, ${8:z2}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "AddPatrolRouteNode"
	},
	"AddPedDecorationFromHashes": {
		"body": [
			"AddPedDecorationFromHashes(${1:ped}, ${2:collection}, ${3:overlay})"
		],
		"scope": "lua",
		"prefix": "AddPedDecorationFromHashes"
	},
	"AddPedDecorationFromHashesInCorona": {
		"body": [
			"AddPedDecorationFromHashesInCorona(${1:ped}, ${2:collection}, ${3:overlay})"
		],
		"scope": "lua",
		"prefix": "AddPedDecorationFromHashesInCorona"
	},
	"AddPedToConversation": {
		"body": [
			"AddPedToConversation(${1:index}, ${2:ped}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "AddPedToConversation"
	},
	"AddPetrolDecal": {
		"body": [
			"AddPetrolDecal(${1:x}, ${2:y}, ${3:z}, ${4:groundLvl}, ${5:width}, ${6:transparency})"
		],
		"scope": "lua",
		"prefix": "AddPetrolDecal"
	},
	"AddPetrolTrailDecalInfo": {
		"body": [
			"AddPetrolTrailDecalInfo(${1:x}, ${2:y}, ${3:z}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "AddPetrolTrailDecalInfo"
	},
	"AddPickupToInteriorRoomByName": {
		"body": [
			"AddPickupToInteriorRoomByName(${1:pickup}, ${2:roomName})"
		],
		"scope": "lua",
		"prefix": "AddPickupToInteriorRoomByName"
	},
	"AddPointToGpsCustomRoute": {
		"body": [
			"AddPointToGpsCustomRoute(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "AddPointToGpsCustomRoute"
	},
	"AddPointToGpsMultiRoute": {
		"body": [
			"AddPointToGpsMultiRoute(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "AddPointToGpsMultiRoute"
	},
	"AddPoliceRestart": {
		"body": [
			"AddPoliceRestart(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "AddPoliceRestart"
	},
	"AddPopMultiplierArea": {
		"body": [
			"AddPopMultiplierArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "AddPopMultiplierArea"
	},
	"AddPopMultiplierSphere": {
		"body": [
			"AddPopMultiplierSphere(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:pedMultiplier}, ${6:vehicleMultiplier}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "AddPopMultiplierSphere"
	},
	"AddRelationshipGroup": {
		"body": [
			"AddRelationshipGroup(${1:name}, ${2:groupHash})"
		],
		"scope": "lua",
		"prefix": "AddRelationshipGroup"
	},
	"AddReplaceTexture": {
		"body": [
			"AddReplaceTexture(${1:origTxd}, ${2:origTxn}, ${3:newTxd}, ${4:newTxn})"
		],
		"scope": "lua",
		"prefix": "AddReplaceTexture"
	},
	"AddReplayStatValue": {
		"body": [
			"AddReplayStatValue(${1:value})"
		],
		"scope": "lua",
		"prefix": "AddReplayStatValue"
	},
	"AddRoadNodeSpeedZone": {
		"body": [
			"AddRoadNodeSpeedZone(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:speed}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "AddRoadNodeSpeedZone"
	},
	"AddRope": {
		"body": [
			"AddRope(${1:x}, ${2:y}, ${3:z}, ${4:rotX}, ${5:rotY}, ${6:rotZ}, ${7:length}, ${8:ropeType}, ${9:maxLength}, ${10:minLength}, ${11:windingSpeed}, ${12:p11}, ${13:p12}, ${14:rigid}, ${15:p14}, ${16:breakWhenShot}, ${17:unkPtr})"
		],
		"scope": "lua",
		"prefix": "AddRope"
	},
	"AddScenarioBlockingArea": {
		"body": [
			"AddScenarioBlockingArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "AddScenarioBlockingArea"
	},
	"AddScriptToRandomPed": {
		"body": [
			"AddScriptToRandomPed(${1:name}, ${2:model}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "AddScriptToRandomPed"
	},
	"AddShockingEventAtPosition": {
		"body": [
			"AddShockingEventAtPosition(${1:eventType}, ${2:x}, ${3:y}, ${4:z}, ${5:duration})"
		],
		"scope": "lua",
		"prefix": "AddShockingEventAtPosition"
	},
	"AddShockingEventForEntity": {
		"body": [
			"AddShockingEventForEntity(${1:eventType}, ${2:entity}, ${3:duration})"
		],
		"scope": "lua",
		"prefix": "AddShockingEventForEntity"
	},
	"AddStuntJump": {
		"body": [
			"AddStuntJump(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:x3}, ${8:y3}, ${9:z3}, ${10:x4}, ${11:y4}, ${12:z4}, ${13:camX}, ${14:camY}, ${15:camZ}, ${16:unk1}, ${17:unk2}, ${18:unk3})"
		],
		"scope": "lua",
		"prefix": "AddStuntJump"
	},
	"AddStuntJumpAngled": {
		"body": [
			"AddStuntJumpAngled(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:radius1}, ${8:x3}, ${9:y3}, ${10:z3}, ${11:x4}, ${12:y4}, ${13:z4}, ${14:radius2}, ${15:camX}, ${16:camY}, ${17:camZ}, ${18:unk1}, ${19:unk2}, ${20:unk3})"
		],
		"scope": "lua",
		"prefix": "AddStuntJumpAngled"
	},
	"AddTacticalAnalysisPoint": {
		"body": [
			"AddTacticalAnalysisPoint(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "AddTacticalAnalysisPoint"
	},
	"AddTcmodifierOverride": {
		"body": [
			"AddTcmodifierOverride(${1:modifierName1}, ${2:modifierName2})"
		],
		"scope": "lua",
		"prefix": "AddTcmodifierOverride"
	},
	"AddTextComponentFloat": {
		"body": [
			"AddTextComponentFloat(${1:value}, ${2:decimalPlaces})"
		],
		"scope": "lua",
		"prefix": "AddTextComponentFloat"
	},
	"AddTextComponentFormattedInteger": {
		"body": [
			"AddTextComponentFormattedInteger(${1:value}, ${2:commaSeparated})"
		],
		"scope": "lua",
		"prefix": "AddTextComponentFormattedInteger"
	},
	"AddTextComponentInteger": {
		"body": [
			"AddTextComponentInteger(${1:value})"
		],
		"scope": "lua",
		"prefix": "AddTextComponentInteger"
	},
	"AddTextComponentSubstringBlipName": {
		"body": [
			"AddTextComponentSubstringBlipName(${1:blip})"
		],
		"scope": "lua",
		"prefix": "AddTextComponentSubstringBlipName"
	},
	"AddTextComponentSubstringKeyboardDisplay": {
		"body": [
			"AddTextComponentSubstringKeyboardDisplay(${1:p0})"
		],
		"scope": "lua",
		"prefix": "AddTextComponentSubstringKeyboardDisplay"
	},
	"AddTextComponentSubstringPhoneNumber": {
		"body": [
			"AddTextComponentSubstringPhoneNumber(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "AddTextComponentSubstringPhoneNumber"
	},
	"AddTextComponentSubstringPlayerName": {
		"body": [
			"AddTextComponentSubstringPlayerName(${1:text})"
		],
		"scope": "lua",
		"prefix": "AddTextComponentSubstringPlayerName"
	},
	"AddTextComponentSubstringTextLabel": {
		"body": [
			"AddTextComponentSubstringTextLabel(${1:labelName})"
		],
		"scope": "lua",
		"prefix": "AddTextComponentSubstringTextLabel"
	},
	"AddTextComponentSubstringTextLabelHashKey": {
		"body": [
			"AddTextComponentSubstringTextLabelHashKey(${1:gxtEntryHash})"
		],
		"scope": "lua",
		"prefix": "AddTextComponentSubstringTextLabelHashKey"
	},
	"AddTextComponentSubstringTime": {
		"body": [
			"AddTextComponentSubstringTime(${1:timestamp}, ${2:flags})"
		],
		"scope": "lua",
		"prefix": "AddTextComponentSubstringTime"
	},
	"AddTextComponentSubstringWebsite": {
		"body": [
			"AddTextComponentSubstringWebsite(${1:website})"
		],
		"scope": "lua",
		"prefix": "AddTextComponentSubstringWebsite"
	},
	"AddTextEntry": {
		"body": [
			"AddTextEntry(${1:entryKey}, ${2:entryText})"
		],
		"scope": "lua",
		"prefix": "AddTextEntry"
	},
	"AddTextEntryByHash": {
		"body": [
			"AddTextEntryByHash(${1:entryKey}, ${2:entryText})"
		],
		"scope": "lua",
		"prefix": "AddTextEntryByHash"
	},
	"AddToClockTime": {
		"body": [
			"AddToClockTime(${1:hours}, ${2:minutes}, ${3:seconds})"
		],
		"scope": "lua",
		"prefix": "AddToClockTime"
	},
	"AddToItemset": {
		"body": [
			"AddToItemset(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "AddToItemset"
	},
	"AddVehicleCombatAngledAvoidanceArea": {
		"body": [
			"AddVehicleCombatAngledAvoidanceArea(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "AddVehicleCombatAngledAvoidanceArea"
	},
	"AddVehicleCrewEmblem": {
		"body": [
			"AddVehicleCrewEmblem(${1:vehicle}, ${2:ped}, ${3:boneIndex}, ${4:x1}, ${5:x2}, ${6:x3}, ${7:y1}, ${8:y2}, ${9:y3}, ${10:z1}, ${11:z2}, ${12:z3}, ${13:scale}, ${14:p13}, ${15:alpha})"
		],
		"scope": "lua",
		"prefix": "AddVehicleCrewEmblem"
	},
	"AddVehiclePhoneExplosiveDevice": {
		"body": [
			"AddVehiclePhoneExplosiveDevice(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "AddVehiclePhoneExplosiveDevice"
	},
	"AddVehicleStuckCheckWithWarp": {
		"body": [
			"AddVehicleStuckCheckWithWarp(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "AddVehicleStuckCheckWithWarp"
	},
	"AddVehicleSubtaskAttackCoord": {
		"body": [
			"AddVehicleSubtaskAttackCoord(${1:ped}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "AddVehicleSubtaskAttackCoord"
	},
	"AddVehicleSubtaskAttackPed": {
		"body": [
			"AddVehicleSubtaskAttackPed(${1:ped}, ${2:ped2})"
		],
		"scope": "lua",
		"prefix": "AddVehicleSubtaskAttackPed"
	},
	"AddVehicleUpsidedownCheck": {
		"body": [
			"AddVehicleUpsidedownCheck(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "AddVehicleUpsidedownCheck"
	},
	"AdvanceClockTimeTo": {
		"body": [
			"AdvanceClockTimeTo(${1:hour}, ${2:minute}, ${3:second})"
		],
		"scope": "lua",
		"prefix": "AdvanceClockTimeTo"
	},
	"AllowMissionCreatorWarp": {
		"body": [
			"AllowMissionCreatorWarp(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "AllowMissionCreatorWarp"
	},
	"AllowPauseMenuWhenDeadThisFrame": {
		"body": [
			"AllowPauseMenuWhenDeadThisFrame()"
		],
		"scope": "lua",
		"prefix": "AllowPauseMenuWhenDeadThisFrame"
	},
	"AllowPlayerSwitchAscent": {
		"body": [
			"AllowPlayerSwitchAscent()"
		],
		"scope": "lua",
		"prefix": "AllowPlayerSwitchAscent"
	},
	"AllowPlayerSwitchDescent": {
		"body": [
			"AllowPlayerSwitchDescent()"
		],
		"scope": "lua",
		"prefix": "AllowPlayerSwitchDescent"
	},
	"AllowPlayerSwitchOutro": {
		"body": [
			"AllowPlayerSwitchOutro()"
		],
		"scope": "lua",
		"prefix": "AllowPlayerSwitchOutro"
	},
	"AllowPlayerSwitchPan": {
		"body": [
			"AllowPlayerSwitchPan()"
		],
		"scope": "lua",
		"prefix": "AllowPlayerSwitchPan"
	},
	"AllowSonarBlips": {
		"body": [
			"AllowSonarBlips(${1:p0})"
		],
		"scope": "lua",
		"prefix": "AllowSonarBlips"
	},
	"AnimatedShakeCam": {
		"body": [
			"AnimatedShakeCam(${1:cam}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:amplitude})"
		],
		"scope": "lua",
		"prefix": "AnimatedShakeCam"
	},
	"AnimatedShakeScriptGlobal": {
		"body": [
			"AnimatedShakeScriptGlobal(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "AnimatedShakeScriptGlobal"
	},
	"AnimateGameplayCamZoom": {
		"body": [
			"AnimateGameplayCamZoom(${1:p0}, ${2:distance})"
		],
		"scope": "lua",
		"prefix": "AnimateGameplayCamZoom"
	},
	"AnimpostfxGetUnk": {
		"body": [
			"AnimpostfxGetUnk(${1:effectName})"
		],
		"scope": "lua",
		"prefix": "AnimpostfxGetUnk"
	},
	"AnimpostfxIsRunning": {
		"body": [
			"AnimpostfxIsRunning(${1:effectName})"
		],
		"scope": "lua",
		"prefix": "AnimpostfxIsRunning"
	},
	"AnimpostfxPlay": {
		"body": [
			"AnimpostfxPlay(${1:effectName}, ${2:duration}, ${3:looped})"
		],
		"scope": "lua",
		"prefix": "AnimpostfxPlay"
	},
	"AnimpostfxStop": {
		"body": [
			"AnimpostfxStop(${1:effectName})"
		],
		"scope": "lua",
		"prefix": "AnimpostfxStop"
	},
	"AnimpostfxStopAll": {
		"body": [
			"AnimpostfxStopAll()"
		],
		"scope": "lua",
		"prefix": "AnimpostfxStopAll"
	},
	"AnimpostfxStopAndDoUnk": {
		"body": [
			"AnimpostfxStopAndDoUnk(${1:effectName})"
		],
		"scope": "lua",
		"prefix": "AnimpostfxStopAndDoUnk"
	},
	"AppClearBlock": {
		"body": [
			"AppClearBlock()"
		],
		"scope": "lua",
		"prefix": "AppClearBlock"
	},
	"AppCloseApp": {
		"body": [
			"AppCloseApp()"
		],
		"scope": "lua",
		"prefix": "AppCloseApp"
	},
	"AppCloseBlock": {
		"body": [
			"AppCloseBlock()"
		],
		"scope": "lua",
		"prefix": "AppCloseBlock"
	},
	"AppDataValid": {
		"body": [
			"AppDataValid()"
		],
		"scope": "lua",
		"prefix": "AppDataValid"
	},
	"AppDeleteAppData": {
		"body": [
			"AppDeleteAppData(${1:appName})"
		],
		"scope": "lua",
		"prefix": "AppDeleteAppData"
	},
	"AppGetDeletedFileStatus": {
		"body": [
			"AppGetDeletedFileStatus()"
		],
		"scope": "lua",
		"prefix": "AppGetDeletedFileStatus"
	},
	"AppGetFloat": {
		"body": [
			"AppGetFloat(${1:property})"
		],
		"scope": "lua",
		"prefix": "AppGetFloat"
	},
	"AppGetInt": {
		"body": [
			"AppGetInt(${1:property})"
		],
		"scope": "lua",
		"prefix": "AppGetInt"
	},
	"AppGetString": {
		"body": [
			"AppGetString(${1:property})"
		],
		"scope": "lua",
		"prefix": "AppGetString"
	},
	"AppHasLinkedSocialClubAccount": {
		"body": [
			"AppHasLinkedSocialClubAccount()"
		],
		"scope": "lua",
		"prefix": "AppHasLinkedSocialClubAccount"
	},
	"AppHasSyncedData": {
		"body": [
			"AppHasSyncedData(${1:appName})"
		],
		"scope": "lua",
		"prefix": "AppHasSyncedData"
	},
	"ApplyDamageToPed": {
		"body": [
			"ApplyDamageToPed(${1:ped}, ${2:damageAmount}, ${3:armorFirst})"
		],
		"scope": "lua",
		"prefix": "ApplyDamageToPed"
	},
	"ApplyForceToEntity": {
		"body": [
			"ApplyForceToEntity(${1:entity}, ${2:forceType}, ${3:x}, ${4:y}, ${5:z}, ${6:offX}, ${7:offY}, ${8:offZ}, ${9:boneIndex}, ${10:isDirectionRel}, ${11:ignoreUpVec}, ${12:isForceRel}, ${13:p12}, ${14:p13})"
		],
		"scope": "lua",
		"prefix": "ApplyForceToEntity"
	},
	"ApplyForceToEntityCenterOfMass": {
		"body": [
			"ApplyForceToEntityCenterOfMass(${1:entity}, ${2:forceType}, ${3:x}, ${4:y}, ${5:z}, ${6:p5}, ${7:isDirectionRel}, ${8:isForceRel}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "ApplyForceToEntityCenterOfMass"
	},
	"ApplyImpulseToCloth": {
		"body": [
			"ApplyImpulseToCloth(${1:posX}, ${2:posY}, ${3:posZ}, ${4:vecX}, ${5:vecY}, ${6:vecZ}, ${7:impulse})"
		],
		"scope": "lua",
		"prefix": "ApplyImpulseToCloth"
	},
	"ApplyPedBlood": {
		"body": [
			"ApplyPedBlood(${1:ped}, ${2:boneIndex}, ${3:xRot}, ${4:yRot}, ${5:zRot}, ${6:woundType})"
		],
		"scope": "lua",
		"prefix": "ApplyPedBlood"
	},
	"ApplyPedBloodByZone": {
		"body": [
			"ApplyPedBloodByZone(${1:ped}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "ApplyPedBloodByZone"
	},
	"ApplyPedBloodDamageByZone": {
		"body": [
			"ApplyPedBloodDamageByZone(${1:ped}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "ApplyPedBloodDamageByZone"
	},
	"ApplyPedBloodSpecific": {
		"body": [
			"ApplyPedBloodSpecific(${1:ped}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "ApplyPedBloodSpecific"
	},
	"ApplyPedDamageDecal": {
		"body": [
			"ApplyPedDamageDecal(${1:ped}, ${2:damageZone}, ${3:xOffset}, ${4:yOffset}, ${5:heading}, ${6:scale}, ${7:alpha}, ${8:variation}, ${9:fadeIn}, ${10:decalName})"
		],
		"scope": "lua",
		"prefix": "ApplyPedDamageDecal"
	},
	"ApplyPedDamagePack": {
		"body": [
			"ApplyPedDamagePack(${1:ped}, ${2:damagePack}, ${3:damage}, ${4:mult})"
		],
		"scope": "lua",
		"prefix": "ApplyPedDamagePack"
	},
	"AppSaveData": {
		"body": [
			"AppSaveData()"
		],
		"scope": "lua",
		"prefix": "AppSaveData"
	},
	"AppSetApp": {
		"body": [
			"AppSetApp(${1:appName})"
		],
		"scope": "lua",
		"prefix": "AppSetApp"
	},
	"AppSetBlock": {
		"body": [
			"AppSetBlock(${1:blockName})"
		],
		"scope": "lua",
		"prefix": "AppSetBlock"
	},
	"AppSetFloat": {
		"body": [
			"AppSetFloat(${1:property}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "AppSetFloat"
	},
	"AppSetInt": {
		"body": [
			"AppSetInt(${1:property}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "AppSetInt"
	},
	"AppSetString": {
		"body": [
			"AppSetString(${1:property}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "AppSetString"
	},
	"AreAllNavmeshRegionsLoaded": {
		"body": [
			"AreAllNavmeshRegionsLoaded()"
		],
		"scope": "lua",
		"prefix": "AreAllNavmeshRegionsLoaded"
	},
	"AreAllVehicleWindowsIntact": {
		"body": [
			"AreAllVehicleWindowsIntact(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "AreAllVehicleWindowsIntact"
	},
	"AreAnyVehicleSeatsFree": {
		"body": [
			"AreAnyVehicleSeatsFree(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "AreAnyVehicleSeatsFree"
	},
	"AreBombBayDoorsOpen": {
		"body": [
			"AreBombBayDoorsOpen(${1:aircraft})"
		],
		"scope": "lua",
		"prefix": "AreBombBayDoorsOpen"
	},
	"AreEntitiesEntirelyInsideGarage": {
		"body": [
			"AreEntitiesEntirelyInsideGarage(${1:garageHash}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "AreEntitiesEntirelyInsideGarage"
	},
	"AreHeliStubWingsDeployed": {
		"body": [
			"AreHeliStubWingsDeployed(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "AreHeliStubWingsDeployed"
	},
	"AreNodesLoadedForArea": {
		"body": [
			"AreNodesLoadedForArea(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2})"
		],
		"scope": "lua",
		"prefix": "AreNodesLoadedForArea"
	},
	"ArePlanePropellersIntact": {
		"body": [
			"ArePlanePropellersIntact(${1:plane})"
		],
		"scope": "lua",
		"prefix": "ArePlanePropellersIntact"
	},
	"ArePlaneWingsIntact": {
		"body": [
			"ArePlaneWingsIntact(${1:plane})"
		],
		"scope": "lua",
		"prefix": "ArePlaneWingsIntact"
	},
	"ArePlayerFlashingStarsAboutToDrop": {
		"body": [
			"ArePlayerFlashingStarsAboutToDrop(${1:player})"
		],
		"scope": "lua",
		"prefix": "ArePlayerFlashingStarsAboutToDrop"
	},
	"ArePlayerStarsGreyedOut": {
		"body": [
			"ArePlayerStarsGreyedOut(${1:player})"
		],
		"scope": "lua",
		"prefix": "ArePlayerStarsGreyedOut"
	},
	"AreProfileSettingsValid": {
		"body": [
			"AreProfileSettingsValid()"
		],
		"scope": "lua",
		"prefix": "AreProfileSettingsValid"
	},
	"AreStringsEqual": {
		"body": [
			"AreStringsEqual(${1:string1}, ${2:string2})"
		],
		"scope": "lua",
		"prefix": "AreStringsEqual"
	},
	"Asin": {
		"body": [
			"Asin(${1:p0})"
		],
		"scope": "lua",
		"prefix": "Asin"
	},
	"AssistedMovementCloseRoute": {
		"body": [
			"AssistedMovementCloseRoute()"
		],
		"scope": "lua",
		"prefix": "AssistedMovementCloseRoute"
	},
	"AssistedMovementFlushRoute": {
		"body": [
			"AssistedMovementFlushRoute()"
		],
		"scope": "lua",
		"prefix": "AssistedMovementFlushRoute"
	},
	"AssistedMovementIsRouteLoaded": {
		"body": [
			"AssistedMovementIsRouteLoaded(${1:route})"
		],
		"scope": "lua",
		"prefix": "AssistedMovementIsRouteLoaded"
	},
	"AssistedMovementOverrideLoadDistanceThisFrame": {
		"body": [
			"AssistedMovementOverrideLoadDistanceThisFrame(${1:dist})"
		],
		"scope": "lua",
		"prefix": "AssistedMovementOverrideLoadDistanceThisFrame"
	},
	"AssistedMovementRemoveRoute": {
		"body": [
			"AssistedMovementRemoveRoute(${1:route})"
		],
		"scope": "lua",
		"prefix": "AssistedMovementRemoveRoute"
	},
	"AssistedMovementRequestRoute": {
		"body": [
			"AssistedMovementRequestRoute(${1:route})"
		],
		"scope": "lua",
		"prefix": "AssistedMovementRequestRoute"
	},
	"AssistedMovementSetRouteProperties": {
		"body": [
			"AssistedMovementSetRouteProperties(${1:route}, ${2:props})"
		],
		"scope": "lua",
		"prefix": "AssistedMovementSetRouteProperties"
	},
	"Atan": {
		"body": [
			"Atan(${1:p0})"
		],
		"scope": "lua",
		"prefix": "Atan"
	},
	"Atan2": {
		"body": [
			"Atan2(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "Atan2"
	},
	"AttachCamToEntity": {
		"body": [
			"AttachCamToEntity(${1:cam}, ${2:entity}, ${3:xOffset}, ${4:yOffset}, ${5:zOffset}, ${6:isRelative})"
		],
		"scope": "lua",
		"prefix": "AttachCamToEntity"
	},
	"AttachCamToPedBone": {
		"body": [
			"AttachCamToPedBone(${1:cam}, ${2:ped}, ${3:boneIndex}, ${4:x}, ${5:y}, ${6:z}, ${7:heading})"
		],
		"scope": "lua",
		"prefix": "AttachCamToPedBone"
	},
	"AttachCamToPedBone_2": {
		"body": [
			"AttachCamToPedBone_2(${1:cam}, ${2:ped}, ${3:boneIndex}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "AttachCamToPedBone_2"
	},
	"AttachCamToVehicleBone": {
		"body": [
			"AttachCamToVehicleBone(${1:cam}, ${2:vehicle}, ${3:boneIndex}, ${4:relativeRotation}, ${5:rotX}, ${6:rotY}, ${7:rotZ}, ${8:offX}, ${9:offY}, ${10:offZ}, ${11:fixedDirection})"
		],
		"scope": "lua",
		"prefix": "AttachCamToVehicleBone"
	},
	"AttachEntitiesToRope": {
		"body": [
			"AttachEntitiesToRope(${1:ropeId}, ${2:ent1}, ${3:ent2}, ${4:ent1_x}, ${5:ent1_y}, ${6:ent1_z}, ${7:ent2_x}, ${8:ent2_y}, ${9:ent2_z}, ${10:length}, ${11:p10}, ${12:p11}, ${13:boneName1}, ${14:boneName2})"
		],
		"scope": "lua",
		"prefix": "AttachEntitiesToRope"
	},
	"AttachEntityBoneToEntityBone": {
		"body": [
			"AttachEntityBoneToEntityBone(${1:entity1}, ${2:entity2}, ${3:entityBone}, ${4:entityBone2}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "AttachEntityBoneToEntityBone"
	},
	"AttachEntityBoneToEntityBonePhysically": {
		"body": [
			"AttachEntityBoneToEntityBonePhysically(${1:entity1}, ${2:entity2}, ${3:entityBone}, ${4:entityBone2}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "AttachEntityBoneToEntityBonePhysically"
	},
	"AttachEntityToCargobob": {
		"body": [
			"AttachEntityToCargobob(${1:vehicle}, ${2:entity}, ${3:p2}, ${4:x}, ${5:y}, ${6:z})"
		],
		"scope": "lua",
		"prefix": "AttachEntityToCargobob"
	},
	"AttachEntityToEntity": {
		"body": [
			"AttachEntityToEntity(${1:entity1}, ${2:entity2}, ${3:boneIndex}, ${4:xPos}, ${5:yPos}, ${6:zPos}, ${7:xRot}, ${8:yRot}, ${9:zRot}, ${10:p9}, ${11:useSoftPinning}, ${12:collision}, ${13:isPed}, ${14:vertexIndex}, ${15:fixedRot})"
		],
		"scope": "lua",
		"prefix": "AttachEntityToEntity"
	},
	"AttachEntityToEntityPhysically": {
		"body": [
			"AttachEntityToEntityPhysically(${1:entity1}, ${2:entity2}, ${3:boneIndex1}, ${4:boneIndex2}, ${5:xPos1}, ${6:yPos1}, ${7:zPos1}, ${8:xPos2}, ${9:yPos2}, ${10:zPos2}, ${11:xRot}, ${12:yRot}, ${13:zRot}, ${14:breakForce}, ${15:fixedRot}, ${16:p15}, ${17:collision}, ${18:teleport}, ${19:p18})"
		],
		"scope": "lua",
		"prefix": "AttachEntityToEntityPhysically"
	},
	"AttachPortablePickupToPed": {
		"body": [
			"AttachPortablePickupToPed(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "AttachPortablePickupToPed"
	},
	"AttachRopeToEntity": {
		"body": [
			"AttachRopeToEntity(${1:ropeId}, ${2:entity}, ${3:x}, ${4:y}, ${5:z}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "AttachRopeToEntity"
	},
	"AttachSynchronizedSceneToEntity": {
		"body": [
			"AttachSynchronizedSceneToEntity(${1:sceneID}, ${2:entity}, ${3:boneIndex})"
		],
		"scope": "lua",
		"prefix": "AttachSynchronizedSceneToEntity"
	},
	"AttachTvAudioToEntity": {
		"body": [
			"AttachTvAudioToEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "AttachTvAudioToEntity"
	},
	"AttachVehicleOnToTrailer": {
		"body": [
			"AttachVehicleOnToTrailer(${1:vehicle}, ${2:trailer}, ${3:offsetX}, ${4:offsetY}, ${5:offsetZ}, ${6:coordsX}, ${7:coordsY}, ${8:coordsZ}, ${9:rotationX}, ${10:rotationY}, ${11:rotationZ}, ${12:disableColls})"
		],
		"scope": "lua",
		"prefix": "AttachVehicleOnToTrailer"
	},
	"AttachVehicleToCargobob": {
		"body": [
			"AttachVehicleToCargobob(${1:vehicle}, ${2:cargobob}, ${3:p2}, ${4:x}, ${5:y}, ${6:z})"
		],
		"scope": "lua",
		"prefix": "AttachVehicleToCargobob"
	},
	"AttachVehicleToTowTruck": {
		"body": [
			"AttachVehicleToTowTruck(${1:towTruck}, ${2:vehicle}, ${3:rear}, ${4:hookOffsetX}, ${5:hookOffsetY}, ${6:hookOffsetZ})"
		],
		"scope": "lua",
		"prefix": "AttachVehicleToTowTruck"
	},
	"AttachVehicleToTrailer": {
		"body": [
			"AttachVehicleToTrailer(${1:vehicle}, ${2:trailer}, ${3:radius})"
		],
		"scope": "lua",
		"prefix": "AttachVehicleToTrailer"
	},
	"AudioIsScriptedMusicPlaying": {
		"body": [
			"AudioIsScriptedMusicPlaying()"
		],
		"scope": "lua",
		"prefix": "AudioIsScriptedMusicPlaying"
	},
	"BadSportPlayerLeftDetected": {
		"body": [
			"BadSportPlayerLeftDetected(${1:event}, ${2:amountReceived})"
		],
		"scope": "lua",
		"prefix": "BadSportPlayerLeftDetected"
	},
	"BeginReplayStats": {
		"body": [
			"BeginReplayStats(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "BeginReplayStats"
	},
	"BeginScaleformMovieMethod": {
		"body": [
			"BeginScaleformMovieMethod(${1:scaleform}, ${2:methodName})"
		],
		"scope": "lua",
		"prefix": "BeginScaleformMovieMethod"
	},
	"BeginScaleformMovieMethodOnFrontend": {
		"body": [
			"BeginScaleformMovieMethodOnFrontend(${1:functionName})"
		],
		"scope": "lua",
		"prefix": "BeginScaleformMovieMethodOnFrontend"
	},
	"BeginScaleformMovieMethodOnFrontendHeader": {
		"body": [
			"BeginScaleformMovieMethodOnFrontendHeader(${1:functionName})"
		],
		"scope": "lua",
		"prefix": "BeginScaleformMovieMethodOnFrontendHeader"
	},
	"BeginScaleformScriptHudMovieMethod": {
		"body": [
			"BeginScaleformScriptHudMovieMethod(${1:hudComponent}, ${2:methodName})"
		],
		"scope": "lua",
		"prefix": "BeginScaleformScriptHudMovieMethod"
	},
	"BeginSrl": {
		"body": [
			"BeginSrl()"
		],
		"scope": "lua",
		"prefix": "BeginSrl"
	},
	"BeginTakeHighQualityPhoto": {
		"body": [
			"BeginTakeHighQualityPhoto()"
		],
		"scope": "lua",
		"prefix": "BeginTakeHighQualityPhoto"
	},
	"BeginTakeMissionCreatorPhoto": {
		"body": [
			"BeginTakeMissionCreatorPhoto()"
		],
		"scope": "lua",
		"prefix": "BeginTakeMissionCreatorPhoto"
	},
	"BeginTextCommandBusyspinnerOn": {
		"body": [
			"BeginTextCommandBusyspinnerOn(${1:string})"
		],
		"scope": "lua",
		"prefix": "BeginTextCommandBusyspinnerOn"
	},
	"BeginTextCommandClearPrint": {
		"body": [
			"BeginTextCommandClearPrint(${1:text})"
		],
		"scope": "lua",
		"prefix": "BeginTextCommandClearPrint"
	},
	"BeginTextCommandDisplayHelp": {
		"body": [
			"BeginTextCommandDisplayHelp(${1:inputType})"
		],
		"scope": "lua",
		"prefix": "BeginTextCommandDisplayHelp"
	},
	"BeginTextCommandDisplayText": {
		"body": [
			"BeginTextCommandDisplayText(${1:text})"
		],
		"scope": "lua",
		"prefix": "BeginTextCommandDisplayText"
	},
	"BeginTextCommandGetWidth": {
		"body": [
			"BeginTextCommandGetWidth(${1:text})"
		],
		"scope": "lua",
		"prefix": "BeginTextCommandGetWidth"
	},
	"BeginTextCommandIsMessageDisplayed": {
		"body": [
			"BeginTextCommandIsMessageDisplayed(${1:text})"
		],
		"scope": "lua",
		"prefix": "BeginTextCommandIsMessageDisplayed"
	},
	"BeginTextCommandIsThisHelpMessageBeingDisplayed": {
		"body": [
			"BeginTextCommandIsThisHelpMessageBeingDisplayed(${1:labelName})"
		],
		"scope": "lua",
		"prefix": "BeginTextCommandIsThisHelpMessageBeingDisplayed"
	},
	"BeginTextCommandLineCount": {
		"body": [
			"BeginTextCommandLineCount(${1:entry})"
		],
		"scope": "lua",
		"prefix": "BeginTextCommandLineCount"
	},
	"BeginTextCommandObjective": {
		"body": [
			"BeginTextCommandObjective(${1:p0})"
		],
		"scope": "lua",
		"prefix": "BeginTextCommandObjective"
	},
	"BeginTextCommandOverrideButtonText": {
		"body": [
			"BeginTextCommandOverrideButtonText(${1:gxtEntry})"
		],
		"scope": "lua",
		"prefix": "BeginTextCommandOverrideButtonText"
	},
	"BeginTextCommandPrint": {
		"body": [
			"BeginTextCommandPrint(${1:GxtEntry})"
		],
		"scope": "lua",
		"prefix": "BeginTextCommandPrint"
	},
	"BeginTextCommandScaleformString": {
		"body": [
			"BeginTextCommandScaleformString(${1:componentType})"
		],
		"scope": "lua",
		"prefix": "BeginTextCommandScaleformString"
	},
	"BeginTextCommandSetBlipName": {
		"body": [
			"BeginTextCommandSetBlipName(${1:textLabel})"
		],
		"scope": "lua",
		"prefix": "BeginTextCommandSetBlipName"
	},
	"BeginTextCommandThefeedPost": {
		"body": [
			"BeginTextCommandThefeedPost(${1:text})"
		],
		"scope": "lua",
		"prefix": "BeginTextCommandThefeedPost"
	},
	"BgEndContext": {
		"body": [
			"BgEndContext(${1:contextName})"
		],
		"scope": "lua",
		"prefix": "BgEndContext"
	},
	"BgEndContextHash": {
		"body": [
			"BgEndContextHash(${1:contextHash})"
		],
		"scope": "lua",
		"prefix": "BgEndContextHash"
	},
	"BgStartContext": {
		"body": [
			"BgStartContext(${1:contextName})"
		],
		"scope": "lua",
		"prefix": "BgStartContext"
	},
	"BgStartContextHash": {
		"body": [
			"BgStartContextHash(${1:contextHash})"
		],
		"scope": "lua",
		"prefix": "BgStartContextHash"
	},
	"BlipSiren": {
		"body": [
			"BlipSiren(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "BlipSiren"
	},
	"BlockDeathJingle": {
		"body": [
			"BlockDeathJingle(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "BlockDeathJingle"
	},
	"BlockDecisionMakerEvent": {
		"body": [
			"BlockDecisionMakerEvent(${1:name}, ${2:eventType})"
		],
		"scope": "lua",
		"prefix": "BlockDecisionMakerEvent"
	},
	"BlockDispatchServiceResourceCreation": {
		"body": [
			"BlockDispatchServiceResourceCreation(${1:dispatchService}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "BlockDispatchServiceResourceCreation"
	},
	"BlockPedDeadBodyShockingEvents": {
		"body": [
			"BlockPedDeadBodyShockingEvents(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "BlockPedDeadBodyShockingEvents"
	},
	"BreakEntityGlass": {
		"body": [
			"BreakEntityGlass(${1:entity}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10})"
		],
		"scope": "lua",
		"prefix": "BreakEntityGlass"
	},
	"BreakObjectFragmentChild": {
		"body": [
			"BreakObjectFragmentChild(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "BreakObjectFragmentChild"
	},
	"BringVehicleToHalt": {
		"body": [
			"BringVehicleToHalt(${1:vehicle}, ${2:distance}, ${3:duration}, ${4:unknown})"
		],
		"scope": "lua",
		"prefix": "BringVehicleToHalt"
	},
	"BusyspinnerIsDisplaying": {
		"body": [
			"BusyspinnerIsDisplaying()"
		],
		"scope": "lua",
		"prefix": "BusyspinnerIsDisplaying"
	},
	"BusyspinnerIsOn": {
		"body": [
			"BusyspinnerIsOn()"
		],
		"scope": "lua",
		"prefix": "BusyspinnerIsOn"
	},
	"BusyspinnerOff": {
		"body": [
			"BusyspinnerOff()"
		],
		"scope": "lua",
		"prefix": "BusyspinnerOff"
	},
	"CalculateTravelDistanceBetweenPoints": {
		"body": [
			"CalculateTravelDistanceBetweenPoints(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2})"
		],
		"scope": "lua",
		"prefix": "CalculateTravelDistanceBetweenPoints"
	},
	"CallMinimapScaleformFunction": {
		"body": [
			"CallMinimapScaleformFunction(${1:miniMap}, ${2:fnName})"
		],
		"scope": "lua",
		"prefix": "CallMinimapScaleformFunction"
	},
	"CallScaleformMovieMethod": {
		"body": [
			"CallScaleformMovieMethod(${1:scaleform}, ${2:method})"
		],
		"scope": "lua",
		"prefix": "CallScaleformMovieMethod"
	},
	"CallScaleformMovieMethodWithNumber": {
		"body": [
			"CallScaleformMovieMethodWithNumber(${1:scaleform}, ${2:methodName}, ${3:param1}, ${4:param2}, ${5:param3}, ${6:param4}, ${7:param5})"
		],
		"scope": "lua",
		"prefix": "CallScaleformMovieMethodWithNumber"
	},
	"CallScaleformMovieMethodWithNumberAndString": {
		"body": [
			"CallScaleformMovieMethodWithNumberAndString(${1:scaleform}, ${2:methodName}, ${3:floatParam1}, ${4:floatParam2}, ${5:floatParam3}, ${6:floatParam4}, ${7:floatParam5}, ${8:stringParam1}, ${9:stringParam2}, ${10:stringParam3}, ${11:stringParam4}, ${12:stringParam5})"
		],
		"scope": "lua",
		"prefix": "CallScaleformMovieMethodWithNumberAndString"
	},
	"CallScaleformMovieMethodWithString": {
		"body": [
			"CallScaleformMovieMethodWithString(${1:scaleform}, ${2:methodName}, ${3:param1}, ${4:param2}, ${5:param3}, ${6:param4}, ${7:param5})"
		],
		"scope": "lua",
		"prefix": "CallScaleformMovieMethodWithString"
	},
	"CanAnchorBoatHere": {
		"body": [
			"CanAnchorBoatHere(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "CanAnchorBoatHere"
	},
	"CanAnchorBoatHere_2": {
		"body": [
			"CanAnchorBoatHere_2(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "CanAnchorBoatHere_2"
	},
	"CancelCurrentPoliceReport": {
		"body": [
			"CancelCurrentPoliceReport()"
		],
		"scope": "lua",
		"prefix": "CancelCurrentPoliceReport"
	},
	"CancelEvent": {
		"body": [
			"CancelEvent()"
		],
		"scope": "lua",
		"prefix": "CancelEvent"
	},
	"CancelMusicEvent": {
		"body": [
			"CancelMusicEvent(${1:eventName})"
		],
		"scope": "lua",
		"prefix": "CancelMusicEvent"
	},
	"CancelOnscreenKeyboard": {
		"body": [
			"CancelOnscreenKeyboard()"
		],
		"scope": "lua",
		"prefix": "CancelOnscreenKeyboard"
	},
	"CancelStuntJump": {
		"body": [
			"CancelStuntJump()"
		],
		"scope": "lua",
		"prefix": "CancelStuntJump"
	},
	"CanCreateRandomBikeRider": {
		"body": [
			"CanCreateRandomBikeRider()"
		],
		"scope": "lua",
		"prefix": "CanCreateRandomBikeRider"
	},
	"CanCreateRandomCops": {
		"body": [
			"CanCreateRandomCops()"
		],
		"scope": "lua",
		"prefix": "CanCreateRandomCops"
	},
	"CanCreateRandomDriver": {
		"body": [
			"CanCreateRandomDriver()"
		],
		"scope": "lua",
		"prefix": "CanCreateRandomDriver"
	},
	"CanCreateRandomPed": {
		"body": [
			"CanCreateRandomPed(${1:unk})"
		],
		"scope": "lua",
		"prefix": "CanCreateRandomPed"
	},
	"CanKnockPedOffVehicle": {
		"body": [
			"CanKnockPedOffVehicle(${1:ped})"
		],
		"scope": "lua",
		"prefix": "CanKnockPedOffVehicle"
	},
	"CanPayGoon": {
		"body": [
			"CanPayGoon()"
		],
		"scope": "lua",
		"prefix": "CanPayGoon"
	},
	"CanPedHearPlayer": {
		"body": [
			"CanPedHearPlayer(${1:player}, ${2:ped})"
		],
		"scope": "lua",
		"prefix": "CanPedHearPlayer"
	},
	"CanPedInCombatSeeTarget": {
		"body": [
			"CanPedInCombatSeeTarget(${1:ped}, ${2:target})"
		],
		"scope": "lua",
		"prefix": "CanPedInCombatSeeTarget"
	},
	"CanPedRagdoll": {
		"body": [
			"CanPedRagdoll(${1:ped})"
		],
		"scope": "lua",
		"prefix": "CanPedRagdoll"
	},
	"CanPedSeeHatedPed": {
		"body": [
			"CanPedSeeHatedPed(${1:ped1}, ${2:ped2})"
		],
		"scope": "lua",
		"prefix": "CanPedSeeHatedPed"
	},
	"CanPedSpeak": {
		"body": [
			"CanPedSpeak(${1:ped}, ${2:speechName}, ${3:unk})"
		],
		"scope": "lua",
		"prefix": "CanPedSpeak"
	},
	"CanPhoneBeSeenOnScreen": {
		"body": [
			"CanPhoneBeSeenOnScreen()"
		],
		"scope": "lua",
		"prefix": "CanPhoneBeSeenOnScreen"
	},
	"CanPlayerStartCommerceSession": {
		"body": [
			"CanPlayerStartCommerceSession(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "CanPlayerStartCommerceSession"
	},
	"CanPlayerStartMission": {
		"body": [
			"CanPlayerStartMission(${1:player})"
		],
		"scope": "lua",
		"prefix": "CanPlayerStartMission"
	},
	"CanRegisterMissionEntities": {
		"body": [
			"CanRegisterMissionEntities(${1:ped_amt}, ${2:vehicle_amt}, ${3:object_amt}, ${4:pickup_amt})"
		],
		"scope": "lua",
		"prefix": "CanRegisterMissionEntities"
	},
	"CanRegisterMissionObjects": {
		"body": [
			"CanRegisterMissionObjects(${1:amount})"
		],
		"scope": "lua",
		"prefix": "CanRegisterMissionObjects"
	},
	"CanRegisterMissionPeds": {
		"body": [
			"CanRegisterMissionPeds(${1:amount})"
		],
		"scope": "lua",
		"prefix": "CanRegisterMissionPeds"
	},
	"CanRegisterMissionPickups": {
		"body": [
			"CanRegisterMissionPickups(${1:amount})"
		],
		"scope": "lua",
		"prefix": "CanRegisterMissionPickups"
	},
	"CanRegisterMissionVehicles": {
		"body": [
			"CanRegisterMissionVehicles(${1:amount})"
		],
		"scope": "lua",
		"prefix": "CanRegisterMissionVehicles"
	},
	"CanRequestAssetsForCutsceneEntity": {
		"body": [
			"CanRequestAssetsForCutsceneEntity()"
		],
		"scope": "lua",
		"prefix": "CanRequestAssetsForCutsceneEntity"
	},
	"CanSetEnterStateForRegisteredEntity": {
		"body": [
			"CanSetEnterStateForRegisteredEntity(${1:cutsceneEntName}, ${2:modelHash})"
		],
		"scope": "lua",
		"prefix": "CanSetEnterStateForRegisteredEntity"
	},
	"CanSetExitStateForCamera": {
		"body": [
			"CanSetExitStateForCamera(${1:p0})"
		],
		"scope": "lua",
		"prefix": "CanSetExitStateForCamera"
	},
	"CanSetExitStateForRegisteredEntity": {
		"body": [
			"CanSetExitStateForRegisteredEntity(${1:cutsceneEntName}, ${2:modelHash})"
		],
		"scope": "lua",
		"prefix": "CanSetExitStateForRegisteredEntity"
	},
	"CanShuffleSeat": {
		"body": [
			"CanShuffleSeat(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "CanShuffleSeat"
	},
	"CanUseWeaponOnParachute": {
		"body": [
			"CanUseWeaponOnParachute(${1:weaponHash})"
		],
		"scope": "lua",
		"prefix": "CanUseWeaponOnParachute"
	},
	"CapInterior": {
		"body": [
			"CapInterior(${1:interiorID}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "CapInterior"
	},
	"CascadeShadowsClearShadowSampleType": {
		"body": [
			"CascadeShadowsClearShadowSampleType()"
		],
		"scope": "lua",
		"prefix": "CascadeShadowsClearShadowSampleType"
	},
	"CascadeShadowsEnableEntityTracker": {
		"body": [
			"CascadeShadowsEnableEntityTracker(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "CascadeShadowsEnableEntityTracker"
	},
	"CascadeShadowsInitSession": {
		"body": [
			"CascadeShadowsInitSession()"
		],
		"scope": "lua",
		"prefix": "CascadeShadowsInitSession"
	},
	"CascadeShadowsSetAircraftMode": {
		"body": [
			"CascadeShadowsSetAircraftMode(${1:p0})"
		],
		"scope": "lua",
		"prefix": "CascadeShadowsSetAircraftMode"
	},
	"CascadeShadowsSetCascadeBounds": {
		"body": [
			"CascadeShadowsSetCascadeBounds(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "CascadeShadowsSetCascadeBounds"
	},
	"CascadeShadowsSetCascadeBoundsScale": {
		"body": [
			"CascadeShadowsSetCascadeBoundsScale(${1:p0})"
		],
		"scope": "lua",
		"prefix": "CascadeShadowsSetCascadeBoundsScale"
	},
	"CascadeShadowsSetDynamicDepthMode": {
		"body": [
			"CascadeShadowsSetDynamicDepthMode(${1:p0})"
		],
		"scope": "lua",
		"prefix": "CascadeShadowsSetDynamicDepthMode"
	},
	"CascadeShadowsSetDynamicDepthValue": {
		"body": [
			"CascadeShadowsSetDynamicDepthValue(${1:p0})"
		],
		"scope": "lua",
		"prefix": "CascadeShadowsSetDynamicDepthValue"
	},
	"CascadeShadowsSetEntityTrackerScale": {
		"body": [
			"CascadeShadowsSetEntityTrackerScale(${1:p0})"
		],
		"scope": "lua",
		"prefix": "CascadeShadowsSetEntityTrackerScale"
	},
	"CascadeShadowsSetShadowSampleType": {
		"body": [
			"CascadeShadowsSetShadowSampleType(${1:type})"
		],
		"scope": "lua",
		"prefix": "CascadeShadowsSetShadowSampleType"
	},
	"Ceil": {
		"body": [
			"Ceil(${1:value})"
		],
		"scope": "lua",
		"prefix": "Ceil"
	},
	"CellCamActivate": {
		"body": [
			"CellCamActivate(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "CellCamActivate"
	},
	"CellCamDisableThisFrame": {
		"body": [
			"CellCamDisableThisFrame(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "CellCamDisableThisFrame"
	},
	"CellCamIsCharVisibleNoFaceCheck": {
		"body": [
			"CellCamIsCharVisibleNoFaceCheck(${1:entity})"
		],
		"scope": "lua",
		"prefix": "CellCamIsCharVisibleNoFaceCheck"
	},
	"CellCamMoveFinger": {
		"body": [
			"CellCamMoveFinger(${1:direction})"
		],
		"scope": "lua",
		"prefix": "CellCamMoveFinger"
	},
	"CellCamSetLean": {
		"body": [
			"CellCamSetLean(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "CellCamSetLean"
	},
	"ChangePlayerPed": {
		"body": [
			"ChangePlayerPed(${1:player}, ${2:ped}, ${3:b2}, ${4:resetDamage})"
		],
		"scope": "lua",
		"prefix": "ChangePlayerPed"
	},
	"ClampGameplayCamPitch": {
		"body": [
			"ClampGameplayCamPitch(${1:minimum}, ${2:maximum})"
		],
		"scope": "lua",
		"prefix": "ClampGameplayCamPitch"
	},
	"ClampGameplayCamYaw": {
		"body": [
			"ClampGameplayCamYaw(${1:minimum}, ${2:maximum})"
		],
		"scope": "lua",
		"prefix": "ClampGameplayCamYaw"
	},
	"CleanItemset": {
		"body": [
			"CleanItemset(${1:p0})"
		],
		"scope": "lua",
		"prefix": "CleanItemset"
	},
	"CleanupAsyncInstall": {
		"body": [
			"CleanupAsyncInstall()"
		],
		"scope": "lua",
		"prefix": "CleanupAsyncInstall"
	},
	"ClearAdditionalText": {
		"body": [
			"ClearAdditionalText(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "ClearAdditionalText"
	},
	"ClearAllBlipRoutes": {
		"body": [
			"ClearAllBlipRoutes()"
		],
		"scope": "lua",
		"prefix": "ClearAllBlipRoutes"
	},
	"ClearAllBrokenGlass": {
		"body": [
			"ClearAllBrokenGlass()"
		],
		"scope": "lua",
		"prefix": "ClearAllBrokenGlass"
	},
	"ClearAllHelpMessages": {
		"body": [
			"ClearAllHelpMessages()"
		],
		"scope": "lua",
		"prefix": "ClearAllHelpMessages"
	},
	"ClearAllPedProps": {
		"body": [
			"ClearAllPedProps(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearAllPedProps"
	},
	"ClearAllPedVehicleForcedSeatUsage": {
		"body": [
			"ClearAllPedVehicleForcedSeatUsage(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearAllPedVehicleForcedSeatUsage"
	},
	"ClearAmbientZoneListState": {
		"body": [
			"ClearAmbientZoneListState(${1:p1})"
		],
		"scope": "lua",
		"prefix": "ClearAmbientZoneListState"
	},
	"ClearAmbientZoneState": {
		"body": [
			"ClearAmbientZoneState(${1:zoneName}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "ClearAmbientZoneState"
	},
	"ClearAngledAreaOfVehicles": {
		"body": [
			"ClearAngledAreaOfVehicles(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:width}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11})"
		],
		"scope": "lua",
		"prefix": "ClearAngledAreaOfVehicles"
	},
	"ClearArea": {
		"body": [
			"ClearArea(${1:X}, ${2:Y}, ${3:Z}, ${4:radius}, ${5:p4}, ${6:ignoreCopCars}, ${7:ignoreObjects}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "ClearArea"
	},
	"ClearAreaLeaveVehicleHealth": {
		"body": [
			"ClearAreaLeaveVehicleHealth(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "ClearAreaLeaveVehicleHealth"
	},
	"ClearAreaOfCops": {
		"body": [
			"ClearAreaOfCops(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:flags})"
		],
		"scope": "lua",
		"prefix": "ClearAreaOfCops"
	},
	"ClearAreaOfObjects": {
		"body": [
			"ClearAreaOfObjects(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:flags})"
		],
		"scope": "lua",
		"prefix": "ClearAreaOfObjects"
	},
	"ClearAreaOfPeds": {
		"body": [
			"ClearAreaOfPeds(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:flags})"
		],
		"scope": "lua",
		"prefix": "ClearAreaOfPeds"
	},
	"ClearAreaOfProjectiles": {
		"body": [
			"ClearAreaOfProjectiles(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:flags})"
		],
		"scope": "lua",
		"prefix": "ClearAreaOfProjectiles"
	},
	"ClearAreaOfVehicles": {
		"body": [
			"ClearAreaOfVehicles(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "ClearAreaOfVehicles"
	},
	"ClearBit": {
		"body": [
			"ClearBit(${1:offset})"
		],
		"scope": "lua",
		"prefix": "ClearBit"
	},
	"ClearBrief": {
		"body": [
			"ClearBrief()"
		],
		"scope": "lua",
		"prefix": "ClearBrief"
	},
	"ClearCloudHat": {
		"body": [
			"ClearCloudHat()"
		],
		"scope": "lua",
		"prefix": "ClearCloudHat"
	},
	"ClearCustomRadioTrackList": {
		"body": [
			"ClearCustomRadioTrackList(${1:radioStation})"
		],
		"scope": "lua",
		"prefix": "ClearCustomRadioTrackList"
	},
	"ClearDecisionMakerEventResponse": {
		"body": [
			"ClearDecisionMakerEventResponse(${1:name}, ${2:eventType})"
		],
		"scope": "lua",
		"prefix": "ClearDecisionMakerEventResponse"
	},
	"ClearDrawOrigin": {
		"body": [
			"ClearDrawOrigin()"
		],
		"scope": "lua",
		"prefix": "ClearDrawOrigin"
	},
	"ClearDrivebyTaskUnderneathDrivingTask": {
		"body": [
			"ClearDrivebyTaskUnderneathDrivingTask(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearDrivebyTaskUnderneathDrivingTask"
	},
	"ClearDynamicPauseMenuErrorMessage": {
		"body": [
			"ClearDynamicPauseMenuErrorMessage()"
		],
		"scope": "lua",
		"prefix": "ClearDynamicPauseMenuErrorMessage"
	},
	"ClearEntityLastDamageEntity": {
		"body": [
			"ClearEntityLastDamageEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "ClearEntityLastDamageEntity"
	},
	"ClearEntityLastWeaponDamage": {
		"body": [
			"ClearEntityLastWeaponDamage(${1:entity})"
		],
		"scope": "lua",
		"prefix": "ClearEntityLastWeaponDamage"
	},
	"ClearExtraTimecycleModifier": {
		"body": [
			"ClearExtraTimecycleModifier()"
		],
		"scope": "lua",
		"prefix": "ClearExtraTimecycleModifier"
	},
	"ClearFacialClipsetOverride": {
		"body": [
			"ClearFacialClipsetOverride(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearFacialClipsetOverride"
	},
	"ClearFacialIdleAnimOverride": {
		"body": [
			"ClearFacialIdleAnimOverride(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearFacialIdleAnimOverride"
	},
	"ClearFloatingHelp": {
		"body": [
			"ClearFloatingHelp(${1:hudIndex}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "ClearFloatingHelp"
	},
	"ClearFocus": {
		"body": [
			"ClearFocus()"
		],
		"scope": "lua",
		"prefix": "ClearFocus"
	},
	"ClearGarageArea": {
		"body": [
			"ClearGarageArea(${1:garageHash}, ${2:isNetwork})"
		],
		"scope": "lua",
		"prefix": "ClearGarageArea"
	},
	"ClearGpsCustomRoute": {
		"body": [
			"ClearGpsCustomRoute()"
		],
		"scope": "lua",
		"prefix": "ClearGpsCustomRoute"
	},
	"ClearGpsDisabledZoneAtIndex": {
		"body": [
			"ClearGpsDisabledZoneAtIndex(${1:index})"
		],
		"scope": "lua",
		"prefix": "ClearGpsDisabledZoneAtIndex"
	},
	"ClearGpsFlags": {
		"body": [
			"ClearGpsFlags()"
		],
		"scope": "lua",
		"prefix": "ClearGpsFlags"
	},
	"ClearGpsMultiRoute": {
		"body": [
			"ClearGpsMultiRoute()"
		],
		"scope": "lua",
		"prefix": "ClearGpsMultiRoute"
	},
	"ClearGpsPlayerWaypoint": {
		"body": [
			"ClearGpsPlayerWaypoint()"
		],
		"scope": "lua",
		"prefix": "ClearGpsPlayerWaypoint"
	},
	"ClearGpsRaceTrack": {
		"body": [
			"ClearGpsRaceTrack()"
		],
		"scope": "lua",
		"prefix": "ClearGpsRaceTrack"
	},
	"ClearHdArea": {
		"body": [
			"ClearHdArea()"
		],
		"scope": "lua",
		"prefix": "ClearHdArea"
	},
	"ClearHelp": {
		"body": [
			"ClearHelp(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "ClearHelp"
	},
	"ClearInteriorForEntity": {
		"body": [
			"ClearInteriorForEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "ClearInteriorForEntity"
	},
	"ClearLastDrivenVehicle": {
		"body": [
			"ClearLastDrivenVehicle()"
		],
		"scope": "lua",
		"prefix": "ClearLastDrivenVehicle"
	},
	"ClearLaunchParams": {
		"body": [
			"ClearLaunchParams()"
		],
		"scope": "lua",
		"prefix": "ClearLaunchParams"
	},
	"ClearObjectsInsideGarage": {
		"body": [
			"ClearObjectsInsideGarage(${1:garageHash}, ${2:vehicles}, ${3:peds}, ${4:objects}, ${5:isNetwork})"
		],
		"scope": "lua",
		"prefix": "ClearObjectsInsideGarage"
	},
	"ClearOverrideWeather": {
		"body": [
			"ClearOverrideWeather()"
		],
		"scope": "lua",
		"prefix": "ClearOverrideWeather"
	},
	"ClearPedAlternateMovementAnim": {
		"body": [
			"ClearPedAlternateMovementAnim(${1:ped}, ${2:stance}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "ClearPedAlternateMovementAnim"
	},
	"ClearPedAlternateWalkAnim": {
		"body": [
			"ClearPedAlternateWalkAnim(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "ClearPedAlternateWalkAnim"
	},
	"ClearPedBloodDamage": {
		"body": [
			"ClearPedBloodDamage(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedBloodDamage"
	},
	"ClearPedBloodDamageByZone": {
		"body": [
			"ClearPedBloodDamageByZone(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "ClearPedBloodDamageByZone"
	},
	"ClearPedCoverClipsetOverride": {
		"body": [
			"ClearPedCoverClipsetOverride(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedCoverClipsetOverride"
	},
	"ClearPedDamageDecalByZone": {
		"body": [
			"ClearPedDamageDecalByZone(${1:ped}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "ClearPedDamageDecalByZone"
	},
	"ClearPedDecorations": {
		"body": [
			"ClearPedDecorations(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedDecorations"
	},
	"ClearPedDecorationsLeaveScars": {
		"body": [
			"ClearPedDecorationsLeaveScars(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedDecorationsLeaveScars"
	},
	"ClearPedDriveByClipsetOverride": {
		"body": [
			"ClearPedDriveByClipsetOverride(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedDriveByClipsetOverride"
	},
	"ClearPedEnvDirt": {
		"body": [
			"ClearPedEnvDirt(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedEnvDirt"
	},
	"ClearPedInPauseMenu": {
		"body": [
			"ClearPedInPauseMenu()"
		],
		"scope": "lua",
		"prefix": "ClearPedInPauseMenu"
	},
	"ClearPedLastDamageBone": {
		"body": [
			"ClearPedLastDamageBone(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedLastDamageBone"
	},
	"ClearPedLastWeaponDamage": {
		"body": [
			"ClearPedLastWeaponDamage(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedLastWeaponDamage"
	},
	"ClearPedNonCreationArea": {
		"body": [
			"ClearPedNonCreationArea()"
		],
		"scope": "lua",
		"prefix": "ClearPedNonCreationArea"
	},
	"ClearPedParachutePackVariation": {
		"body": [
			"ClearPedParachutePackVariation(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedParachutePackVariation"
	},
	"ClearPedProp": {
		"body": [
			"ClearPedProp(${1:ped}, ${2:propId})"
		],
		"scope": "lua",
		"prefix": "ClearPedProp"
	},
	"ClearPedScubaGearVariation": {
		"body": [
			"ClearPedScubaGearVariation(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedScubaGearVariation"
	},
	"ClearPedSecondaryTask": {
		"body": [
			"ClearPedSecondaryTask(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedSecondaryTask"
	},
	"ClearPedStoredHatProp": {
		"body": [
			"ClearPedStoredHatProp(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedStoredHatProp"
	},
	"ClearPedTasks": {
		"body": [
			"ClearPedTasks(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedTasks"
	},
	"ClearPedTasksImmediately": {
		"body": [
			"ClearPedTasksImmediately(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedTasksImmediately"
	},
	"ClearPedWetness": {
		"body": [
			"ClearPedWetness(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ClearPedWetness"
	},
	"ClearPlayerHasDamagedAtLeastOneNonAnimalPed": {
		"body": [
			"ClearPlayerHasDamagedAtLeastOneNonAnimalPed(${1:player})"
		],
		"scope": "lua",
		"prefix": "ClearPlayerHasDamagedAtLeastOneNonAnimalPed"
	},
	"ClearPlayerHasDamagedAtLeastOnePed": {
		"body": [
			"ClearPlayerHasDamagedAtLeastOnePed(${1:player})"
		],
		"scope": "lua",
		"prefix": "ClearPlayerHasDamagedAtLeastOnePed"
	},
	"ClearPlayerParachuteModelOverride": {
		"body": [
			"ClearPlayerParachuteModelOverride(${1:player})"
		],
		"scope": "lua",
		"prefix": "ClearPlayerParachuteModelOverride"
	},
	"ClearPlayerParachutePackModelOverride": {
		"body": [
			"ClearPlayerParachutePackModelOverride(${1:player})"
		],
		"scope": "lua",
		"prefix": "ClearPlayerParachutePackModelOverride"
	},
	"ClearPlayerParachuteVariationOverride": {
		"body": [
			"ClearPlayerParachuteVariationOverride(${1:player})"
		],
		"scope": "lua",
		"prefix": "ClearPlayerParachuteVariationOverride"
	},
	"ClearPlayerWantedLevel": {
		"body": [
			"ClearPlayerWantedLevel(${1:player})"
		],
		"scope": "lua",
		"prefix": "ClearPlayerWantedLevel"
	},
	"ClearPopscheduleOverrideVehicleModel": {
		"body": [
			"ClearPopscheduleOverrideVehicleModel(${1:scheduleId})"
		],
		"scope": "lua",
		"prefix": "ClearPopscheduleOverrideVehicleModel"
	},
	"ClearPrints": {
		"body": [
			"ClearPrints()"
		],
		"scope": "lua",
		"prefix": "ClearPrints"
	},
	"ClearRaceGalleryBlips": {
		"body": [
			"ClearRaceGalleryBlips()"
		],
		"scope": "lua",
		"prefix": "ClearRaceGalleryBlips"
	},
	"ClearRagdollBlockingFlags": {
		"body": [
			"ClearRagdollBlockingFlags(${1:ped}, ${2:flags})"
		],
		"scope": "lua",
		"prefix": "ClearRagdollBlockingFlags"
	},
	"ClearRelationshipBetweenGroups": {
		"body": [
			"ClearRelationshipBetweenGroups(${1:relationship}, ${2:group1}, ${3:group2})"
		],
		"scope": "lua",
		"prefix": "ClearRelationshipBetweenGroups"
	},
	"ClearReminderMessage": {
		"body": [
			"ClearReminderMessage()"
		],
		"scope": "lua",
		"prefix": "ClearReminderMessage"
	},
	"ClearReplayStats": {
		"body": [
			"ClearReplayStats()"
		],
		"scope": "lua",
		"prefix": "ClearReplayStats"
	},
	"ClearRestartCustomPosition": {
		"body": [
			"ClearRestartCustomPosition()"
		],
		"scope": "lua",
		"prefix": "ClearRestartCustomPosition"
	},
	"ClearRoomForEntity": {
		"body": [
			"ClearRoomForEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "ClearRoomForEntity"
	},
	"ClearRoomForGameViewport": {
		"body": [
			"ClearRoomForGameViewport()"
		],
		"scope": "lua",
		"prefix": "ClearRoomForGameViewport"
	},
	"ClearSequenceTask": {
		"body": [
			"ClearSequenceTask(${1:taskSequenceId})"
		],
		"scope": "lua",
		"prefix": "ClearSequenceTask"
	},
	"ClearSmallPrints": {
		"body": [
			"ClearSmallPrints()"
		],
		"scope": "lua",
		"prefix": "ClearSmallPrints"
	},
	"ClearTacticalAnalysisPoints": {
		"body": [
			"ClearTacticalAnalysisPoints()"
		],
		"scope": "lua",
		"prefix": "ClearTacticalAnalysisPoints"
	},
	"ClearThisPrint": {
		"body": [
			"ClearThisPrint(${1:p0})"
		],
		"scope": "lua",
		"prefix": "ClearThisPrint"
	},
	"ClearTimecycleModifier": {
		"body": [
			"ClearTimecycleModifier()"
		],
		"scope": "lua",
		"prefix": "ClearTimecycleModifier"
	},
	"ClearTvChannelPlaylist": {
		"body": [
			"ClearTvChannelPlaylist(${1:tvChannel})"
		],
		"scope": "lua",
		"prefix": "ClearTvChannelPlaylist"
	},
	"ClearVehicleCustomPrimaryColour": {
		"body": [
			"ClearVehicleCustomPrimaryColour(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "ClearVehicleCustomPrimaryColour"
	},
	"ClearVehicleCustomSecondaryColour": {
		"body": [
			"ClearVehicleCustomSecondaryColour(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "ClearVehicleCustomSecondaryColour"
	},
	"ClearVehiclePhoneExplosiveDevice": {
		"body": [
			"ClearVehiclePhoneExplosiveDevice()"
		],
		"scope": "lua",
		"prefix": "ClearVehiclePhoneExplosiveDevice"
	},
	"ClearVehicleRouteHistory": {
		"body": [
			"ClearVehicleRouteHistory(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "ClearVehicleRouteHistory"
	},
	"ClearVehicleTasks": {
		"body": [
			"ClearVehicleTasks(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "ClearVehicleTasks"
	},
	"ClearWeatherTypePersist": {
		"body": [
			"ClearWeatherTypePersist()"
		],
		"scope": "lua",
		"prefix": "ClearWeatherTypePersist"
	},
	"ClonePed": {
		"body": [
			"ClonePed(${1:ped}, ${2:heading}, ${3:isNetwork}, ${4:bScriptHostPed})"
		],
		"scope": "lua",
		"prefix": "ClonePed"
	},
	"ClonePedEx": {
		"body": [
			"ClonePedEx(${1:ped}, ${2:heading}, ${3:isNetwork}, ${4:bScriptHostPed}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "ClonePedEx"
	},
	"ClonePedToTarget": {
		"body": [
			"ClonePedToTarget(${1:ped}, ${2:targetPed})"
		],
		"scope": "lua",
		"prefix": "ClonePedToTarget"
	},
	"ClonePedToTargetEx": {
		"body": [
			"ClonePedToTargetEx(${1:ped}, ${2:targetPed}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "ClonePedToTargetEx"
	},
	"CloseBombBayDoors": {
		"body": [
			"CloseBombBayDoors(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "CloseBombBayDoors"
	},
	"CloseMultiplayerChat": {
		"body": [
			"CloseMultiplayerChat()"
		],
		"scope": "lua",
		"prefix": "CloseMultiplayerChat"
	},
	"ClosePatrolRoute": {
		"body": [
			"ClosePatrolRoute()"
		],
		"scope": "lua",
		"prefix": "ClosePatrolRoute"
	},
	"CloseSequenceTask": {
		"body": [
			"CloseSequenceTask(${1:taskSequenceId})"
		],
		"scope": "lua",
		"prefix": "CloseSequenceTask"
	},
	"CloseSocialClubMenu": {
		"body": [
			"CloseSocialClubMenu()"
		],
		"scope": "lua",
		"prefix": "CloseSocialClubMenu"
	},
	"CloudCheckAvailability": {
		"body": [
			"CloudCheckAvailability()"
		],
		"scope": "lua",
		"prefix": "CloudCheckAvailability"
	},
	"CloudDeleteMemberFile": {
		"body": [
			"CloudDeleteMemberFile(${1:p0})"
		],
		"scope": "lua",
		"prefix": "CloudDeleteMemberFile"
	},
	"CloudDidRequestSucceed": {
		"body": [
			"CloudDidRequestSucceed(${1:handle})"
		],
		"scope": "lua",
		"prefix": "CloudDidRequestSucceed"
	},
	"CloudGetAvailabilityCheckResult": {
		"body": [
			"CloudGetAvailabilityCheckResult()"
		],
		"scope": "lua",
		"prefix": "CloudGetAvailabilityCheckResult"
	},
	"CloudHasRequestCompleted": {
		"body": [
			"CloudHasRequestCompleted(${1:handle})"
		],
		"scope": "lua",
		"prefix": "CloudHasRequestCompleted"
	},
	"CloudIsCheckingAvailability": {
		"body": [
			"CloudIsCheckingAvailability()"
		],
		"scope": "lua",
		"prefix": "CloudIsCheckingAvailability"
	},
	"CommitRuntimeTexture": {
		"body": [
			"CommitRuntimeTexture(${1:tex})"
		],
		"scope": "lua",
		"prefix": "CommitRuntimeTexture"
	},
	"CompareStrings": {
		"body": [
			"CompareStrings(${1:str1}, ${2:str2}, ${3:matchCase}, ${4:maxLength})"
		],
		"scope": "lua",
		"prefix": "CompareStrings"
	},
	"ControlLandingGear": {
		"body": [
			"ControlLandingGear(${1:vehicle}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "ControlLandingGear"
	},
	"ControlMountedWeapon": {
		"body": [
			"ControlMountedWeapon(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ControlMountedWeapon"
	},
	"ConvertPosixTime": {
		"body": [
			"ConvertPosixTime(${1:posixTime}, ${2:timeStructure})"
		],
		"scope": "lua",
		"prefix": "ConvertPosixTime"
	},
	"CopyMemory": {
		"body": [
			"CopyMemory(${1:src}, ${2:size})"
		],
		"scope": "lua",
		"prefix": "CopyMemory"
	},
	"CopyVehicleDamages": {
		"body": [
			"CopyVehicleDamages(${1:sourceVehicle}, ${2:targetVehicle})"
		],
		"scope": "lua",
		"prefix": "CopyVehicleDamages"
	},
	"Cos": {
		"body": [
			"Cos(${1:value})"
		],
		"scope": "lua",
		"prefix": "Cos"
	},
	"CreateAirDefenseArea": {
		"body": [
			"CreateAirDefenseArea(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:weaponHash})"
		],
		"scope": "lua",
		"prefix": "CreateAirDefenseArea"
	},
	"CreateAirDefenseSphere": {
		"body": [
			"CreateAirDefenseSphere(${1:p0}, ${2:p1}, ${3:p2}, ${4:radius}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:weaponHash})"
		],
		"scope": "lua",
		"prefix": "CreateAirDefenseSphere"
	},
	"CreateAmbientPickup": {
		"body": [
			"CreateAmbientPickup(${1:pickupHash}, ${2:posX}, ${3:posY}, ${4:posZ}, ${5:flags}, ${6:value}, ${7:modelHash}, ${8:returnHandle}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "CreateAmbientPickup"
	},
	"CreateAudioSubmix": {
		"body": [
			"CreateAudioSubmix(${1:name})"
		],
		"scope": "lua",
		"prefix": "CreateAudioSubmix"
	},
	"CreateCam": {
		"body": [
			"CreateCam(${1:camName}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "CreateCam"
	},
	"CreateCamera": {
		"body": [
			"CreateCamera(${1:camHash}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "CreateCamera"
	},
	"CreateCameraWithParams": {
		"body": [
			"CreateCameraWithParams(${1:camHash}, ${2:posX}, ${3:posY}, ${4:posZ}, ${5:rotX}, ${6:rotY}, ${7:rotZ}, ${8:fov}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "CreateCameraWithParams"
	},
	"CreateCamWithParams": {
		"body": [
			"CreateCamWithParams(${1:camName}, ${2:posX}, ${3:posY}, ${4:posZ}, ${5:rotX}, ${6:rotY}, ${7:rotZ}, ${8:fov}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "CreateCamWithParams"
	},
	"CreateCheckpoint": {
		"body": [
			"CreateCheckpoint(${1:type}, ${2:posX1}, ${3:posY1}, ${4:posZ1}, ${5:posX2}, ${6:posY2}, ${7:posZ2}, ${8:radius}, ${9:red}, ${10:green}, ${11:blue}, ${12:alpha}, ${13:reserved})"
		],
		"scope": "lua",
		"prefix": "CreateCheckpoint"
	},
	"CreateCinematicShot": {
		"body": [
			"CreateCinematicShot(${1:p0}, ${2:p1}, ${3:p2}, ${4:entity})"
		],
		"scope": "lua",
		"prefix": "CreateCinematicShot"
	},
	"CreateDui": {
		"body": [
			"CreateDui(${1:url}, ${2:width}, ${3:height})"
		],
		"scope": "lua",
		"prefix": "CreateDui"
	},
	"CreateFakeMpGamerTag": {
		"body": [
			"CreateFakeMpGamerTag(${1:ped}, ${2:username}, ${3:pointedClanTag}, ${4:isRockstarClan}, ${5:clanTag}, ${6:clanFlag})"
		],
		"scope": "lua",
		"prefix": "CreateFakeMpGamerTag"
	},
	"CreateForcedObject": {
		"body": [
			"CreateForcedObject(${1:x}, ${2:y}, ${3:z}, ${4:p3}, ${5:modelHash}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "CreateForcedObject"
	},
	"CreateGroup": {
		"body": [
			"CreateGroup(${1:unused})"
		],
		"scope": "lua",
		"prefix": "CreateGroup"
	},
	"CreateIncident": {
		"body": [
			"CreateIncident(${1:dispatchService}, ${2:x}, ${3:y}, ${4:z}, ${5:numUnits}, ${6:radius}, ${7:outIncidentID})"
		],
		"scope": "lua",
		"prefix": "CreateIncident"
	},
	"CreateIncidentWithEntity": {
		"body": [
			"CreateIncidentWithEntity(${1:dispatchService}, ${2:ped}, ${3:numUnits}, ${4:radius}, ${5:outIncidentID})"
		],
		"scope": "lua",
		"prefix": "CreateIncidentWithEntity"
	},
	"CreateItemset": {
		"body": [
			"CreateItemset(${1:distri})"
		],
		"scope": "lua",
		"prefix": "CreateItemset"
	},
	"CreateMissionTrain": {
		"body": [
			"CreateMissionTrain(${1:variation}, ${2:x}, ${3:y}, ${4:z}, ${5:direction})"
		],
		"scope": "lua",
		"prefix": "CreateMissionTrain"
	},
	"CreateMobilePhone": {
		"body": [
			"CreateMobilePhone(${1:phoneType})"
		],
		"scope": "lua",
		"prefix": "CreateMobilePhone"
	},
	"CreateModelHide": {
		"body": [
			"CreateModelHide(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:model}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "CreateModelHide"
	},
	"CreateModelHideExcludingScriptObjects": {
		"body": [
			"CreateModelHideExcludingScriptObjects(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:model}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "CreateModelHideExcludingScriptObjects"
	},
	"CreateModelSwap": {
		"body": [
			"CreateModelSwap(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:originalModel}, ${6:newModel}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "CreateModelSwap"
	},
	"CreateMoneyPickups": {
		"body": [
			"CreateMoneyPickups(${1:x}, ${2:y}, ${3:z}, ${4:value}, ${5:amount}, ${6:model})"
		],
		"scope": "lua",
		"prefix": "CreateMoneyPickups"
	},
	"CreateMpGamerTagWithCrewColor": {
		"body": [
			"CreateMpGamerTagWithCrewColor(${1:player}, ${2:username}, ${3:pointedClanTag}, ${4:isRockstarClan}, ${5:clanTag}, ${6:clanFlag}, ${7:r}, ${8:g}, ${9:b})"
		],
		"scope": "lua",
		"prefix": "CreateMpGamerTagWithCrewColor"
	},
	"CreateNewScriptedConversation": {
		"body": [
			"CreateNewScriptedConversation()"
		],
		"scope": "lua",
		"prefix": "CreateNewScriptedConversation"
	},
	"CreateNmMessage": {
		"body": [
			"CreateNmMessage(${1:startImmediately}, ${2:messageId})"
		],
		"scope": "lua",
		"prefix": "CreateNmMessage"
	},
	"CreateObject": {
		"body": [
			"CreateObject(${1:modelHash}, ${2:x}, ${3:y}, ${4:z}, ${5:isNetwork}, ${6:netMissionEntity}, ${7:doorFlag})"
		],
		"scope": "lua",
		"prefix": "CreateObject"
	},
	"CreateObjectNoOffset": {
		"body": [
			"CreateObjectNoOffset(${1:modelHash}, ${2:x}, ${3:y}, ${4:z}, ${5:isNetwork}, ${6:netMissionEntity}, ${7:doorFlag})"
		],
		"scope": "lua",
		"prefix": "CreateObjectNoOffset"
	},
	"CreateParachuteBagObject": {
		"body": [
			"CreateParachuteBagObject(${1:ped}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "CreateParachuteBagObject"
	},
	"CreatePatrolRoute": {
		"body": [
			"CreatePatrolRoute()"
		],
		"scope": "lua",
		"prefix": "CreatePatrolRoute"
	},
	"CreatePed": {
		"body": [
			"CreatePed(${1:pedType}, ${2:modelHash}, ${3:x}, ${4:y}, ${5:z}, ${6:heading}, ${7:isNetwork}, ${8:bScriptHostPed})"
		],
		"scope": "lua",
		"prefix": "CreatePed"
	},
	"CreatePedInsideVehicle": {
		"body": [
			"CreatePedInsideVehicle(${1:vehicle}, ${2:pedType}, ${3:modelHash}, ${4:seat}, ${5:isNetwork}, ${6:bScriptHostPed})"
		],
		"scope": "lua",
		"prefix": "CreatePedInsideVehicle"
	},
	"CreatePickup": {
		"body": [
			"CreatePickup(${1:pickupHash}, ${2:posX}, ${3:posY}, ${4:posZ}, ${5:p4}, ${6:value}, ${7:p6}, ${8:modelHash})"
		],
		"scope": "lua",
		"prefix": "CreatePickup"
	},
	"CreatePickUpRopeForCargobob": {
		"body": [
			"CreatePickUpRopeForCargobob(${1:cargobob}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "CreatePickUpRopeForCargobob"
	},
	"CreatePickupRotate": {
		"body": [
			"CreatePickupRotate(${1:pickupHash}, ${2:posX}, ${3:posY}, ${4:posZ}, ${5:rotX}, ${6:rotY}, ${7:rotZ}, ${8:flag}, ${9:amount}, ${10:p9}, ${11:p10}, ${12:modelHash})"
		],
		"scope": "lua",
		"prefix": "CreatePickupRotate"
	},
	"CreatePortablePickup": {
		"body": [
			"CreatePortablePickup(${1:pickupHash}, ${2:x}, ${3:y}, ${4:z}, ${5:placeOnGround}, ${6:modelHash})"
		],
		"scope": "lua",
		"prefix": "CreatePortablePickup"
	},
	"CreatePortablePickup_2": {
		"body": [
			"CreatePortablePickup_2(${1:pickupHash}, ${2:x}, ${3:y}, ${4:z}, ${5:placeOnGround}, ${6:modelHash})"
		],
		"scope": "lua",
		"prefix": "CreatePortablePickup_2"
	},
	"CreateRandomPed": {
		"body": [
			"CreateRandomPed(${1:posX}, ${2:posY}, ${3:posZ})"
		],
		"scope": "lua",
		"prefix": "CreateRandomPed"
	},
	"CreateRandomPedAsDriver": {
		"body": [
			"CreateRandomPedAsDriver(${1:vehicle}, ${2:returnHandle})"
		],
		"scope": "lua",
		"prefix": "CreateRandomPedAsDriver"
	},
	"CreateRuntimeTexture": {
		"body": [
			"CreateRuntimeTexture(${1:txd}, ${2:txn}, ${3:width}, ${4:height})"
		],
		"scope": "lua",
		"prefix": "CreateRuntimeTexture"
	},
	"CreateRuntimeTextureFromDuiHandle": {
		"body": [
			"CreateRuntimeTextureFromDuiHandle(${1:txd}, ${2:txn}, ${3:duiHandle})"
		],
		"scope": "lua",
		"prefix": "CreateRuntimeTextureFromDuiHandle"
	},
	"CreateRuntimeTextureFromImage": {
		"body": [
			"CreateRuntimeTextureFromImage(${1:txd}, ${2:txn}, ${3:fileName})"
		],
		"scope": "lua",
		"prefix": "CreateRuntimeTextureFromImage"
	},
	"CreateRuntimeTxd": {
		"body": [
			"CreateRuntimeTxd(${1:name})"
		],
		"scope": "lua",
		"prefix": "CreateRuntimeTxd"
	},
	"CreateScriptVehicleGenerator": {
		"body": [
			"CreateScriptVehicleGenerator(${1:x}, ${2:y}, ${3:z}, ${4:heading}, ${5:p4}, ${6:p5}, ${7:modelHash}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11}, ${13:p12}, ${14:p13}, ${15:p14}, ${16:p15}, ${17:p16})"
		],
		"scope": "lua",
		"prefix": "CreateScriptVehicleGenerator"
	},
	"CreateSynchronizedScene": {
		"body": [
			"CreateSynchronizedScene(${1:x}, ${2:y}, ${3:z}, ${4:roll}, ${5:pitch}, ${6:yaw}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "CreateSynchronizedScene"
	},
	"CreateSynchronizedScene_2": {
		"body": [
			"CreateSynchronizedScene_2(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:object})"
		],
		"scope": "lua",
		"prefix": "CreateSynchronizedScene_2"
	},
	"CreateTrackedPoint": {
		"body": [
			"CreateTrackedPoint()"
		],
		"scope": "lua",
		"prefix": "CreateTrackedPoint"
	},
	"CreateVehicle": {
		"body": [
			"CreateVehicle(${1:modelHash}, ${2:x}, ${3:y}, ${4:z}, ${5:heading}, ${6:isNetwork}, ${7:netMissionEntity})"
		],
		"scope": "lua",
		"prefix": "CreateVehicle"
	},
	"CreateWeaponObject": {
		"body": [
			"CreateWeaponObject(${1:weaponHash}, ${2:ammoCount}, ${3:x}, ${4:y}, ${5:z}, ${6:showWorldModel}, ${7:scale}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "CreateWeaponObject"
	},
	"CustomMenuCoordinates": {
		"body": [
			"CustomMenuCoordinates(${1:p0})"
		],
		"scope": "lua",
		"prefix": "CustomMenuCoordinates"
	},
	"DataarrayAddBool": {
		"body": [
			"DataarrayAddBool(${1:value})"
		],
		"scope": "lua",
		"prefix": "DataarrayAddBool"
	},
	"DataarrayAddDict": {
		"body": [
			"DataarrayAddDict(${1:arrayData})"
		],
		"scope": "lua",
		"prefix": "DataarrayAddDict"
	},
	"DataarrayAddFloat": {
		"body": [
			"DataarrayAddFloat(${1:value})"
		],
		"scope": "lua",
		"prefix": "DataarrayAddFloat"
	},
	"DataarrayAddInt": {
		"body": [
			"DataarrayAddInt(${1:value})"
		],
		"scope": "lua",
		"prefix": "DataarrayAddInt"
	},
	"DataarrayAddString": {
		"body": [
			"DataarrayAddString(${1:value})"
		],
		"scope": "lua",
		"prefix": "DataarrayAddString"
	},
	"DataarrayAddVector": {
		"body": [
			"DataarrayAddVector(${1:valueX}, ${2:valueY}, ${3:valueZ})"
		],
		"scope": "lua",
		"prefix": "DataarrayAddVector"
	},
	"DataarrayGetBool": {
		"body": [
			"DataarrayGetBool(${1:arrayIndex})"
		],
		"scope": "lua",
		"prefix": "DataarrayGetBool"
	},
	"DataarrayGetCount": {
		"body": [
			"DataarrayGetCount(${1:arrayData})"
		],
		"scope": "lua",
		"prefix": "DataarrayGetCount"
	},
	"DataarrayGetDict": {
		"body": [
			"DataarrayGetDict(${1:arrayIndex})"
		],
		"scope": "lua",
		"prefix": "DataarrayGetDict"
	},
	"DataarrayGetFloat": {
		"body": [
			"DataarrayGetFloat(${1:arrayIndex})"
		],
		"scope": "lua",
		"prefix": "DataarrayGetFloat"
	},
	"DataarrayGetInt": {
		"body": [
			"DataarrayGetInt(${1:arrayIndex})"
		],
		"scope": "lua",
		"prefix": "DataarrayGetInt"
	},
	"DataarrayGetString": {
		"body": [
			"DataarrayGetString(${1:arrayIndex})"
		],
		"scope": "lua",
		"prefix": "DataarrayGetString"
	},
	"DataarrayGetType": {
		"body": [
			"DataarrayGetType(${1:arrayIndex})"
		],
		"scope": "lua",
		"prefix": "DataarrayGetType"
	},
	"DataarrayGetVector": {
		"body": [
			"DataarrayGetVector(${1:arrayIndex})"
		],
		"scope": "lua",
		"prefix": "DataarrayGetVector"
	},
	"DatadictCreateArray": {
		"body": [
			"DatadictCreateArray(${1:key})"
		],
		"scope": "lua",
		"prefix": "DatadictCreateArray"
	},
	"DatadictCreateDict": {
		"body": [
			"DatadictCreateDict(${1:key})"
		],
		"scope": "lua",
		"prefix": "DatadictCreateDict"
	},
	"DatadictGetArray": {
		"body": [
			"DatadictGetArray(${1:key})"
		],
		"scope": "lua",
		"prefix": "DatadictGetArray"
	},
	"DatadictGetBool": {
		"body": [
			"DatadictGetBool(${1:key})"
		],
		"scope": "lua",
		"prefix": "DatadictGetBool"
	},
	"DatadictGetDict": {
		"body": [
			"DatadictGetDict(${1:key})"
		],
		"scope": "lua",
		"prefix": "DatadictGetDict"
	},
	"DatadictGetFloat": {
		"body": [
			"DatadictGetFloat(${1:key})"
		],
		"scope": "lua",
		"prefix": "DatadictGetFloat"
	},
	"DatadictGetInt": {
		"body": [
			"DatadictGetInt(${1:key})"
		],
		"scope": "lua",
		"prefix": "DatadictGetInt"
	},
	"DatadictGetString": {
		"body": [
			"DatadictGetString(${1:key})"
		],
		"scope": "lua",
		"prefix": "DatadictGetString"
	},
	"DatadictGetType": {
		"body": [
			"DatadictGetType(${1:key})"
		],
		"scope": "lua",
		"prefix": "DatadictGetType"
	},
	"DatadictGetVector": {
		"body": [
			"DatadictGetVector(${1:key})"
		],
		"scope": "lua",
		"prefix": "DatadictGetVector"
	},
	"DatadictSetBool": {
		"body": [
			"DatadictSetBool(${1:key}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "DatadictSetBool"
	},
	"DatadictSetFloat": {
		"body": [
			"DatadictSetFloat(${1:key}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "DatadictSetFloat"
	},
	"DatadictSetInt": {
		"body": [
			"DatadictSetInt(${1:key}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "DatadictSetInt"
	},
	"DatadictSetString": {
		"body": [
			"DatadictSetString(${1:key}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "DatadictSetString"
	},
	"DatadictSetVector": {
		"body": [
			"DatadictSetVector(${1:key}, ${2:valueX}, ${3:valueY}, ${4:valueZ})"
		],
		"scope": "lua",
		"prefix": "DatadictSetVector"
	},
	"DatafileClearWatchList": {
		"body": [
			"DatafileClearWatchList()"
		],
		"scope": "lua",
		"prefix": "DatafileClearWatchList"
	},
	"DatafileCreate": {
		"body": [
			"DatafileCreate()"
		],
		"scope": "lua",
		"prefix": "DatafileCreate"
	},
	"DatafileDelete": {
		"body": [
			"DatafileDelete()"
		],
		"scope": "lua",
		"prefix": "DatafileDelete"
	},
	"DatafileDeleteRequestedFile": {
		"body": [
			"DatafileDeleteRequestedFile(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DatafileDeleteRequestedFile"
	},
	"DatafileFlushMissionHeader": {
		"body": [
			"DatafileFlushMissionHeader()"
		],
		"scope": "lua",
		"prefix": "DatafileFlushMissionHeader"
	},
	"DatafileGetFileDict": {
		"body": [
			"DatafileGetFileDict()"
		],
		"scope": "lua",
		"prefix": "DatafileGetFileDict"
	},
	"DatafileHasLoadedFileData": {
		"body": [
			"DatafileHasLoadedFileData(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DatafileHasLoadedFileData"
	},
	"DatafileHasValidFileData": {
		"body": [
			"DatafileHasValidFileData(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DatafileHasValidFileData"
	},
	"DatafileIsSavePending": {
		"body": [
			"DatafileIsSavePending()"
		],
		"scope": "lua",
		"prefix": "DatafileIsSavePending"
	},
	"DatafileIsValidRequestId": {
		"body": [
			"DatafileIsValidRequestId(${1:index})"
		],
		"scope": "lua",
		"prefix": "DatafileIsValidRequestId"
	},
	"DatafileLoadOfflineUgc": {
		"body": [
			"DatafileLoadOfflineUgc(${1:filename})"
		],
		"scope": "lua",
		"prefix": "DatafileLoadOfflineUgc"
	},
	"DatafileSelectActiveFile": {
		"body": [
			"DatafileSelectActiveFile(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DatafileSelectActiveFile"
	},
	"DatafileSelectCreatorStats": {
		"body": [
			"DatafileSelectCreatorStats(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DatafileSelectCreatorStats"
	},
	"DatafileSelectUgcData": {
		"body": [
			"DatafileSelectUgcData(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DatafileSelectUgcData"
	},
	"DatafileSelectUgcPlayerData": {
		"body": [
			"DatafileSelectUgcPlayerData(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DatafileSelectUgcPlayerData"
	},
	"DatafileSelectUgcStats": {
		"body": [
			"DatafileSelectUgcStats(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "DatafileSelectUgcStats"
	},
	"DatafileStartSaveToCloud": {
		"body": [
			"DatafileStartSaveToCloud(${1:filename})"
		],
		"scope": "lua",
		"prefix": "DatafileStartSaveToCloud"
	},
	"DatafileStoreMissionHeader": {
		"body": [
			"DatafileStoreMissionHeader()"
		],
		"scope": "lua",
		"prefix": "DatafileStoreMissionHeader"
	},
	"DatafileUpdateSaveToCloud": {
		"body": [
			"DatafileUpdateSaveToCloud(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DatafileUpdateSaveToCloud"
	},
	"DatafileWatchRequestId": {
		"body": [
			"DatafileWatchRequestId(${1:id})"
		],
		"scope": "lua",
		"prefix": "DatafileWatchRequestId"
	},
	"DeactivateAudioSlowmoMode": {
		"body": [
			"DeactivateAudioSlowmoMode(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DeactivateAudioSlowmoMode"
	},
	"DeactivateInteriorEntitySet": {
		"body": [
			"DeactivateInteriorEntitySet(${1:interior}, ${2:entitySetName})"
		],
		"scope": "lua",
		"prefix": "DeactivateInteriorEntitySet"
	},
	"DecorExistOn": {
		"body": [
			"DecorExistOn(${1:entity}, ${2:propertyName})"
		],
		"scope": "lua",
		"prefix": "DecorExistOn"
	},
	"DecorGetBool": {
		"body": [
			"DecorGetBool(${1:entity}, ${2:propertyName})"
		],
		"scope": "lua",
		"prefix": "DecorGetBool"
	},
	"DecorGetFloat": {
		"body": [
			"DecorGetFloat(${1:entity}, ${2:propertyName})"
		],
		"scope": "lua",
		"prefix": "DecorGetFloat"
	},
	"DecorGetInt": {
		"body": [
			"DecorGetInt(${1:entity}, ${2:propertyName})"
		],
		"scope": "lua",
		"prefix": "DecorGetInt"
	},
	"DecorIsRegisteredAsType": {
		"body": [
			"DecorIsRegisteredAsType(${1:propertyName}, ${2:type})"
		],
		"scope": "lua",
		"prefix": "DecorIsRegisteredAsType"
	},
	"DecorRegister": {
		"body": [
			"DecorRegister(${1:propertyName}, ${2:type})"
		],
		"scope": "lua",
		"prefix": "DecorRegister"
	},
	"DecorRegisterLock": {
		"body": [
			"DecorRegisterLock()"
		],
		"scope": "lua",
		"prefix": "DecorRegisterLock"
	},
	"DecorRemove": {
		"body": [
			"DecorRemove(${1:entity}, ${2:propertyName})"
		],
		"scope": "lua",
		"prefix": "DecorRemove"
	},
	"DecorSetBool": {
		"body": [
			"DecorSetBool(${1:entity}, ${2:propertyName}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "DecorSetBool"
	},
	"DecorSetFloat": {
		"body": [
			"DecorSetFloat(${1:entity}, ${2:propertyName}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "DecorSetFloat"
	},
	"DecorSetInt": {
		"body": [
			"DecorSetInt(${1:entity}, ${2:propertyName}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "DecorSetInt"
	},
	"DecorSetTime": {
		"body": [
			"DecorSetTime(${1:entity}, ${2:propertyName}, ${3:timestamp})"
		],
		"scope": "lua",
		"prefix": "DecorSetTime"
	},
	"DeleteAllTrains": {
		"body": [
			"DeleteAllTrains()"
		],
		"scope": "lua",
		"prefix": "DeleteAllTrains"
	},
	"DeleteCheckpoint": {
		"body": [
			"DeleteCheckpoint(${1:checkpoint})"
		],
		"scope": "lua",
		"prefix": "DeleteCheckpoint"
	},
	"DeleteChildRope": {
		"body": [
			"DeleteChildRope(${1:ropeId})"
		],
		"scope": "lua",
		"prefix": "DeleteChildRope"
	},
	"DeleteEntity": {
		"body": [
			"DeleteEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "DeleteEntity"
	},
	"DeleteFunctionReference": {
		"body": [
			"DeleteFunctionReference(${1:referenceIdentity})"
		],
		"scope": "lua",
		"prefix": "DeleteFunctionReference"
	},
	"DeleteIncident": {
		"body": [
			"DeleteIncident(${1:incidentId})"
		],
		"scope": "lua",
		"prefix": "DeleteIncident"
	},
	"DeleteMissionTrain": {
		"body": [
			"DeleteMissionTrain(${1:train})"
		],
		"scope": "lua",
		"prefix": "DeleteMissionTrain"
	},
	"DeleteObject": {
		"body": [
			"DeleteObject(${1:object})"
		],
		"scope": "lua",
		"prefix": "DeleteObject"
	},
	"DeletePatrolRoute": {
		"body": [
			"DeletePatrolRoute(${1:patrolRoute})"
		],
		"scope": "lua",
		"prefix": "DeletePatrolRoute"
	},
	"DeletePed": {
		"body": [
			"DeletePed(${1:ped})"
		],
		"scope": "lua",
		"prefix": "DeletePed"
	},
	"DeleteResourceKvp": {
		"body": [
			"DeleteResourceKvp(${1:key})"
		],
		"scope": "lua",
		"prefix": "DeleteResourceKvp"
	},
	"DeleteRope": {
		"body": [
			"DeleteRope(${1:ropeId})"
		],
		"scope": "lua",
		"prefix": "DeleteRope"
	},
	"DeleteScriptVehicleGenerator": {
		"body": [
			"DeleteScriptVehicleGenerator(${1:vehicleGenerator})"
		],
		"scope": "lua",
		"prefix": "DeleteScriptVehicleGenerator"
	},
	"DeleteStuntJump": {
		"body": [
			"DeleteStuntJump(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DeleteStuntJump"
	},
	"DeleteVehicle": {
		"body": [
			"DeleteVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "DeleteVehicle"
	},
	"DeleteWaypoint": {
		"body": [
			"DeleteWaypoint()"
		],
		"scope": "lua",
		"prefix": "DeleteWaypoint"
	},
	"DepositVc": {
		"body": [
			"DepositVc(${1:amount})"
		],
		"scope": "lua",
		"prefix": "DepositVc"
	},
	"DestroyAllCams": {
		"body": [
			"DestroyAllCams(${1:thisScriptCheck})"
		],
		"scope": "lua",
		"prefix": "DestroyAllCams"
	},
	"DestroyCam": {
		"body": [
			"DestroyCam(${1:cam}, ${2:thisScriptCheck})"
		],
		"scope": "lua",
		"prefix": "DestroyCam"
	},
	"DestroyDui": {
		"body": [
			"DestroyDui(${1:duiObject})"
		],
		"scope": "lua",
		"prefix": "DestroyDui"
	},
	"DestroyItemset": {
		"body": [
			"DestroyItemset(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DestroyItemset"
	},
	"DestroyMobilePhone": {
		"body": [
			"DestroyMobilePhone()"
		],
		"scope": "lua",
		"prefix": "DestroyMobilePhone"
	},
	"DestroyTrackedPoint": {
		"body": [
			"DestroyTrackedPoint(${1:point})"
		],
		"scope": "lua",
		"prefix": "DestroyTrackedPoint"
	},
	"DetachCam": {
		"body": [
			"DetachCam(${1:cam})"
		],
		"scope": "lua",
		"prefix": "DetachCam"
	},
	"DetachContainerFromHandlerFrame": {
		"body": [
			"DetachContainerFromHandlerFrame(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "DetachContainerFromHandlerFrame"
	},
	"DetachEntity": {
		"body": [
			"DetachEntity(${1:entity}, ${2:dynamic}, ${3:collision})"
		],
		"scope": "lua",
		"prefix": "DetachEntity"
	},
	"DetachEntityFromCargobob": {
		"body": [
			"DetachEntityFromCargobob(${1:vehicle}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "DetachEntityFromCargobob"
	},
	"DetachPortablePickupFromPed": {
		"body": [
			"DetachPortablePickupFromPed(${1:ped})"
		],
		"scope": "lua",
		"prefix": "DetachPortablePickupFromPed"
	},
	"DetachRopeFromEntity": {
		"body": [
			"DetachRopeFromEntity(${1:ropeId}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "DetachRopeFromEntity"
	},
	"DetachSynchronizedScene": {
		"body": [
			"DetachSynchronizedScene(${1:sceneID})"
		],
		"scope": "lua",
		"prefix": "DetachSynchronizedScene"
	},
	"DetachVehicleFromAnyCargobob": {
		"body": [
			"DetachVehicleFromAnyCargobob(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "DetachVehicleFromAnyCargobob"
	},
	"DetachVehicleFromAnyTowTruck": {
		"body": [
			"DetachVehicleFromAnyTowTruck(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "DetachVehicleFromAnyTowTruck"
	},
	"DetachVehicleFromCargobob": {
		"body": [
			"DetachVehicleFromCargobob(${1:vehicle}, ${2:cargobob})"
		],
		"scope": "lua",
		"prefix": "DetachVehicleFromCargobob"
	},
	"DetachVehicleFromTowTruck": {
		"body": [
			"DetachVehicleFromTowTruck(${1:towTruck}, ${2:vehicle})"
		],
		"scope": "lua",
		"prefix": "DetachVehicleFromTowTruck"
	},
	"DetachVehicleFromTrailer": {
		"body": [
			"DetachVehicleFromTrailer(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "DetachVehicleFromTrailer"
	},
	"DetonateVehiclePhoneExplosiveDevice": {
		"body": [
			"DetonateVehiclePhoneExplosiveDevice()"
		],
		"scope": "lua",
		"prefix": "DetonateVehiclePhoneExplosiveDevice"
	},
	"DisableAimCamThisUpdate": {
		"body": [
			"DisableAimCamThisUpdate()"
		],
		"scope": "lua",
		"prefix": "DisableAimCamThisUpdate"
	},
	"DisableAllControlActions": {
		"body": [
			"DisableAllControlActions(${1:padIndex})"
		],
		"scope": "lua",
		"prefix": "DisableAllControlActions"
	},
	"DisableCamCollisionForEntity": {
		"body": [
			"DisableCamCollisionForEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "DisableCamCollisionForEntity"
	},
	"DisableCamCollisionForObject": {
		"body": [
			"DisableCamCollisionForObject(${1:entity})"
		],
		"scope": "lua",
		"prefix": "DisableCamCollisionForObject"
	},
	"DisableControlAction": {
		"body": [
			"DisableControlAction(${1:padIndex}, ${2:control}, ${3:disable})"
		],
		"scope": "lua",
		"prefix": "DisableControlAction"
	},
	"DisableFirstPersonCamThisFrame": {
		"body": [
			"DisableFirstPersonCamThisFrame()"
		],
		"scope": "lua",
		"prefix": "DisableFirstPersonCamThisFrame"
	},
	"DisableFrontendThisFrame": {
		"body": [
			"DisableFrontendThisFrame()"
		],
		"scope": "lua",
		"prefix": "DisableFrontendThisFrame"
	},
	"DisableHeadBlendPaletteColor": {
		"body": [
			"DisableHeadBlendPaletteColor(${1:ped})"
		],
		"scope": "lua",
		"prefix": "DisableHeadBlendPaletteColor"
	},
	"DisableHospitalRestart": {
		"body": [
			"DisableHospitalRestart(${1:hospitalIndex}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "DisableHospitalRestart"
	},
	"DisableInputGroup": {
		"body": [
			"DisableInputGroup(${1:padIndex})"
		],
		"scope": "lua",
		"prefix": "DisableInputGroup"
	},
	"DisableInterior": {
		"body": [
			"DisableInterior(${1:interiorID}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "DisableInterior"
	},
	"DisableNavmeshInArea": {
		"body": [
			"DisableNavmeshInArea(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "DisableNavmeshInArea"
	},
	"DisableOcclusionThisFrame": {
		"body": [
			"DisableOcclusionThisFrame()"
		],
		"scope": "lua",
		"prefix": "DisableOcclusionThisFrame"
	},
	"DisablePedHeatscaleOverride": {
		"body": [
			"DisablePedHeatscaleOverride(${1:ped})"
		],
		"scope": "lua",
		"prefix": "DisablePedHeatscaleOverride"
	},
	"DisablePedPainAudio": {
		"body": [
			"DisablePedPainAudio(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "DisablePedPainAudio"
	},
	"DisablePlaneAileron": {
		"body": [
			"DisablePlaneAileron(${1:vehicle}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "DisablePlaneAileron"
	},
	"DisablePlanePropeller": {
		"body": [
			"DisablePlanePropeller(${1:vehicle}, ${2:propeller})"
		],
		"scope": "lua",
		"prefix": "DisablePlanePropeller"
	},
	"DisablePlayerFiring": {
		"body": [
			"DisablePlayerFiring(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "DisablePlayerFiring"
	},
	"DisablePlayerVehicleRewards": {
		"body": [
			"DisablePlayerVehicleRewards(${1:player})"
		],
		"scope": "lua",
		"prefix": "DisablePlayerVehicleRewards"
	},
	"DisablePoliceRestart": {
		"body": [
			"DisablePoliceRestart(${1:policeIndex}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "DisablePoliceRestart"
	},
	"DisableRockstarEditorCameraChanges": {
		"body": [
			"DisableRockstarEditorCameraChanges()"
		],
		"scope": "lua",
		"prefix": "DisableRockstarEditorCameraChanges"
	},
	"DisableScreenblurFade": {
		"body": [
			"DisableScreenblurFade()"
		],
		"scope": "lua",
		"prefix": "DisableScreenblurFade"
	},
	"DisableScriptAmbientEffects": {
		"body": [
			"DisableScriptAmbientEffects(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DisableScriptAmbientEffects"
	},
	"DisableScriptBrainSet": {
		"body": [
			"DisableScriptBrainSet(${1:brainSet})"
		],
		"scope": "lua",
		"prefix": "DisableScriptBrainSet"
	},
	"DisableStuntJumpSet": {
		"body": [
			"DisableStuntJumpSet(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DisableStuntJumpSet"
	},
	"DisableSwitchOutroFx": {
		"body": [
			"DisableSwitchOutroFx()"
		],
		"scope": "lua",
		"prefix": "DisableSwitchOutroFx"
	},
	"DisableVehicleDistantlights": {
		"body": [
			"DisableVehicleDistantlights(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "DisableVehicleDistantlights"
	},
	"DisableVehicleFirstPersonCamThisFrame": {
		"body": [
			"DisableVehicleFirstPersonCamThisFrame()"
		],
		"scope": "lua",
		"prefix": "DisableVehicleFirstPersonCamThisFrame"
	},
	"DisableVehicleNeonLights": {
		"body": [
			"DisableVehicleNeonLights(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "DisableVehicleNeonLights"
	},
	"DisableVehicleTurretMovementThisFrame": {
		"body": [
			"DisableVehicleTurretMovementThisFrame(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "DisableVehicleTurretMovementThisFrame"
	},
	"DisableVehicleWeapon": {
		"body": [
			"DisableVehicleWeapon(${1:disabled}, ${2:weaponHash}, ${3:vehicle}, ${4:owner})"
		],
		"scope": "lua",
		"prefix": "DisableVehicleWeapon"
	},
	"DisableVehicleWorldCollision": {
		"body": [
			"DisableVehicleWorldCollision(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "DisableVehicleWorldCollision"
	},
	"DisplayAmmoThisFrame": {
		"body": [
			"DisplayAmmoThisFrame(${1:display})"
		],
		"scope": "lua",
		"prefix": "DisplayAmmoThisFrame"
	},
	"DisplayAreaName": {
		"body": [
			"DisplayAreaName(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "DisplayAreaName"
	},
	"DisplayCash": {
		"body": [
			"DisplayCash(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "DisplayCash"
	},
	"DisplayHelpTextThisFrame": {
		"body": [
			"DisplayHelpTextThisFrame(${1:message}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "DisplayHelpTextThisFrame"
	},
	"DisplayHud": {
		"body": [
			"DisplayHud(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "DisplayHud"
	},
	"DisplayHudWhenDeadThisFrame": {
		"body": [
			"DisplayHudWhenDeadThisFrame()"
		],
		"scope": "lua",
		"prefix": "DisplayHudWhenDeadThisFrame"
	},
	"DisplayHudWhenPausedThisFrame": {
		"body": [
			"DisplayHudWhenPausedThisFrame()"
		],
		"scope": "lua",
		"prefix": "DisplayHudWhenPausedThisFrame"
	},
	"DisplayOnscreenKeyboard": {
		"body": [
			"DisplayOnscreenKeyboard(${1:p0}, ${2:windowTitle}, ${3:p2}, ${4:defaultText}, ${5:defaultConcat1}, ${6:defaultConcat2}, ${7:defaultConcat3}, ${8:maxInputLength})"
		],
		"scope": "lua",
		"prefix": "DisplayOnscreenKeyboard"
	},
	"DisplayOnscreenKeyboardWithLongerInitialString": {
		"body": [
			"DisplayOnscreenKeyboardWithLongerInitialString(${1:p0}, ${2:windowTitle}, ${3:defaultText}, ${4:defaultConcat1}, ${5:defaultConcat2}, ${6:defaultConcat3}, ${7:defaultConcat4}, ${8:defaultConcat5}, ${9:defaultConcat6}, ${10:defaultConcat7}, ${11:maxInputLength})"
		],
		"scope": "lua",
		"prefix": "DisplayOnscreenKeyboardWithLongerInitialString"
	},
	"DisplayPlayerNameTagsOnBlips": {
		"body": [
			"DisplayPlayerNameTagsOnBlips(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "DisplayPlayerNameTagsOnBlips"
	},
	"DisplayRadar": {
		"body": [
			"DisplayRadar(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "DisplayRadar"
	},
	"DisplaySniperScopeThisFrame": {
		"body": [
			"DisplaySniperScopeThisFrame()"
		],
		"scope": "lua",
		"prefix": "DisplaySniperScopeThisFrame"
	},
	"DisplaySystemSigninUi": {
		"body": [
			"DisplaySystemSigninUi(${1:unk})"
		],
		"scope": "lua",
		"prefix": "DisplaySystemSigninUi"
	},
	"DisposeSynchronizedScene": {
		"body": [
			"DisposeSynchronizedScene(${1:scene})"
		],
		"scope": "lua",
		"prefix": "DisposeSynchronizedScene"
	},
	"DistantCopCarSirens": {
		"body": [
			"DistantCopCarSirens(${1:value})"
		],
		"scope": "lua",
		"prefix": "DistantCopCarSirens"
	},
	"DoAutoSave": {
		"body": [
			"DoAutoSave()"
		],
		"scope": "lua",
		"prefix": "DoAutoSave"
	},
	"DoesAirDefenseZoneExist": {
		"body": [
			"DoesAirDefenseZoneExist(${1:zoneId})"
		],
		"scope": "lua",
		"prefix": "DoesAirDefenseZoneExist"
	},
	"DoesAnimDictExist": {
		"body": [
			"DoesAnimDictExist(${1:animDict})"
		],
		"scope": "lua",
		"prefix": "DoesAnimDictExist"
	},
	"DoesBlipExist": {
		"body": [
			"DoesBlipExist(${1:blip})"
		],
		"scope": "lua",
		"prefix": "DoesBlipExist"
	},
	"DoesBlipHaveGpsRoute": {
		"body": [
			"DoesBlipHaveGpsRoute(${1:blip})"
		],
		"scope": "lua",
		"prefix": "DoesBlipHaveGpsRoute"
	},
	"DoesCamExist": {
		"body": [
			"DoesCamExist(${1:cam})"
		],
		"scope": "lua",
		"prefix": "DoesCamExist"
	},
	"DoesCargobobHavePickupMagnet": {
		"body": [
			"DoesCargobobHavePickupMagnet(${1:cargobob})"
		],
		"scope": "lua",
		"prefix": "DoesCargobobHavePickupMagnet"
	},
	"DoesCargobobHavePickUpRope": {
		"body": [
			"DoesCargobobHavePickUpRope(${1:cargobob})"
		],
		"scope": "lua",
		"prefix": "DoesCargobobHavePickUpRope"
	},
	"DoesCutsceneEntityExist": {
		"body": [
			"DoesCutsceneEntityExist(${1:cutsceneEntName}, ${2:modelHash})"
		],
		"scope": "lua",
		"prefix": "DoesCutsceneEntityExist"
	},
	"DoesEntityBelongToThisScript": {
		"body": [
			"DoesEntityBelongToThisScript(${1:entity}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "DoesEntityBelongToThisScript"
	},
	"DoesEntityExist": {
		"body": [
			"DoesEntityExist(${1:entity})"
		],
		"scope": "lua",
		"prefix": "DoesEntityExist"
	},
	"DoesEntityHaveDrawable": {
		"body": [
			"DoesEntityHaveDrawable(${1:entity})"
		],
		"scope": "lua",
		"prefix": "DoesEntityHaveDrawable"
	},
	"DoesEntityHavePhysics": {
		"body": [
			"DoesEntityHavePhysics(${1:entity})"
		],
		"scope": "lua",
		"prefix": "DoesEntityHavePhysics"
	},
	"DoesExtraExist": {
		"body": [
			"DoesExtraExist(${1:vehicle}, ${2:extraId})"
		],
		"scope": "lua",
		"prefix": "DoesExtraExist"
	},
	"DoesGroupExist": {
		"body": [
			"DoesGroupExist(${1:groupId})"
		],
		"scope": "lua",
		"prefix": "DoesGroupExist"
	},
	"DoesNavmeshBlockingObjectExist": {
		"body": [
			"DoesNavmeshBlockingObjectExist(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DoesNavmeshBlockingObjectExist"
	},
	"DoesObjectOfTypeExistAtCoords": {
		"body": [
			"DoesObjectOfTypeExistAtCoords(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:hash}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "DoesObjectOfTypeExistAtCoords"
	},
	"DoesParticleFxLoopedExist": {
		"body": [
			"DoesParticleFxLoopedExist(${1:ptfxHandle})"
		],
		"scope": "lua",
		"prefix": "DoesParticleFxLoopedExist"
	},
	"DoesPedHaveAiBlip": {
		"body": [
			"DoesPedHaveAiBlip(${1:ped})"
		],
		"scope": "lua",
		"prefix": "DoesPedHaveAiBlip"
	},
	"DoesPickupExist": {
		"body": [
			"DoesPickupExist(${1:pickup})"
		],
		"scope": "lua",
		"prefix": "DoesPickupExist"
	},
	"DoesPickupObjectExist": {
		"body": [
			"DoesPickupObjectExist(${1:pickupObject})"
		],
		"scope": "lua",
		"prefix": "DoesPickupObjectExist"
	},
	"DoesPickupOfTypeExistInArea": {
		"body": [
			"DoesPickupOfTypeExistInArea(${1:pickupHash}, ${2:x}, ${3:y}, ${4:z}, ${5:radius})"
		],
		"scope": "lua",
		"prefix": "DoesPickupOfTypeExistInArea"
	},
	"DoesPlayerOwnSku": {
		"body": [
			"DoesPlayerOwnSku(${1:playerSrc}, ${2:skuId})"
		],
		"scope": "lua",
		"prefix": "DoesPlayerOwnSku"
	},
	"DoesPlayerOwnSkuExt": {
		"body": [
			"DoesPlayerOwnSkuExt(${1:playerSrc}, ${2:skuId})"
		],
		"scope": "lua",
		"prefix": "DoesPlayerOwnSkuExt"
	},
	"DoesPlayerVehHaveRadio": {
		"body": [
			"DoesPlayerVehHaveRadio()"
		],
		"scope": "lua",
		"prefix": "DoesPlayerVehHaveRadio"
	},
	"DoesPopMultiplierAreaExist": {
		"body": [
			"DoesPopMultiplierAreaExist(${1:id})"
		],
		"scope": "lua",
		"prefix": "DoesPopMultiplierAreaExist"
	},
	"DoesPopMultiplierSphereExist": {
		"body": [
			"DoesPopMultiplierSphereExist(${1:id})"
		],
		"scope": "lua",
		"prefix": "DoesPopMultiplierSphereExist"
	},
	"DoesRayfireMapObjectExist": {
		"body": [
			"DoesRayfireMapObjectExist(${1:object})"
		],
		"scope": "lua",
		"prefix": "DoesRayfireMapObjectExist"
	},
	"DoesRelationshipGroupExist": {
		"body": [
			"DoesRelationshipGroupExist(${1:groupHash})"
		],
		"scope": "lua",
		"prefix": "DoesRelationshipGroupExist"
	},
	"DoesRopeBelongToThisScript": {
		"body": [
			"DoesRopeBelongToThisScript(${1:ropeId})"
		],
		"scope": "lua",
		"prefix": "DoesRopeBelongToThisScript"
	},
	"DoesRopeExist": {
		"body": [
			"DoesRopeExist(${1:ropeId})"
		],
		"scope": "lua",
		"prefix": "DoesRopeExist"
	},
	"DoesScenarioBlockingAreaExist": {
		"body": [
			"DoesScenarioBlockingAreaExist(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2})"
		],
		"scope": "lua",
		"prefix": "DoesScenarioBlockingAreaExist"
	},
	"DoesScenarioExistInArea": {
		"body": [
			"DoesScenarioExistInArea(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:b})"
		],
		"scope": "lua",
		"prefix": "DoesScenarioExistInArea"
	},
	"DoesScenarioGroupExist": {
		"body": [
			"DoesScenarioGroupExist(${1:scenarioGroup})"
		],
		"scope": "lua",
		"prefix": "DoesScenarioGroupExist"
	},
	"DoesScenarioOfTypeExistInArea": {
		"body": [
			"DoesScenarioOfTypeExistInArea(${1:p0}, ${2:p1}, ${3:p2}, ${4:p4}, ${5:p5})"
		],
		"scope": "lua",
		"prefix": "DoesScenarioOfTypeExistInArea"
	},
	"DoesScriptedCoverPointExistAtCoords": {
		"body": [
			"DoesScriptedCoverPointExistAtCoords(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "DoesScriptedCoverPointExistAtCoords"
	},
	"DoesScriptExist": {
		"body": [
			"DoesScriptExist(${1:scriptName})"
		],
		"scope": "lua",
		"prefix": "DoesScriptExist"
	},
	"DoesScriptVehicleGeneratorExist": {
		"body": [
			"DoesScriptVehicleGeneratorExist(${1:vehicleGenerator})"
		],
		"scope": "lua",
		"prefix": "DoesScriptVehicleGeneratorExist"
	},
	"DoesScriptWithNameHashExist": {
		"body": [
			"DoesScriptWithNameHashExist(${1:scriptHash})"
		],
		"scope": "lua",
		"prefix": "DoesScriptWithNameHashExist"
	},
	"DoesShopPedApparelHaveRestrictionTag": {
		"body": [
			"DoesShopPedApparelHaveRestrictionTag(${1:componentHash}, ${2:restrictionTagHash}, ${3:componentId})"
		],
		"scope": "lua",
		"prefix": "DoesShopPedApparelHaveRestrictionTag"
	},
	"DoesTextBlockExist": {
		"body": [
			"DoesTextBlockExist(${1:gxt})"
		],
		"scope": "lua",
		"prefix": "DoesTextBlockExist"
	},
	"DoesTextLabelExist": {
		"body": [
			"DoesTextLabelExist(${1:gxt})"
		],
		"scope": "lua",
		"prefix": "DoesTextLabelExist"
	},
	"DoesVehicleAllowRappel": {
		"body": [
			"DoesVehicleAllowRappel(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "DoesVehicleAllowRappel"
	},
	"DoesVehicleExistWithDecorator": {
		"body": [
			"DoesVehicleExistWithDecorator(${1:decorator})"
		],
		"scope": "lua",
		"prefix": "DoesVehicleExistWithDecorator"
	},
	"DoesVehicleHaveCrewEmblem": {
		"body": [
			"DoesVehicleHaveCrewEmblem(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "DoesVehicleHaveCrewEmblem"
	},
	"DoesVehicleHaveLandingGear": {
		"body": [
			"DoesVehicleHaveLandingGear(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "DoesVehicleHaveLandingGear"
	},
	"DoesVehicleHaveRoof": {
		"body": [
			"DoesVehicleHaveRoof(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "DoesVehicleHaveRoof"
	},
	"DoesVehicleHaveSearchlight": {
		"body": [
			"DoesVehicleHaveSearchlight(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "DoesVehicleHaveSearchlight"
	},
	"DoesVehicleHaveStuckVehicleCheck": {
		"body": [
			"DoesVehicleHaveStuckVehicleCheck(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "DoesVehicleHaveStuckVehicleCheck"
	},
	"DoesVehicleHaveWeapons": {
		"body": [
			"DoesVehicleHaveWeapons(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "DoesVehicleHaveWeapons"
	},
	"DoesVehicleTyreExist": {
		"body": [
			"DoesVehicleTyreExist(${1:vehicle}, ${2:tyreIndex})"
		],
		"scope": "lua",
		"prefix": "DoesVehicleTyreExist"
	},
	"DoesWeaponTakeWeaponComponent": {
		"body": [
			"DoesWeaponTakeWeaponComponent(${1:weaponHash}, ${2:componentHash})"
		],
		"scope": "lua",
		"prefix": "DoesWeaponTakeWeaponComponent"
	},
	"DontRenderInGameUi": {
		"body": [
			"DontRenderInGameUi(${1:p0})"
		],
		"scope": "lua",
		"prefix": "DontRenderInGameUi"
	},
	"DontTiltMinimapThisFrame": {
		"body": [
			"DontTiltMinimapThisFrame()"
		],
		"scope": "lua",
		"prefix": "DontTiltMinimapThisFrame"
	},
	"DoorControl": {
		"body": [
			"DoorControl(${1:modelHash}, ${2:x}, ${3:y}, ${4:z}, ${5:locked}, ${6:xRotMult}, ${7:yRotMult}, ${8:zRotMult})"
		],
		"scope": "lua",
		"prefix": "DoorControl"
	},
	"DoorSystemFindExistingDoor": {
		"body": [
			"DoorSystemFindExistingDoor(${1:x}, ${2:y}, ${3:z}, ${4:modelHash}, ${5:doorOutPointer})"
		],
		"scope": "lua",
		"prefix": "DoorSystemFindExistingDoor"
	},
	"DoorSystemGetActive": {
		"body": [
			"DoorSystemGetActive()"
		],
		"scope": "lua",
		"prefix": "DoorSystemGetActive"
	},
	"DoorSystemGetDoorPendingState": {
		"body": [
			"DoorSystemGetDoorPendingState(${1:doorHash})"
		],
		"scope": "lua",
		"prefix": "DoorSystemGetDoorPendingState"
	},
	"DoorSystemGetDoorState": {
		"body": [
			"DoorSystemGetDoorState(${1:doorHash})"
		],
		"scope": "lua",
		"prefix": "DoorSystemGetDoorState"
	},
	"DoorSystemGetIsPhysicsLoaded": {
		"body": [
			"DoorSystemGetIsPhysicsLoaded(${1:doorHash})"
		],
		"scope": "lua",
		"prefix": "DoorSystemGetIsPhysicsLoaded"
	},
	"DoorSystemGetOpenRatio": {
		"body": [
			"DoorSystemGetOpenRatio(${1:doorHash})"
		],
		"scope": "lua",
		"prefix": "DoorSystemGetOpenRatio"
	},
	"DoorSystemGetSize": {
		"body": [
			"DoorSystemGetSize()"
		],
		"scope": "lua",
		"prefix": "DoorSystemGetSize"
	},
	"DoorSystemSetAutomaticDistance": {
		"body": [
			"DoorSystemSetAutomaticDistance(${1:doorHash}, ${2:distance}, ${3:requestDoor}, ${4:forceUpdate})"
		],
		"scope": "lua",
		"prefix": "DoorSystemSetAutomaticDistance"
	},
	"DoorSystemSetAutomaticRate": {
		"body": [
			"DoorSystemSetAutomaticRate(${1:doorHash}, ${2:rate}, ${3:requestDoor}, ${4:forceUpdate})"
		],
		"scope": "lua",
		"prefix": "DoorSystemSetAutomaticRate"
	},
	"DoorSystemSetDoorState": {
		"body": [
			"DoorSystemSetDoorState(${1:doorHash}, ${2:state}, ${3:requestDoor}, ${4:forceUpdate})"
		],
		"scope": "lua",
		"prefix": "DoorSystemSetDoorState"
	},
	"DoorSystemSetHoldOpen": {
		"body": [
			"DoorSystemSetHoldOpen(${1:doorHash}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "DoorSystemSetHoldOpen"
	},
	"DoorSystemSetOpenRatio": {
		"body": [
			"DoorSystemSetOpenRatio(${1:doorHash}, ${2:ajar}, ${3:requestDoor}, ${4:forceUpdate})"
		],
		"scope": "lua",
		"prefix": "DoorSystemSetOpenRatio"
	},
	"DoorSystemSetSpringRemoved": {
		"body": [
			"DoorSystemSetSpringRemoved(${1:doorHash}, ${2:removed}, ${3:requestDoor}, ${4:forceUpdate})"
		],
		"scope": "lua",
		"prefix": "DoorSystemSetSpringRemoved"
	},
	"DoScreenFadeIn": {
		"body": [
			"DoScreenFadeIn(${1:duration})"
		],
		"scope": "lua",
		"prefix": "DoScreenFadeIn"
	},
	"DoScreenFadeOut": {
		"body": [
			"DoScreenFadeOut(${1:duration})"
		],
		"scope": "lua",
		"prefix": "DoScreenFadeOut"
	},
	"DrawBinkMovie": {
		"body": [
			"DrawBinkMovie(${1:binkMovie}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:r}, ${8:g}, ${9:b}, ${10:a})"
		],
		"scope": "lua",
		"prefix": "DrawBinkMovie"
	},
	"DrawBox": {
		"body": [
			"DrawBox(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:red}, ${8:green}, ${9:blue}, ${10:alpha})"
		],
		"scope": "lua",
		"prefix": "DrawBox"
	},
	"DrawDebugBox": {
		"body": [
			"DrawDebugBox(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:r}, ${8:g}, ${9:b}, ${10:a})"
		],
		"scope": "lua",
		"prefix": "DrawDebugBox"
	},
	"DrawDebugCross": {
		"body": [
			"DrawDebugCross(${1:x}, ${2:y}, ${3:z}, ${4:size}, ${5:red}, ${6:green}, ${7:blue}, ${8:alpha})"
		],
		"scope": "lua",
		"prefix": "DrawDebugCross"
	},
	"DrawDebugLine": {
		"body": [
			"DrawDebugLine(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:r}, ${8:g}, ${9:b}, ${10:a})"
		],
		"scope": "lua",
		"prefix": "DrawDebugLine"
	},
	"DrawDebugLineWithTwoColours": {
		"body": [
			"DrawDebugLineWithTwoColours(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:r1}, ${8:g1}, ${9:b1}, ${10:r2}, ${11:g2}, ${12:b2}, ${13:alpha1}, ${14:alpha2})"
		],
		"scope": "lua",
		"prefix": "DrawDebugLineWithTwoColours"
	},
	"DrawDebugSphere": {
		"body": [
			"DrawDebugSphere(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:red}, ${6:green}, ${7:blue}, ${8:alpha})"
		],
		"scope": "lua",
		"prefix": "DrawDebugSphere"
	},
	"DrawDebugText": {
		"body": [
			"DrawDebugText(${1:text}, ${2:x}, ${3:y}, ${4:z}, ${5:red}, ${6:green}, ${7:blue}, ${8:alpha})"
		],
		"scope": "lua",
		"prefix": "DrawDebugText"
	},
	"DrawDebugText_2d": {
		"body": [
			"DrawDebugText_2d(${1:text}, ${2:x}, ${3:y}, ${4:z}, ${5:red}, ${6:green}, ${7:blue}, ${8:alpha})"
		],
		"scope": "lua",
		"prefix": "DrawDebugText_2d"
	},
	"DrawGizmo": {
		"body": [
			"DrawGizmo(${1:matrixPtr}, ${2:id})"
		],
		"scope": "lua",
		"prefix": "DrawGizmo"
	},
	"DrawInteractiveSprite": {
		"body": [
			"DrawInteractiveSprite(${1:textureDict}, ${2:textureName}, ${3:screenX}, ${4:screenY}, ${5:width}, ${6:height}, ${7:heading}, ${8:red}, ${9:green}, ${10:blue}, ${11:alpha})"
		],
		"scope": "lua",
		"prefix": "DrawInteractiveSprite"
	},
	"DrawLightWithRange": {
		"body": [
			"DrawLightWithRange(${1:posX}, ${2:posY}, ${3:posZ}, ${4:colorR}, ${5:colorG}, ${6:colorB}, ${7:range}, ${8:intensity})"
		],
		"scope": "lua",
		"prefix": "DrawLightWithRange"
	},
	"DrawLightWithRangeAndShadow": {
		"body": [
			"DrawLightWithRangeAndShadow(${1:x}, ${2:y}, ${3:z}, ${4:r}, ${5:g}, ${6:b}, ${7:range}, ${8:intensity}, ${9:shadow})"
		],
		"scope": "lua",
		"prefix": "DrawLightWithRangeAndShadow"
	},
	"DrawLine": {
		"body": [
			"DrawLine(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:red}, ${8:green}, ${9:blue}, ${10:alpha})"
		],
		"scope": "lua",
		"prefix": "DrawLine"
	},
	"DrawLowQualityPhotoToPhone": {
		"body": [
			"DrawLowQualityPhotoToPhone(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "DrawLowQualityPhotoToPhone"
	},
	"DrawMarker": {
		"body": [
			"DrawMarker(${1:type}, ${2:posX}, ${3:posY}, ${4:posZ}, ${5:dirX}, ${6:dirY}, ${7:dirZ}, ${8:rotX}, ${9:rotY}, ${10:rotZ}, ${11:scaleX}, ${12:scaleY}, ${13:scaleZ}, ${14:red}, ${15:green}, ${16:blue}, ${17:alpha}, ${18:bobUpAndDown}, ${19:faceCamera}, ${20:p19}, ${21:rotate}, ${22:textureDict}, ${23:textureName}, ${24:drawOnEnts})"
		],
		"scope": "lua",
		"prefix": "DrawMarker"
	},
	"DrawMarker_2": {
		"body": [
			"DrawMarker_2(${1:type}, ${2:posX}, ${3:posY}, ${4:posZ}, ${5:dirX}, ${6:dirY}, ${7:dirZ}, ${8:rotX}, ${9:rotY}, ${10:rotZ}, ${11:scaleX}, ${12:scaleY}, ${13:scaleZ}, ${14:red}, ${15:green}, ${16:blue}, ${17:alpha}, ${18:bobUpAndDown}, ${19:faceCamera}, ${20:p19}, ${21:rotate}, ${22:textureDict}, ${23:textureName}, ${24:drawOnEnts}, ${25:p24})"
		],
		"scope": "lua",
		"prefix": "DrawMarker_2"
	},
	"DrawPoly": {
		"body": [
			"DrawPoly(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:x3}, ${8:y3}, ${9:z3}, ${10:red}, ${11:green}, ${12:blue}, ${13:alpha})"
		],
		"scope": "lua",
		"prefix": "DrawPoly"
	},
	"DrawRect": {
		"body": [
			"DrawRect(${1:x}, ${2:y}, ${3:width}, ${4:height}, ${5:r}, ${6:g}, ${7:b}, ${8:a})"
		],
		"scope": "lua",
		"prefix": "DrawRect"
	},
	"DrawScaleformMovie": {
		"body": [
			"DrawScaleformMovie(${1:scaleformHandle}, ${2:x}, ${3:y}, ${4:width}, ${5:height}, ${6:red}, ${7:green}, ${8:blue}, ${9:alpha}, ${10:unk})"
		],
		"scope": "lua",
		"prefix": "DrawScaleformMovie"
	},
	"DrawScaleformMovie_3d": {
		"body": [
			"DrawScaleformMovie_3d(${1:scaleform}, ${2:posX}, ${3:posY}, ${4:posZ}, ${5:rotX}, ${6:rotY}, ${7:rotZ}, ${8:p7}, ${9:sharpness}, ${10:p9}, ${11:scaleX}, ${12:scaleY}, ${13:scaleZ}, ${14:p13})"
		],
		"scope": "lua",
		"prefix": "DrawScaleformMovie_3d"
	},
	"DrawScaleformMovie_3dSolid": {
		"body": [
			"DrawScaleformMovie_3dSolid(${1:scaleform}, ${2:posX}, ${3:posY}, ${4:posZ}, ${5:rotX}, ${6:rotY}, ${7:rotZ}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:scaleX}, ${12:scaleY}, ${13:scaleZ}, ${14:p13})"
		],
		"scope": "lua",
		"prefix": "DrawScaleformMovie_3dSolid"
	},
	"DrawScaleformMovieFullscreen": {
		"body": [
			"DrawScaleformMovieFullscreen(${1:scaleform}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha}, ${6:unk})"
		],
		"scope": "lua",
		"prefix": "DrawScaleformMovieFullscreen"
	},
	"DrawScaleformMovieFullscreenMasked": {
		"body": [
			"DrawScaleformMovieFullscreenMasked(${1:scaleform1}, ${2:scaleform2}, ${3:red}, ${4:green}, ${5:blue}, ${6:alpha})"
		],
		"scope": "lua",
		"prefix": "DrawScaleformMovieFullscreenMasked"
	},
	"DrawShowroom": {
		"body": [
			"DrawShowroom(${1:p0}, ${2:ped}, ${3:p2}, ${4:posX}, ${5:posY}, ${6:posZ})"
		],
		"scope": "lua",
		"prefix": "DrawShowroom"
	},
	"DrawSphere": {
		"body": [
			"DrawSphere(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:r}, ${6:g}, ${7:b}, ${8:opacity})"
		],
		"scope": "lua",
		"prefix": "DrawSphere"
	},
	"DrawSpotLight": {
		"body": [
			"DrawSpotLight(${1:posX}, ${2:posY}, ${3:posZ}, ${4:dirX}, ${5:dirY}, ${6:dirZ}, ${7:colorR}, ${8:colorG}, ${9:colorB}, ${10:distance}, ${11:brightness}, ${12:hardness}, ${13:radius}, ${14:falloff})"
		],
		"scope": "lua",
		"prefix": "DrawSpotLight"
	},
	"DrawSpotLightWithShadow": {
		"body": [
			"DrawSpotLightWithShadow(${1:posX}, ${2:posY}, ${3:posZ}, ${4:dirX}, ${5:dirY}, ${6:dirZ}, ${7:colorR}, ${8:colorG}, ${9:colorB}, ${10:distance}, ${11:brightness}, ${12:roundness}, ${13:radius}, ${14:falloff}, ${15:shadowId})"
		],
		"scope": "lua",
		"prefix": "DrawSpotLightWithShadow"
	},
	"DrawSprite": {
		"body": [
			"DrawSprite(${1:textureDict}, ${2:textureName}, ${3:screenX}, ${4:screenY}, ${5:width}, ${6:height}, ${7:heading}, ${8:red}, ${9:green}, ${10:blue}, ${11:alpha})"
		],
		"scope": "lua",
		"prefix": "DrawSprite"
	},
	"DrawSpritePoly": {
		"body": [
			"DrawSpritePoly(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:x3}, ${8:y3}, ${9:z3}, ${10:red}, ${11:green}, ${12:blue}, ${13:alpha}, ${14:textureDict}, ${15:textureName}, ${16:u1}, ${17:v1}, ${18:w1}, ${19:u2}, ${20:v2}, ${21:w2}, ${22:u3}, ${23:v3}, ${24:w3})"
		],
		"scope": "lua",
		"prefix": "DrawSpritePoly"
	},
	"DrawSpritePoly_2": {
		"body": [
			"DrawSpritePoly_2(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:x3}, ${8:y3}, ${9:z3}, ${10:red1}, ${11:green1}, ${12:blue1}, ${13:alpha1}, ${14:red2}, ${15:green2}, ${16:blue2}, ${17:alpha2}, ${18:red3}, ${19:green3}, ${20:blue3}, ${21:alpha3}, ${22:textureDict}, ${23:textureName}, ${24:u1}, ${25:v1}, ${26:w1}, ${27:u2}, ${28:v2}, ${29:w2}, ${30:u3}, ${31:v3}, ${32:w3})"
		],
		"scope": "lua",
		"prefix": "DrawSpritePoly_2"
	},
	"DrawSpriteUv": {
		"body": [
			"DrawSpriteUv(${1:textureDict}, ${2:textureName}, ${3:x}, ${4:y}, ${5:width}, ${6:height}, ${7:u1}, ${8:v1}, ${9:u2}, ${10:v2}, ${11:heading}, ${12:red}, ${13:green}, ${14:blue}, ${15:alpha})"
		],
		"scope": "lua",
		"prefix": "DrawSpriteUv"
	},
	"DrawText": {
		"body": [
			"DrawText(${1:x}, ${2:y})"
		],
		"scope": "lua",
		"prefix": "DrawText"
	},
	"DrawTvChannel": {
		"body": [
			"DrawTvChannel(${1:xPos}, ${2:yPos}, ${3:xScale}, ${4:yScale}, ${5:rotation}, ${6:red}, ${7:green}, ${8:blue}, ${9:alpha})"
		],
		"scope": "lua",
		"prefix": "DrawTvChannel"
	},
	"DropAmbientProp": {
		"body": [
			"DropAmbientProp(${1:ped})"
		],
		"scope": "lua",
		"prefix": "DropAmbientProp"
	},
	"DropPlayer": {
		"body": [
			"DropPlayer(${1:playerSrc}, ${2:reason})"
		],
		"scope": "lua",
		"prefix": "DropPlayer"
	},
	"DuplicateFunctionReference": {
		"body": [
			"DuplicateFunctionReference(${1:referenceIdentity})"
		],
		"scope": "lua",
		"prefix": "DuplicateFunctionReference"
	},
	"EjectJb700Roof": {
		"body": [
			"EjectJb700Roof(${1:vehicle}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "EjectJb700Roof"
	},
	"EnableAlienBloodVfx": {
		"body": [
			"EnableAlienBloodVfx(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "EnableAlienBloodVfx"
	},
	"EnableAllControlActions": {
		"body": [
			"EnableAllControlActions(${1:padIndex})"
		],
		"scope": "lua",
		"prefix": "EnableAllControlActions"
	},
	"EnableClownBloodVfx": {
		"body": [
			"EnableClownBloodVfx(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "EnableClownBloodVfx"
	},
	"EnableControlAction": {
		"body": [
			"EnableControlAction(${1:padIndex}, ${2:control}, ${3:enable})"
		],
		"scope": "lua",
		"prefix": "EnableControlAction"
	},
	"EnableCrosshairThisFrame": {
		"body": [
			"EnableCrosshairThisFrame()"
		],
		"scope": "lua",
		"prefix": "EnableCrosshairThisFrame"
	},
	"EnableDispatchService": {
		"body": [
			"EnableDispatchService(${1:dispatchService}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "EnableDispatchService"
	},
	"EnableEditorRuntime": {
		"body": [
			"EnableEditorRuntime()"
		],
		"scope": "lua",
		"prefix": "EnableEditorRuntime"
	},
	"EnableEnhancedHostSupport": {
		"body": [
			"EnableEnhancedHostSupport(${1:enabled})"
		],
		"scope": "lua",
		"prefix": "EnableEnhancedHostSupport"
	},
	"EnableEntityUnk": {
		"body": [
			"EnableEntityUnk(${1:entity})"
		],
		"scope": "lua",
		"prefix": "EnableEntityUnk"
	},
	"EnableExteriorCullModelThisFrame": {
		"body": [
			"EnableExteriorCullModelThisFrame(${1:mapObjectHash})"
		],
		"scope": "lua",
		"prefix": "EnableExteriorCullModelThisFrame"
	},
	"EnableLaserSightRendering": {
		"body": [
			"EnableLaserSightRendering(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "EnableLaserSightRendering"
	},
	"EnableMovieKeyframeWait": {
		"body": [
			"EnableMovieKeyframeWait(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "EnableMovieKeyframeWait"
	},
	"EnableMovieSubtitles": {
		"body": [
			"EnableMovieSubtitles(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "EnableMovieSubtitles"
	},
	"EnableSavingInGarage": {
		"body": [
			"EnableSavingInGarage(${1:garageHash}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "EnableSavingInGarage"
	},
	"EnableScriptBrainSet": {
		"body": [
			"EnableScriptBrainSet(${1:brainSet})"
		],
		"scope": "lua",
		"prefix": "EnableScriptBrainSet"
	},
	"EnableScriptCullModelThisFrame": {
		"body": [
			"EnableScriptCullModelThisFrame(${1:mapObjectHash})"
		],
		"scope": "lua",
		"prefix": "EnableScriptCullModelThisFrame"
	},
	"EnableSpecialAbility": {
		"body": [
			"EnableSpecialAbility(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "EnableSpecialAbility"
	},
	"EnableStallWarningSounds": {
		"body": [
			"EnableStallWarningSounds(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "EnableStallWarningSounds"
	},
	"EnableStuntJumpSet": {
		"body": [
			"EnableStuntJumpSet(${1:p0})"
		],
		"scope": "lua",
		"prefix": "EnableStuntJumpSet"
	},
	"EnableSwitchPauseBeforeDescent": {
		"body": [
			"EnableSwitchPauseBeforeDescent()"
		],
		"scope": "lua",
		"prefix": "EnableSwitchPauseBeforeDescent"
	},
	"EnableTennisMode": {
		"body": [
			"EnableTennisMode(${1:ped}, ${2:toggle}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "EnableTennisMode"
	},
	"EnableVehicleExhaustPops": {
		"body": [
			"EnableVehicleExhaustPops(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "EnableVehicleExhaustPops"
	},
	"EndFindKvp": {
		"body": [
			"EndFindKvp(${1:handle})"
		],
		"scope": "lua",
		"prefix": "EndFindKvp"
	},
	"EndFindObject": {
		"body": [
			"EndFindObject(${1:findHandle})"
		],
		"scope": "lua",
		"prefix": "EndFindObject"
	},
	"EndFindPed": {
		"body": [
			"EndFindPed(${1:findHandle})"
		],
		"scope": "lua",
		"prefix": "EndFindPed"
	},
	"EndFindPickup": {
		"body": [
			"EndFindPickup(${1:findHandle})"
		],
		"scope": "lua",
		"prefix": "EndFindPickup"
	},
	"EndFindVehicle": {
		"body": [
			"EndFindVehicle(${1:findHandle})"
		],
		"scope": "lua",
		"prefix": "EndFindVehicle"
	},
	"EndPetrolTrailDecals": {
		"body": [
			"EndPetrolTrailDecals()"
		],
		"scope": "lua",
		"prefix": "EndPetrolTrailDecals"
	},
	"EndReplayStats": {
		"body": [
			"EndReplayStats()"
		],
		"scope": "lua",
		"prefix": "EndReplayStats"
	},
	"EndScaleformMovieMethod": {
		"body": [
			"EndScaleformMovieMethod()"
		],
		"scope": "lua",
		"prefix": "EndScaleformMovieMethod"
	},
	"EndScaleformMovieMethodReturnValue": {
		"body": [
			"EndScaleformMovieMethodReturnValue()"
		],
		"scope": "lua",
		"prefix": "EndScaleformMovieMethodReturnValue"
	},
	"EndSrl": {
		"body": [
			"EndSrl()"
		],
		"scope": "lua",
		"prefix": "EndSrl"
	},
	"EndTextCommandBusyspinnerOn": {
		"body": [
			"EndTextCommandBusyspinnerOn(${1:busySpinnerType})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandBusyspinnerOn"
	},
	"EndTextCommandClearPrint": {
		"body": [
			"EndTextCommandClearPrint()"
		],
		"scope": "lua",
		"prefix": "EndTextCommandClearPrint"
	},
	"EndTextCommandDisplayHelp": {
		"body": [
			"EndTextCommandDisplayHelp(${1:p0}, ${2:loop}, ${3:beep}, ${4:shape})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandDisplayHelp"
	},
	"EndTextCommandDisplayText": {
		"body": [
			"EndTextCommandDisplayText(${1:x}, ${2:y})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandDisplayText"
	},
	"EndTextCommandGetWidth": {
		"body": [
			"EndTextCommandGetWidth(${1:p0})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandGetWidth"
	},
	"EndTextCommandIsMessageDisplayed": {
		"body": [
			"EndTextCommandIsMessageDisplayed()"
		],
		"scope": "lua",
		"prefix": "EndTextCommandIsMessageDisplayed"
	},
	"EndTextCommandIsThisHelpMessageBeingDisplayed": {
		"body": [
			"EndTextCommandIsThisHelpMessageBeingDisplayed(${1:p0})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandIsThisHelpMessageBeingDisplayed"
	},
	"EndTextCommandLineCount": {
		"body": [
			"EndTextCommandLineCount(${1:x}, ${2:y})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandLineCount"
	},
	"EndTextCommandObjective": {
		"body": [
			"EndTextCommandObjective(${1:p0})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandObjective"
	},
	"EndTextCommandOverrideButtonText": {
		"body": [
			"EndTextCommandOverrideButtonText(${1:p0})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandOverrideButtonText"
	},
	"EndTextCommandPrint": {
		"body": [
			"EndTextCommandPrint(${1:duration}, ${2:drawImmediately})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandPrint"
	},
	"EndTextCommandScaleformString": {
		"body": [
			"EndTextCommandScaleformString()"
		],
		"scope": "lua",
		"prefix": "EndTextCommandScaleformString"
	},
	"EndTextCommandScaleformString_2": {
		"body": [
			"EndTextCommandScaleformString_2()"
		],
		"scope": "lua",
		"prefix": "EndTextCommandScaleformString_2"
	},
	"EndTextCommandSetBlipName": {
		"body": [
			"EndTextCommandSetBlipName(${1:blip})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandSetBlipName"
	},
	"EndTextCommandThefeedPostAward": {
		"body": [
			"EndTextCommandThefeedPostAward(${1:textureDict}, ${2:textureName}, ${3:rpBonus}, ${4:colorOverlay}, ${5:titleLabel})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostAward"
	},
	"EndTextCommandThefeedPostCrewRankup": {
		"body": [
			"EndTextCommandThefeedPostCrewRankup(${1:chTitle}, ${2:clanTxd}, ${3:clanTxn}, ${4:isImportant}, ${5:showSubtitle})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostCrewRankup"
	},
	"EndTextCommandThefeedPostCrewtag": {
		"body": [
			"EndTextCommandThefeedPostCrewtag(${1:crewTypeIsPrivate}, ${2:crewTagContainsRockstar}, ${3:rank}, ${4:hasFounderStatus}, ${5:isImportant}, ${6:clanHandle}, ${7:r}, ${8:g}, ${9:b})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostCrewtag"
	},
	"EndTextCommandThefeedPostCrewtagWithGameName": {
		"body": [
			"EndTextCommandThefeedPostCrewtagWithGameName(${1:crewTypeIsPrivate}, ${2:crewTagContainsRockstar}, ${3:rank}, ${4:isLeader}, ${5:isImportant}, ${6:clanHandle}, ${7:gamerStr}, ${8:r}, ${9:g}, ${10:b})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostCrewtagWithGameName"
	},
	"EndTextCommandThefeedPostMessagetext": {
		"body": [
			"EndTextCommandThefeedPostMessagetext(${1:textureDict}, ${2:textureName}, ${3:flash}, ${4:iconType}, ${5:sender}, ${6:subject})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostMessagetext"
	},
	"EndTextCommandThefeedPostMessagetextGxtEntry": {
		"body": [
			"EndTextCommandThefeedPostMessagetextGxtEntry(${1:txdName}, ${2:textureName}, ${3:flash}, ${4:iconType}, ${5:sender}, ${6:subject})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostMessagetextGxtEntry"
	},
	"EndTextCommandThefeedPostMessagetextTu": {
		"body": [
			"EndTextCommandThefeedPostMessagetextTu(${1:picTxd}, ${2:picTxn}, ${3:flash}, ${4:iconType}, ${5:nameStr}, ${6:subtitleStr}, ${7:duration})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostMessagetextTu"
	},
	"EndTextCommandThefeedPostMessagetextWithCrewTag": {
		"body": [
			"EndTextCommandThefeedPostMessagetextWithCrewTag(${1:picTxd}, ${2:picTxn}, ${3:flash}, ${4:iconType}, ${5:nameStr}, ${6:subtitleStr}, ${7:duration}, ${8:crewPackedStr})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostMessagetextWithCrewTag"
	},
	"EndTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon": {
		"body": [
			"EndTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon(${1:picTxd}, ${2:picTxn}, ${3:flash}, ${4:iconType1}, ${5:nameStr}, ${6:subtitleStr}, ${7:duration}, ${8:crewPackedStr}, ${9:iconType2}, ${10:textColor})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon"
	},
	"EndTextCommandThefeedPostMpticker": {
		"body": [
			"EndTextCommandThefeedPostMpticker(${1:blink}, ${2:bHasTokens})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostMpticker"
	},
	"EndTextCommandThefeedPostReplayIcon": {
		"body": [
			"EndTextCommandThefeedPostReplayIcon(${1:eType}, ${2:iIcon}, ${3:sTitle})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostReplayIcon"
	},
	"EndTextCommandThefeedPostReplayInput": {
		"body": [
			"EndTextCommandThefeedPostReplayInput(${1:type}, ${2:button}, ${3:text})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostReplayInput"
	},
	"EndTextCommandThefeedPostStats": {
		"body": [
			"EndTextCommandThefeedPostStats(${1:statTitle}, ${2:iconEnum}, ${3:stepVal}, ${4:barValue}, ${5:isImportant}, ${6:picTxd}, ${7:picTxn})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostStats"
	},
	"EndTextCommandThefeedPostTicker": {
		"body": [
			"EndTextCommandThefeedPostTicker(${1:isImportant}, ${2:bHasTokens})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostTicker"
	},
	"EndTextCommandThefeedPostTickerForced": {
		"body": [
			"EndTextCommandThefeedPostTickerForced(${1:blink}, ${2:bHasTokens})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostTickerForced"
	},
	"EndTextCommandThefeedPostTickerWithTokens": {
		"body": [
			"EndTextCommandThefeedPostTickerWithTokens(${1:isImportant}, ${2:bHasTokens})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostTickerWithTokens"
	},
	"EndTextCommandThefeedPostUnlock": {
		"body": [
			"EndTextCommandThefeedPostUnlock(${1:chTitle}, ${2:iconType}, ${3:chSubtitle})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostUnlock"
	},
	"EndTextCommandThefeedPostUnlockTu": {
		"body": [
			"EndTextCommandThefeedPostUnlockTu(${1:chTitle}, ${2:iconType}, ${3:chSubtitle}, ${4:isImportant})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostUnlockTu"
	},
	"EndTextCommandThefeedPostUnlockTuWithColor": {
		"body": [
			"EndTextCommandThefeedPostUnlockTuWithColor(${1:chTitle}, ${2:iconType}, ${3:chSubtitle}, ${4:isImportant}, ${5:titleColor}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostUnlockTuWithColor"
	},
	"EndTextCommandThefeedPostVersusTu": {
		"body": [
			"EndTextCommandThefeedPostVersusTu(${1:ch1TXD}, ${2:ch1TXN}, ${3:val1}, ${4:ch2TXD}, ${5:ch2TXN}, ${6:val2})"
		],
		"scope": "lua",
		"prefix": "EndTextCommandThefeedPostVersusTu"
	},
	"EnsureEntityStateBag": {
		"body": [
			"EnsureEntityStateBag(${1:entity})"
		],
		"scope": "lua",
		"prefix": "EnsureEntityStateBag"
	},
	"EnterCursorMode": {
		"body": [
			"EnterCursorMode()"
		],
		"scope": "lua",
		"prefix": "EnterCursorMode"
	},
	"ExecuteCommand": {
		"body": [
			"ExecuteCommand(${1:commandString})"
		],
		"scope": "lua",
		"prefix": "ExecuteCommand"
	},
	"ExperimentalLoadCloneCreate": {
		"body": [
			"ExperimentalLoadCloneCreate(${1:data}, ${2:objectId}, ${3:tree})"
		],
		"scope": "lua",
		"prefix": "ExperimentalLoadCloneCreate"
	},
	"ExperimentalLoadCloneSync": {
		"body": [
			"ExperimentalLoadCloneSync(${1:entity}, ${2:data})"
		],
		"scope": "lua",
		"prefix": "ExperimentalLoadCloneSync"
	},
	"ExperimentalSaveCloneCreate": {
		"body": [
			"ExperimentalSaveCloneCreate(${1:entity})"
		],
		"scope": "lua",
		"prefix": "ExperimentalSaveCloneCreate"
	},
	"ExperimentalSaveCloneSync": {
		"body": [
			"ExperimentalSaveCloneSync(${1:entity})"
		],
		"scope": "lua",
		"prefix": "ExperimentalSaveCloneSync"
	},
	"ExplodePedHead": {
		"body": [
			"ExplodePedHead(${1:ped}, ${2:weaponHash})"
		],
		"scope": "lua",
		"prefix": "ExplodePedHead"
	},
	"ExplodeProjectiles": {
		"body": [
			"ExplodeProjectiles(${1:ped}, ${2:weaponHash}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "ExplodeProjectiles"
	},
	"ExplodeVehicle": {
		"body": [
			"ExplodeVehicle(${1:vehicle}, ${2:isAudible}, ${3:isInvisible})"
		],
		"scope": "lua",
		"prefix": "ExplodeVehicle"
	},
	"ExplodeVehicleInCutscene": {
		"body": [
			"ExplodeVehicleInCutscene(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "ExplodeVehicleInCutscene"
	},
	"ExtendWorldBoundaryForPlayer": {
		"body": [
			"ExtendWorldBoundaryForPlayer(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "ExtendWorldBoundaryForPlayer"
	},
	"FacebookDoUnkCheck": {
		"body": [
			"FacebookDoUnkCheck()"
		],
		"scope": "lua",
		"prefix": "FacebookDoUnkCheck"
	},
	"FacebookIsAvailable": {
		"body": [
			"FacebookIsAvailable()"
		],
		"scope": "lua",
		"prefix": "FacebookIsAvailable"
	},
	"FacebookIsSendingData": {
		"body": [
			"FacebookIsSendingData()"
		],
		"scope": "lua",
		"prefix": "FacebookIsSendingData"
	},
	"FacebookSetCreateCharacterComplete": {
		"body": [
			"FacebookSetCreateCharacterComplete()"
		],
		"scope": "lua",
		"prefix": "FacebookSetCreateCharacterComplete"
	},
	"FacebookSetHeistComplete": {
		"body": [
			"FacebookSetHeistComplete(${1:heistName}, ${2:cashEarned}, ${3:xpEarned})"
		],
		"scope": "lua",
		"prefix": "FacebookSetHeistComplete"
	},
	"FacebookSetMilestoneComplete": {
		"body": [
			"FacebookSetMilestoneComplete(${1:milestoneId})"
		],
		"scope": "lua",
		"prefix": "FacebookSetMilestoneComplete"
	},
	"FadeDecalsInRange": {
		"body": [
			"FadeDecalsInRange(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:duration})"
		],
		"scope": "lua",
		"prefix": "FadeDecalsInRange"
	},
	"FadeOutLocalPlayer": {
		"body": [
			"FadeOutLocalPlayer(${1:p0})"
		],
		"scope": "lua",
		"prefix": "FadeOutLocalPlayer"
	},
	"FadeUpPedLight": {
		"body": [
			"FadeUpPedLight(${1:p0})"
		],
		"scope": "lua",
		"prefix": "FadeUpPedLight"
	},
	"FilloutPmPlayerList": {
		"body": [
			"FilloutPmPlayerList(${1:p1}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "FilloutPmPlayerList"
	},
	"FilloutPmPlayerListWithNames": {
		"body": [
			"FilloutPmPlayerListWithNames(${1:p2}, ${2:p3})"
		],
		"scope": "lua",
		"prefix": "FilloutPmPlayerListWithNames"
	},
	"FinalizeHeadBlend": {
		"body": [
			"FinalizeHeadBlend(${1:ped})"
		],
		"scope": "lua",
		"prefix": "FinalizeHeadBlend"
	},
	"FindAnimEventPhase": {
		"body": [
			"FindAnimEventPhase(${1:animDictionary}, ${2:animName}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "FindAnimEventPhase"
	},
	"FindFirstObject": {
		"body": [
			"FindFirstObject(${1:outEntity})"
		],
		"scope": "lua",
		"prefix": "FindFirstObject"
	},
	"FindFirstPed": {
		"body": [
			"FindFirstPed(${1:outEntity})"
		],
		"scope": "lua",
		"prefix": "FindFirstPed"
	},
	"FindFirstPickup": {
		"body": [
			"FindFirstPickup(${1:outEntity})"
		],
		"scope": "lua",
		"prefix": "FindFirstPickup"
	},
	"FindFirstVehicle": {
		"body": [
			"FindFirstVehicle(${1:outEntity})"
		],
		"scope": "lua",
		"prefix": "FindFirstVehicle"
	},
	"FindKvp": {
		"body": [
			"FindKvp(${1:handle})"
		],
		"scope": "lua",
		"prefix": "FindKvp"
	},
	"FindNextObject": {
		"body": [
			"FindNextObject(${1:findHandle}, ${2:outEntity})"
		],
		"scope": "lua",
		"prefix": "FindNextObject"
	},
	"FindNextPed": {
		"body": [
			"FindNextPed(${1:findHandle}, ${2:outEntity})"
		],
		"scope": "lua",
		"prefix": "FindNextPed"
	},
	"FindNextPickup": {
		"body": [
			"FindNextPickup(${1:findHandle}, ${2:outEntity})"
		],
		"scope": "lua",
		"prefix": "FindNextPickup"
	},
	"FindNextVehicle": {
		"body": [
			"FindNextVehicle(${1:findHandle}, ${2:outEntity})"
		],
		"scope": "lua",
		"prefix": "FindNextVehicle"
	},
	"FindRadioStationIndex": {
		"body": [
			"FindRadioStationIndex(${1:station})"
		],
		"scope": "lua",
		"prefix": "FindRadioStationIndex"
	},
	"FindRandomPointInSpace": {
		"body": [
			"FindRandomPointInSpace(${1:ped})"
		],
		"scope": "lua",
		"prefix": "FindRandomPointInSpace"
	},
	"FindSpawnPointInDirection": {
		"body": [
			"FindSpawnPointInDirection(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:distance}, ${8:spawnPoint})"
		],
		"scope": "lua",
		"prefix": "FindSpawnPointInDirection"
	},
	"FindVehicleCarryingThisEntity": {
		"body": [
			"FindVehicleCarryingThisEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "FindVehicleCarryingThisEntity"
	},
	"FireAirDefenseWeapon": {
		"body": [
			"FireAirDefenseWeapon(${1:zoneId}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "FireAirDefenseWeapon"
	},
	"FixVehicleWindow": {
		"body": [
			"FixVehicleWindow(${1:vehicle}, ${2:windowIndex})"
		],
		"scope": "lua",
		"prefix": "FixVehicleWindow"
	},
	"FlagPlayerContextInTournament": {
		"body": [
			"FlagPlayerContextInTournament(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "FlagPlayerContextInTournament"
	},
	"FlagServerAsPrivate": {
		"body": [
			"FlagServerAsPrivate(${1:private_})"
		],
		"scope": "lua",
		"prefix": "FlagServerAsPrivate"
	},
	"FlashAbilityBar": {
		"body": [
			"FlashAbilityBar(${1:millisecondsToFlash})"
		],
		"scope": "lua",
		"prefix": "FlashAbilityBar"
	},
	"FlashMinimapDisplay": {
		"body": [
			"FlashMinimapDisplay()"
		],
		"scope": "lua",
		"prefix": "FlashMinimapDisplay"
	},
	"FlashMinimapDisplayWithColor": {
		"body": [
			"FlashMinimapDisplayWithColor(${1:hudColorIndex})"
		],
		"scope": "lua",
		"prefix": "FlashMinimapDisplayWithColor"
	},
	"FlashWantedDisplay": {
		"body": [
			"FlashWantedDisplay(${1:p0})"
		],
		"scope": "lua",
		"prefix": "FlashWantedDisplay"
	},
	"Floor": {
		"body": [
			"Floor(${1:value})"
		],
		"scope": "lua",
		"prefix": "Floor"
	},
	"ForceCinematicRenderingThisUpdate": {
		"body": [
			"ForceCinematicRenderingThisUpdate(${1:p0})"
		],
		"scope": "lua",
		"prefix": "ForceCinematicRenderingThisUpdate"
	},
	"ForceCleanup": {
		"body": [
			"ForceCleanup(${1:cleanupFlags})"
		],
		"scope": "lua",
		"prefix": "ForceCleanup"
	},
	"ForceCleanupForAllThreadsWithThisName": {
		"body": [
			"ForceCleanupForAllThreadsWithThisName(${1:name}, ${2:cleanupFlags})"
		],
		"scope": "lua",
		"prefix": "ForceCleanupForAllThreadsWithThisName"
	},
	"ForceCleanupForThreadWithThisId": {
		"body": [
			"ForceCleanupForThreadWithThisId(${1:id}, ${2:cleanupFlags})"
		],
		"scope": "lua",
		"prefix": "ForceCleanupForThreadWithThisId"
	},
	"ForceCloseReportugcMenu": {
		"body": [
			"ForceCloseReportugcMenu()"
		],
		"scope": "lua",
		"prefix": "ForceCloseReportugcMenu"
	},
	"ForceCloseTextInputBox": {
		"body": [
			"ForceCloseTextInputBox()"
		],
		"scope": "lua",
		"prefix": "ForceCloseTextInputBox"
	},
	"ForceEntityAiAndAnimationUpdate": {
		"body": [
			"ForceEntityAiAndAnimationUpdate(${1:entity})"
		],
		"scope": "lua",
		"prefix": "ForceEntityAiAndAnimationUpdate"
	},
	"ForceGameStatePlaying": {
		"body": [
			"ForceGameStatePlaying()"
		],
		"scope": "lua",
		"prefix": "ForceGameStatePlaying"
	},
	"ForceLightningFlash": {
		"body": [
			"ForceLightningFlash()"
		],
		"scope": "lua",
		"prefix": "ForceLightningFlash"
	},
	"ForcePedAiAndAnimationUpdate": {
		"body": [
			"ForcePedAiAndAnimationUpdate(${1:ped}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "ForcePedAiAndAnimationUpdate"
	},
	"ForcePedMotionState": {
		"body": [
			"ForcePedMotionState(${1:ped}, ${2:motionStateHash}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "ForcePedMotionState"
	},
	"ForcePedToOpenParachute": {
		"body": [
			"ForcePedToOpenParachute(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ForcePedToOpenParachute"
	},
	"ForcePickupRegenerate": {
		"body": [
			"ForcePickupRegenerate(${1:p0})"
		],
		"scope": "lua",
		"prefix": "ForcePickupRegenerate"
	},
	"ForcePlaybackRecordedVehicleUpdate": {
		"body": [
			"ForcePlaybackRecordedVehicleUpdate(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "ForcePlaybackRecordedVehicleUpdate"
	},
	"ForceRenderInGameUi": {
		"body": [
			"ForceRenderInGameUi(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "ForceRenderInGameUi"
	},
	"ForceRoomForEntity": {
		"body": [
			"ForceRoomForEntity(${1:entity}, ${2:interior}, ${3:roomHashKey})"
		],
		"scope": "lua",
		"prefix": "ForceRoomForEntity"
	},
	"ForceRoomForGameViewport": {
		"body": [
			"ForceRoomForGameViewport(${1:interiorID}, ${2:roomHashKey})"
		],
		"scope": "lua",
		"prefix": "ForceRoomForGameViewport"
	},
	"ForceSnowPass": {
		"body": [
			"ForceSnowPass(${1:enabled})"
		],
		"scope": "lua",
		"prefix": "ForceSnowPass"
	},
	"ForceSocialClubUpdate": {
		"body": [
			"ForceSocialClubUpdate()"
		],
		"scope": "lua",
		"prefix": "ForceSocialClubUpdate"
	},
	"ForceSonarBlipsThisFrame": {
		"body": [
			"ForceSonarBlipsThisFrame()"
		],
		"scope": "lua",
		"prefix": "ForceSonarBlipsThisFrame"
	},
	"ForceSubmarineSurfaceMode": {
		"body": [
			"ForceSubmarineSurfaceMode(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "ForceSubmarineSurfaceMode"
	},
	"ForceVehicleEngineAudio": {
		"body": [
			"ForceVehicleEngineAudio(${1:vehicle}, ${2:audioName})"
		],
		"scope": "lua",
		"prefix": "ForceVehicleEngineAudio"
	},
	"FormatFocusHeading": {
		"body": [
			"FormatFocusHeading(${1:x}, ${2:y}, ${3:z}, ${4:rad}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "FormatFocusHeading"
	},
	"FreeMemoryForHighQualityPhoto": {
		"body": [
			"FreeMemoryForHighQualityPhoto()"
		],
		"scope": "lua",
		"prefix": "FreeMemoryForHighQualityPhoto"
	},
	"FreeMemoryForLowQualityPhoto": {
		"body": [
			"FreeMemoryForLowQualityPhoto()"
		],
		"scope": "lua",
		"prefix": "FreeMemoryForLowQualityPhoto"
	},
	"FreeMemoryForMissionCreatorPhoto": {
		"body": [
			"FreeMemoryForMissionCreatorPhoto()"
		],
		"scope": "lua",
		"prefix": "FreeMemoryForMissionCreatorPhoto"
	},
	"FreezeEntityPosition": {
		"body": [
			"FreezeEntityPosition(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "FreezeEntityPosition"
	},
	"FreezeMicrophone": {
		"body": [
			"FreezeMicrophone()"
		],
		"scope": "lua",
		"prefix": "FreezeMicrophone"
	},
	"FreezePedCameraRotation": {
		"body": [
			"FreezePedCameraRotation(${1:ped})"
		],
		"scope": "lua",
		"prefix": "FreezePedCameraRotation"
	},
	"FreezeRadioStation": {
		"body": [
			"FreezeRadioStation(${1:radioStation})"
		],
		"scope": "lua",
		"prefix": "FreezeRadioStation"
	},
	"GenerateDirectionsToCoord": {
		"body": [
			"GenerateDirectionsToCoord(${1:x}, ${2:y}, ${3:z}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "GenerateDirectionsToCoord"
	},
	"GetAchievementProgress": {
		"body": [
			"GetAchievementProgress(${1:achievement})"
		],
		"scope": "lua",
		"prefix": "GetAchievementProgress"
	},
	"GetActivePlayers": {
		"body": [
			"GetActivePlayers()"
		],
		"scope": "lua",
		"prefix": "GetActivePlayers"
	},
	"GetActiveScreenResolution": {
		"body": [
			"GetActiveScreenResolution()"
		],
		"scope": "lua",
		"prefix": "GetActiveScreenResolution"
	},
	"GetActiveVehicleMissionType": {
		"body": [
			"GetActiveVehicleMissionType(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetActiveVehicleMissionType"
	},
	"GetAiBlip": {
		"body": [
			"GetAiBlip(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetAiBlip"
	},
	"GetAiBlip_2": {
		"body": [
			"GetAiBlip_2(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetAiBlip_2"
	},
	"GetAirDragMultiplierForPlayersVehicle": {
		"body": [
			"GetAirDragMultiplierForPlayersVehicle(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetAirDragMultiplierForPlayersVehicle"
	},
	"GetAllObjects": {
		"body": [
			"GetAllObjects()"
		],
		"scope": "lua",
		"prefix": "GetAllObjects"
	},
	"GetAllocatedStackSize": {
		"body": [
			"GetAllocatedStackSize()"
		],
		"scope": "lua",
		"prefix": "GetAllocatedStackSize"
	},
	"GetAllowMovementWhileZoomed": {
		"body": [
			"GetAllowMovementWhileZoomed()"
		],
		"scope": "lua",
		"prefix": "GetAllowMovementWhileZoomed"
	},
	"GetAllPeds": {
		"body": [
			"GetAllPeds()"
		],
		"scope": "lua",
		"prefix": "GetAllPeds"
	},
	"GetAllVehicles": {
		"body": [
			"GetAllVehicles()"
		],
		"scope": "lua",
		"prefix": "GetAllVehicles"
	},
	"GetAmbientPedRangeMultiplier": {
		"body": [
			"GetAmbientPedRangeMultiplier()"
		],
		"scope": "lua",
		"prefix": "GetAmbientPedRangeMultiplier"
	},
	"GetAmbientVehicleRangeMultiplier": {
		"body": [
			"GetAmbientVehicleRangeMultiplier()"
		],
		"scope": "lua",
		"prefix": "GetAmbientVehicleRangeMultiplier"
	},
	"GetAmbientVoiceNameHash": {
		"body": [
			"GetAmbientVoiceNameHash(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetAmbientVoiceNameHash"
	},
	"GetAmmoInClip": {
		"body": [
			"GetAmmoInClip(${1:ped}, ${2:weaponHash}, ${3:ammo})"
		],
		"scope": "lua",
		"prefix": "GetAmmoInClip"
	},
	"GetAmmoInPedWeapon": {
		"body": [
			"GetAmmoInPedWeapon(${1:ped}, ${2:weaponhash})"
		],
		"scope": "lua",
		"prefix": "GetAmmoInPedWeapon"
	},
	"GetAngleBetween_2dVectors": {
		"body": [
			"GetAngleBetween_2dVectors(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2})"
		],
		"scope": "lua",
		"prefix": "GetAngleBetween_2dVectors"
	},
	"GetAnimDuration": {
		"body": [
			"GetAnimDuration(${1:animDict}, ${2:animName})"
		],
		"scope": "lua",
		"prefix": "GetAnimDuration"
	},
	"GetAnimInitialOffsetPosition": {
		"body": [
			"GetAnimInitialOffsetPosition(${1:animDict}, ${2:animName}, ${3:x}, ${4:y}, ${5:z}, ${6:xRot}, ${7:yRot}, ${8:zRot}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "GetAnimInitialOffsetPosition"
	},
	"GetAnimInitialOffsetRotation": {
		"body": [
			"GetAnimInitialOffsetRotation(${1:animDict}, ${2:animName}, ${3:x}, ${4:y}, ${5:z}, ${6:xRot}, ${7:yRot}, ${8:zRot}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "GetAnimInitialOffsetRotation"
	},
	"GetAspectRatio": {
		"body": [
			"GetAspectRatio(${1:b})"
		],
		"scope": "lua",
		"prefix": "GetAspectRatio"
	},
	"GetAudibleMusicTrackTextId": {
		"body": [
			"GetAudibleMusicTrackTextId()"
		],
		"scope": "lua",
		"prefix": "GetAudibleMusicTrackTextId"
	},
	"GetBaseElementMetadata": {
		"body": [
			"GetBaseElementMetadata(${1:p3}, ${2:p4})"
		],
		"scope": "lua",
		"prefix": "GetBaseElementMetadata"
	},
	"GetBenchmarkIterationsFromCommandLine": {
		"body": [
			"GetBenchmarkIterationsFromCommandLine()"
		],
		"scope": "lua",
		"prefix": "GetBenchmarkIterationsFromCommandLine"
	},
	"GetBenchmarkPassFromCommandLine": {
		"body": [
			"GetBenchmarkPassFromCommandLine()"
		],
		"scope": "lua",
		"prefix": "GetBenchmarkPassFromCommandLine"
	},
	"GetBenchmarkTime": {
		"body": [
			"GetBenchmarkTime()"
		],
		"scope": "lua",
		"prefix": "GetBenchmarkTime"
	},
	"GetBestPedWeapon": {
		"body": [
			"GetBestPedWeapon(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetBestPedWeapon"
	},
	"GetBinkMovieTime": {
		"body": [
			"GetBinkMovieTime(${1:binkMovie})"
		],
		"scope": "lua",
		"prefix": "GetBinkMovieTime"
	},
	"GetBitsInRange": {
		"body": [
			"GetBitsInRange(${1:var}, ${2:rangeStart}, ${3:rangeEnd})"
		],
		"scope": "lua",
		"prefix": "GetBitsInRange"
	},
	"GetBlipAlpha": {
		"body": [
			"GetBlipAlpha(${1:blip})"
		],
		"scope": "lua",
		"prefix": "GetBlipAlpha"
	},
	"GetBlipColour": {
		"body": [
			"GetBlipColour(${1:blip})"
		],
		"scope": "lua",
		"prefix": "GetBlipColour"
	},
	"GetBlipCoords": {
		"body": [
			"GetBlipCoords(${1:blip})"
		],
		"scope": "lua",
		"prefix": "GetBlipCoords"
	},
	"GetBlipFromEntity": {
		"body": [
			"GetBlipFromEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetBlipFromEntity"
	},
	"GetBlipHudColour": {
		"body": [
			"GetBlipHudColour(${1:blip})"
		],
		"scope": "lua",
		"prefix": "GetBlipHudColour"
	},
	"GetBlipInfoIdCoord": {
		"body": [
			"GetBlipInfoIdCoord(${1:blip})"
		],
		"scope": "lua",
		"prefix": "GetBlipInfoIdCoord"
	},
	"GetBlipInfoIdDisplay": {
		"body": [
			"GetBlipInfoIdDisplay(${1:blip})"
		],
		"scope": "lua",
		"prefix": "GetBlipInfoIdDisplay"
	},
	"GetBlipInfoIdEntityIndex": {
		"body": [
			"GetBlipInfoIdEntityIndex(${1:blip})"
		],
		"scope": "lua",
		"prefix": "GetBlipInfoIdEntityIndex"
	},
	"GetBlipInfoIdPickupIndex": {
		"body": [
			"GetBlipInfoIdPickupIndex(${1:blip})"
		],
		"scope": "lua",
		"prefix": "GetBlipInfoIdPickupIndex"
	},
	"GetBlipInfoIdType": {
		"body": [
			"GetBlipInfoIdType(${1:blip})"
		],
		"scope": "lua",
		"prefix": "GetBlipInfoIdType"
	},
	"GetBlipSprite": {
		"body": [
			"GetBlipSprite(${1:self})"
		],
		"scope": "lua",
		"prefix": "GetBlipSprite"
	},
	"GetBoatBoomPositionRatio": {
		"body": [
			"GetBoatBoomPositionRatio(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetBoatBoomPositionRatio"
	},
	"GetBoatBoomPositionRatio_2": {
		"body": [
			"GetBoatBoomPositionRatio_2(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetBoatBoomPositionRatio_2"
	},
	"GetBoatBoomPositionRatio_3": {
		"body": [
			"GetBoatBoomPositionRatio_3(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetBoatBoomPositionRatio_3"
	},
	"GetCamActiveViewModeContext": {
		"body": [
			"GetCamActiveViewModeContext()"
		],
		"scope": "lua",
		"prefix": "GetCamActiveViewModeContext"
	},
	"GetCamAnimCurrentPhase": {
		"body": [
			"GetCamAnimCurrentPhase(${1:cam})"
		],
		"scope": "lua",
		"prefix": "GetCamAnimCurrentPhase"
	},
	"GetCamCoord": {
		"body": [
			"GetCamCoord(${1:cam})"
		],
		"scope": "lua",
		"prefix": "GetCamCoord"
	},
	"GetCamFarClip": {
		"body": [
			"GetCamFarClip(${1:cam})"
		],
		"scope": "lua",
		"prefix": "GetCamFarClip"
	},
	"GetCamFarDof": {
		"body": [
			"GetCamFarDof(${1:cam})"
		],
		"scope": "lua",
		"prefix": "GetCamFarDof"
	},
	"GetCamFov": {
		"body": [
			"GetCamFov(${1:cam})"
		],
		"scope": "lua",
		"prefix": "GetCamFov"
	},
	"GetCamMatrix": {
		"body": [
			"GetCamMatrix(${1:camera})"
		],
		"scope": "lua",
		"prefix": "GetCamMatrix"
	},
	"GetCamNearClip": {
		"body": [
			"GetCamNearClip(${1:cam})"
		],
		"scope": "lua",
		"prefix": "GetCamNearClip"
	},
	"GetCamRot": {
		"body": [
			"GetCamRot(${1:cam}, ${2:rotationOrder})"
		],
		"scope": "lua",
		"prefix": "GetCamRot"
	},
	"GetCamSplineNodeIndex": {
		"body": [
			"GetCamSplineNodeIndex(${1:cam})"
		],
		"scope": "lua",
		"prefix": "GetCamSplineNodeIndex"
	},
	"GetCamSplineNodePhase": {
		"body": [
			"GetCamSplineNodePhase(${1:cam})"
		],
		"scope": "lua",
		"prefix": "GetCamSplineNodePhase"
	},
	"GetCamSplinePhase": {
		"body": [
			"GetCamSplinePhase(${1:cam})"
		],
		"scope": "lua",
		"prefix": "GetCamSplinePhase"
	},
	"GetCamViewModeForContext": {
		"body": [
			"GetCamViewModeForContext(${1:context})"
		],
		"scope": "lua",
		"prefix": "GetCamViewModeForContext"
	},
	"GetCanVehicleJump": {
		"body": [
			"GetCanVehicleJump(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetCanVehicleJump"
	},
	"GetCargobobHookPosition": {
		"body": [
			"GetCargobobHookPosition(${1:cargobob})"
		],
		"scope": "lua",
		"prefix": "GetCargobobHookPosition"
	},
	"GetCauseOfMostRecentForceCleanup": {
		"body": [
			"GetCauseOfMostRecentForceCleanup()"
		],
		"scope": "lua",
		"prefix": "GetCauseOfMostRecentForceCleanup"
	},
	"GetCgoffset": {
		"body": [
			"GetCgoffset(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetCgoffset"
	},
	"GetClipSetForScriptedGunTask": {
		"body": [
			"GetClipSetForScriptedGunTask(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetClipSetForScriptedGunTask"
	},
	"GetClockDayOfMonth": {
		"body": [
			"GetClockDayOfMonth()"
		],
		"scope": "lua",
		"prefix": "GetClockDayOfMonth"
	},
	"GetClockDayOfWeek": {
		"body": [
			"GetClockDayOfWeek()"
		],
		"scope": "lua",
		"prefix": "GetClockDayOfWeek"
	},
	"GetClockHours": {
		"body": [
			"GetClockHours()"
		],
		"scope": "lua",
		"prefix": "GetClockHours"
	},
	"GetClockMinutes": {
		"body": [
			"GetClockMinutes()"
		],
		"scope": "lua",
		"prefix": "GetClockMinutes"
	},
	"GetClockMonth": {
		"body": [
			"GetClockMonth()"
		],
		"scope": "lua",
		"prefix": "GetClockMonth"
	},
	"GetClockSeconds": {
		"body": [
			"GetClockSeconds()"
		],
		"scope": "lua",
		"prefix": "GetClockSeconds"
	},
	"GetClockYear": {
		"body": [
			"GetClockYear()"
		],
		"scope": "lua",
		"prefix": "GetClockYear"
	},
	"GetClosestBlipOfType": {
		"body": [
			"GetClosestBlipOfType(${1:blipSprite})"
		],
		"scope": "lua",
		"prefix": "GetClosestBlipOfType"
	},
	"GetClosestFirePos": {
		"body": [
			"GetClosestFirePos(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "GetClosestFirePos"
	},
	"GetClosestMajorVehicleNode": {
		"body": [
			"GetClosestMajorVehicleNode(${1:x}, ${2:y}, ${3:z}, ${4:unknown1}, ${5:unknown2})"
		],
		"scope": "lua",
		"prefix": "GetClosestMajorVehicleNode"
	},
	"GetClosestObjectOfType": {
		"body": [
			"GetClosestObjectOfType(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:modelHash}, ${6:isMission}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "GetClosestObjectOfType"
	},
	"GetClosestPed": {
		"body": [
			"GetClosestPed(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:p4}, ${6:p5}, ${7:p7}, ${8:p8}, ${9:pedType})"
		],
		"scope": "lua",
		"prefix": "GetClosestPed"
	},
	"GetClosestRoad": {
		"body": [
			"GetClosestRoad(${1:x}, ${2:y}, ${3:z}, ${4:p3}, ${5:p4}, ${6:p10})"
		],
		"scope": "lua",
		"prefix": "GetClosestRoad"
	},
	"GetClosestVehicle": {
		"body": [
			"GetClosestVehicle(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:modelHash}, ${6:flags})"
		],
		"scope": "lua",
		"prefix": "GetClosestVehicle"
	},
	"GetClosestVehicleNode": {
		"body": [
			"GetClosestVehicleNode(${1:x}, ${2:y}, ${3:z}, ${4:nodeType}, ${5:p5}, ${6:p6})"
		],
		"scope": "lua",
		"prefix": "GetClosestVehicleNode"
	},
	"GetClosestVehicleNodeWithHeading": {
		"body": [
			"GetClosestVehicleNodeWithHeading(${1:x}, ${2:y}, ${3:z}, ${4:nodeType}, ${5:p6}, ${6:p7})"
		],
		"scope": "lua",
		"prefix": "GetClosestVehicleNodeWithHeading"
	},
	"GetCloudHatOpacity": {
		"body": [
			"GetCloudHatOpacity()"
		],
		"scope": "lua",
		"prefix": "GetCloudHatOpacity"
	},
	"GetCloudTimeAsInt": {
		"body": [
			"GetCloudTimeAsInt()"
		],
		"scope": "lua",
		"prefix": "GetCloudTimeAsInt"
	},
	"GetCloudTimeAsString": {
		"body": [
			"GetCloudTimeAsString()"
		],
		"scope": "lua",
		"prefix": "GetCloudTimeAsString"
	},
	"GetCollisionNormalOfLastHitForEntity": {
		"body": [
			"GetCollisionNormalOfLastHitForEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetCollisionNormalOfLastHitForEntity"
	},
	"GetCombatFloat": {
		"body": [
			"GetCombatFloat(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetCombatFloat"
	},
	"GetCommerceItemCat": {
		"body": [
			"GetCommerceItemCat(${1:index}, ${2:index2})"
		],
		"scope": "lua",
		"prefix": "GetCommerceItemCat"
	},
	"GetCommerceItemId": {
		"body": [
			"GetCommerceItemId(${1:index})"
		],
		"scope": "lua",
		"prefix": "GetCommerceItemId"
	},
	"GetCommerceItemName": {
		"body": [
			"GetCommerceItemName(${1:index})"
		],
		"scope": "lua",
		"prefix": "GetCommerceItemName"
	},
	"GetCommerceItemNumCats": {
		"body": [
			"GetCommerceItemNumCats(${1:index})"
		],
		"scope": "lua",
		"prefix": "GetCommerceItemNumCats"
	},
	"GetCommerceItemTexturename": {
		"body": [
			"GetCommerceItemTexturename(${1:index})"
		],
		"scope": "lua",
		"prefix": "GetCommerceItemTexturename"
	},
	"GetCommerceProductPrice": {
		"body": [
			"GetCommerceProductPrice(${1:index})"
		],
		"scope": "lua",
		"prefix": "GetCommerceProductPrice"
	},
	"GetConsoleBuffer": {
		"body": [
			"GetConsoleBuffer()"
		],
		"scope": "lua",
		"prefix": "GetConsoleBuffer"
	},
	"GetControlGroupInstructionalButton": {
		"body": [
			"GetControlGroupInstructionalButton(${1:padIndex}, ${2:controlGroup}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "GetControlGroupInstructionalButton"
	},
	"GetControlInstructionalButton": {
		"body": [
			"GetControlInstructionalButton(${1:padIndex}, ${2:control}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "GetControlInstructionalButton"
	},
	"GetControlNormal": {
		"body": [
			"GetControlNormal(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "GetControlNormal"
	},
	"GetControlUnboundNormal": {
		"body": [
			"GetControlUnboundNormal(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "GetControlUnboundNormal"
	},
	"GetControlValue": {
		"body": [
			"GetControlValue(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "GetControlValue"
	},
	"GetConvar": {
		"body": [
			"GetConvar(${1:varName}, ${2:default_})"
		],
		"scope": "lua",
		"prefix": "GetConvar"
	},
	"GetConvarInt": {
		"body": [
			"GetConvarInt(${1:varName}, ${2:default_})"
		],
		"scope": "lua",
		"prefix": "GetConvarInt"
	},
	"GetConvertibleRoofState": {
		"body": [
			"GetConvertibleRoofState(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetConvertibleRoofState"
	},
	"GetCoordsAndRotationOfClosestObjectOfType": {
		"body": [
			"GetCoordsAndRotationOfClosestObjectOfType(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:modelHash}, ${6:rotationOrder})"
		],
		"scope": "lua",
		"prefix": "GetCoordsAndRotationOfClosestObjectOfType"
	},
	"GetCoordsOfProjectileTypeInArea": {
		"body": [
			"GetCoordsOfProjectileTypeInArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:projHash}, ${8:ownedByPlayer})"
		],
		"scope": "lua",
		"prefix": "GetCoordsOfProjectileTypeInArea"
	},
	"GetCoordsOfProjectileTypeWithinDistance": {
		"body": [
			"GetCoordsOfProjectileTypeWithinDistance(${1:ped}, ${2:weaponHash}, ${3:radius}, ${4:ownedByPlayer})"
		],
		"scope": "lua",
		"prefix": "GetCoordsOfProjectileTypeWithinDistance"
	},
	"GetCurrentFrontendMenuVersion": {
		"body": [
			"GetCurrentFrontendMenuVersion()"
		],
		"scope": "lua",
		"prefix": "GetCurrentFrontendMenuVersion"
	},
	"GetCurrentGameName": {
		"body": [
			"GetCurrentGameName()"
		],
		"scope": "lua",
		"prefix": "GetCurrentGameName"
	},
	"GetCurrentLanguage": {
		"body": [
			"GetCurrentLanguage()"
		],
		"scope": "lua",
		"prefix": "GetCurrentLanguage"
	},
	"GetCurrentNumberOfCloudPhotos": {
		"body": [
			"GetCurrentNumberOfCloudPhotos()"
		],
		"scope": "lua",
		"prefix": "GetCurrentNumberOfCloudPhotos"
	},
	"GetCurrentPedVehicleWeapon": {
		"body": [
			"GetCurrentPedVehicleWeapon(${1:ped}, ${2:weaponHash})"
		],
		"scope": "lua",
		"prefix": "GetCurrentPedVehicleWeapon"
	},
	"GetCurrentPedWeapon": {
		"body": [
			"GetCurrentPedWeapon(${1:ped}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "GetCurrentPedWeapon"
	},
	"GetCurrentPedWeaponEntityIndex": {
		"body": [
			"GetCurrentPedWeaponEntityIndex(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetCurrentPedWeaponEntityIndex"
	},
	"GetCurrentPlaybackForVehicle": {
		"body": [
			"GetCurrentPlaybackForVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetCurrentPlaybackForVehicle"
	},
	"GetCurrentRadioStationHash": {
		"body": [
			"GetCurrentRadioStationHash(${1:radioStationName})"
		],
		"scope": "lua",
		"prefix": "GetCurrentRadioStationHash"
	},
	"GetCurrentResourceName": {
		"body": [
			"GetCurrentResourceName()"
		],
		"scope": "lua",
		"prefix": "GetCurrentResourceName"
	},
	"GetCurrentScriptedConversationLine": {
		"body": [
			"GetCurrentScriptedConversationLine()"
		],
		"scope": "lua",
		"prefix": "GetCurrentScriptedConversationLine"
	},
	"GetCurrentServerEndpoint": {
		"body": [
			"GetCurrentServerEndpoint()"
		],
		"scope": "lua",
		"prefix": "GetCurrentServerEndpoint"
	},
	"GetCurrentWebpageId": {
		"body": [
			"GetCurrentWebpageId()"
		],
		"scope": "lua",
		"prefix": "GetCurrentWebpageId"
	},
	"GetCurrentWebsiteId": {
		"body": [
			"GetCurrentWebsiteId()"
		],
		"scope": "lua",
		"prefix": "GetCurrentWebsiteId"
	},
	"GetCutFileNumSections": {
		"body": [
			"GetCutFileNumSections(${1:cutsceneName})"
		],
		"scope": "lua",
		"prefix": "GetCutFileNumSections"
	},
	"GetCutsceneSectionPlaying": {
		"body": [
			"GetCutsceneSectionPlaying()"
		],
		"scope": "lua",
		"prefix": "GetCutsceneSectionPlaying"
	},
	"GetCutsceneTime": {
		"body": [
			"GetCutsceneTime()"
		],
		"scope": "lua",
		"prefix": "GetCutsceneTime"
	},
	"GetCutsceneTotalDuration": {
		"body": [
			"GetCutsceneTotalDuration()"
		],
		"scope": "lua",
		"prefix": "GetCutsceneTotalDuration"
	},
	"GetDeadPedPickupCoords": {
		"body": [
			"GetDeadPedPickupCoords(${1:ped}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "GetDeadPedPickupCoords"
	},
	"GetDecalWashLevel": {
		"body": [
			"GetDecalWashLevel(${1:decal})"
		],
		"scope": "lua",
		"prefix": "GetDecalWashLevel"
	},
	"GetDeepOceanScaler": {
		"body": [
			"GetDeepOceanScaler()"
		],
		"scope": "lua",
		"prefix": "GetDeepOceanScaler"
	},
	"GetDefaultScriptRendertargetRenderId": {
		"body": [
			"GetDefaultScriptRendertargetRenderId()"
		],
		"scope": "lua",
		"prefix": "GetDefaultScriptRendertargetRenderId"
	},
	"GetDisabledControlNormal": {
		"body": [
			"GetDisabledControlNormal(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "GetDisabledControlNormal"
	},
	"GetDisabledControlUnboundNormal": {
		"body": [
			"GetDisabledControlUnboundNormal(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "GetDisabledControlUnboundNormal"
	},
	"GetDisplayNameFromVehicleModel": {
		"body": [
			"GetDisplayNameFromVehicleModel(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetDisplayNameFromVehicleModel"
	},
	"GetDistanceBetweenCoords": {
		"body": [
			"GetDistanceBetweenCoords(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:useZ})"
		],
		"scope": "lua",
		"prefix": "GetDistanceBetweenCoords"
	},
	"GetDlcVehicleData": {
		"body": [
			"GetDlcVehicleData(${1:dlcVehicleIndex}, ${2:outData})"
		],
		"scope": "lua",
		"prefix": "GetDlcVehicleData"
	},
	"GetDlcVehicleFlags": {
		"body": [
			"GetDlcVehicleFlags(${1:dlcVehicleIndex})"
		],
		"scope": "lua",
		"prefix": "GetDlcVehicleFlags"
	},
	"GetDlcVehicleModel": {
		"body": [
			"GetDlcVehicleModel(${1:dlcVehicleIndex})"
		],
		"scope": "lua",
		"prefix": "GetDlcVehicleModel"
	},
	"GetDlcVehicleModLockHash": {
		"body": [
			"GetDlcVehicleModLockHash(${1:hash})"
		],
		"scope": "lua",
		"prefix": "GetDlcVehicleModLockHash"
	},
	"GetDlcWeaponComponentData": {
		"body": [
			"GetDlcWeaponComponentData(${1:dlcWeaponIndex}, ${2:dlcWeapCompIndex}, ${3:ComponentDataPtr})"
		],
		"scope": "lua",
		"prefix": "GetDlcWeaponComponentData"
	},
	"GetDlcWeaponComponentDataSp": {
		"body": [
			"GetDlcWeaponComponentDataSp(${1:dlcWeaponIndex}, ${2:dlcWeapCompIndex}, ${3:ComponentDataPtr})"
		],
		"scope": "lua",
		"prefix": "GetDlcWeaponComponentDataSp"
	},
	"GetDlcWeaponData": {
		"body": [
			"GetDlcWeaponData(${1:dlcWeaponIndex}, ${2:outData})"
		],
		"scope": "lua",
		"prefix": "GetDlcWeaponData"
	},
	"GetDlcWeaponDataSp": {
		"body": [
			"GetDlcWeaponDataSp(${1:dlcWeaponIndex}, ${2:outData})"
		],
		"scope": "lua",
		"prefix": "GetDlcWeaponDataSp"
	},
	"GetDoesVehicleHaveTombstone": {
		"body": [
			"GetDoesVehicleHaveTombstone(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetDoesVehicleHaveTombstone"
	},
	"GetDuiHandle": {
		"body": [
			"GetDuiHandle(${1:duiObject})"
		],
		"scope": "lua",
		"prefix": "GetDuiHandle"
	},
	"GetEntityAlpha": {
		"body": [
			"GetEntityAlpha(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityAlpha"
	},
	"GetEntityAnimCurrentTime": {
		"body": [
			"GetEntityAnimCurrentTime(${1:entity}, ${2:animDict}, ${3:animName})"
		],
		"scope": "lua",
		"prefix": "GetEntityAnimCurrentTime"
	},
	"GetEntityAnimTotalTime": {
		"body": [
			"GetEntityAnimTotalTime(${1:entity}, ${2:animDict}, ${3:animName})"
		],
		"scope": "lua",
		"prefix": "GetEntityAnimTotalTime"
	},
	"GetEntityAttachedTo": {
		"body": [
			"GetEntityAttachedTo(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityAttachedTo"
	},
	"GetEntityAttachedToCargobob": {
		"body": [
			"GetEntityAttachedToCargobob(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetEntityAttachedToCargobob"
	},
	"GetEntityAttachedToTowTruck": {
		"body": [
			"GetEntityAttachedToTowTruck(${1:towTruck})"
		],
		"scope": "lua",
		"prefix": "GetEntityAttachedToTowTruck"
	},
	"GetEntityBoneCount": {
		"body": [
			"GetEntityBoneCount(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityBoneCount"
	},
	"GetEntityBoneIndexByName": {
		"body": [
			"GetEntityBoneIndexByName(${1:entity}, ${2:boneName})"
		],
		"scope": "lua",
		"prefix": "GetEntityBoneIndexByName"
	},
	"GetEntityBonePosition_2": {
		"body": [
			"GetEntityBonePosition_2(${1:entity}, ${2:boneIndex})"
		],
		"scope": "lua",
		"prefix": "GetEntityBonePosition_2"
	},
	"GetEntityBoneRotation": {
		"body": [
			"GetEntityBoneRotation(${1:entity}, ${2:boneIndex})"
		],
		"scope": "lua",
		"prefix": "GetEntityBoneRotation"
	},
	"GetEntityBoneRotationLocal": {
		"body": [
			"GetEntityBoneRotationLocal(${1:entity}, ${2:boneIndex})"
		],
		"scope": "lua",
		"prefix": "GetEntityBoneRotationLocal"
	},
	"GetEntityCanBeDamaged": {
		"body": [
			"GetEntityCanBeDamaged(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityCanBeDamaged"
	},
	"GetEntityCollisionDisabled": {
		"body": [
			"GetEntityCollisionDisabled(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityCollisionDisabled"
	},
	"GetEntityCoords": {
		"body": [
			"GetEntityCoords(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityCoords"
	},
	"GetEntityForwardVector": {
		"body": [
			"GetEntityForwardVector(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityForwardVector"
	},
	"GetEntityForwardX": {
		"body": [
			"GetEntityForwardX(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityForwardX"
	},
	"GetEntityForwardY": {
		"body": [
			"GetEntityForwardY(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityForwardY"
	},
	"GetEntityHeading": {
		"body": [
			"GetEntityHeading(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityHeading"
	},
	"GetEntityHealth": {
		"body": [
			"GetEntityHealth(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityHealth"
	},
	"GetEntityHeight": {
		"body": [
			"GetEntityHeight(${1:entity}, ${2:X}, ${3:Y}, ${4:Z}, ${5:atTop}, ${6:inWorldCoords})"
		],
		"scope": "lua",
		"prefix": "GetEntityHeight"
	},
	"GetEntityHeightAboveGround": {
		"body": [
			"GetEntityHeightAboveGround(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityHeightAboveGround"
	},
	"GetEntityIndexFromMapdata": {
		"body": [
			"GetEntityIndexFromMapdata(${1:mapdata}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityIndexFromMapdata"
	},
	"GetEntityIndexOfCutsceneEntity": {
		"body": [
			"GetEntityIndexOfCutsceneEntity(${1:cutsceneEntName}, ${2:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetEntityIndexOfCutsceneEntity"
	},
	"GetEntityIndexOfRegisteredEntity": {
		"body": [
			"GetEntityIndexOfRegisteredEntity(${1:cutsceneEntName}, ${2:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetEntityIndexOfRegisteredEntity"
	},
	"GetEntityInsideExplosionArea": {
		"body": [
			"GetEntityInsideExplosionArea(${1:explosionType}, ${2:x1}, ${3:y1}, ${4:z1}, ${5:x2}, ${6:y2}, ${7:z2}, ${8:radius})"
		],
		"scope": "lua",
		"prefix": "GetEntityInsideExplosionArea"
	},
	"GetEntityInsideExplosionSphere": {
		"body": [
			"GetEntityInsideExplosionSphere(${1:explosionType}, ${2:x}, ${3:y}, ${4:z}, ${5:radius})"
		],
		"scope": "lua",
		"prefix": "GetEntityInsideExplosionSphere"
	},
	"GetEntityLodDist": {
		"body": [
			"GetEntityLodDist(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityLodDist"
	},
	"GetEntityMapdataOwner": {
		"body": [
			"GetEntityMapdataOwner(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityMapdataOwner"
	},
	"GetEntityMatrix": {
		"body": [
			"GetEntityMatrix(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityMatrix"
	},
	"GetEntityMaxHealth": {
		"body": [
			"GetEntityMaxHealth(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityMaxHealth"
	},
	"GetEntityModel": {
		"body": [
			"GetEntityModel(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityModel"
	},
	"GetEntityPhysicsHeading": {
		"body": [
			"GetEntityPhysicsHeading(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityPhysicsHeading"
	},
	"GetEntityPickup": {
		"body": [
			"GetEntityPickup(${1:entity}, ${2:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetEntityPickup"
	},
	"GetEntityPitch": {
		"body": [
			"GetEntityPitch(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityPitch"
	},
	"GetEntityPlayerIsFreeAimingAt": {
		"body": [
			"GetEntityPlayerIsFreeAimingAt(${1:player}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityPlayerIsFreeAimingAt"
	},
	"GetEntityPopulationType": {
		"body": [
			"GetEntityPopulationType(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityPopulationType"
	},
	"GetEntityProofs": {
		"body": [
			"GetEntityProofs(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityProofs"
	},
	"GetEntityQuaternion": {
		"body": [
			"GetEntityQuaternion(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityQuaternion"
	},
	"GetEntityRoll": {
		"body": [
			"GetEntityRoll(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityRoll"
	},
	"GetEntityRotation": {
		"body": [
			"GetEntityRotation(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityRotation"
	},
	"GetEntityRotationVelocity": {
		"body": [
			"GetEntityRotationVelocity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityRotationVelocity"
	},
	"GetEntityRoutingBucket": {
		"body": [
			"GetEntityRoutingBucket(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityRoutingBucket"
	},
	"GetEntityScript": {
		"body": [
			"GetEntityScript(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityScript"
	},
	"GetEntitySpeed": {
		"body": [
			"GetEntitySpeed(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntitySpeed"
	},
	"GetEntitySpeedVector": {
		"body": [
			"GetEntitySpeedVector(${1:entity}, ${2:relative})"
		],
		"scope": "lua",
		"prefix": "GetEntitySpeedVector"
	},
	"GetEntitySubmergedLevel": {
		"body": [
			"GetEntitySubmergedLevel(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntitySubmergedLevel"
	},
	"GetEntityType": {
		"body": [
			"GetEntityType(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityType"
	},
	"GetEntityUprightValue": {
		"body": [
			"GetEntityUprightValue(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityUprightValue"
	},
	"GetEntityVelocity": {
		"body": [
			"GetEntityVelocity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetEntityVelocity"
	},
	"GetEntryPositionOfDoor": {
		"body": [
			"GetEntryPositionOfDoor(${1:vehicle}, ${2:doorIndex})"
		],
		"scope": "lua",
		"prefix": "GetEntryPositionOfDoor"
	},
	"GetEventAtIndex": {
		"body": [
			"GetEventAtIndex(${1:eventGroup}, ${2:eventIndex})"
		],
		"scope": "lua",
		"prefix": "GetEventAtIndex"
	},
	"GetEventData": {
		"body": [
			"GetEventData(${1:eventGroup}, ${2:eventIndex}, ${3:eventDataSize})"
		],
		"scope": "lua",
		"prefix": "GetEventData"
	},
	"GetEventExists": {
		"body": [
			"GetEventExists(${1:eventGroup}, ${2:eventIndex})"
		],
		"scope": "lua",
		"prefix": "GetEventExists"
	},
	"GetExtraContentPackHasBeenInstalled": {
		"body": [
			"GetExtraContentPackHasBeenInstalled()"
		],
		"scope": "lua",
		"prefix": "GetExtraContentPackHasBeenInstalled"
	},
	"GetExtraTimecycleModifierIndex": {
		"body": [
			"GetExtraTimecycleModifierIndex()"
		],
		"scope": "lua",
		"prefix": "GetExtraTimecycleModifierIndex"
	},
	"GetFakeWantedLevel": {
		"body": [
			"GetFakeWantedLevel()"
		],
		"scope": "lua",
		"prefix": "GetFakeWantedLevel"
	},
	"GetFinalRenderedCamCoord": {
		"body": [
			"GetFinalRenderedCamCoord()"
		],
		"scope": "lua",
		"prefix": "GetFinalRenderedCamCoord"
	},
	"GetFinalRenderedCamFarClip": {
		"body": [
			"GetFinalRenderedCamFarClip()"
		],
		"scope": "lua",
		"prefix": "GetFinalRenderedCamFarClip"
	},
	"GetFinalRenderedCamFarDof": {
		"body": [
			"GetFinalRenderedCamFarDof()"
		],
		"scope": "lua",
		"prefix": "GetFinalRenderedCamFarDof"
	},
	"GetFinalRenderedCamFov": {
		"body": [
			"GetFinalRenderedCamFov()"
		],
		"scope": "lua",
		"prefix": "GetFinalRenderedCamFov"
	},
	"GetFinalRenderedCamMotionBlurStrength": {
		"body": [
			"GetFinalRenderedCamMotionBlurStrength()"
		],
		"scope": "lua",
		"prefix": "GetFinalRenderedCamMotionBlurStrength"
	},
	"GetFinalRenderedCamNearClip": {
		"body": [
			"GetFinalRenderedCamNearClip()"
		],
		"scope": "lua",
		"prefix": "GetFinalRenderedCamNearClip"
	},
	"GetFinalRenderedCamNearDof": {
		"body": [
			"GetFinalRenderedCamNearDof()"
		],
		"scope": "lua",
		"prefix": "GetFinalRenderedCamNearDof"
	},
	"GetFinalRenderedCamRot": {
		"body": [
			"GetFinalRenderedCamRot(${1:rotationOrder})"
		],
		"scope": "lua",
		"prefix": "GetFinalRenderedCamRot"
	},
	"GetFinalRenderedInWhenFriendlyFov": {
		"body": [
			"GetFinalRenderedInWhenFriendlyFov(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetFinalRenderedInWhenFriendlyFov"
	},
	"GetFinalRenderedInWhenFriendlyRot": {
		"body": [
			"GetFinalRenderedInWhenFriendlyRot(${1:player}, ${2:rotationOrder})"
		],
		"scope": "lua",
		"prefix": "GetFinalRenderedInWhenFriendlyRot"
	},
	"GetFirstBlipInfoId": {
		"body": [
			"GetFirstBlipInfoId(${1:blipSprite})"
		],
		"scope": "lua",
		"prefix": "GetFirstBlipInfoId"
	},
	"GetFirstPersonAimCamZoomFactor": {
		"body": [
			"GetFirstPersonAimCamZoomFactor()"
		],
		"scope": "lua",
		"prefix": "GetFirstPersonAimCamZoomFactor"
	},
	"GetFocusPedOnScreen": {
		"body": [
			"GetFocusPedOnScreen(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "GetFocusPedOnScreen"
	},
	"GetFollowPedCamViewMode": {
		"body": [
			"GetFollowPedCamViewMode()"
		],
		"scope": "lua",
		"prefix": "GetFollowPedCamViewMode"
	},
	"GetFollowPedCamZoomLevel": {
		"body": [
			"GetFollowPedCamZoomLevel()"
		],
		"scope": "lua",
		"prefix": "GetFollowPedCamZoomLevel"
	},
	"GetFollowVehicleCamViewMode": {
		"body": [
			"GetFollowVehicleCamViewMode()"
		],
		"scope": "lua",
		"prefix": "GetFollowVehicleCamViewMode"
	},
	"GetFollowVehicleCamZoomLevel": {
		"body": [
			"GetFollowVehicleCamZoomLevel()"
		],
		"scope": "lua",
		"prefix": "GetFollowVehicleCamZoomLevel"
	},
	"GetForcedComponent": {
		"body": [
			"GetForcedComponent(${1:componentHash}, ${2:componentId})"
		],
		"scope": "lua",
		"prefix": "GetForcedComponent"
	},
	"GetForcedProp": {
		"body": [
			"GetForcedProp(${1:componentHash}, ${2:forcedPropIndex})"
		],
		"scope": "lua",
		"prefix": "GetForcedProp"
	},
	"GetFrameCount": {
		"body": [
			"GetFrameCount()"
		],
		"scope": "lua",
		"prefix": "GetFrameCount"
	},
	"GetFrameTime": {
		"body": [
			"GetFrameTime()"
		],
		"scope": "lua",
		"prefix": "GetFrameTime"
	},
	"GetGameplayCamCoord": {
		"body": [
			"GetGameplayCamCoord()"
		],
		"scope": "lua",
		"prefix": "GetGameplayCamCoord"
	},
	"GetGameplayCamFov": {
		"body": [
			"GetGameplayCamFov()"
		],
		"scope": "lua",
		"prefix": "GetGameplayCamFov"
	},
	"GetGameplayCamRelativeHeading": {
		"body": [
			"GetGameplayCamRelativeHeading()"
		],
		"scope": "lua",
		"prefix": "GetGameplayCamRelativeHeading"
	},
	"GetGameplayCamRelativePitch": {
		"body": [
			"GetGameplayCamRelativePitch()"
		],
		"scope": "lua",
		"prefix": "GetGameplayCamRelativePitch"
	},
	"GetGameplayCamRot": {
		"body": [
			"GetGameplayCamRot(${1:rotationOrder})"
		],
		"scope": "lua",
		"prefix": "GetGameplayCamRot"
	},
	"GetGamePool": {
		"body": [
			"GetGamePool(${1:poolname})"
		],
		"scope": "lua",
		"prefix": "GetGamePool"
	},
	"GetGameTimer": {
		"body": [
			"GetGameTimer()"
		],
		"scope": "lua",
		"prefix": "GetGameTimer"
	},
	"GetGlobalActionscriptFlag": {
		"body": [
			"GetGlobalActionscriptFlag(${1:flagIndex})"
		],
		"scope": "lua",
		"prefix": "GetGlobalActionscriptFlag"
	},
	"GetGlobalCharBuffer": {
		"body": [
			"GetGlobalCharBuffer()"
		],
		"scope": "lua",
		"prefix": "GetGlobalCharBuffer"
	},
	"GetGlobalWaterType": {
		"body": [
			"GetGlobalWaterType()"
		],
		"scope": "lua",
		"prefix": "GetGlobalWaterType"
	},
	"GetGpsBlipRouteFound": {
		"body": [
			"GetGpsBlipRouteFound()"
		],
		"scope": "lua",
		"prefix": "GetGpsBlipRouteFound"
	},
	"GetGpsBlipRouteLength": {
		"body": [
			"GetGpsBlipRouteLength()"
		],
		"scope": "lua",
		"prefix": "GetGpsBlipRouteLength"
	},
	"GetGroundZAndNormalFor_3dCoord": {
		"body": [
			"GetGroundZAndNormalFor_3dCoord(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "GetGroundZAndNormalFor_3dCoord"
	},
	"GetGroundZFor_3dCoord": {
		"body": [
			"GetGroundZFor_3dCoord(${1:x}, ${2:y}, ${3:z}, ${4:unk})"
		],
		"scope": "lua",
		"prefix": "GetGroundZFor_3dCoord"
	},
	"GetGroundZFor_3dCoord_2": {
		"body": [
			"GetGroundZFor_3dCoord_2(${1:x}, ${2:y}, ${3:z}, ${4:p4})"
		],
		"scope": "lua",
		"prefix": "GetGroundZFor_3dCoord_2"
	},
	"GetGroupSize": {
		"body": [
			"GetGroupSize(${1:groupID})"
		],
		"scope": "lua",
		"prefix": "GetGroupSize"
	},
	"GetHashKey": {
		"body": [
			"GetHashKey(${1:model})"
		],
		"scope": "lua",
		"prefix": "GetHashKey"
	},
	"GetHashNameForComponent": {
		"body": [
			"GetHashNameForComponent(${1:entity}, ${2:componentId}, ${3:drawableVariant}, ${4:textureVariant})"
		],
		"scope": "lua",
		"prefix": "GetHashNameForComponent"
	},
	"GetHashNameForProp": {
		"body": [
			"GetHashNameForProp(${1:entity}, ${2:componentId}, ${3:propIndex}, ${4:propTextureIndex})"
		],
		"scope": "lua",
		"prefix": "GetHashNameForProp"
	},
	"GetHashOfMapAreaAtCoords": {
		"body": [
			"GetHashOfMapAreaAtCoords(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "GetHashOfMapAreaAtCoords"
	},
	"GetHashOfThisScriptName": {
		"body": [
			"GetHashOfThisScriptName()"
		],
		"scope": "lua",
		"prefix": "GetHashOfThisScriptName"
	},
	"GetHasObjectFragInst": {
		"body": [
			"GetHasObjectFragInst(${1:object})"
		],
		"scope": "lua",
		"prefix": "GetHasObjectFragInst"
	},
	"GetHasRetractableWheels": {
		"body": [
			"GetHasRetractableWheels(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetHasRetractableWheels"
	},
	"GetHasRocketBoost": {
		"body": [
			"GetHasRocketBoost(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetHasRocketBoost"
	},
	"GetHeadingFromVector_2d": {
		"body": [
			"GetHeadingFromVector_2d(${1:dx}, ${2:dy})"
		],
		"scope": "lua",
		"prefix": "GetHeadingFromVector_2d"
	},
	"GetHeightmapBottomZForArea": {
		"body": [
			"GetHeightmapBottomZForArea(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2})"
		],
		"scope": "lua",
		"prefix": "GetHeightmapBottomZForArea"
	},
	"GetHeightmapBottomZForPosition": {
		"body": [
			"GetHeightmapBottomZForPosition(${1:x}, ${2:y})"
		],
		"scope": "lua",
		"prefix": "GetHeightmapBottomZForPosition"
	},
	"GetHeightmapTopZForArea": {
		"body": [
			"GetHeightmapTopZForArea(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2})"
		],
		"scope": "lua",
		"prefix": "GetHeightmapTopZForArea"
	},
	"GetHeightmapTopZForPosition": {
		"body": [
			"GetHeightmapTopZForPosition(${1:x}, ${2:y})"
		],
		"scope": "lua",
		"prefix": "GetHeightmapTopZForPosition"
	},
	"GetHeliMainRotorHealth": {
		"body": [
			"GetHeliMainRotorHealth(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetHeliMainRotorHealth"
	},
	"GetHeliTailBoomHealth": {
		"body": [
			"GetHeliTailBoomHealth(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetHeliTailBoomHealth"
	},
	"GetHeliTailRotorHealth": {
		"body": [
			"GetHeliTailRotorHealth(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetHeliTailRotorHealth"
	},
	"GetHostId": {
		"body": [
			"GetHostId()"
		],
		"scope": "lua",
		"prefix": "GetHostId"
	},
	"GetHudColour": {
		"body": [
			"GetHudColour(${1:hudColorIndex})"
		],
		"scope": "lua",
		"prefix": "GetHudColour"
	},
	"GetHudComponentPosition": {
		"body": [
			"GetHudComponentPosition(${1:id})"
		],
		"scope": "lua",
		"prefix": "GetHudComponentPosition"
	},
	"GetHudScreenPositionFromWorldPosition": {
		"body": [
			"GetHudScreenPositionFromWorldPosition(${1:worldX}, ${2:worldY}, ${3:worldZ})"
		],
		"scope": "lua",
		"prefix": "GetHudScreenPositionFromWorldPosition"
	},
	"GetIdealPlayerSwitchType": {
		"body": [
			"GetIdealPlayerSwitchType(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2})"
		],
		"scope": "lua",
		"prefix": "GetIdealPlayerSwitchType"
	},
	"GetIdOfThisThread": {
		"body": [
			"GetIdOfThisThread()"
		],
		"scope": "lua",
		"prefix": "GetIdOfThisThread"
	},
	"GetIndexedItemInItemset": {
		"body": [
			"GetIndexedItemInItemset(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetIndexedItemInItemset"
	},
	"GetIndexOfCurrentLevel": {
		"body": [
			"GetIndexOfCurrentLevel()"
		],
		"scope": "lua",
		"prefix": "GetIndexOfCurrentLevel"
	},
	"GetInstanceId": {
		"body": [
			"GetInstanceId()"
		],
		"scope": "lua",
		"prefix": "GetInstanceId"
	},
	"GetInteriorAtCoords": {
		"body": [
			"GetInteriorAtCoords(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "GetInteriorAtCoords"
	},
	"GetInteriorAtCoordsWithType": {
		"body": [
			"GetInteriorAtCoordsWithType(${1:x}, ${2:y}, ${3:z}, ${4:interiorType})"
		],
		"scope": "lua",
		"prefix": "GetInteriorAtCoordsWithType"
	},
	"GetInteriorAtCoordsWithTypehash": {
		"body": [
			"GetInteriorAtCoordsWithTypehash(${1:x}, ${2:y}, ${3:z}, ${4:typeHash})"
		],
		"scope": "lua",
		"prefix": "GetInteriorAtCoordsWithTypehash"
	},
	"GetInteriorEntitiesExtents": {
		"body": [
			"GetInteriorEntitiesExtents(${1:interiorId})"
		],
		"scope": "lua",
		"prefix": "GetInteriorEntitiesExtents"
	},
	"GetInteriorFromCollision": {
		"body": [
			"GetInteriorFromCollision(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "GetInteriorFromCollision"
	},
	"GetInteriorFromEntity": {
		"body": [
			"GetInteriorFromEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetInteriorFromEntity"
	},
	"GetInteriorFromGameplayCam": {
		"body": [
			"GetInteriorFromGameplayCam()"
		],
		"scope": "lua",
		"prefix": "GetInteriorFromGameplayCam"
	},
	"GetInteriorGroupId": {
		"body": [
			"GetInteriorGroupId(${1:interior})"
		],
		"scope": "lua",
		"prefix": "GetInteriorGroupId"
	},
	"GetInteriorHeading": {
		"body": [
			"GetInteriorHeading(${1:interior})"
		],
		"scope": "lua",
		"prefix": "GetInteriorHeading"
	},
	"GetInteriorInfo": {
		"body": [
			"GetInteriorInfo(${1:interior})"
		],
		"scope": "lua",
		"prefix": "GetInteriorInfo"
	},
	"GetInteriorPortalCornerPosition": {
		"body": [
			"GetInteriorPortalCornerPosition(${1:interiorId}, ${2:portalIndex}, ${3:cornerIndex})"
		],
		"scope": "lua",
		"prefix": "GetInteriorPortalCornerPosition"
	},
	"GetInteriorPortalCount": {
		"body": [
			"GetInteriorPortalCount(${1:interiorId})"
		],
		"scope": "lua",
		"prefix": "GetInteriorPortalCount"
	},
	"GetInteriorPortalFlag": {
		"body": [
			"GetInteriorPortalFlag(${1:interiorId}, ${2:portalIndex})"
		],
		"scope": "lua",
		"prefix": "GetInteriorPortalFlag"
	},
	"GetInteriorPortalRoomFrom": {
		"body": [
			"GetInteriorPortalRoomFrom(${1:interiorId}, ${2:portalIndex})"
		],
		"scope": "lua",
		"prefix": "GetInteriorPortalRoomFrom"
	},
	"GetInteriorPortalRoomTo": {
		"body": [
			"GetInteriorPortalRoomTo(${1:interiorId}, ${2:portalIndex})"
		],
		"scope": "lua",
		"prefix": "GetInteriorPortalRoomTo"
	},
	"GetInteriorPosition": {
		"body": [
			"GetInteriorPosition(${1:interiorId})"
		],
		"scope": "lua",
		"prefix": "GetInteriorPosition"
	},
	"GetInteriorRoomCount": {
		"body": [
			"GetInteriorRoomCount(${1:interiorId})"
		],
		"scope": "lua",
		"prefix": "GetInteriorRoomCount"
	},
	"GetInteriorRoomExtents": {
		"body": [
			"GetInteriorRoomExtents(${1:interiorId}, ${2:roomIndex})"
		],
		"scope": "lua",
		"prefix": "GetInteriorRoomExtents"
	},
	"GetInteriorRoomFlag": {
		"body": [
			"GetInteriorRoomFlag(${1:interiorId}, ${2:roomIndex})"
		],
		"scope": "lua",
		"prefix": "GetInteriorRoomFlag"
	},
	"GetInteriorRoomIndexByHash": {
		"body": [
			"GetInteriorRoomIndexByHash(${1:interiorId}, ${2:roomHash})"
		],
		"scope": "lua",
		"prefix": "GetInteriorRoomIndexByHash"
	},
	"GetInteriorRoomName": {
		"body": [
			"GetInteriorRoomName(${1:interiorId}, ${2:roomIndex})"
		],
		"scope": "lua",
		"prefix": "GetInteriorRoomName"
	},
	"GetInteriorRoomTimecycle": {
		"body": [
			"GetInteriorRoomTimecycle(${1:interiorId}, ${2:roomIndex})"
		],
		"scope": "lua",
		"prefix": "GetInteriorRoomTimecycle"
	},
	"GetInteriorRotation": {
		"body": [
			"GetInteriorRotation(${1:interiorId})"
		],
		"scope": "lua",
		"prefix": "GetInteriorRotation"
	},
	"GetInvokingResource": {
		"body": [
			"GetInvokingResource()"
		],
		"scope": "lua",
		"prefix": "GetInvokingResource"
	},
	"GetIsArenaPropPhysicsDisabled": {
		"body": [
			"GetIsArenaPropPhysicsDisabled(${1:entity}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetIsArenaPropPhysicsDisabled"
	},
	"GetIsAutoSaveOff": {
		"body": [
			"GetIsAutoSaveOff()"
		],
		"scope": "lua",
		"prefix": "GetIsAutoSaveOff"
	},
	"GetIsDoorValid": {
		"body": [
			"GetIsDoorValid(${1:vehicle}, ${2:doorIndex})"
		],
		"scope": "lua",
		"prefix": "GetIsDoorValid"
	},
	"GetIsHidef": {
		"body": [
			"GetIsHidef()"
		],
		"scope": "lua",
		"prefix": "GetIsHidef"
	},
	"GetIsLeftVehicleHeadlightDamaged": {
		"body": [
			"GetIsLeftVehicleHeadlightDamaged(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetIsLeftVehicleHeadlightDamaged"
	},
	"GetIsLoadingScreenActive": {
		"body": [
			"GetIsLoadingScreenActive()"
		],
		"scope": "lua",
		"prefix": "GetIsLoadingScreenActive"
	},
	"GetIsPedGadgetEquipped": {
		"body": [
			"GetIsPedGadgetEquipped(${1:ped}, ${2:gadgetHash})"
		],
		"scope": "lua",
		"prefix": "GetIsPedGadgetEquipped"
	},
	"GetIsPetrolDecalInRange": {
		"body": [
			"GetIsPetrolDecalInRange(${1:xCoord}, ${2:yCoord}, ${3:zCoord}, ${4:radius})"
		],
		"scope": "lua",
		"prefix": "GetIsPetrolDecalInRange"
	},
	"GetIsPlayerInAnimalForm": {
		"body": [
			"GetIsPlayerInAnimalForm()"
		],
		"scope": "lua",
		"prefix": "GetIsPlayerInAnimalForm"
	},
	"GetIsPreloadedConversationReady": {
		"body": [
			"GetIsPreloadedConversationReady()"
		],
		"scope": "lua",
		"prefix": "GetIsPreloadedConversationReady"
	},
	"GetIsRightVehicleHeadlightDamaged": {
		"body": [
			"GetIsRightVehicleHeadlightDamaged(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetIsRightVehicleHeadlightDamaged"
	},
	"GetIsSubmarineVehicleTransformed": {
		"body": [
			"GetIsSubmarineVehicleTransformed(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetIsSubmarineVehicleTransformed"
	},
	"GetIsTaskActive": {
		"body": [
			"GetIsTaskActive(${1:ped}, ${2:taskIndex})"
		],
		"scope": "lua",
		"prefix": "GetIsTaskActive"
	},
	"GetIsUsingAlternateDriveby": {
		"body": [
			"GetIsUsingAlternateDriveby()"
		],
		"scope": "lua",
		"prefix": "GetIsUsingAlternateDriveby"
	},
	"GetIsVehicleEmpDisabled": {
		"body": [
			"GetIsVehicleEmpDisabled(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetIsVehicleEmpDisabled"
	},
	"GetIsVehicleEngineRunning": {
		"body": [
			"GetIsVehicleEngineRunning(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetIsVehicleEngineRunning"
	},
	"GetIsVehiclePrimaryColourCustom": {
		"body": [
			"GetIsVehiclePrimaryColourCustom(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetIsVehiclePrimaryColourCustom"
	},
	"GetIsVehicleSecondaryColourCustom": {
		"body": [
			"GetIsVehicleSecondaryColourCustom(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetIsVehicleSecondaryColourCustom"
	},
	"GetIsVehicleShuntBoostActive": {
		"body": [
			"GetIsVehicleShuntBoostActive(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetIsVehicleShuntBoostActive"
	},
	"GetIsWaypointRecordingLoaded": {
		"body": [
			"GetIsWaypointRecordingLoaded(${1:name})"
		],
		"scope": "lua",
		"prefix": "GetIsWaypointRecordingLoaded"
	},
	"GetIsWheelsLoweredStateActive": {
		"body": [
			"GetIsWheelsLoweredStateActive(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetIsWheelsLoweredStateActive"
	},
	"GetIsWidescreen": {
		"body": [
			"GetIsWidescreen()"
		],
		"scope": "lua",
		"prefix": "GetIsWidescreen"
	},
	"GetItemsetSize": {
		"body": [
			"GetItemsetSize(${1:x})"
		],
		"scope": "lua",
		"prefix": "GetItemsetSize"
	},
	"GetJackTarget": {
		"body": [
			"GetJackTarget(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetJackTarget"
	},
	"GetKeyForEntityInRoom": {
		"body": [
			"GetKeyForEntityInRoom(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetKeyForEntityInRoom"
	},
	"GetLabelText": {
		"body": [
			"GetLabelText(${1:labelName})"
		],
		"scope": "lua",
		"prefix": "GetLabelText"
	},
	"GetLandingGearState": {
		"body": [
			"GetLandingGearState(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetLandingGearState"
	},
	"GetLastDrivenVehicle": {
		"body": [
			"GetLastDrivenVehicle()"
		],
		"scope": "lua",
		"prefix": "GetLastDrivenVehicle"
	},
	"GetLastMaterialHitByEntity": {
		"body": [
			"GetLastMaterialHitByEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetLastMaterialHitByEntity"
	},
	"GetLastPedInVehicleSeat": {
		"body": [
			"GetLastPedInVehicleSeat(${1:vehicle}, ${2:index})"
		],
		"scope": "lua",
		"prefix": "GetLastPedInVehicleSeat"
	},
	"GetLastRammedVehicle": {
		"body": [
			"GetLastRammedVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetLastRammedVehicle"
	},
	"GetLengthOfLiteralString": {
		"body": [
			"GetLengthOfLiteralString(${1:string})"
		],
		"scope": "lua",
		"prefix": "GetLengthOfLiteralString"
	},
	"GetLengthOfLiteralStringInBytes": {
		"body": [
			"GetLengthOfLiteralStringInBytes(${1:string})"
		],
		"scope": "lua",
		"prefix": "GetLengthOfLiteralStringInBytes"
	},
	"GetLengthOfStringWithThisTextLabel": {
		"body": [
			"GetLengthOfStringWithThisTextLabel(${1:gxt})"
		],
		"scope": "lua",
		"prefix": "GetLengthOfStringWithThisTextLabel"
	},
	"GetLiveryName": {
		"body": [
			"GetLiveryName(${1:vehicle}, ${2:liveryIndex})"
		],
		"scope": "lua",
		"prefix": "GetLiveryName"
	},
	"GetLocalPlayerAimState": {
		"body": [
			"GetLocalPlayerAimState()"
		],
		"scope": "lua",
		"prefix": "GetLocalPlayerAimState"
	},
	"GetLocalPlayerAimState_2": {
		"body": [
			"GetLocalPlayerAimState_2()"
		],
		"scope": "lua",
		"prefix": "GetLocalPlayerAimState_2"
	},
	"GetLocalTime": {
		"body": [
			"GetLocalTime()"
		],
		"scope": "lua",
		"prefix": "GetLocalTime"
	},
	"GetLockonDistanceOfCurrentPedWeapon": {
		"body": [
			"GetLockonDistanceOfCurrentPedWeapon(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetLockonDistanceOfCurrentPedWeapon"
	},
	"GetLodscale": {
		"body": [
			"GetLodscale()"
		],
		"scope": "lua",
		"prefix": "GetLodscale"
	},
	"GetMainPlayerBlipId": {
		"body": [
			"GetMainPlayerBlipId()"
		],
		"scope": "lua",
		"prefix": "GetMainPlayerBlipId"
	},
	"GetMakeNameFromVehicleModel": {
		"body": [
			"GetMakeNameFromVehicleModel(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetMakeNameFromVehicleModel"
	},
	"GetMapdataFromHashKey": {
		"body": [
			"GetMapdataFromHashKey(${1:mapdataHandle})"
		],
		"scope": "lua",
		"prefix": "GetMapdataFromHashKey"
	},
	"GetMapZoomDataLevel": {
		"body": [
			"GetMapZoomDataLevel(${1:index})"
		],
		"scope": "lua",
		"prefix": "GetMapZoomDataLevel"
	},
	"GetMaxAmmo": {
		"body": [
			"GetMaxAmmo(${1:ped}, ${2:weaponHash}, ${3:ammo})"
		],
		"scope": "lua",
		"prefix": "GetMaxAmmo"
	},
	"GetMaxAmmoByType": {
		"body": [
			"GetMaxAmmoByType(${1:ped}, ${2:ammoType}, ${3:ammo})"
		],
		"scope": "lua",
		"prefix": "GetMaxAmmoByType"
	},
	"GetMaxAmmoInClip": {
		"body": [
			"GetMaxAmmoInClip(${1:ped}, ${2:weaponHash}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "GetMaxAmmoInClip"
	},
	"GetMaximumNumberOfCloudPhotos": {
		"body": [
			"GetMaximumNumberOfCloudPhotos()"
		],
		"scope": "lua",
		"prefix": "GetMaximumNumberOfCloudPhotos"
	},
	"GetMaximumNumberOfPhotos": {
		"body": [
			"GetMaximumNumberOfPhotos()"
		],
		"scope": "lua",
		"prefix": "GetMaximumNumberOfPhotos"
	},
	"GetMaxNumNetworkObjects": {
		"body": [
			"GetMaxNumNetworkObjects()"
		],
		"scope": "lua",
		"prefix": "GetMaxNumNetworkObjects"
	},
	"GetMaxNumNetworkPeds": {
		"body": [
			"GetMaxNumNetworkPeds()"
		],
		"scope": "lua",
		"prefix": "GetMaxNumNetworkPeds"
	},
	"GetMaxNumNetworkPickups": {
		"body": [
			"GetMaxNumNetworkPickups()"
		],
		"scope": "lua",
		"prefix": "GetMaxNumNetworkPickups"
	},
	"GetMaxNumNetworkVehicles": {
		"body": [
			"GetMaxNumNetworkVehicles()"
		],
		"scope": "lua",
		"prefix": "GetMaxNumNetworkVehicles"
	},
	"GetMaxRangeOfCurrentPedWeapon": {
		"body": [
			"GetMaxRangeOfCurrentPedWeapon(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetMaxRangeOfCurrentPedWeapon"
	},
	"GetMaxWantedLevel": {
		"body": [
			"GetMaxWantedLevel()"
		],
		"scope": "lua",
		"prefix": "GetMaxWantedLevel"
	},
	"GetMeleeTargetForPed": {
		"body": [
			"GetMeleeTargetForPed(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetMeleeTargetForPed"
	},
	"GetMenuPedBoolStat": {
		"body": [
			"GetMenuPedBoolStat(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetMenuPedBoolStat"
	},
	"GetMenuPedFloatStat": {
		"body": [
			"GetMenuPedFloatStat(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetMenuPedFloatStat"
	},
	"GetMenuPedIntStat": {
		"body": [
			"GetMenuPedIntStat(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetMenuPedIntStat"
	},
	"GetMenuPedMaskedIntStat": {
		"body": [
			"GetMenuPedMaskedIntStat(${1:p0}, ${2:p2}, ${3:p3})"
		],
		"scope": "lua",
		"prefix": "GetMenuPedMaskedIntStat"
	},
	"GetMillisecondsPerGameMinute": {
		"body": [
			"GetMillisecondsPerGameMinute()"
		],
		"scope": "lua",
		"prefix": "GetMillisecondsPerGameMinute"
	},
	"GetMinimapFowCoordinateIsRevealed": {
		"body": [
			"GetMinimapFowCoordinateIsRevealed(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "GetMinimapFowCoordinateIsRevealed"
	},
	"GetMinimapFowDiscoveryRatio": {
		"body": [
			"GetMinimapFowDiscoveryRatio()"
		],
		"scope": "lua",
		"prefix": "GetMinimapFowDiscoveryRatio"
	},
	"GetMissionFlag": {
		"body": [
			"GetMissionFlag()"
		],
		"scope": "lua",
		"prefix": "GetMissionFlag"
	},
	"GetMobilePhonePosition": {
		"body": [
			"GetMobilePhonePosition(${1:position})"
		],
		"scope": "lua",
		"prefix": "GetMobilePhonePosition"
	},
	"GetMobilePhoneRenderId": {
		"body": [
			"GetMobilePhoneRenderId(${1:renderId})"
		],
		"scope": "lua",
		"prefix": "GetMobilePhoneRenderId"
	},
	"GetMobilePhoneRotation": {
		"body": [
			"GetMobilePhoneRotation(${1:p1})"
		],
		"scope": "lua",
		"prefix": "GetMobilePhoneRotation"
	},
	"GetModelDimensions": {
		"body": [
			"GetModelDimensions(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetModelDimensions"
	},
	"GetModSlotName": {
		"body": [
			"GetModSlotName(${1:vehicle}, ${2:modType})"
		],
		"scope": "lua",
		"prefix": "GetModSlotName"
	},
	"GetModTextLabel": {
		"body": [
			"GetModTextLabel(${1:vehicle}, ${2:modType}, ${3:modValue})"
		],
		"scope": "lua",
		"prefix": "GetModTextLabel"
	},
	"GetMount": {
		"body": [
			"GetMount(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetMount"
	},
	"GetMusicPlaytime": {
		"body": [
			"GetMusicPlaytime()"
		],
		"scope": "lua",
		"prefix": "GetMusicPlaytime"
	},
	"GetNamedRendertargetRenderId": {
		"body": [
			"GetNamedRendertargetRenderId(${1:name})"
		],
		"scope": "lua",
		"prefix": "GetNamedRendertargetRenderId"
	},
	"GetNameOfThread": {
		"body": [
			"GetNameOfThread(${1:threadId})"
		],
		"scope": "lua",
		"prefix": "GetNameOfThread"
	},
	"GetNameOfZone": {
		"body": [
			"GetNameOfZone(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "GetNameOfZone"
	},
	"GetNavmeshRouteDistanceRemaining": {
		"body": [
			"GetNavmeshRouteDistanceRemaining(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetNavmeshRouteDistanceRemaining"
	},
	"GetNavmeshRouteResult": {
		"body": [
			"GetNavmeshRouteResult(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetNavmeshRouteResult"
	},
	"GetNearestPlayerToEntity": {
		"body": [
			"GetNearestPlayerToEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetNearestPlayerToEntity"
	},
	"GetNearestPlayerToEntityOnTeam": {
		"body": [
			"GetNearestPlayerToEntityOnTeam(${1:entity}, ${2:team})"
		],
		"scope": "lua",
		"prefix": "GetNearestPlayerToEntityOnTeam"
	},
	"GetNetworkIdFromSoundId": {
		"body": [
			"GetNetworkIdFromSoundId(${1:soundId})"
		],
		"scope": "lua",
		"prefix": "GetNetworkIdFromSoundId"
	},
	"GetNetworkTime": {
		"body": [
			"GetNetworkTime()"
		],
		"scope": "lua",
		"prefix": "GetNetworkTime"
	},
	"GetNetworkTimeAccurate": {
		"body": [
			"GetNetworkTimeAccurate()"
		],
		"scope": "lua",
		"prefix": "GetNetworkTimeAccurate"
	},
	"GetNewSelectedMissionCreatorBlip": {
		"body": [
			"GetNewSelectedMissionCreatorBlip()"
		],
		"scope": "lua",
		"prefix": "GetNewSelectedMissionCreatorBlip"
	},
	"GetNextBlipInfoId": {
		"body": [
			"GetNextBlipInfoId(${1:blipSprite})"
		],
		"scope": "lua",
		"prefix": "GetNextBlipInfoId"
	},
	"GetNextGpsDisabledZoneIndex": {
		"body": [
			"GetNextGpsDisabledZoneIndex(${1:index})"
		],
		"scope": "lua",
		"prefix": "GetNextGpsDisabledZoneIndex"
	},
	"GetNextWeatherTypeHashName": {
		"body": [
			"GetNextWeatherTypeHashName()"
		],
		"scope": "lua",
		"prefix": "GetNextWeatherTypeHashName"
	},
	"GetNgstatBoolHash": {
		"body": [
			"GetNgstatBoolHash(${1:index}, ${2:spStat}, ${3:charStat}, ${4:character}, ${5:section})"
		],
		"scope": "lua",
		"prefix": "GetNgstatBoolHash"
	},
	"GetNgstatIntHash": {
		"body": [
			"GetNgstatIntHash(${1:index}, ${2:spStat}, ${3:charStat}, ${4:character}, ${5:section})"
		],
		"scope": "lua",
		"prefix": "GetNgstatIntHash"
	},
	"GetNoLoadingScreen": {
		"body": [
			"GetNoLoadingScreen()"
		],
		"scope": "lua",
		"prefix": "GetNoLoadingScreen"
	},
	"GetNorthRadarBlip": {
		"body": [
			"GetNorthRadarBlip()"
		],
		"scope": "lua",
		"prefix": "GetNorthRadarBlip"
	},
	"GetNthClosestVehicleNode": {
		"body": [
			"GetNthClosestVehicleNode(${1:x}, ${2:y}, ${3:z}, ${4:nthClosest}, ${5:unknown1}, ${6:unknown2}, ${7:unknown3})"
		],
		"scope": "lua",
		"prefix": "GetNthClosestVehicleNode"
	},
	"GetNthClosestVehicleNodeFavourDirection": {
		"body": [
			"GetNthClosestVehicleNodeFavourDirection(${1:x}, ${2:y}, ${3:z}, ${4:desiredX}, ${5:desiredY}, ${6:desiredZ}, ${7:nthClosest}, ${8:nodetype}, ${9:p10}, ${10:p11})"
		],
		"scope": "lua",
		"prefix": "GetNthClosestVehicleNodeFavourDirection"
	},
	"GetNthClosestVehicleNodeId": {
		"body": [
			"GetNthClosestVehicleNodeId(${1:x}, ${2:y}, ${3:z}, ${4:nth}, ${5:nodetype}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "GetNthClosestVehicleNodeId"
	},
	"GetNthClosestVehicleNodeIdWithHeading": {
		"body": [
			"GetNthClosestVehicleNodeIdWithHeading(${1:x}, ${2:y}, ${3:z}, ${4:nthClosest}, ${5:outHeading}, ${6:p6}, ${7:p7}, ${8:p8})"
		],
		"scope": "lua",
		"prefix": "GetNthClosestVehicleNodeIdWithHeading"
	},
	"GetNthClosestVehicleNodeWithHeading": {
		"body": [
			"GetNthClosestVehicleNodeWithHeading(${1:x}, ${2:y}, ${3:z}, ${4:nthClosest}, ${5:unknown2}, ${6:unknown3}, ${7:unknown4})"
		],
		"scope": "lua",
		"prefix": "GetNthClosestVehicleNodeWithHeading"
	},
	"GetNuiCursorPosition": {
		"body": [
			"GetNuiCursorPosition()"
		],
		"scope": "lua",
		"prefix": "GetNuiCursorPosition"
	},
	"GetNumberOfActiveBlips": {
		"body": [
			"GetNumberOfActiveBlips()"
		],
		"scope": "lua",
		"prefix": "GetNumberOfActiveBlips"
	},
	"GetNumberOfEvents": {
		"body": [
			"GetNumberOfEvents(${1:eventGroup})"
		],
		"scope": "lua",
		"prefix": "GetNumberOfEvents"
	},
	"GetNumberOfFiresInRange": {
		"body": [
			"GetNumberOfFiresInRange(${1:x}, ${2:y}, ${3:z}, ${4:radius})"
		],
		"scope": "lua",
		"prefix": "GetNumberOfFiresInRange"
	},
	"GetNumberOfFreeStacksOfThisSize": {
		"body": [
			"GetNumberOfFreeStacksOfThisSize(${1:stackSize})"
		],
		"scope": "lua",
		"prefix": "GetNumberOfFreeStacksOfThisSize"
	},
	"GetNumberOfPedDrawableVariations": {
		"body": [
			"GetNumberOfPedDrawableVariations(${1:ped}, ${2:componentId})"
		],
		"scope": "lua",
		"prefix": "GetNumberOfPedDrawableVariations"
	},
	"GetNumberOfPedPropDrawableVariations": {
		"body": [
			"GetNumberOfPedPropDrawableVariations(${1:ped}, ${2:propId})"
		],
		"scope": "lua",
		"prefix": "GetNumberOfPedPropDrawableVariations"
	},
	"GetNumberOfPedPropTextureVariations": {
		"body": [
			"GetNumberOfPedPropTextureVariations(${1:ped}, ${2:propId}, ${3:drawableId})"
		],
		"scope": "lua",
		"prefix": "GetNumberOfPedPropTextureVariations"
	},
	"GetNumberOfPedTextureVariations": {
		"body": [
			"GetNumberOfPedTextureVariations(${1:ped}, ${2:componentId}, ${3:drawableId})"
		],
		"scope": "lua",
		"prefix": "GetNumberOfPedTextureVariations"
	},
	"GetNumberOfPlayers": {
		"body": [
			"GetNumberOfPlayers()"
		],
		"scope": "lua",
		"prefix": "GetNumberOfPlayers"
	},
	"GetNumberOfPlayersInTeam": {
		"body": [
			"GetNumberOfPlayersInTeam(${1:team})"
		],
		"scope": "lua",
		"prefix": "GetNumberOfPlayersInTeam"
	},
	"GetNumberOfReferencesOfScriptWithNameHash": {
		"body": [
			"GetNumberOfReferencesOfScriptWithNameHash(${1:scriptHash})"
		],
		"scope": "lua",
		"prefix": "GetNumberOfReferencesOfScriptWithNameHash"
	},
	"GetNumberOfStreamingRequests": {
		"body": [
			"GetNumberOfStreamingRequests()"
		],
		"scope": "lua",
		"prefix": "GetNumberOfStreamingRequests"
	},
	"GetNumberOfVehicleColours": {
		"body": [
			"GetNumberOfVehicleColours(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetNumberOfVehicleColours"
	},
	"GetNumberOfVehicleDoors": {
		"body": [
			"GetNumberOfVehicleDoors(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetNumberOfVehicleDoors"
	},
	"GetNumberOfVehicleNumberPlates": {
		"body": [
			"GetNumberOfVehicleNumberPlates()"
		],
		"scope": "lua",
		"prefix": "GetNumberOfVehicleNumberPlates"
	},
	"GetNumCommerceItems": {
		"body": [
			"GetNumCommerceItems()"
		],
		"scope": "lua",
		"prefix": "GetNumCommerceItems"
	},
	"GetNumCreatedMissionObjects": {
		"body": [
			"GetNumCreatedMissionObjects(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetNumCreatedMissionObjects"
	},
	"GetNumCreatedMissionPeds": {
		"body": [
			"GetNumCreatedMissionPeds(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetNumCreatedMissionPeds"
	},
	"GetNumCreatedMissionVehicles": {
		"body": [
			"GetNumCreatedMissionVehicles(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetNumCreatedMissionVehicles"
	},
	"GetNumDispatchedUnitsForPlayer": {
		"body": [
			"GetNumDispatchedUnitsForPlayer(${1:dispatchService})"
		],
		"scope": "lua",
		"prefix": "GetNumDispatchedUnitsForPlayer"
	},
	"GetNumDlcVehicles": {
		"body": [
			"GetNumDlcVehicles()"
		],
		"scope": "lua",
		"prefix": "GetNumDlcVehicles"
	},
	"GetNumDlcWeaponComponents": {
		"body": [
			"GetNumDlcWeaponComponents(${1:dlcWeaponIndex})"
		],
		"scope": "lua",
		"prefix": "GetNumDlcWeaponComponents"
	},
	"GetNumDlcWeaponComponentsSp": {
		"body": [
			"GetNumDlcWeaponComponentsSp(${1:dlcWeaponIndex})"
		],
		"scope": "lua",
		"prefix": "GetNumDlcWeaponComponentsSp"
	},
	"GetNumDlcWeapons": {
		"body": [
			"GetNumDlcWeapons()"
		],
		"scope": "lua",
		"prefix": "GetNumDlcWeapons"
	},
	"GetNumDlcWeaponsSp": {
		"body": [
			"GetNumDlcWeaponsSp()"
		],
		"scope": "lua",
		"prefix": "GetNumDlcWeaponsSp"
	},
	"GetNumHairColors": {
		"body": [
			"GetNumHairColors()"
		],
		"scope": "lua",
		"prefix": "GetNumHairColors"
	},
	"GetNumMakeupColors": {
		"body": [
			"GetNumMakeupColors()"
		],
		"scope": "lua",
		"prefix": "GetNumMakeupColors"
	},
	"GetNumModColors": {
		"body": [
			"GetNumModColors(${1:paintType}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetNumModColors"
	},
	"GetNumModKits": {
		"body": [
			"GetNumModKits(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetNumModKits"
	},
	"GetNumParentPedsOfType": {
		"body": [
			"GetNumParentPedsOfType(${1:type})"
		],
		"scope": "lua",
		"prefix": "GetNumParentPedsOfType"
	},
	"GetNumPlayerIdentifiers": {
		"body": [
			"GetNumPlayerIdentifiers(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetNumPlayerIdentifiers"
	},
	"GetNumPlayerIndices": {
		"body": [
			"GetNumPlayerIndices()"
		],
		"scope": "lua",
		"prefix": "GetNumPlayerIndices"
	},
	"GetNumPlayerTokens": {
		"body": [
			"GetNumPlayerTokens(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetNumPlayerTokens"
	},
	"GetNumReservedMissionObjects": {
		"body": [
			"GetNumReservedMissionObjects(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetNumReservedMissionObjects"
	},
	"GetNumReservedMissionPeds": {
		"body": [
			"GetNumReservedMissionPeds(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetNumReservedMissionPeds"
	},
	"GetNumReservedMissionVehicles": {
		"body": [
			"GetNumReservedMissionVehicles(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetNumReservedMissionVehicles"
	},
	"GetNumResourceMetadata": {
		"body": [
			"GetNumResourceMetadata(${1:resourceName}, ${2:metadataKey})"
		],
		"scope": "lua",
		"prefix": "GetNumResourceMetadata"
	},
	"GetNumResources": {
		"body": [
			"GetNumResources()"
		],
		"scope": "lua",
		"prefix": "GetNumResources"
	},
	"GetNumSuccessfulStuntJumps": {
		"body": [
			"GetNumSuccessfulStuntJumps()"
		],
		"scope": "lua",
		"prefix": "GetNumSuccessfulStuntJumps"
	},
	"GetNumTattooShopDlcItems": {
		"body": [
			"GetNumTattooShopDlcItems(${1:character})"
		],
		"scope": "lua",
		"prefix": "GetNumTattooShopDlcItems"
	},
	"GetNumUnlockedRadioStations": {
		"body": [
			"GetNumUnlockedRadioStations()"
		],
		"scope": "lua",
		"prefix": "GetNumUnlockedRadioStations"
	},
	"GetNumVehicleMods": {
		"body": [
			"GetNumVehicleMods(${1:vehicle}, ${2:modType})"
		],
		"scope": "lua",
		"prefix": "GetNumVehicleMods"
	},
	"GetNumVehicleWindowTints": {
		"body": [
			"GetNumVehicleWindowTints()"
		],
		"scope": "lua",
		"prefix": "GetNumVehicleWindowTints"
	},
	"GetObjectFragmentDamageHealth": {
		"body": [
			"GetObjectFragmentDamageHealth(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetObjectFragmentDamageHealth"
	},
	"GetObjectIndexFromEntityIndex": {
		"body": [
			"GetObjectIndexFromEntityIndex(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetObjectIndexFromEntityIndex"
	},
	"GetObjectOffsetFromCoords": {
		"body": [
			"GetObjectOffsetFromCoords(${1:xPos}, ${2:yPos}, ${3:zPos}, ${4:heading}, ${5:xOffset}, ${6:yOffset}, ${7:zOffset})"
		],
		"scope": "lua",
		"prefix": "GetObjectOffsetFromCoords"
	},
	"GetObjectTextureVariation": {
		"body": [
			"GetObjectTextureVariation(${1:object})"
		],
		"scope": "lua",
		"prefix": "GetObjectTextureVariation"
	},
	"GetOffsetFromEntityGivenWorldCoords": {
		"body": [
			"GetOffsetFromEntityGivenWorldCoords(${1:entity}, ${2:posX}, ${3:posY}, ${4:posZ})"
		],
		"scope": "lua",
		"prefix": "GetOffsetFromEntityGivenWorldCoords"
	},
	"GetOffsetFromEntityInWorldCoords": {
		"body": [
			"GetOffsetFromEntityInWorldCoords(${1:entity}, ${2:offsetX}, ${3:offsetY}, ${4:offsetZ})"
		],
		"scope": "lua",
		"prefix": "GetOffsetFromEntityInWorldCoords"
	},
	"GetOffsetFromInteriorInWorldCoords": {
		"body": [
			"GetOffsetFromInteriorInWorldCoords(${1:interior}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "GetOffsetFromInteriorInWorldCoords"
	},
	"GetOnlineVersion": {
		"body": [
			"GetOnlineVersion()"
		],
		"scope": "lua",
		"prefix": "GetOnlineVersion"
	},
	"GetOnscreenKeyboardResult": {
		"body": [
			"GetOnscreenKeyboardResult()"
		],
		"scope": "lua",
		"prefix": "GetOnscreenKeyboardResult"
	},
	"GetPackedBoolStatKey": {
		"body": [
			"GetPackedBoolStatKey(${1:index}, ${2:spStat}, ${3:charStat}, ${4:character})"
		],
		"scope": "lua",
		"prefix": "GetPackedBoolStatKey"
	},
	"GetPackedIntStatKey": {
		"body": [
			"GetPackedIntStatKey(${1:index}, ${2:spStat}, ${3:charStat}, ${4:character})"
		],
		"scope": "lua",
		"prefix": "GetPackedIntStatKey"
	},
	"GetPackedTuBoolStatKey": {
		"body": [
			"GetPackedTuBoolStatKey(${1:index}, ${2:spStat}, ${3:charStat}, ${4:character})"
		],
		"scope": "lua",
		"prefix": "GetPackedTuBoolStatKey"
	},
	"GetPackedTuIntStatKey": {
		"body": [
			"GetPackedTuIntStatKey(${1:index}, ${2:spStat}, ${3:charStat}, ${4:character})"
		],
		"scope": "lua",
		"prefix": "GetPackedTuIntStatKey"
	},
	"GetParkedVehicleDensityMultiplier": {
		"body": [
			"GetParkedVehicleDensityMultiplier()"
		],
		"scope": "lua",
		"prefix": "GetParkedVehicleDensityMultiplier"
	},
	"GetPasswordHash": {
		"body": [
			"GetPasswordHash(${1:password})"
		],
		"scope": "lua",
		"prefix": "GetPasswordHash"
	},
	"GetPauseMenuCursorPosition": {
		"body": [
			"GetPauseMenuCursorPosition()"
		],
		"scope": "lua",
		"prefix": "GetPauseMenuCursorPosition"
	},
	"GetPauseMenuSelection": {
		"body": [
			"GetPauseMenuSelection()"
		],
		"scope": "lua",
		"prefix": "GetPauseMenuSelection"
	},
	"GetPauseMenuSelectionData": {
		"body": [
			"GetPauseMenuSelectionData()"
		],
		"scope": "lua",
		"prefix": "GetPauseMenuSelectionData"
	},
	"GetPauseMenuState": {
		"body": [
			"GetPauseMenuState()"
		],
		"scope": "lua",
		"prefix": "GetPauseMenuState"
	},
	"GetPedAccuracy": {
		"body": [
			"GetPedAccuracy(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedAccuracy"
	},
	"GetPedAlertness": {
		"body": [
			"GetPedAlertness(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedAlertness"
	},
	"GetPedAmmoByType": {
		"body": [
			"GetPedAmmoByType(${1:ped}, ${2:ammoType})"
		],
		"scope": "lua",
		"prefix": "GetPedAmmoByType"
	},
	"GetPedAmmoTypeFromWeapon": {
		"body": [
			"GetPedAmmoTypeFromWeapon(${1:ped}, ${2:weaponHash})"
		],
		"scope": "lua",
		"prefix": "GetPedAmmoTypeFromWeapon"
	},
	"GetPedAmmoTypeFromWeapon_2": {
		"body": [
			"GetPedAmmoTypeFromWeapon_2(${1:ped}, ${2:weaponHash})"
		],
		"scope": "lua",
		"prefix": "GetPedAmmoTypeFromWeapon_2"
	},
	"GetPedArmour": {
		"body": [
			"GetPedArmour(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedArmour"
	},
	"GetPedAsGroupLeader": {
		"body": [
			"GetPedAsGroupLeader(${1:groupID})"
		],
		"scope": "lua",
		"prefix": "GetPedAsGroupLeader"
	},
	"GetPedAsGroupMember": {
		"body": [
			"GetPedAsGroupMember(${1:groupID}, ${2:memberNumber})"
		],
		"scope": "lua",
		"prefix": "GetPedAsGroupMember"
	},
	"GetPedBoneCoords": {
		"body": [
			"GetPedBoneCoords(${1:ped}, ${2:boneId}, ${3:offsetX}, ${4:offsetY}, ${5:offsetZ})"
		],
		"scope": "lua",
		"prefix": "GetPedBoneCoords"
	},
	"GetPedBoneIndex": {
		"body": [
			"GetPedBoneIndex(${1:ped}, ${2:boneId})"
		],
		"scope": "lua",
		"prefix": "GetPedBoneIndex"
	},
	"GetPedCauseOfDeath": {
		"body": [
			"GetPedCauseOfDeath(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedCauseOfDeath"
	},
	"GetPedCombatMovement": {
		"body": [
			"GetPedCombatMovement(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedCombatMovement"
	},
	"GetPedCombatRange": {
		"body": [
			"GetPedCombatRange(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedCombatRange"
	},
	"GetPedConfigFlag": {
		"body": [
			"GetPedConfigFlag(${1:ped}, ${2:flagId}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "GetPedConfigFlag"
	},
	"GetPedCurrentMovementSpeed": {
		"body": [
			"GetPedCurrentMovementSpeed(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedCurrentMovementSpeed"
	},
	"GetPedDecorationsState": {
		"body": [
			"GetPedDecorationsState(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedDecorationsState"
	},
	"GetPedDecorationZoneFromHashes": {
		"body": [
			"GetPedDecorationZoneFromHashes(${1:collection}, ${2:overlay})"
		],
		"scope": "lua",
		"prefix": "GetPedDecorationZoneFromHashes"
	},
	"GetPedDefensiveAreaPosition": {
		"body": [
			"GetPedDefensiveAreaPosition(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetPedDefensiveAreaPosition"
	},
	"GetPedDensityMultiplier": {
		"body": [
			"GetPedDensityMultiplier()"
		],
		"scope": "lua",
		"prefix": "GetPedDensityMultiplier"
	},
	"GetPedDesiredHeading": {
		"body": [
			"GetPedDesiredHeading(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedDesiredHeading"
	},
	"GetPedDesiredMoveBlendRatio": {
		"body": [
			"GetPedDesiredMoveBlendRatio(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedDesiredMoveBlendRatio"
	},
	"GetPedDrawableVariation": {
		"body": [
			"GetPedDrawableVariation(${1:ped}, ${2:componentId})"
		],
		"scope": "lua",
		"prefix": "GetPedDrawableVariation"
	},
	"GetPedEmissiveIntensity": {
		"body": [
			"GetPedEmissiveIntensity(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedEmissiveIntensity"
	},
	"GetPedEnveffScale": {
		"body": [
			"GetPedEnveffScale(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedEnveffScale"
	},
	"GetPedEventData": {
		"body": [
			"GetPedEventData(${1:ped}, ${2:eventType}, ${3:outData})"
		],
		"scope": "lua",
		"prefix": "GetPedEventData"
	},
	"GetPedExtractedDisplacement": {
		"body": [
			"GetPedExtractedDisplacement(${1:ped}, ${2:worldSpace})"
		],
		"scope": "lua",
		"prefix": "GetPedExtractedDisplacement"
	},
	"GetPedEyeColor": {
		"body": [
			"GetPedEyeColor(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedEyeColor"
	},
	"GetPedFaceFeature": {
		"body": [
			"GetPedFaceFeature(${1:ped}, ${2:index})"
		],
		"scope": "lua",
		"prefix": "GetPedFaceFeature"
	},
	"GetPedGroupIndex": {
		"body": [
			"GetPedGroupIndex(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedGroupIndex"
	},
	"GetPedHairColor": {
		"body": [
			"GetPedHairColor(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedHairColor"
	},
	"GetPedHairHighlightColor": {
		"body": [
			"GetPedHairHighlightColor(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedHairHighlightColor"
	},
	"GetPedHairRgbColor": {
		"body": [
			"GetPedHairRgbColor(${1:hairColorIndex})"
		],
		"scope": "lua",
		"prefix": "GetPedHairRgbColor"
	},
	"GetPedHeadBlendData": {
		"body": [
			"GetPedHeadBlendData(${1:ped}, ${2:headBlendData})"
		],
		"scope": "lua",
		"prefix": "GetPedHeadBlendData"
	},
	"GetPedHeadBlendFirstIndex": {
		"body": [
			"GetPedHeadBlendFirstIndex(${1:type})"
		],
		"scope": "lua",
		"prefix": "GetPedHeadBlendFirstIndex"
	},
	"GetPedHeadOverlayData": {
		"body": [
			"GetPedHeadOverlayData(${1:ped}, ${2:index})"
		],
		"scope": "lua",
		"prefix": "GetPedHeadOverlayData"
	},
	"GetPedHeadOverlayNum": {
		"body": [
			"GetPedHeadOverlayNum(${1:overlayID})"
		],
		"scope": "lua",
		"prefix": "GetPedHeadOverlayNum"
	},
	"GetPedHeadOverlayValue": {
		"body": [
			"GetPedHeadOverlayValue(${1:ped}, ${2:overlayID})"
		],
		"scope": "lua",
		"prefix": "GetPedHeadOverlayValue"
	},
	"GetPedheadshotTxdString": {
		"body": [
			"GetPedheadshotTxdString(${1:handle})"
		],
		"scope": "lua",
		"prefix": "GetPedheadshotTxdString"
	},
	"GetPedHelmetStoredHatPropIndex": {
		"body": [
			"GetPedHelmetStoredHatPropIndex(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedHelmetStoredHatPropIndex"
	},
	"GetPedHelmetStoredHatTexIndex": {
		"body": [
			"GetPedHelmetStoredHatTexIndex(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedHelmetStoredHatTexIndex"
	},
	"GetPedIndexFromEntityIndex": {
		"body": [
			"GetPedIndexFromEntityIndex(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetPedIndexFromEntityIndex"
	},
	"GetPedInVehicleSeat": {
		"body": [
			"GetPedInVehicleSeat(${1:vehicle}, ${2:index})"
		],
		"scope": "lua",
		"prefix": "GetPedInVehicleSeat"
	},
	"GetPedLastDamageBone": {
		"body": [
			"GetPedLastDamageBone(${1:ped}, ${2:outBone})"
		],
		"scope": "lua",
		"prefix": "GetPedLastDamageBone"
	},
	"GetPedLastWeaponImpactCoord": {
		"body": [
			"GetPedLastWeaponImpactCoord(${1:ped}, ${2:coords})"
		],
		"scope": "lua",
		"prefix": "GetPedLastWeaponImpactCoord"
	},
	"GetPedMakeupRgbColor": {
		"body": [
			"GetPedMakeupRgbColor(${1:makeupColorIndex})"
		],
		"scope": "lua",
		"prefix": "GetPedMakeupRgbColor"
	},
	"GetPedMaxHealth": {
		"body": [
			"GetPedMaxHealth(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedMaxHealth"
	},
	"GetPedMoney": {
		"body": [
			"GetPedMoney(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedMoney"
	},
	"GetPedNearbyPeds": {
		"body": [
			"GetPedNearbyPeds(${1:ped}, ${2:ignore})"
		],
		"scope": "lua",
		"prefix": "GetPedNearbyPeds"
	},
	"GetPedNearbyVehicles": {
		"body": [
			"GetPedNearbyVehicles(${1:ped}, ${2:sizeAndVehs})"
		],
		"scope": "lua",
		"prefix": "GetPedNearbyVehicles"
	},
	"GetPedPaletteVariation": {
		"body": [
			"GetPedPaletteVariation(${1:ped}, ${2:componentId})"
		],
		"scope": "lua",
		"prefix": "GetPedPaletteVariation"
	},
	"GetPedParachuteLandingType": {
		"body": [
			"GetPedParachuteLandingType(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedParachuteLandingType"
	},
	"GetPedParachuteState": {
		"body": [
			"GetPedParachuteState(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedParachuteState"
	},
	"GetPedParachuteTintIndex": {
		"body": [
			"GetPedParachuteTintIndex(${1:ped}, ${2:outTintIndex})"
		],
		"scope": "lua",
		"prefix": "GetPedParachuteTintIndex"
	},
	"GetPedPropIndex": {
		"body": [
			"GetPedPropIndex(${1:ped}, ${2:componentId})"
		],
		"scope": "lua",
		"prefix": "GetPedPropIndex"
	},
	"GetPedPropTextureIndex": {
		"body": [
			"GetPedPropTextureIndex(${1:ped}, ${2:componentId})"
		],
		"scope": "lua",
		"prefix": "GetPedPropTextureIndex"
	},
	"GetPedRagdollBoneIndex": {
		"body": [
			"GetPedRagdollBoneIndex(${1:ped}, ${2:bone})"
		],
		"scope": "lua",
		"prefix": "GetPedRagdollBoneIndex"
	},
	"GetPedRelationshipGroupDefaultHash": {
		"body": [
			"GetPedRelationshipGroupDefaultHash(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedRelationshipGroupDefaultHash"
	},
	"GetPedRelationshipGroupHash": {
		"body": [
			"GetPedRelationshipGroupHash(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedRelationshipGroupHash"
	},
	"GetPedResetFlag": {
		"body": [
			"GetPedResetFlag(${1:ped}, ${2:flagId})"
		],
		"scope": "lua",
		"prefix": "GetPedResetFlag"
	},
	"GetPedsJacker": {
		"body": [
			"GetPedsJacker(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedsJacker"
	},
	"GetPedSourceOfDamage": {
		"body": [
			"GetPedSourceOfDamage(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedSourceOfDamage"
	},
	"GetPedSourceOfDeath": {
		"body": [
			"GetPedSourceOfDeath(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedSourceOfDeath"
	},
	"GetPedStealthMovement": {
		"body": [
			"GetPedStealthMovement(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedStealthMovement"
	},
	"GetPedTextureVariation": {
		"body": [
			"GetPedTextureVariation(${1:ped}, ${2:componentId})"
		],
		"scope": "lua",
		"prefix": "GetPedTextureVariation"
	},
	"GetPedTimeOfDeath": {
		"body": [
			"GetPedTimeOfDeath(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedTimeOfDeath"
	},
	"GetPedType": {
		"body": [
			"GetPedType(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedType"
	},
	"GetPedUsingVehicleDoor": {
		"body": [
			"GetPedUsingVehicleDoor(${1:vehicle}, ${2:doorIndex})"
		],
		"scope": "lua",
		"prefix": "GetPedUsingVehicleDoor"
	},
	"GetPedVisualFieldCenterAngle": {
		"body": [
			"GetPedVisualFieldCenterAngle(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedVisualFieldCenterAngle"
	},
	"GetPedWaypointDistance": {
		"body": [
			"GetPedWaypointDistance(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetPedWaypointDistance"
	},
	"GetPedWaypointProgress": {
		"body": [
			"GetPedWaypointProgress(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPedWaypointProgress"
	},
	"GetPedWeaponLiveryColor": {
		"body": [
			"GetPedWeaponLiveryColor(${1:ped}, ${2:weaponHash}, ${3:camoComponentHash})"
		],
		"scope": "lua",
		"prefix": "GetPedWeaponLiveryColor"
	},
	"GetPedWeaponTintIndex": {
		"body": [
			"GetPedWeaponTintIndex(${1:ped}, ${2:weaponHash})"
		],
		"scope": "lua",
		"prefix": "GetPedWeaponTintIndex"
	},
	"GetPedWeapontypeInSlot": {
		"body": [
			"GetPedWeapontypeInSlot(${1:ped}, ${2:weaponSlot})"
		],
		"scope": "lua",
		"prefix": "GetPedWeapontypeInSlot"
	},
	"GetPhoneGestureAnimCurrentTime": {
		"body": [
			"GetPhoneGestureAnimCurrentTime(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPhoneGestureAnimCurrentTime"
	},
	"GetPhoneGestureAnimTotalTime": {
		"body": [
			"GetPhoneGestureAnimTotalTime(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPhoneGestureAnimTotalTime"
	},
	"GetPickupCoords": {
		"body": [
			"GetPickupCoords(${1:pickup})"
		],
		"scope": "lua",
		"prefix": "GetPickupCoords"
	},
	"GetPickupGenerationRangeMultiplier": {
		"body": [
			"GetPickupGenerationRangeMultiplier()"
		],
		"scope": "lua",
		"prefix": "GetPickupGenerationRangeMultiplier"
	},
	"GetPickupHash": {
		"body": [
			"GetPickupHash(${1:pickupHash})"
		],
		"scope": "lua",
		"prefix": "GetPickupHash"
	},
	"GetPickupHashFromWeapon": {
		"body": [
			"GetPickupHashFromWeapon(${1:weapon})"
		],
		"scope": "lua",
		"prefix": "GetPickupHashFromWeapon"
	},
	"GetPickupObject": {
		"body": [
			"GetPickupObject(${1:pickup})"
		],
		"scope": "lua",
		"prefix": "GetPickupObject"
	},
	"GetPlayerCameraRotation": {
		"body": [
			"GetPlayerCameraRotation(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerCameraRotation"
	},
	"GetPlayerCurrentStealthNoise": {
		"body": [
			"GetPlayerCurrentStealthNoise(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetPlayerCurrentStealthNoise"
	},
	"GetPlayerEndpoint": {
		"body": [
			"GetPlayerEndpoint(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerEndpoint"
	},
	"GetPlayerFakeWantedLevel": {
		"body": [
			"GetPlayerFakeWantedLevel(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerFakeWantedLevel"
	},
	"GetPlayerFromIndex": {
		"body": [
			"GetPlayerFromIndex(${1:index})"
		],
		"scope": "lua",
		"prefix": "GetPlayerFromIndex"
	},
	"GetPlayerFromServerId": {
		"body": [
			"GetPlayerFromServerId(${1:serverId})"
		],
		"scope": "lua",
		"prefix": "GetPlayerFromServerId"
	},
	"GetPlayerGroup": {
		"body": [
			"GetPlayerGroup(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetPlayerGroup"
	},
	"GetPlayerGuid": {
		"body": [
			"GetPlayerGuid(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerGuid"
	},
	"GetPlayerHasReserveParachute": {
		"body": [
			"GetPlayerHasReserveParachute(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetPlayerHasReserveParachute"
	},
	"GetPlayerHealthRechargeLimit": {
		"body": [
			"GetPlayerHealthRechargeLimit(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetPlayerHealthRechargeLimit"
	},
	"GetPlayerIdentifier": {
		"body": [
			"GetPlayerIdentifier(${1:playerSrc}, ${2:identifier})"
		],
		"scope": "lua",
		"prefix": "GetPlayerIdentifier"
	},
	"GetPlayerIndex": {
		"body": [
			"GetPlayerIndex()"
		],
		"scope": "lua",
		"prefix": "GetPlayerIndex"
	},
	"GetPlayerInvincible": {
		"body": [
			"GetPlayerInvincible(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerInvincible"
	},
	"GetPlayerInvincible_2": {
		"body": [
			"GetPlayerInvincible_2(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetPlayerInvincible_2"
	},
	"GetPlayerLastMsg": {
		"body": [
			"GetPlayerLastMsg(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerLastMsg"
	},
	"GetPlayerMaxArmour": {
		"body": [
			"GetPlayerMaxArmour(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerMaxArmour"
	},
	"GetPlayerMaxHealth": {
		"body": [
			"GetPlayerMaxHealth(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerMaxHealth"
	},
	"GetPlayerMeleeWeaponDamageModifier": {
		"body": [
			"GetPlayerMeleeWeaponDamageModifier(${1:playerId})"
		],
		"scope": "lua",
		"prefix": "GetPlayerMeleeWeaponDamageModifier"
	},
	"GetPlayerMeleeWeaponDefenseModifier": {
		"body": [
			"GetPlayerMeleeWeaponDefenseModifier(${1:playerId})"
		],
		"scope": "lua",
		"prefix": "GetPlayerMeleeWeaponDefenseModifier"
	},
	"GetPlayerName": {
		"body": [
			"GetPlayerName(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerName"
	},
	"GetPlayerParachutePackTintIndex": {
		"body": [
			"GetPlayerParachutePackTintIndex(${1:player}, ${2:tintIndex})"
		],
		"scope": "lua",
		"prefix": "GetPlayerParachutePackTintIndex"
	},
	"GetPlayerParachuteSmokeTrailColor": {
		"body": [
			"GetPlayerParachuteSmokeTrailColor(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetPlayerParachuteSmokeTrailColor"
	},
	"GetPlayerParachuteTintIndex": {
		"body": [
			"GetPlayerParachuteTintIndex(${1:player}, ${2:tintIndex})"
		],
		"scope": "lua",
		"prefix": "GetPlayerParachuteTintIndex"
	},
	"GetPlayerPed": {
		"body": [
			"GetPlayerPed(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerPed"
	},
	"GetPlayerPedIsFollowing": {
		"body": [
			"GetPlayerPedIsFollowing(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetPlayerPedIsFollowing"
	},
	"GetPlayerPedScriptIndex": {
		"body": [
			"GetPlayerPedScriptIndex(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetPlayerPedScriptIndex"
	},
	"GetPlayerPing": {
		"body": [
			"GetPlayerPing(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerPing"
	},
	"GetPlayerRadioStationGenre": {
		"body": [
			"GetPlayerRadioStationGenre()"
		],
		"scope": "lua",
		"prefix": "GetPlayerRadioStationGenre"
	},
	"GetPlayerRadioStationIndex": {
		"body": [
			"GetPlayerRadioStationIndex()"
		],
		"scope": "lua",
		"prefix": "GetPlayerRadioStationIndex"
	},
	"GetPlayerRadioStationName": {
		"body": [
			"GetPlayerRadioStationName()"
		],
		"scope": "lua",
		"prefix": "GetPlayerRadioStationName"
	},
	"GetPlayerReserveParachuteTintIndex": {
		"body": [
			"GetPlayerReserveParachuteTintIndex(${1:player}, ${2:index})"
		],
		"scope": "lua",
		"prefix": "GetPlayerReserveParachuteTintIndex"
	},
	"GetPlayerRgbColour": {
		"body": [
			"GetPlayerRgbColour(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetPlayerRgbColour"
	},
	"GetPlayerRoutingBucket": {
		"body": [
			"GetPlayerRoutingBucket(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerRoutingBucket"
	},
	"GetPlayerServerId": {
		"body": [
			"GetPlayerServerId(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetPlayerServerId"
	},
	"GetPlayerShortSwitchState": {
		"body": [
			"GetPlayerShortSwitchState()"
		],
		"scope": "lua",
		"prefix": "GetPlayerShortSwitchState"
	},
	"GetPlayersLastVehicle": {
		"body": [
			"GetPlayersLastVehicle()"
		],
		"scope": "lua",
		"prefix": "GetPlayersLastVehicle"
	},
	"GetPlayerSprintStaminaRemaining": {
		"body": [
			"GetPlayerSprintStaminaRemaining(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetPlayerSprintStaminaRemaining"
	},
	"GetPlayerSprintTimeRemaining": {
		"body": [
			"GetPlayerSprintTimeRemaining(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetPlayerSprintTimeRemaining"
	},
	"GetPlayerSwitchInterpOutDuration": {
		"body": [
			"GetPlayerSwitchInterpOutDuration()"
		],
		"scope": "lua",
		"prefix": "GetPlayerSwitchInterpOutDuration"
	},
	"GetPlayerSwitchJumpCutIndex": {
		"body": [
			"GetPlayerSwitchJumpCutIndex()"
		],
		"scope": "lua",
		"prefix": "GetPlayerSwitchJumpCutIndex"
	},
	"GetPlayerSwitchState": {
		"body": [
			"GetPlayerSwitchState()"
		],
		"scope": "lua",
		"prefix": "GetPlayerSwitchState"
	},
	"GetPlayerSwitchType": {
		"body": [
			"GetPlayerSwitchType()"
		],
		"scope": "lua",
		"prefix": "GetPlayerSwitchType"
	},
	"GetPlayerTargetEntity": {
		"body": [
			"GetPlayerTargetEntity(${1:player}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "GetPlayerTargetEntity"
	},
	"GetPlayerTeam": {
		"body": [
			"GetPlayerTeam(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerTeam"
	},
	"GetPlayerTimeInPursuit": {
		"body": [
			"GetPlayerTimeInPursuit(${1:playerSrc}, ${2:lastPursuit})"
		],
		"scope": "lua",
		"prefix": "GetPlayerTimeInPursuit"
	},
	"GetPlayerToken": {
		"body": [
			"GetPlayerToken(${1:playerSrc}, ${2:index})"
		],
		"scope": "lua",
		"prefix": "GetPlayerToken"
	},
	"GetPlayerUnderwaterTimeRemaining": {
		"body": [
			"GetPlayerUnderwaterTimeRemaining(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetPlayerUnderwaterTimeRemaining"
	},
	"GetPlayerVehicleDamageModifier": {
		"body": [
			"GetPlayerVehicleDamageModifier(${1:playerId})"
		],
		"scope": "lua",
		"prefix": "GetPlayerVehicleDamageModifier"
	},
	"GetPlayerVehicleDefenseModifier": {
		"body": [
			"GetPlayerVehicleDefenseModifier(${1:playerId})"
		],
		"scope": "lua",
		"prefix": "GetPlayerVehicleDefenseModifier"
	},
	"GetPlayerWantedCentrePosition": {
		"body": [
			"GetPlayerWantedCentrePosition(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerWantedCentrePosition"
	},
	"GetPlayerWantedLevel": {
		"body": [
			"GetPlayerWantedLevel(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "GetPlayerWantedLevel"
	},
	"GetPlayerWeaponDamageModifier": {
		"body": [
			"GetPlayerWeaponDamageModifier(${1:playerId})"
		],
		"scope": "lua",
		"prefix": "GetPlayerWeaponDamageModifier"
	},
	"GetPlayerWeaponDefenseModifier": {
		"body": [
			"GetPlayerWeaponDefenseModifier(${1:playerId})"
		],
		"scope": "lua",
		"prefix": "GetPlayerWeaponDefenseModifier"
	},
	"GetPlayerWeaponDefenseModifier_2": {
		"body": [
			"GetPlayerWeaponDefenseModifier_2(${1:playerId})"
		],
		"scope": "lua",
		"prefix": "GetPlayerWeaponDefenseModifier_2"
	},
	"GetPointOnRoadSide": {
		"body": [
			"GetPointOnRoadSide(${1:x}, ${2:y}, ${3:z}, ${4:p3}, ${5:outPosition})"
		],
		"scope": "lua",
		"prefix": "GetPointOnRoadSide"
	},
	"GetPositionInRecording": {
		"body": [
			"GetPositionInRecording(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetPositionInRecording"
	},
	"GetPositionOfVehicleRecordingAtTime": {
		"body": [
			"GetPositionOfVehicleRecordingAtTime(${1:recording}, ${2:time}, ${3:script})"
		],
		"scope": "lua",
		"prefix": "GetPositionOfVehicleRecordingAtTime"
	},
	"GetPositionOfVehicleRecordingIdAtTime": {
		"body": [
			"GetPositionOfVehicleRecordingIdAtTime(${1:id}, ${2:time})"
		],
		"scope": "lua",
		"prefix": "GetPositionOfVehicleRecordingIdAtTime"
	},
	"GetPosixTime": {
		"body": [
			"GetPosixTime()"
		],
		"scope": "lua",
		"prefix": "GetPosixTime"
	},
	"GetPowerSavingModeDuration": {
		"body": [
			"GetPowerSavingModeDuration()"
		],
		"scope": "lua",
		"prefix": "GetPowerSavingModeDuration"
	},
	"GetPrevWeatherTypeHashName": {
		"body": [
			"GetPrevWeatherTypeHashName()"
		],
		"scope": "lua",
		"prefix": "GetPrevWeatherTypeHashName"
	},
	"GetProfileSetting": {
		"body": [
			"GetProfileSetting(${1:profileSetting})"
		],
		"scope": "lua",
		"prefix": "GetProfileSetting"
	},
	"GetProjectileNearPed": {
		"body": [
			"GetProjectileNearPed(${1:ped}, ${2:weaponhash}, ${3:radius}, ${4:ownedByPlayer})"
		],
		"scope": "lua",
		"prefix": "GetProjectileNearPed"
	},
	"GetRadioStationName": {
		"body": [
			"GetRadioStationName(${1:radioStation})"
		],
		"scope": "lua",
		"prefix": "GetRadioStationName"
	},
	"GetRainLevel": {
		"body": [
			"GetRainLevel()"
		],
		"scope": "lua",
		"prefix": "GetRainLevel"
	},
	"GetRandomEventFlag": {
		"body": [
			"GetRandomEventFlag()"
		],
		"scope": "lua",
		"prefix": "GetRandomEventFlag"
	},
	"GetRandomFloatInRange": {
		"body": [
			"GetRandomFloatInRange(${1:startRange}, ${2:endRange})"
		],
		"scope": "lua",
		"prefix": "GetRandomFloatInRange"
	},
	"GetRandomIntInRange": {
		"body": [
			"GetRandomIntInRange(${1:startRange}, ${2:endRange})"
		],
		"scope": "lua",
		"prefix": "GetRandomIntInRange"
	},
	"GetRandomIntInRange_2": {
		"body": [
			"GetRandomIntInRange_2(${1:startRange}, ${2:endRange})"
		],
		"scope": "lua",
		"prefix": "GetRandomIntInRange_2"
	},
	"GetRandomPedAtCoord": {
		"body": [
			"GetRandomPedAtCoord(${1:x}, ${2:y}, ${3:z}, ${4:xRadius}, ${5:yRadius}, ${6:zRadius}, ${7:pedType})"
		],
		"scope": "lua",
		"prefix": "GetRandomPedAtCoord"
	},
	"GetRandomVehicleBackBumperInSphere": {
		"body": [
			"GetRandomVehicleBackBumperInSphere(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "GetRandomVehicleBackBumperInSphere"
	},
	"GetRandomVehicleDensityMultiplier": {
		"body": [
			"GetRandomVehicleDensityMultiplier()"
		],
		"scope": "lua",
		"prefix": "GetRandomVehicleDensityMultiplier"
	},
	"GetRandomVehicleFrontBumperInSphere": {
		"body": [
			"GetRandomVehicleFrontBumperInSphere(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "GetRandomVehicleFrontBumperInSphere"
	},
	"GetRandomVehicleInSphere": {
		"body": [
			"GetRandomVehicleInSphere(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:modelHash}, ${6:flags})"
		],
		"scope": "lua",
		"prefix": "GetRandomVehicleInSphere"
	},
	"GetRandomVehicleModelInMemory": {
		"body": [
			"GetRandomVehicleModelInMemory(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetRandomVehicleModelInMemory"
	},
	"GetRandomVehicleNode": {
		"body": [
			"GetRandomVehicleNode(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "GetRandomVehicleNode"
	},
	"GetRayfireMapObject": {
		"body": [
			"GetRayfireMapObject(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:name})"
		],
		"scope": "lua",
		"prefix": "GetRayfireMapObject"
	},
	"GetRayfireMapObjectAnimPhase": {
		"body": [
			"GetRayfireMapObjectAnimPhase(${1:object})"
		],
		"scope": "lua",
		"prefix": "GetRayfireMapObjectAnimPhase"
	},
	"GetRegisteredCommands": {
		"body": [
			"GetRegisteredCommands()"
		],
		"scope": "lua",
		"prefix": "GetRegisteredCommands"
	},
	"GetRelationshipBetweenGroups": {
		"body": [
			"GetRelationshipBetweenGroups(${1:group1}, ${2:group2})"
		],
		"scope": "lua",
		"prefix": "GetRelationshipBetweenGroups"
	},
	"GetRelationshipBetweenPeds": {
		"body": [
			"GetRelationshipBetweenPeds(${1:ped1}, ${2:ped2})"
		],
		"scope": "lua",
		"prefix": "GetRelationshipBetweenPeds"
	},
	"GetRenderedCharacterHeight": {
		"body": [
			"GetRenderedCharacterHeight(${1:size}, ${2:font})"
		],
		"scope": "lua",
		"prefix": "GetRenderedCharacterHeight"
	},
	"GetRenderingCam": {
		"body": [
			"GetRenderingCam()"
		],
		"scope": "lua",
		"prefix": "GetRenderingCam"
	},
	"GetReplayStatAtIndex": {
		"body": [
			"GetReplayStatAtIndex(${1:index})"
		],
		"scope": "lua",
		"prefix": "GetReplayStatAtIndex"
	},
	"GetReplayStatCount": {
		"body": [
			"GetReplayStatCount()"
		],
		"scope": "lua",
		"prefix": "GetReplayStatCount"
	},
	"GetReplayStatMissionType": {
		"body": [
			"GetReplayStatMissionType()"
		],
		"scope": "lua",
		"prefix": "GetReplayStatMissionType"
	},
	"GetRequestingnightvision": {
		"body": [
			"GetRequestingnightvision()"
		],
		"scope": "lua",
		"prefix": "GetRequestingnightvision"
	},
	"GetResourceByFindIndex": {
		"body": [
			"GetResourceByFindIndex(${1:findIndex})"
		],
		"scope": "lua",
		"prefix": "GetResourceByFindIndex"
	},
	"GetResourceKvpFloat": {
		"body": [
			"GetResourceKvpFloat(${1:key})"
		],
		"scope": "lua",
		"prefix": "GetResourceKvpFloat"
	},
	"GetResourceKvpInt": {
		"body": [
			"GetResourceKvpInt(${1:key})"
		],
		"scope": "lua",
		"prefix": "GetResourceKvpInt"
	},
	"GetResourceKvpString": {
		"body": [
			"GetResourceKvpString(${1:key})"
		],
		"scope": "lua",
		"prefix": "GetResourceKvpString"
	},
	"GetResourceMetadata": {
		"body": [
			"GetResourceMetadata(${1:resourceName}, ${2:metadataKey}, ${3:index})"
		],
		"scope": "lua",
		"prefix": "GetResourceMetadata"
	},
	"GetResourcePath": {
		"body": [
			"GetResourcePath(${1:resourceName})"
		],
		"scope": "lua",
		"prefix": "GetResourcePath"
	},
	"GetResourceState": {
		"body": [
			"GetResourceState(${1:resourceName})"
		],
		"scope": "lua",
		"prefix": "GetResourceState"
	},
	"GetRoadSidePointWithHeading": {
		"body": [
			"GetRoadSidePointWithHeading(${1:x}, ${2:y}, ${3:z}, ${4:heading}, ${5:outPosition})"
		],
		"scope": "lua",
		"prefix": "GetRoadSidePointWithHeading"
	},
	"GetRoomKeyForGameViewport": {
		"body": [
			"GetRoomKeyForGameViewport()"
		],
		"scope": "lua",
		"prefix": "GetRoomKeyForGameViewport"
	},
	"GetRoomKeyFromEntity": {
		"body": [
			"GetRoomKeyFromEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetRoomKeyFromEntity"
	},
	"GetRopeLastVertexCoord": {
		"body": [
			"GetRopeLastVertexCoord(${1:ropeId})"
		],
		"scope": "lua",
		"prefix": "GetRopeLastVertexCoord"
	},
	"GetRopeVertexCoord": {
		"body": [
			"GetRopeVertexCoord(${1:ropeId}, ${2:vertex})"
		],
		"scope": "lua",
		"prefix": "GetRopeVertexCoord"
	},
	"GetRopeVertexCount": {
		"body": [
			"GetRopeVertexCount(${1:ropeId})"
		],
		"scope": "lua",
		"prefix": "GetRopeVertexCount"
	},
	"GetRotationOfVehicleRecordingAtTime": {
		"body": [
			"GetRotationOfVehicleRecordingAtTime(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "GetRotationOfVehicleRecordingAtTime"
	},
	"GetRotationOfVehicleRecordingIdAtTime": {
		"body": [
			"GetRotationOfVehicleRecordingIdAtTime(${1:id}, ${2:time})"
		],
		"scope": "lua",
		"prefix": "GetRotationOfVehicleRecordingIdAtTime"
	},
	"GetRuntimeTextureHeight": {
		"body": [
			"GetRuntimeTextureHeight(${1:tex})"
		],
		"scope": "lua",
		"prefix": "GetRuntimeTextureHeight"
	},
	"GetRuntimeTexturePitch": {
		"body": [
			"GetRuntimeTexturePitch(${1:tex})"
		],
		"scope": "lua",
		"prefix": "GetRuntimeTexturePitch"
	},
	"GetRuntimeTextureWidth": {
		"body": [
			"GetRuntimeTextureWidth(${1:tex})"
		],
		"scope": "lua",
		"prefix": "GetRuntimeTextureWidth"
	},
	"GetSafeCoordForPed": {
		"body": [
			"GetSafeCoordForPed(${1:x}, ${2:y}, ${3:z}, ${4:onGround}, ${5:flags})"
		],
		"scope": "lua",
		"prefix": "GetSafeCoordForPed"
	},
	"GetSafePickupCoords": {
		"body": [
			"GetSafePickupCoords(${1:x}, ${2:y}, ${3:z}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "GetSafePickupCoords"
	},
	"GetSafeZoneSize": {
		"body": [
			"GetSafeZoneSize()"
		],
		"scope": "lua",
		"prefix": "GetSafeZoneSize"
	},
	"GetScaleformMovieMethodReturnValueBool": {
		"body": [
			"GetScaleformMovieMethodReturnValueBool(${1:methodReturn})"
		],
		"scope": "lua",
		"prefix": "GetScaleformMovieMethodReturnValueBool"
	},
	"GetScaleformMovieMethodReturnValueInt": {
		"body": [
			"GetScaleformMovieMethodReturnValueInt(${1:method_return})"
		],
		"scope": "lua",
		"prefix": "GetScaleformMovieMethodReturnValueInt"
	},
	"GetScaleformMovieMethodReturnValueString": {
		"body": [
			"GetScaleformMovieMethodReturnValueString(${1:method_return})"
		],
		"scope": "lua",
		"prefix": "GetScaleformMovieMethodReturnValueString"
	},
	"GetScenarioPedDensityMultiplier": {
		"body": [
			"GetScenarioPedDensityMultiplier()"
		],
		"scope": "lua",
		"prefix": "GetScenarioPedDensityMultiplier"
	},
	"GetScreenblurFadeCurrentTime": {
		"body": [
			"GetScreenblurFadeCurrentTime()"
		],
		"scope": "lua",
		"prefix": "GetScreenblurFadeCurrentTime"
	},
	"GetScreenCoordFromWorldCoord": {
		"body": [
			"GetScreenCoordFromWorldCoord(${1:worldX}, ${2:worldY}, ${3:worldZ})"
		],
		"scope": "lua",
		"prefix": "GetScreenCoordFromWorldCoord"
	},
	"GetScreenResolution": {
		"body": [
			"GetScreenResolution()"
		],
		"scope": "lua",
		"prefix": "GetScreenResolution"
	},
	"GetScriptedCoverPointCoords": {
		"body": [
			"GetScriptedCoverPointCoords(${1:coverpoint})"
		],
		"scope": "lua",
		"prefix": "GetScriptedCoverPointCoords"
	},
	"GetScriptGfxPosition": {
		"body": [
			"GetScriptGfxPosition(${1:x}, ${2:y})"
		],
		"scope": "lua",
		"prefix": "GetScriptGfxPosition"
	},
	"GetScriptTaskStatus": {
		"body": [
			"GetScriptTaskStatus(${1:ped}, ${2:taskHash})"
		],
		"scope": "lua",
		"prefix": "GetScriptTaskStatus"
	},
	"GetSeatPedIsTryingToEnter": {
		"body": [
			"GetSeatPedIsTryingToEnter(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetSeatPedIsTryingToEnter"
	},
	"GetSelectedPedWeapon": {
		"body": [
			"GetSelectedPedWeapon(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetSelectedPedWeapon"
	},
	"GetSequenceProgress": {
		"body": [
			"GetSequenceProgress(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetSequenceProgress"
	},
	"GetShapeTestResult": {
		"body": [
			"GetShapeTestResult(${1:shapeTestHandle})"
		],
		"scope": "lua",
		"prefix": "GetShapeTestResult"
	},
	"GetShapeTestResultIncludingMaterial": {
		"body": [
			"GetShapeTestResultIncludingMaterial(${1:shapeTestHandle})"
		],
		"scope": "lua",
		"prefix": "GetShapeTestResultIncludingMaterial"
	},
	"GetShopPedApparelForcedComponentCount": {
		"body": [
			"GetShopPedApparelForcedComponentCount(${1:componentHash})"
		],
		"scope": "lua",
		"prefix": "GetShopPedApparelForcedComponentCount"
	},
	"GetShopPedApparelForcedPropCount": {
		"body": [
			"GetShopPedApparelForcedPropCount(${1:componentHash})"
		],
		"scope": "lua",
		"prefix": "GetShopPedApparelForcedPropCount"
	},
	"GetShopPedApparelVariantComponentCount": {
		"body": [
			"GetShopPedApparelVariantComponentCount(${1:componentHash})"
		],
		"scope": "lua",
		"prefix": "GetShopPedApparelVariantComponentCount"
	},
	"GetShopPedApparelVariantPropCount": {
		"body": [
			"GetShopPedApparelVariantPropCount(${1:propHash})"
		],
		"scope": "lua",
		"prefix": "GetShopPedApparelVariantPropCount"
	},
	"GetShopPedComponent": {
		"body": [
			"GetShopPedComponent(${1:componentHash}, ${2:outComponent})"
		],
		"scope": "lua",
		"prefix": "GetShopPedComponent"
	},
	"GetShopPedOutfit": {
		"body": [
			"GetShopPedOutfit(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetShopPedOutfit"
	},
	"GetShopPedOutfitComponentVariant": {
		"body": [
			"GetShopPedOutfitComponentVariant(${1:outfit}, ${2:slot}, ${3:item})"
		],
		"scope": "lua",
		"prefix": "GetShopPedOutfitComponentVariant"
	},
	"GetShopPedOutfitLocate": {
		"body": [
			"GetShopPedOutfitLocate(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetShopPedOutfitLocate"
	},
	"GetShopPedOutfitPropVariant": {
		"body": [
			"GetShopPedOutfitPropVariant(${1:outfit}, ${2:slot}, ${3:item})"
		],
		"scope": "lua",
		"prefix": "GetShopPedOutfitPropVariant"
	},
	"GetShopPedProp": {
		"body": [
			"GetShopPedProp(${1:componentHash}, ${2:outProp})"
		],
		"scope": "lua",
		"prefix": "GetShopPedProp"
	},
	"GetShopPedQueryComponent": {
		"body": [
			"GetShopPedQueryComponent(${1:componentId}, ${2:outComponent})"
		],
		"scope": "lua",
		"prefix": "GetShopPedQueryComponent"
	},
	"GetShopPedQueryOutfit": {
		"body": [
			"GetShopPedQueryOutfit(${1:p0}, ${2:outfit})"
		],
		"scope": "lua",
		"prefix": "GetShopPedQueryOutfit"
	},
	"GetShopPedQueryProp": {
		"body": [
			"GetShopPedQueryProp(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetShopPedQueryProp"
	},
	"GetSizeOfSaveData": {
		"body": [
			"GetSizeOfSaveData(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetSizeOfSaveData"
	},
	"GetSnowLevel": {
		"body": [
			"GetSnowLevel()"
		],
		"scope": "lua",
		"prefix": "GetSnowLevel"
	},
	"GetSoundId": {
		"body": [
			"GetSoundId()"
		],
		"scope": "lua",
		"prefix": "GetSoundId"
	},
	"GetSoundIdFromNetworkId": {
		"body": [
			"GetSoundIdFromNetworkId(${1:netId})"
		],
		"scope": "lua",
		"prefix": "GetSoundIdFromNetworkId"
	},
	"GetStandardBlipEnumId": {
		"body": [
			"GetStandardBlipEnumId()"
		],
		"scope": "lua",
		"prefix": "GetStandardBlipEnumId"
	},
	"GetStateBagValue": {
		"body": [
			"GetStateBagValue(${1:bagName}, ${2:key})"
		],
		"scope": "lua",
		"prefix": "GetStateBagValue"
	},
	"GetStateOfClosestDoorOfType": {
		"body": [
			"GetStateOfClosestDoorOfType(${1:type}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "GetStateOfClosestDoorOfType"
	},
	"GetStateOfRayfireMapObject": {
		"body": [
			"GetStateOfRayfireMapObject(${1:object})"
		],
		"scope": "lua",
		"prefix": "GetStateOfRayfireMapObject"
	},
	"GetStatusOfLoadMissionCreatorPhoto": {
		"body": [
			"GetStatusOfLoadMissionCreatorPhoto(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetStatusOfLoadMissionCreatorPhoto"
	},
	"GetStatusOfMissionRepeatSave": {
		"body": [
			"GetStatusOfMissionRepeatSave()"
		],
		"scope": "lua",
		"prefix": "GetStatusOfMissionRepeatSave"
	},
	"GetStatusOfSaveHighQualityPhoto": {
		"body": [
			"GetStatusOfSaveHighQualityPhoto()"
		],
		"scope": "lua",
		"prefix": "GetStatusOfSaveHighQualityPhoto"
	},
	"GetStatusOfSortedListOperation": {
		"body": [
			"GetStatusOfSortedListOperation(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetStatusOfSortedListOperation"
	},
	"GetStatusOfTakeHighQualityPhoto": {
		"body": [
			"GetStatusOfTakeHighQualityPhoto()"
		],
		"scope": "lua",
		"prefix": "GetStatusOfTakeHighQualityPhoto"
	},
	"GetStatusOfTakeMissionCreatorPhoto": {
		"body": [
			"GetStatusOfTakeMissionCreatorPhoto()"
		],
		"scope": "lua",
		"prefix": "GetStatusOfTakeMissionCreatorPhoto"
	},
	"GetStatusOfTextureDownload": {
		"body": [
			"GetStatusOfTextureDownload(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetStatusOfTextureDownload"
	},
	"GetStreamPlayTime": {
		"body": [
			"GetStreamPlayTime()"
		],
		"scope": "lua",
		"prefix": "GetStreamPlayTime"
	},
	"GetStreetNameAtCoord": {
		"body": [
			"GetStreetNameAtCoord(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "GetStreetNameAtCoord"
	},
	"GetStreetNameFromHashKey": {
		"body": [
			"GetStreetNameFromHashKey(${1:hash})"
		],
		"scope": "lua",
		"prefix": "GetStreetNameFromHashKey"
	},
	"GetSubmarineCrushDepthWarningState": {
		"body": [
			"GetSubmarineCrushDepthWarningState(${1:submarine})"
		],
		"scope": "lua",
		"prefix": "GetSubmarineCrushDepthWarningState"
	},
	"GetSubmarineIsBelowFirstCrushDepth": {
		"body": [
			"GetSubmarineIsBelowFirstCrushDepth(${1:submarine})"
		],
		"scope": "lua",
		"prefix": "GetSubmarineIsBelowFirstCrushDepth"
	},
	"GetSynchronizedScenePhase": {
		"body": [
			"GetSynchronizedScenePhase(${1:sceneID})"
		],
		"scope": "lua",
		"prefix": "GetSynchronizedScenePhase"
	},
	"GetSynchronizedSceneRate": {
		"body": [
			"GetSynchronizedSceneRate(${1:sceneID})"
		],
		"scope": "lua",
		"prefix": "GetSynchronizedSceneRate"
	},
	"GetTaskMoveNetworkEvent": {
		"body": [
			"GetTaskMoveNetworkEvent(${1:ped}, ${2:eventName})"
		],
		"scope": "lua",
		"prefix": "GetTaskMoveNetworkEvent"
	},
	"GetTaskMoveNetworkSignalBool": {
		"body": [
			"GetTaskMoveNetworkSignalBool(${1:ped}, ${2:signalName})"
		],
		"scope": "lua",
		"prefix": "GetTaskMoveNetworkSignalBool"
	},
	"GetTaskMoveNetworkSignalFloat": {
		"body": [
			"GetTaskMoveNetworkSignalFloat(${1:ped}, ${2:signalName})"
		],
		"scope": "lua",
		"prefix": "GetTaskMoveNetworkSignalFloat"
	},
	"GetTaskMoveNetworkState": {
		"body": [
			"GetTaskMoveNetworkState(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetTaskMoveNetworkState"
	},
	"GetTattooShopDlcItemData": {
		"body": [
			"GetTattooShopDlcItemData(${1:characterType}, ${2:decorationIndex}, ${3:outComponent})"
		],
		"scope": "lua",
		"prefix": "GetTattooShopDlcItemData"
	},
	"GetTennisSwingAnimComplete": {
		"body": [
			"GetTennisSwingAnimComplete(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetTennisSwingAnimComplete"
	},
	"GetTextScaleHeight": {
		"body": [
			"GetTextScaleHeight(${1:size}, ${2:font})"
		],
		"scope": "lua",
		"prefix": "GetTextScaleHeight"
	},
	"GetTextSubstring": {
		"body": [
			"GetTextSubstring(${1:text}, ${2:position}, ${3:length})"
		],
		"scope": "lua",
		"prefix": "GetTextSubstring"
	},
	"GetTextSubstringSafe": {
		"body": [
			"GetTextSubstringSafe(${1:text}, ${2:position}, ${3:length}, ${4:maxLength})"
		],
		"scope": "lua",
		"prefix": "GetTextSubstringSafe"
	},
	"GetTextSubstringSlice": {
		"body": [
			"GetTextSubstringSlice(${1:text}, ${2:startPosition}, ${3:endPosition})"
		],
		"scope": "lua",
		"prefix": "GetTextSubstringSlice"
	},
	"GetTextureResolution": {
		"body": [
			"GetTextureResolution(${1:textureDict}, ${2:textureName})"
		],
		"scope": "lua",
		"prefix": "GetTextureResolution"
	},
	"GetThisScriptName": {
		"body": [
			"GetThisScriptName()"
		],
		"scope": "lua",
		"prefix": "GetThisScriptName"
	},
	"GetTimeAsString": {
		"body": [
			"GetTimeAsString(${1:time})"
		],
		"scope": "lua",
		"prefix": "GetTimeAsString"
	},
	"GetTimecycleModifierIndex": {
		"body": [
			"GetTimecycleModifierIndex()"
		],
		"scope": "lua",
		"prefix": "GetTimecycleModifierIndex"
	},
	"GetTimecycleTransitionModifierIndex": {
		"body": [
			"GetTimecycleTransitionModifierIndex()"
		],
		"scope": "lua",
		"prefix": "GetTimecycleTransitionModifierIndex"
	},
	"GetTimeDifference": {
		"body": [
			"GetTimeDifference(${1:timeA}, ${2:timeB})"
		],
		"scope": "lua",
		"prefix": "GetTimeDifference"
	},
	"GetTimeOffset": {
		"body": [
			"GetTimeOffset(${1:timeA}, ${2:timeB})"
		],
		"scope": "lua",
		"prefix": "GetTimeOffset"
	},
	"GetTimeOfLastPedWeaponDamage": {
		"body": [
			"GetTimeOfLastPedWeaponDamage(${1:ped}, ${2:weaponHash})"
		],
		"scope": "lua",
		"prefix": "GetTimeOfLastPedWeaponDamage"
	},
	"GetTimePositionInRecording": {
		"body": [
			"GetTimePositionInRecording(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetTimePositionInRecording"
	},
	"GetTimeSinceLastArrest": {
		"body": [
			"GetTimeSinceLastArrest()"
		],
		"scope": "lua",
		"prefix": "GetTimeSinceLastArrest"
	},
	"GetTimeSinceLastDeath": {
		"body": [
			"GetTimeSinceLastDeath()"
		],
		"scope": "lua",
		"prefix": "GetTimeSinceLastDeath"
	},
	"GetTimeSinceLastInput": {
		"body": [
			"GetTimeSinceLastInput(${1:padIndex})"
		],
		"scope": "lua",
		"prefix": "GetTimeSinceLastInput"
	},
	"GetTimeSincePlayerDroveAgainstTraffic": {
		"body": [
			"GetTimeSincePlayerDroveAgainstTraffic(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetTimeSincePlayerDroveAgainstTraffic"
	},
	"GetTimeSincePlayerDroveOnPavement": {
		"body": [
			"GetTimeSincePlayerDroveOnPavement(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetTimeSincePlayerDroveOnPavement"
	},
	"GetTimeSincePlayerHitPed": {
		"body": [
			"GetTimeSincePlayerHitPed(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetTimeSincePlayerHitPed"
	},
	"GetTimeSincePlayerHitVehicle": {
		"body": [
			"GetTimeSincePlayerHitVehicle(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetTimeSincePlayerHitVehicle"
	},
	"GetTogglePausedRenderphasesStatus": {
		"body": [
			"GetTogglePausedRenderphasesStatus()"
		],
		"scope": "lua",
		"prefix": "GetTogglePausedRenderphasesStatus"
	},
	"GetTotalDurationOfVehicleRecording": {
		"body": [
			"GetTotalDurationOfVehicleRecording(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetTotalDurationOfVehicleRecording"
	},
	"GetTotalDurationOfVehicleRecordingId": {
		"body": [
			"GetTotalDurationOfVehicleRecordingId(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GetTotalDurationOfVehicleRecordingId"
	},
	"GetTotalSuccessfulStuntJumps": {
		"body": [
			"GetTotalSuccessfulStuntJumps()"
		],
		"scope": "lua",
		"prefix": "GetTotalSuccessfulStuntJumps"
	},
	"GetTrainCarriage": {
		"body": [
			"GetTrainCarriage(${1:train}, ${2:trailerNumber})"
		],
		"scope": "lua",
		"prefix": "GetTrainCarriage"
	},
	"GetTrainCarriageEngine": {
		"body": [
			"GetTrainCarriageEngine(${1:train})"
		],
		"scope": "lua",
		"prefix": "GetTrainCarriageEngine"
	},
	"GetTrainCarriageIndex": {
		"body": [
			"GetTrainCarriageIndex(${1:train})"
		],
		"scope": "lua",
		"prefix": "GetTrainCarriageIndex"
	},
	"GetTrainCurrentTrackNode": {
		"body": [
			"GetTrainCurrentTrackNode(${1:train})"
		],
		"scope": "lua",
		"prefix": "GetTrainCurrentTrackNode"
	},
	"GetTrainDoorCount": {
		"body": [
			"GetTrainDoorCount(${1:train})"
		],
		"scope": "lua",
		"prefix": "GetTrainDoorCount"
	},
	"GetTrainDoorOpenRatio": {
		"body": [
			"GetTrainDoorOpenRatio(${1:train}, ${2:doorIndex})"
		],
		"scope": "lua",
		"prefix": "GetTrainDoorOpenRatio"
	},
	"GetTvChannel": {
		"body": [
			"GetTvChannel()"
		],
		"scope": "lua",
		"prefix": "GetTvChannel"
	},
	"GetTvVolume": {
		"body": [
			"GetTvVolume()"
		],
		"scope": "lua",
		"prefix": "GetTvVolume"
	},
	"GetTyreHealth": {
		"body": [
			"GetTyreHealth(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetTyreHealth"
	},
	"GetTyreWearMultiplier": {
		"body": [
			"GetTyreWearMultiplier(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetTyreWearMultiplier"
	},
	"GetUsedCreatorModelMemoryPercentage": {
		"body": [
			"GetUsedCreatorModelMemoryPercentage()"
		],
		"scope": "lua",
		"prefix": "GetUsedCreatorModelMemoryPercentage"
	},
	"GetUsingnightvision": {
		"body": [
			"GetUsingnightvision()"
		],
		"scope": "lua",
		"prefix": "GetUsingnightvision"
	},
	"GetUsingseethrough": {
		"body": [
			"GetUsingseethrough()"
		],
		"scope": "lua",
		"prefix": "GetUsingseethrough"
	},
	"GetUtcTime": {
		"body": [
			"GetUtcTime()"
		],
		"scope": "lua",
		"prefix": "GetUtcTime"
	},
	"GetVariantComponent": {
		"body": [
			"GetVariantComponent(${1:componentHash}, ${2:componentId})"
		],
		"scope": "lua",
		"prefix": "GetVariantComponent"
	},
	"GetVariantProp": {
		"body": [
			"GetVariantProp(${1:componentHash}, ${2:variantPropIndex}, ${3:nameHash}, ${4:enumValue}, ${5:anchorPoint})"
		],
		"scope": "lua",
		"prefix": "GetVariantProp"
	},
	"GetVehicleAcceleration": {
		"body": [
			"GetVehicleAcceleration(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleAcceleration"
	},
	"GetVehicleAlarmTimeLeft": {
		"body": [
			"GetVehicleAlarmTimeLeft(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleAlarmTimeLeft"
	},
	"GetVehicleAttachedToCargobob": {
		"body": [
			"GetVehicleAttachedToCargobob(${1:cargobob})"
		],
		"scope": "lua",
		"prefix": "GetVehicleAttachedToCargobob"
	},
	"GetVehicleBodyHealth": {
		"body": [
			"GetVehicleBodyHealth(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleBodyHealth"
	},
	"GetVehicleBodyHealth_2": {
		"body": [
			"GetVehicleBodyHealth_2(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleBodyHealth_2"
	},
	"GetVehicleBombCount": {
		"body": [
			"GetVehicleBombCount(${1:aircraft})"
		],
		"scope": "lua",
		"prefix": "GetVehicleBombCount"
	},
	"GetVehicleCanActivateParachute": {
		"body": [
			"GetVehicleCanActivateParachute(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleCanActivateParachute"
	},
	"GetVehicleCauseOfDestruction": {
		"body": [
			"GetVehicleCauseOfDestruction(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleCauseOfDestruction"
	},
	"GetVehicleCheatPowerIncrease": {
		"body": [
			"GetVehicleCheatPowerIncrease(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleCheatPowerIncrease"
	},
	"GetVehicleClass": {
		"body": [
			"GetVehicleClass(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleClass"
	},
	"GetVehicleClassEstimatedMaxSpeed": {
		"body": [
			"GetVehicleClassEstimatedMaxSpeed(${1:vehicleClass})"
		],
		"scope": "lua",
		"prefix": "GetVehicleClassEstimatedMaxSpeed"
	},
	"GetVehicleClassFromName": {
		"body": [
			"GetVehicleClassFromName(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetVehicleClassFromName"
	},
	"GetVehicleClassMaxAcceleration": {
		"body": [
			"GetVehicleClassMaxAcceleration(${1:vehicleClass})"
		],
		"scope": "lua",
		"prefix": "GetVehicleClassMaxAcceleration"
	},
	"GetVehicleClassMaxAgility": {
		"body": [
			"GetVehicleClassMaxAgility(${1:vehicleClass})"
		],
		"scope": "lua",
		"prefix": "GetVehicleClassMaxAgility"
	},
	"GetVehicleClassMaxBraking": {
		"body": [
			"GetVehicleClassMaxBraking(${1:vehicleClass})"
		],
		"scope": "lua",
		"prefix": "GetVehicleClassMaxBraking"
	},
	"GetVehicleClassMaxTraction": {
		"body": [
			"GetVehicleClassMaxTraction(${1:vehicleClass})"
		],
		"scope": "lua",
		"prefix": "GetVehicleClassMaxTraction"
	},
	"GetVehicleClutch": {
		"body": [
			"GetVehicleClutch(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleClutch"
	},
	"GetVehicleColor": {
		"body": [
			"GetVehicleColor(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleColor"
	},
	"GetVehicleColourCombination": {
		"body": [
			"GetVehicleColourCombination(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleColourCombination"
	},
	"GetVehicleColours": {
		"body": [
			"GetVehicleColours(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleColours"
	},
	"GetVehicleCountermeasureCount": {
		"body": [
			"GetVehicleCountermeasureCount(${1:aircraft})"
		],
		"scope": "lua",
		"prefix": "GetVehicleCountermeasureCount"
	},
	"GetVehicleCrewEmblemRequestState": {
		"body": [
			"GetVehicleCrewEmblemRequestState(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetVehicleCrewEmblemRequestState"
	},
	"GetVehicleCurrentGear": {
		"body": [
			"GetVehicleCurrentGear(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleCurrentGear"
	},
	"GetVehicleCurrentRpm": {
		"body": [
			"GetVehicleCurrentRpm(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleCurrentRpm"
	},
	"GetVehicleCurrentSlipstreamDraft": {
		"body": [
			"GetVehicleCurrentSlipstreamDraft(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleCurrentSlipstreamDraft"
	},
	"GetVehicleCustomPrimaryColour": {
		"body": [
			"GetVehicleCustomPrimaryColour(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleCustomPrimaryColour"
	},
	"GetVehicleCustomSecondaryColour": {
		"body": [
			"GetVehicleCustomSecondaryColour(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleCustomSecondaryColour"
	},
	"GetVehicleDashboardColor": {
		"body": [
			"GetVehicleDashboardColor(${1:vehicle}, ${2:color})"
		],
		"scope": "lua",
		"prefix": "GetVehicleDashboardColor"
	},
	"GetVehicleDashboardColour": {
		"body": [
			"GetVehicleDashboardColour(${1:vehicle}, ${2:color})"
		],
		"scope": "lua",
		"prefix": "GetVehicleDashboardColour"
	},
	"GetVehicleDashboardSpeed": {
		"body": [
			"GetVehicleDashboardSpeed(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleDashboardSpeed"
	},
	"GetVehicleDefaultHorn": {
		"body": [
			"GetVehicleDefaultHorn(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleDefaultHorn"
	},
	"GetVehicleDefaultHornIgnoreMods": {
		"body": [
			"GetVehicleDefaultHornIgnoreMods(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleDefaultHornIgnoreMods"
	},
	"GetVehicleDefaultHornVariation": {
		"body": [
			"GetVehicleDefaultHornVariation(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleDefaultHornVariation"
	},
	"GetVehicleDeformationAtPos": {
		"body": [
			"GetVehicleDeformationAtPos(${1:vehicle}, ${2:offsetX}, ${3:offsetY}, ${4:offsetZ})"
		],
		"scope": "lua",
		"prefix": "GetVehicleDeformationAtPos"
	},
	"GetVehicleDensityMultiplier": {
		"body": [
			"GetVehicleDensityMultiplier()"
		],
		"scope": "lua",
		"prefix": "GetVehicleDensityMultiplier"
	},
	"GetVehicleDirtLevel": {
		"body": [
			"GetVehicleDirtLevel(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleDirtLevel"
	},
	"GetVehicleDoorAngleRatio": {
		"body": [
			"GetVehicleDoorAngleRatio(${1:vehicle}, ${2:doorIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleDoorAngleRatio"
	},
	"GetVehicleDoorDestroyType": {
		"body": [
			"GetVehicleDoorDestroyType(${1:vehicle}, ${2:doorIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleDoorDestroyType"
	},
	"GetVehicleDoorLockStatus": {
		"body": [
			"GetVehicleDoorLockStatus(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleDoorLockStatus"
	},
	"GetVehicleDoorsLockedForPlayer": {
		"body": [
			"GetVehicleDoorsLockedForPlayer(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleDoorsLockedForPlayer"
	},
	"GetVehicleDoorStatus": {
		"body": [
			"GetVehicleDoorStatus(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleDoorStatus"
	},
	"GetVehicleDrawnWheelAngleMult": {
		"body": [
			"GetVehicleDrawnWheelAngleMult(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleDrawnWheelAngleMult"
	},
	"GetVehicleEngineHealth": {
		"body": [
			"GetVehicleEngineHealth(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleEngineHealth"
	},
	"GetVehicleEngineTemperature": {
		"body": [
			"GetVehicleEngineTemperature(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleEngineTemperature"
	},
	"GetVehicleEnveffScale": {
		"body": [
			"GetVehicleEnveffScale(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleEnveffScale"
	},
	"GetVehicleEstimatedMaxSpeed": {
		"body": [
			"GetVehicleEstimatedMaxSpeed(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleEstimatedMaxSpeed"
	},
	"GetVehicleExtraColours": {
		"body": [
			"GetVehicleExtraColours(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleExtraColours"
	},
	"GetVehicleFlightNozzlePosition": {
		"body": [
			"GetVehicleFlightNozzlePosition(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleFlightNozzlePosition"
	},
	"GetVehicleFuelLevel": {
		"body": [
			"GetVehicleFuelLevel(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleFuelLevel"
	},
	"GetVehicleGravityAmount": {
		"body": [
			"GetVehicleGravityAmount(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleGravityAmount"
	},
	"GetVehicleHandbrake": {
		"body": [
			"GetVehicleHandbrake(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleHandbrake"
	},
	"GetVehicleHandlingFloat": {
		"body": [
			"GetVehicleHandlingFloat(${1:vehicle}, ${2:class_}, ${3:fieldName})"
		],
		"scope": "lua",
		"prefix": "GetVehicleHandlingFloat"
	},
	"GetVehicleHandlingInt": {
		"body": [
			"GetVehicleHandlingInt(${1:vehicle}, ${2:class_}, ${3:fieldName})"
		],
		"scope": "lua",
		"prefix": "GetVehicleHandlingInt"
	},
	"GetVehicleHandlingVector": {
		"body": [
			"GetVehicleHandlingVector(${1:vehicle}, ${2:class_}, ${3:fieldName})"
		],
		"scope": "lua",
		"prefix": "GetVehicleHandlingVector"
	},
	"GetVehicleHasKers": {
		"body": [
			"GetVehicleHasKers(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleHasKers"
	},
	"GetVehicleHasParachute": {
		"body": [
			"GetVehicleHasParachute(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleHasParachute"
	},
	"GetVehicleHeadlightsColour": {
		"body": [
			"GetVehicleHeadlightsColour(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleHeadlightsColour"
	},
	"GetVehicleHighGear": {
		"body": [
			"GetVehicleHighGear(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleHighGear"
	},
	"GetVehicleHomingLockonState": {
		"body": [
			"GetVehicleHomingLockonState(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleHomingLockonState"
	},
	"GetVehicleIndexFromEntityIndex": {
		"body": [
			"GetVehicleIndexFromEntityIndex(${1:entity})"
		],
		"scope": "lua",
		"prefix": "GetVehicleIndexFromEntityIndex"
	},
	"GetVehicleIndicatorLights": {
		"body": [
			"GetVehicleIndicatorLights(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleIndicatorLights"
	},
	"GetVehicleInteriorColor": {
		"body": [
			"GetVehicleInteriorColor(${1:vehicle}, ${2:color})"
		],
		"scope": "lua",
		"prefix": "GetVehicleInteriorColor"
	},
	"GetVehicleInteriorColour": {
		"body": [
			"GetVehicleInteriorColour(${1:vehicle}, ${2:color})"
		],
		"scope": "lua",
		"prefix": "GetVehicleInteriorColour"
	},
	"GetVehicleLayoutHash": {
		"body": [
			"GetVehicleLayoutHash(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleLayoutHash"
	},
	"GetVehicleLightMultiplier": {
		"body": [
			"GetVehicleLightMultiplier(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleLightMultiplier"
	},
	"GetVehicleLightsState": {
		"body": [
			"GetVehicleLightsState(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleLightsState"
	},
	"GetVehicleLivery": {
		"body": [
			"GetVehicleLivery(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleLivery"
	},
	"GetVehicleLiveryCount": {
		"body": [
			"GetVehicleLiveryCount(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleLiveryCount"
	},
	"GetVehicleLockOnTarget": {
		"body": [
			"GetVehicleLockOnTarget(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleLockOnTarget"
	},
	"GetVehicleMaxBraking": {
		"body": [
			"GetVehicleMaxBraking(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleMaxBraking"
	},
	"GetVehicleMaxNumberOfPassengers": {
		"body": [
			"GetVehicleMaxNumberOfPassengers(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleMaxNumberOfPassengers"
	},
	"GetVehicleMaxTraction": {
		"body": [
			"GetVehicleMaxTraction(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleMaxTraction"
	},
	"GetVehicleMod": {
		"body": [
			"GetVehicleMod(${1:vehicle}, ${2:modType})"
		],
		"scope": "lua",
		"prefix": "GetVehicleMod"
	},
	"GetVehicleModColor_1": {
		"body": [
			"GetVehicleModColor_1(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModColor_1"
	},
	"GetVehicleModColor_1Name": {
		"body": [
			"GetVehicleModColor_1Name(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModColor_1Name"
	},
	"GetVehicleModColor_2": {
		"body": [
			"GetVehicleModColor_2(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModColor_2"
	},
	"GetVehicleModColor_2Name": {
		"body": [
			"GetVehicleModColor_2Name(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModColor_2Name"
	},
	"GetVehicleModelAcceleration": {
		"body": [
			"GetVehicleModelAcceleration(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModelAcceleration"
	},
	"GetVehicleModelEstimatedAgility": {
		"body": [
			"GetVehicleModelEstimatedAgility(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModelEstimatedAgility"
	},
	"GetVehicleModelEstimatedMaxSpeed": {
		"body": [
			"GetVehicleModelEstimatedMaxSpeed(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModelEstimatedMaxSpeed"
	},
	"GetVehicleModelMaxBraking": {
		"body": [
			"GetVehicleModelMaxBraking(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModelMaxBraking"
	},
	"GetVehicleModelMaxBrakingMaxMods": {
		"body": [
			"GetVehicleModelMaxBrakingMaxMods(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModelMaxBrakingMaxMods"
	},
	"GetVehicleModelMaxKnots": {
		"body": [
			"GetVehicleModelMaxKnots(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModelMaxKnots"
	},
	"GetVehicleModelMaxTraction": {
		"body": [
			"GetVehicleModelMaxTraction(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModelMaxTraction"
	},
	"GetVehicleModelMonetaryValue": {
		"body": [
			"GetVehicleModelMonetaryValue(${1:vehicleModel})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModelMonetaryValue"
	},
	"GetVehicleModelMoveResistance": {
		"body": [
			"GetVehicleModelMoveResistance(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModelMoveResistance"
	},
	"GetVehicleModelNumberOfSeats": {
		"body": [
			"GetVehicleModelNumberOfSeats(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModelNumberOfSeats"
	},
	"GetVehicleModIdentifierHash": {
		"body": [
			"GetVehicleModIdentifierHash(${1:vehicle}, ${2:modType}, ${3:modIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModIdentifierHash"
	},
	"GetVehicleModKit": {
		"body": [
			"GetVehicleModKit(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModKit"
	},
	"GetVehicleModKitType": {
		"body": [
			"GetVehicleModKitType(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModKitType"
	},
	"GetVehicleModModifierValue": {
		"body": [
			"GetVehicleModModifierValue(${1:vehicle}, ${2:modType}, ${3:modIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModModifierValue"
	},
	"GetVehicleModVariation": {
		"body": [
			"GetVehicleModVariation(${1:vehicle}, ${2:modType})"
		],
		"scope": "lua",
		"prefix": "GetVehicleModVariation"
	},
	"GetVehicleNeonLightsColour": {
		"body": [
			"GetVehicleNeonLightsColour(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleNeonLightsColour"
	},
	"GetVehicleNextGear": {
		"body": [
			"GetVehicleNextGear(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleNextGear"
	},
	"GetVehicleNodeIsGpsAllowed": {
		"body": [
			"GetVehicleNodeIsGpsAllowed(${1:nodeID})"
		],
		"scope": "lua",
		"prefix": "GetVehicleNodeIsGpsAllowed"
	},
	"GetVehicleNodeIsSwitchedOff": {
		"body": [
			"GetVehicleNodeIsSwitchedOff(${1:nodeID})"
		],
		"scope": "lua",
		"prefix": "GetVehicleNodeIsSwitchedOff"
	},
	"GetVehicleNodePosition": {
		"body": [
			"GetVehicleNodePosition(${1:nodeId}, ${2:outPosition})"
		],
		"scope": "lua",
		"prefix": "GetVehicleNodePosition"
	},
	"GetVehicleNodeProperties": {
		"body": [
			"GetVehicleNodeProperties(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "GetVehicleNodeProperties"
	},
	"GetVehicleNumberOfBrokenBones": {
		"body": [
			"GetVehicleNumberOfBrokenBones(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleNumberOfBrokenBones"
	},
	"GetVehicleNumberOfBrokenOffBones": {
		"body": [
			"GetVehicleNumberOfBrokenOffBones(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleNumberOfBrokenOffBones"
	},
	"GetVehicleNumberOfPassengers": {
		"body": [
			"GetVehicleNumberOfPassengers(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleNumberOfPassengers"
	},
	"GetVehicleNumberOfWheels": {
		"body": [
			"GetVehicleNumberOfWheels(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleNumberOfWheels"
	},
	"GetVehicleNumberPlateText": {
		"body": [
			"GetVehicleNumberPlateText(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleNumberPlateText"
	},
	"GetVehicleNumberPlateTextIndex": {
		"body": [
			"GetVehicleNumberPlateTextIndex(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleNumberPlateTextIndex"
	},
	"GetVehicleOilLevel": {
		"body": [
			"GetVehicleOilLevel(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleOilLevel"
	},
	"GetVehiclePedIsEntering": {
		"body": [
			"GetVehiclePedIsEntering(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetVehiclePedIsEntering"
	},
	"GetVehiclePedIsIn": {
		"body": [
			"GetVehiclePedIsIn(${1:ped}, ${2:lastVehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehiclePedIsIn"
	},
	"GetVehiclePedIsTryingToEnter": {
		"body": [
			"GetVehiclePedIsTryingToEnter(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetVehiclePedIsTryingToEnter"
	},
	"GetVehiclePedIsUsing": {
		"body": [
			"GetVehiclePedIsUsing(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GetVehiclePedIsUsing"
	},
	"GetVehiclePetrolTankHealth": {
		"body": [
			"GetVehiclePetrolTankHealth(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehiclePetrolTankHealth"
	},
	"GetVehiclePlateType": {
		"body": [
			"GetVehiclePlateType(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehiclePlateType"
	},
	"GetVehicleRadioStationIndex": {
		"body": [
			"GetVehicleRadioStationIndex(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleRadioStationIndex"
	},
	"GetVehicleRecordingId": {
		"body": [
			"GetVehicleRecordingId(${1:recording}, ${2:script})"
		],
		"scope": "lua",
		"prefix": "GetVehicleRecordingId"
	},
	"GetVehicleRoofLivery": {
		"body": [
			"GetVehicleRoofLivery(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleRoofLivery"
	},
	"GetVehicleRoofLiveryCount": {
		"body": [
			"GetVehicleRoofLiveryCount(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleRoofLiveryCount"
	},
	"GetVehicleSteeringAngle": {
		"body": [
			"GetVehicleSteeringAngle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleSteeringAngle"
	},
	"GetVehicleSteeringScale": {
		"body": [
			"GetVehicleSteeringScale(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleSteeringScale"
	},
	"GetVehicleSuspensionBounds": {
		"body": [
			"GetVehicleSuspensionBounds(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleSuspensionBounds"
	},
	"GetVehicleSuspensionHeight": {
		"body": [
			"GetVehicleSuspensionHeight(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleSuspensionHeight"
	},
	"GetVehicleThrottleOffset": {
		"body": [
			"GetVehicleThrottleOffset(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleThrottleOffset"
	},
	"GetVehicleTopSpeedModifier": {
		"body": [
			"GetVehicleTopSpeedModifier(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleTopSpeedModifier"
	},
	"GetVehicleTrailerVehicle": {
		"body": [
			"GetVehicleTrailerVehicle(${1:vehicle}, ${2:trailer})"
		],
		"scope": "lua",
		"prefix": "GetVehicleTrailerVehicle"
	},
	"GetVehicleTurboPressure": {
		"body": [
			"GetVehicleTurboPressure(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleTurboPressure"
	},
	"GetVehicleTyresCanBurst": {
		"body": [
			"GetVehicleTyresCanBurst(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleTyresCanBurst"
	},
	"GetVehicleTyreSmokeColor": {
		"body": [
			"GetVehicleTyreSmokeColor(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleTyreSmokeColor"
	},
	"GetVehicleWaypointProgress": {
		"body": [
			"GetVehicleWaypointProgress(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWaypointProgress"
	},
	"GetVehicleWaypointTargetPoint": {
		"body": [
			"GetVehicleWaypointTargetPoint(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWaypointTargetPoint"
	},
	"GetVehicleWeaponCapacity": {
		"body": [
			"GetVehicleWeaponCapacity(${1:vehicle}, ${2:weaponIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWeaponCapacity"
	},
	"GetVehicleWheelBrakePressure": {
		"body": [
			"GetVehicleWheelBrakePressure(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelBrakePressure"
	},
	"GetVehicleWheelFlags": {
		"body": [
			"GetVehicleWheelFlags(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelFlags"
	},
	"GetVehicleWheelHealth": {
		"body": [
			"GetVehicleWheelHealth(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelHealth"
	},
	"GetVehicleWheelieState": {
		"body": [
			"GetVehicleWheelieState(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelieState"
	},
	"GetVehicleWheelIsPowered": {
		"body": [
			"GetVehicleWheelIsPowered(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelIsPowered"
	},
	"GetVehicleWheelPower": {
		"body": [
			"GetVehicleWheelPower(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelPower"
	},
	"GetVehicleWheelRimColliderSize": {
		"body": [
			"GetVehicleWheelRimColliderSize(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelRimColliderSize"
	},
	"GetVehicleWheelRotationSpeed": {
		"body": [
			"GetVehicleWheelRotationSpeed(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelRotationSpeed"
	},
	"GetVehicleWheelSize": {
		"body": [
			"GetVehicleWheelSize(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelSize"
	},
	"GetVehicleWheelSpeed": {
		"body": [
			"GetVehicleWheelSpeed(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelSpeed"
	},
	"GetVehicleWheelSteeringAngle": {
		"body": [
			"GetVehicleWheelSteeringAngle(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelSteeringAngle"
	},
	"GetVehicleWheelSurfaceMaterial": {
		"body": [
			"GetVehicleWheelSurfaceMaterial(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelSurfaceMaterial"
	},
	"GetVehicleWheelSuspensionCompression": {
		"body": [
			"GetVehicleWheelSuspensionCompression(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelSuspensionCompression"
	},
	"GetVehicleWheelTireColliderSize": {
		"body": [
			"GetVehicleWheelTireColliderSize(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelTireColliderSize"
	},
	"GetVehicleWheelTireColliderWidth": {
		"body": [
			"GetVehicleWheelTireColliderWidth(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelTireColliderWidth"
	},
	"GetVehicleWheelTractionVectorLength": {
		"body": [
			"GetVehicleWheelTractionVectorLength(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelTractionVectorLength"
	},
	"GetVehicleWheelType": {
		"body": [
			"GetVehicleWheelType(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelType"
	},
	"GetVehicleWheelWidth": {
		"body": [
			"GetVehicleWheelWidth(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelWidth"
	},
	"GetVehicleWheelXOffset": {
		"body": [
			"GetVehicleWheelXOffset(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelXOffset"
	},
	"GetVehicleWheelYRotation": {
		"body": [
			"GetVehicleWheelYRotation(${1:vehicle}, ${2:wheelIndex})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWheelYRotation"
	},
	"GetVehicleWindowTint": {
		"body": [
			"GetVehicleWindowTint(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleWindowTint"
	},
	"GetVehicleXenonLightsColor": {
		"body": [
			"GetVehicleXenonLightsColor(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "GetVehicleXenonLightsColor"
	},
	"GetWantedLevelRadius": {
		"body": [
			"GetWantedLevelRadius(${1:player})"
		],
		"scope": "lua",
		"prefix": "GetWantedLevelRadius"
	},
	"GetWantedLevelThreshold": {
		"body": [
			"GetWantedLevelThreshold(${1:wantedLevel})"
		],
		"scope": "lua",
		"prefix": "GetWantedLevelThreshold"
	},
	"GetWarningMessageTitleHash": {
		"body": [
			"GetWarningMessageTitleHash()"
		],
		"scope": "lua",
		"prefix": "GetWarningMessageTitleHash"
	},
	"GetWaterHeight": {
		"body": [
			"GetWaterHeight(${1:x}, ${2:y}, ${3:z}, ${4:height})"
		],
		"scope": "lua",
		"prefix": "GetWaterHeight"
	},
	"GetWaterHeightNoWaves": {
		"body": [
			"GetWaterHeightNoWaves(${1:x}, ${2:y}, ${3:z}, ${4:height})"
		],
		"scope": "lua",
		"prefix": "GetWaterHeightNoWaves"
	},
	"GetWaypointBlipEnumId": {
		"body": [
			"GetWaypointBlipEnumId()"
		],
		"scope": "lua",
		"prefix": "GetWaypointBlipEnumId"
	},
	"GetWaypointDistanceAlongRoute": {
		"body": [
			"GetWaypointDistanceAlongRoute(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetWaypointDistanceAlongRoute"
	},
	"GetWeaponClipSize": {
		"body": [
			"GetWeaponClipSize(${1:weaponHash})"
		],
		"scope": "lua",
		"prefix": "GetWeaponClipSize"
	},
	"GetWeaponComponentHudStats": {
		"body": [
			"GetWeaponComponentHudStats(${1:componentHash}, ${2:outData})"
		],
		"scope": "lua",
		"prefix": "GetWeaponComponentHudStats"
	},
	"GetWeaponComponentTypeModel": {
		"body": [
			"GetWeaponComponentTypeModel(${1:componentHash})"
		],
		"scope": "lua",
		"prefix": "GetWeaponComponentTypeModel"
	},
	"GetWeaponComponentVariantExtraComponentCount": {
		"body": [
			"GetWeaponComponentVariantExtraComponentCount(${1:componentHash})"
		],
		"scope": "lua",
		"prefix": "GetWeaponComponentVariantExtraComponentCount"
	},
	"GetWeaponComponentVariantExtraComponentModel": {
		"body": [
			"GetWeaponComponentVariantExtraComponentModel(${1:componentHash}, ${2:extraComponentIndex})"
		],
		"scope": "lua",
		"prefix": "GetWeaponComponentVariantExtraComponentModel"
	},
	"GetWeaponDamage": {
		"body": [
			"GetWeaponDamage(${1:weaponHash}, ${2:componentHash})"
		],
		"scope": "lua",
		"prefix": "GetWeaponDamage"
	},
	"GetWeaponDamageModifier": {
		"body": [
			"GetWeaponDamageModifier(${1:weaponHash})"
		],
		"scope": "lua",
		"prefix": "GetWeaponDamageModifier"
	},
	"GetWeaponDamageType": {
		"body": [
			"GetWeaponDamageType(${1:weaponHash})"
		],
		"scope": "lua",
		"prefix": "GetWeaponDamageType"
	},
	"GetWeaponHudStats": {
		"body": [
			"GetWeaponHudStats(${1:weaponHash}, ${2:outData})"
		],
		"scope": "lua",
		"prefix": "GetWeaponHudStats"
	},
	"GetWeaponObjectFromPed": {
		"body": [
			"GetWeaponObjectFromPed(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GetWeaponObjectFromPed"
	},
	"GetWeaponObjectLiveryColor": {
		"body": [
			"GetWeaponObjectLiveryColor(${1:weaponObject}, ${2:camoComponentHash})"
		],
		"scope": "lua",
		"prefix": "GetWeaponObjectLiveryColor"
	},
	"GetWeaponObjectTintIndex": {
		"body": [
			"GetWeaponObjectTintIndex(${1:weapon})"
		],
		"scope": "lua",
		"prefix": "GetWeaponObjectTintIndex"
	},
	"GetWeaponTimeBetweenShots": {
		"body": [
			"GetWeaponTimeBetweenShots(${1:weaponHash})"
		],
		"scope": "lua",
		"prefix": "GetWeaponTimeBetweenShots"
	},
	"GetWeaponTintCount": {
		"body": [
			"GetWeaponTintCount(${1:weaponHash})"
		],
		"scope": "lua",
		"prefix": "GetWeaponTintCount"
	},
	"GetWeaponTypeFromPickupType": {
		"body": [
			"GetWeaponTypeFromPickupType(${1:pickupHash})"
		],
		"scope": "lua",
		"prefix": "GetWeaponTypeFromPickupType"
	},
	"GetWeapontypeGroup": {
		"body": [
			"GetWeapontypeGroup(${1:weaponHash})"
		],
		"scope": "lua",
		"prefix": "GetWeapontypeGroup"
	},
	"GetWeapontypeModel": {
		"body": [
			"GetWeapontypeModel(${1:weaponHash})"
		],
		"scope": "lua",
		"prefix": "GetWeapontypeModel"
	},
	"GetWeapontypeSlot": {
		"body": [
			"GetWeapontypeSlot(${1:weaponHash})"
		],
		"scope": "lua",
		"prefix": "GetWeapontypeSlot"
	},
	"GetWeatherTypeTransition": {
		"body": [
			"GetWeatherTypeTransition()"
		],
		"scope": "lua",
		"prefix": "GetWeatherTypeTransition"
	},
	"GetWindDirection": {
		"body": [
			"GetWindDirection()"
		],
		"scope": "lua",
		"prefix": "GetWindDirection"
	},
	"GetWindSpeed": {
		"body": [
			"GetWindSpeed()"
		],
		"scope": "lua",
		"prefix": "GetWindSpeed"
	},
	"GetWorldPositionOfEntityBone": {
		"body": [
			"GetWorldPositionOfEntityBone(${1:entity}, ${2:boneIndex})"
		],
		"scope": "lua",
		"prefix": "GetWorldPositionOfEntityBone"
	},
	"GetZoneAtCoords": {
		"body": [
			"GetZoneAtCoords(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "GetZoneAtCoords"
	},
	"GetZoneFromNameId": {
		"body": [
			"GetZoneFromNameId(${1:zoneName})"
		],
		"scope": "lua",
		"prefix": "GetZoneFromNameId"
	},
	"GetZonePopschedule": {
		"body": [
			"GetZonePopschedule(${1:zoneId})"
		],
		"scope": "lua",
		"prefix": "GetZonePopschedule"
	},
	"GetZoneScumminess": {
		"body": [
			"GetZoneScumminess(${1:zoneId})"
		],
		"scope": "lua",
		"prefix": "GetZoneScumminess"
	},
	"GiveAchievementToPlayer": {
		"body": [
			"GiveAchievementToPlayer(${1:achievement})"
		],
		"scope": "lua",
		"prefix": "GiveAchievementToPlayer"
	},
	"GiveDelayedWeaponToPed": {
		"body": [
			"GiveDelayedWeaponToPed(${1:ped}, ${2:weaponHash}, ${3:ammoCount}, ${4:bForceInHand})"
		],
		"scope": "lua",
		"prefix": "GiveDelayedWeaponToPed"
	},
	"GiveLoadoutToPed": {
		"body": [
			"GiveLoadoutToPed(${1:ped}, ${2:loadoutHash})"
		],
		"scope": "lua",
		"prefix": "GiveLoadoutToPed"
	},
	"GivePedHelmet": {
		"body": [
			"GivePedHelmet(${1:ped}, ${2:cannotRemove}, ${3:helmetFlag}, ${4:textureIndex})"
		],
		"scope": "lua",
		"prefix": "GivePedHelmet"
	},
	"GivePedNmMessage": {
		"body": [
			"GivePedNmMessage(${1:ped})"
		],
		"scope": "lua",
		"prefix": "GivePedNmMessage"
	},
	"GivePedToPauseMenu": {
		"body": [
			"GivePedToPauseMenu(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GivePedToPauseMenu"
	},
	"GivePlayerRagdollControl": {
		"body": [
			"GivePlayerRagdollControl(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "GivePlayerRagdollControl"
	},
	"GiveWeaponComponentToPed": {
		"body": [
			"GiveWeaponComponentToPed(${1:ped}, ${2:weaponHash}, ${3:componentHash})"
		],
		"scope": "lua",
		"prefix": "GiveWeaponComponentToPed"
	},
	"GiveWeaponComponentToWeaponObject": {
		"body": [
			"GiveWeaponComponentToWeaponObject(${1:weaponObject}, ${2:addonHash})"
		],
		"scope": "lua",
		"prefix": "GiveWeaponComponentToWeaponObject"
	},
	"GiveWeaponObjectToPed": {
		"body": [
			"GiveWeaponObjectToPed(${1:weaponObject}, ${2:ped})"
		],
		"scope": "lua",
		"prefix": "GiveWeaponObjectToPed"
	},
	"GiveWeaponToPed": {
		"body": [
			"GiveWeaponToPed(${1:ped}, ${2:weaponHash}, ${3:ammoCount}, ${4:isHidden}, ${5:bForceInHand})"
		],
		"scope": "lua",
		"prefix": "GiveWeaponToPed"
	},
	"GolfTrailGetMaxHeight": {
		"body": [
			"GolfTrailGetMaxHeight()"
		],
		"scope": "lua",
		"prefix": "GolfTrailGetMaxHeight"
	},
	"GolfTrailGetVisualControlPoint": {
		"body": [
			"GolfTrailGetVisualControlPoint(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GolfTrailGetVisualControlPoint"
	},
	"GolfTrailSetColour": {
		"body": [
			"GolfTrailSetColour(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11})"
		],
		"scope": "lua",
		"prefix": "GolfTrailSetColour"
	},
	"GolfTrailSetEnabled": {
		"body": [
			"GolfTrailSetEnabled(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "GolfTrailSetEnabled"
	},
	"GolfTrailSetFacing": {
		"body": [
			"GolfTrailSetFacing(${1:p0})"
		],
		"scope": "lua",
		"prefix": "GolfTrailSetFacing"
	},
	"GolfTrailSetFixedControlPoint": {
		"body": [
			"GolfTrailSetFixedControlPoint(${1:type}, ${2:xPos}, ${3:yPos}, ${4:zPos}, ${5:p4}, ${6:red}, ${7:green}, ${8:blue}, ${9:alpha})"
		],
		"scope": "lua",
		"prefix": "GolfTrailSetFixedControlPoint"
	},
	"GolfTrailSetPath": {
		"body": [
			"GolfTrailSetPath(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "GolfTrailSetPath"
	},
	"GolfTrailSetRadius": {
		"body": [
			"GolfTrailSetRadius(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "GolfTrailSetRadius"
	},
	"GolfTrailSetShaderParams": {
		"body": [
			"GolfTrailSetShaderParams(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "GolfTrailSetShaderParams"
	},
	"GolfTrailSetTessellation": {
		"body": [
			"GolfTrailSetTessellation(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "GolfTrailSetTessellation"
	},
	"GrassLodResetScriptAreas": {
		"body": [
			"GrassLodResetScriptAreas()"
		],
		"scope": "lua",
		"prefix": "GrassLodResetScriptAreas"
	},
	"GrassLodShrinkScriptAreas": {
		"body": [
			"GrassLodShrinkScriptAreas(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "GrassLodShrinkScriptAreas"
	},
	"HasAchievementBeenPassed": {
		"body": [
			"HasAchievementBeenPassed(${1:achievement})"
		],
		"scope": "lua",
		"prefix": "HasAchievementBeenPassed"
	},
	"HasActionModeAssetLoaded": {
		"body": [
			"HasActionModeAssetLoaded(${1:asset})"
		],
		"scope": "lua",
		"prefix": "HasActionModeAssetLoaded"
	},
	"HasAdditionalTextLoaded": {
		"body": [
			"HasAdditionalTextLoaded(${1:slot})"
		],
		"scope": "lua",
		"prefix": "HasAdditionalTextLoaded"
	},
	"HasAnimDictLoaded": {
		"body": [
			"HasAnimDictLoaded(${1:animDict})"
		],
		"scope": "lua",
		"prefix": "HasAnimDictLoaded"
	},
	"HasAnimEventFired": {
		"body": [
			"HasAnimEventFired(${1:entity}, ${2:actionHash})"
		],
		"scope": "lua",
		"prefix": "HasAnimEventFired"
	},
	"HasAnimSetLoaded": {
		"body": [
			"HasAnimSetLoaded(${1:animSet})"
		],
		"scope": "lua",
		"prefix": "HasAnimSetLoaded"
	},
	"HasAsyncInstallFinished": {
		"body": [
			"HasAsyncInstallFinished()"
		],
		"scope": "lua",
		"prefix": "HasAsyncInstallFinished"
	},
	"HasBulletImpactedInArea": {
		"body": [
			"HasBulletImpactedInArea(${1:x}, ${2:y}, ${3:z}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "HasBulletImpactedInArea"
	},
	"HasBulletImpactedInBox": {
		"body": [
			"HasBulletImpactedInBox(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "HasBulletImpactedInBox"
	},
	"HasButtonCombinationJustBeenEntered": {
		"body": [
			"HasButtonCombinationJustBeenEntered(${1:hash}, ${2:amount})"
		],
		"scope": "lua",
		"prefix": "HasButtonCombinationJustBeenEntered"
	},
	"HasCheatStringJustBeenEntered": {
		"body": [
			"HasCheatStringJustBeenEntered(${1:hash})"
		],
		"scope": "lua",
		"prefix": "HasCheatStringJustBeenEntered"
	},
	"HasClipSetLoaded": {
		"body": [
			"HasClipSetLoaded(${1:clipSet})"
		],
		"scope": "lua",
		"prefix": "HasClipSetLoaded"
	},
	"HasClosestObjectOfTypeBeenBroken": {
		"body": [
			"HasClosestObjectOfTypeBeenBroken(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:modelHash}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "HasClosestObjectOfTypeBeenBroken"
	},
	"HasClosestObjectOfTypeBeenCompletelyDestroyed": {
		"body": [
			"HasClosestObjectOfTypeBeenCompletelyDestroyed(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:modelHash}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "HasClosestObjectOfTypeBeenCompletelyDestroyed"
	},
	"HasCloudRequestsFinished": {
		"body": [
			"HasCloudRequestsFinished(${1:unused})"
		],
		"scope": "lua",
		"prefix": "HasCloudRequestsFinished"
	},
	"HasCollisionForModelLoaded": {
		"body": [
			"HasCollisionForModelLoaded(${1:model})"
		],
		"scope": "lua",
		"prefix": "HasCollisionForModelLoaded"
	},
	"HasCollisionLoadedAroundEntity": {
		"body": [
			"HasCollisionLoadedAroundEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "HasCollisionLoadedAroundEntity"
	},
	"HasCutFileLoaded": {
		"body": [
			"HasCutFileLoaded(${1:cutsceneName})"
		],
		"scope": "lua",
		"prefix": "HasCutFileLoaded"
	},
	"HasCutsceneCutThisFrame": {
		"body": [
			"HasCutsceneCutThisFrame()"
		],
		"scope": "lua",
		"prefix": "HasCutsceneCutThisFrame"
	},
	"HasCutsceneFinished": {
		"body": [
			"HasCutsceneFinished()"
		],
		"scope": "lua",
		"prefix": "HasCutsceneFinished"
	},
	"HasCutsceneLoaded": {
		"body": [
			"HasCutsceneLoaded()"
		],
		"scope": "lua",
		"prefix": "HasCutsceneLoaded"
	},
	"HasDirectorModeBeenTriggered": {
		"body": [
			"HasDirectorModeBeenTriggered()"
		],
		"scope": "lua",
		"prefix": "HasDirectorModeBeenTriggered"
	},
	"HasEntityAnimFinished": {
		"body": [
			"HasEntityAnimFinished(${1:entity}, ${2:animDict}, ${3:animName}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "HasEntityAnimFinished"
	},
	"HasEntityBeenDamagedByAnyObject": {
		"body": [
			"HasEntityBeenDamagedByAnyObject(${1:entity})"
		],
		"scope": "lua",
		"prefix": "HasEntityBeenDamagedByAnyObject"
	},
	"HasEntityBeenDamagedByAnyPed": {
		"body": [
			"HasEntityBeenDamagedByAnyPed(${1:entity})"
		],
		"scope": "lua",
		"prefix": "HasEntityBeenDamagedByAnyPed"
	},
	"HasEntityBeenDamagedByAnyVehicle": {
		"body": [
			"HasEntityBeenDamagedByAnyVehicle(${1:entity})"
		],
		"scope": "lua",
		"prefix": "HasEntityBeenDamagedByAnyVehicle"
	},
	"HasEntityBeenDamagedByEntity": {
		"body": [
			"HasEntityBeenDamagedByEntity(${1:entity1}, ${2:entity2}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "HasEntityBeenDamagedByEntity"
	},
	"HasEntityBeenDamagedByWeapon": {
		"body": [
			"HasEntityBeenDamagedByWeapon(${1:entity}, ${2:weaponHash}, ${3:weaponType})"
		],
		"scope": "lua",
		"prefix": "HasEntityBeenDamagedByWeapon"
	},
	"HasEntityBeenMarkedAsNoLongerNeeded": {
		"body": [
			"HasEntityBeenMarkedAsNoLongerNeeded(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "HasEntityBeenMarkedAsNoLongerNeeded"
	},
	"HasEntityClearLosToEntity": {
		"body": [
			"HasEntityClearLosToEntity(${1:entity1}, ${2:entity2}, ${3:traceType})"
		],
		"scope": "lua",
		"prefix": "HasEntityClearLosToEntity"
	},
	"HasEntityClearLosToEntity_2": {
		"body": [
			"HasEntityClearLosToEntity_2(${1:entity1}, ${2:entity2}, ${3:traceType})"
		],
		"scope": "lua",
		"prefix": "HasEntityClearLosToEntity_2"
	},
	"HasEntityClearLosToEntityInFront": {
		"body": [
			"HasEntityClearLosToEntityInFront(${1:entity1}, ${2:entity2})"
		],
		"scope": "lua",
		"prefix": "HasEntityClearLosToEntityInFront"
	},
	"HasEntityCollidedWithAnything": {
		"body": [
			"HasEntityCollidedWithAnything(${1:entity})"
		],
		"scope": "lua",
		"prefix": "HasEntityCollidedWithAnything"
	},
	"HasFilledVehiclePopulation": {
		"body": [
			"HasFilledVehiclePopulation()"
		],
		"scope": "lua",
		"prefix": "HasFilledVehiclePopulation"
	},
	"HasForceCleanupOccurred": {
		"body": [
			"HasForceCleanupOccurred(${1:cleanupFlags})"
		],
		"scope": "lua",
		"prefix": "HasForceCleanupOccurred"
	},
	"HasMinimapOverlayLoaded": {
		"body": [
			"HasMinimapOverlayLoaded(${1:id})"
		],
		"scope": "lua",
		"prefix": "HasMinimapOverlayLoaded"
	},
	"HasModelLoaded": {
		"body": [
			"HasModelLoaded(${1:model})"
		],
		"scope": "lua",
		"prefix": "HasModelLoaded"
	},
	"HasMultiplayerAudioDataLoaded": {
		"body": [
			"HasMultiplayerAudioDataLoaded()"
		],
		"scope": "lua",
		"prefix": "HasMultiplayerAudioDataLoaded"
	},
	"HasMultiplayerAudioDataUnloaded": {
		"body": [
			"HasMultiplayerAudioDataUnloaded()"
		],
		"scope": "lua",
		"prefix": "HasMultiplayerAudioDataUnloaded"
	},
	"HasNamedPtfxAssetLoaded": {
		"body": [
			"HasNamedPtfxAssetLoaded(${1:fxName})"
		],
		"scope": "lua",
		"prefix": "HasNamedPtfxAssetLoaded"
	},
	"HasNetworkTimeStarted": {
		"body": [
			"HasNetworkTimeStarted()"
		],
		"scope": "lua",
		"prefix": "HasNetworkTimeStarted"
	},
	"HasObjectBeenBroken": {
		"body": [
			"HasObjectBeenBroken(${1:object})"
		],
		"scope": "lua",
		"prefix": "HasObjectBeenBroken"
	},
	"HasPedBeenDamagedByWeapon": {
		"body": [
			"HasPedBeenDamagedByWeapon(${1:ped}, ${2:weaponHash}, ${3:weaponType})"
		],
		"scope": "lua",
		"prefix": "HasPedBeenDamagedByWeapon"
	},
	"HasPedGotWeapon": {
		"body": [
			"HasPedGotWeapon(${1:ped}, ${2:weaponHash}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "HasPedGotWeapon"
	},
	"HasPedGotWeaponComponent": {
		"body": [
			"HasPedGotWeaponComponent(${1:ped}, ${2:weaponHash}, ${3:componentHash})"
		],
		"scope": "lua",
		"prefix": "HasPedGotWeaponComponent"
	},
	"HasPedHeadBlendFinished": {
		"body": [
			"HasPedHeadBlendFinished(${1:ped})"
		],
		"scope": "lua",
		"prefix": "HasPedHeadBlendFinished"
	},
	"HasPedheadshotImgUploadFailed": {
		"body": [
			"HasPedheadshotImgUploadFailed()"
		],
		"scope": "lua",
		"prefix": "HasPedheadshotImgUploadFailed"
	},
	"HasPedheadshotImgUploadSucceeded": {
		"body": [
			"HasPedheadshotImgUploadSucceeded()"
		],
		"scope": "lua",
		"prefix": "HasPedheadshotImgUploadSucceeded"
	},
	"HasPedPreloadPropDataFinished": {
		"body": [
			"HasPedPreloadPropDataFinished(${1:ped})"
		],
		"scope": "lua",
		"prefix": "HasPedPreloadPropDataFinished"
	},
	"HasPedPreloadVariationDataFinished": {
		"body": [
			"HasPedPreloadVariationDataFinished(${1:ped})"
		],
		"scope": "lua",
		"prefix": "HasPedPreloadVariationDataFinished"
	},
	"HasPedReceivedEvent": {
		"body": [
			"HasPedReceivedEvent(${1:ped}, ${2:eventId})"
		],
		"scope": "lua",
		"prefix": "HasPedReceivedEvent"
	},
	"HasPickupBeenCollected": {
		"body": [
			"HasPickupBeenCollected(${1:pickup})"
		],
		"scope": "lua",
		"prefix": "HasPickupBeenCollected"
	},
	"HasPlayerBeenSpottedInStolenVehicle": {
		"body": [
			"HasPlayerBeenSpottedInStolenVehicle(${1:player})"
		],
		"scope": "lua",
		"prefix": "HasPlayerBeenSpottedInStolenVehicle"
	},
	"HasPlayerDamagedAtLeastOneNonAnimalPed": {
		"body": [
			"HasPlayerDamagedAtLeastOneNonAnimalPed(${1:player})"
		],
		"scope": "lua",
		"prefix": "HasPlayerDamagedAtLeastOneNonAnimalPed"
	},
	"HasPlayerDamagedAtLeastOnePed": {
		"body": [
			"HasPlayerDamagedAtLeastOnePed(${1:player})"
		],
		"scope": "lua",
		"prefix": "HasPlayerDamagedAtLeastOnePed"
	},
	"HasPlayerLeftTheWorld": {
		"body": [
			"HasPlayerLeftTheWorld(${1:player})"
		],
		"scope": "lua",
		"prefix": "HasPlayerLeftTheWorld"
	},
	"HasPreloadModsFinished": {
		"body": [
			"HasPreloadModsFinished(${1:p0})"
		],
		"scope": "lua",
		"prefix": "HasPreloadModsFinished"
	},
	"HasPtfxAssetLoaded": {
		"body": [
			"HasPtfxAssetLoaded()"
		],
		"scope": "lua",
		"prefix": "HasPtfxAssetLoaded"
	},
	"HasResumedFromSuspend": {
		"body": [
			"HasResumedFromSuspend()"
		],
		"scope": "lua",
		"prefix": "HasResumedFromSuspend"
	},
	"HasScaleformContainerMovieLoadedIntoParent": {
		"body": [
			"HasScaleformContainerMovieLoadedIntoParent(${1:scaleformHandle})"
		],
		"scope": "lua",
		"prefix": "HasScaleformContainerMovieLoadedIntoParent"
	},
	"HasScaleformMovieFilenameLoaded": {
		"body": [
			"HasScaleformMovieFilenameLoaded(${1:scaleformName})"
		],
		"scope": "lua",
		"prefix": "HasScaleformMovieFilenameLoaded"
	},
	"HasScaleformMovieLoaded": {
		"body": [
			"HasScaleformMovieLoaded(${1:scaleformHandle})"
		],
		"scope": "lua",
		"prefix": "HasScaleformMovieLoaded"
	},
	"HasScaleformScriptHudMovieLoaded": {
		"body": [
			"HasScaleformScriptHudMovieLoaded(${1:hudComponent})"
		],
		"scope": "lua",
		"prefix": "HasScaleformScriptHudMovieLoaded"
	},
	"HasScriptLoaded": {
		"body": [
			"HasScriptLoaded(${1:scriptName})"
		],
		"scope": "lua",
		"prefix": "HasScriptLoaded"
	},
	"HasScriptWithNameHashLoaded": {
		"body": [
			"HasScriptWithNameHashLoaded(${1:scriptHash})"
		],
		"scope": "lua",
		"prefix": "HasScriptWithNameHashLoaded"
	},
	"HasSoundFinished": {
		"body": [
			"HasSoundFinished(${1:soundId})"
		],
		"scope": "lua",
		"prefix": "HasSoundFinished"
	},
	"HasStealthModeAssetLoaded": {
		"body": [
			"HasStealthModeAssetLoaded(${1:asset})"
		],
		"scope": "lua",
		"prefix": "HasStealthModeAssetLoaded"
	},
	"HasStreamedTextureDictLoaded": {
		"body": [
			"HasStreamedTextureDictLoaded(${1:textureDict})"
		],
		"scope": "lua",
		"prefix": "HasStreamedTextureDictLoaded"
	},
	"HasThisAdditionalTextLoaded": {
		"body": [
			"HasThisAdditionalTextLoaded(${1:gxt}, ${2:slot})"
		],
		"scope": "lua",
		"prefix": "HasThisAdditionalTextLoaded"
	},
	"HasThisCutsceneLoaded": {
		"body": [
			"HasThisCutsceneLoaded(${1:cutsceneName})"
		],
		"scope": "lua",
		"prefix": "HasThisCutsceneLoaded"
	},
	"HasVehicleAssetLoaded": {
		"body": [
			"HasVehicleAssetLoaded(${1:vehicleAsset})"
		],
		"scope": "lua",
		"prefix": "HasVehicleAssetLoaded"
	},
	"HasVehicleBeenOwnedByPlayer": {
		"body": [
			"HasVehicleBeenOwnedByPlayer(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "HasVehicleBeenOwnedByPlayer"
	},
	"HasVehicleGotProjectileAttached": {
		"body": [
			"HasVehicleGotProjectileAttached(${1:driver}, ${2:vehicle}, ${3:weaponHash}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "HasVehicleGotProjectileAttached"
	},
	"HasVehiclePhoneExplosiveDevice": {
		"body": [
			"HasVehiclePhoneExplosiveDevice()"
		],
		"scope": "lua",
		"prefix": "HasVehiclePhoneExplosiveDevice"
	},
	"HasVehicleRecordingBeenLoaded": {
		"body": [
			"HasVehicleRecordingBeenLoaded(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "HasVehicleRecordingBeenLoaded"
	},
	"HasWeaponAssetLoaded": {
		"body": [
			"HasWeaponAssetLoaded(${1:weaponHash})"
		],
		"scope": "lua",
		"prefix": "HasWeaponAssetLoaded"
	},
	"HasWeaponGotWeaponComponent": {
		"body": [
			"HasWeaponGotWeaponComponent(${1:weapon}, ${2:addonHash})"
		],
		"scope": "lua",
		"prefix": "HasWeaponGotWeaponComponent"
	},
	"HaveAllStreamingRequestsCompleted": {
		"body": [
			"HaveAllStreamingRequestsCompleted(${1:ped})"
		],
		"scope": "lua",
		"prefix": "HaveAllStreamingRequestsCompleted"
	},
	"HaveCreditsReachedEnd": {
		"body": [
			"HaveCreditsReachedEnd()"
		],
		"scope": "lua",
		"prefix": "HaveCreditsReachedEnd"
	},
	"HaveVehicleModsStreamedIn": {
		"body": [
			"HaveVehicleModsStreamedIn(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "HaveVehicleModsStreamedIn"
	},
	"HideAreaAndVehicleNameThisFrame": {
		"body": [
			"HideAreaAndVehicleNameThisFrame()"
		],
		"scope": "lua",
		"prefix": "HideAreaAndVehicleNameThisFrame"
	},
	"HideHelpTextThisFrame": {
		"body": [
			"HideHelpTextThisFrame()"
		],
		"scope": "lua",
		"prefix": "HideHelpTextThisFrame"
	},
	"HideHudAndRadarThisFrame": {
		"body": [
			"HideHudAndRadarThisFrame()"
		],
		"scope": "lua",
		"prefix": "HideHudAndRadarThisFrame"
	},
	"HideHudComponentThisFrame": {
		"body": [
			"HideHudComponentThisFrame(${1:id})"
		],
		"scope": "lua",
		"prefix": "HideHudComponentThisFrame"
	},
	"HideLoadingOnFadeThisFrame": {
		"body": [
			"HideLoadingOnFadeThisFrame()"
		],
		"scope": "lua",
		"prefix": "HideLoadingOnFadeThisFrame"
	},
	"HideMinimapExteriorMapThisFrame": {
		"body": [
			"HideMinimapExteriorMapThisFrame()"
		],
		"scope": "lua",
		"prefix": "HideMinimapExteriorMapThisFrame"
	},
	"HideMinimapInteriorMapThisFrame": {
		"body": [
			"HideMinimapInteriorMapThisFrame()"
		],
		"scope": "lua",
		"prefix": "HideMinimapInteriorMapThisFrame"
	},
	"HideNumberOnBlip": {
		"body": [
			"HideNumberOnBlip(${1:blip})"
		],
		"scope": "lua",
		"prefix": "HideNumberOnBlip"
	},
	"HidePedBloodDamageByZone": {
		"body": [
			"HidePedBloodDamageByZone(${1:ped}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "HidePedBloodDamageByZone"
	},
	"HidePedWeaponForScriptedCutscene": {
		"body": [
			"HidePedWeaponForScriptedCutscene(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "HidePedWeaponForScriptedCutscene"
	},
	"HidePickup": {
		"body": [
			"HidePickup(${1:pickup}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "HidePickup"
	},
	"HideScriptedHudComponentThisFrame": {
		"body": [
			"HideScriptedHudComponentThisFrame(${1:id})"
		],
		"scope": "lua",
		"prefix": "HideScriptedHudComponentThisFrame"
	},
	"HideVehicleTombstone": {
		"body": [
			"HideVehicleTombstone(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "HideVehicleTombstone"
	},
	"HintAmbientAudioBank": {
		"body": [
			"HintAmbientAudioBank(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "HintAmbientAudioBank"
	},
	"HintScriptAudioBank": {
		"body": [
			"HintScriptAudioBank(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "HintScriptAudioBank"
	},
	"HiredLimo": {
		"body": [
			"HiredLimo(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "HiredLimo"
	},
	"HudDisplayLoadingScreenTips": {
		"body": [
			"HudDisplayLoadingScreenTips()"
		],
		"scope": "lua",
		"prefix": "HudDisplayLoadingScreenTips"
	},
	"HudForceWeaponWheel": {
		"body": [
			"HudForceWeaponWheel(${1:show})"
		],
		"scope": "lua",
		"prefix": "HudForceWeaponWheel"
	},
	"HudSetWeaponWheelTopSlot": {
		"body": [
			"HudSetWeaponWheelTopSlot(${1:weaponHash})"
		],
		"scope": "lua",
		"prefix": "HudSetWeaponWheelTopSlot"
	},
	"HudWeaponWheelGetSelectedHash": {
		"body": [
			"HudWeaponWheelGetSelectedHash()"
		],
		"scope": "lua",
		"prefix": "HudWeaponWheelGetSelectedHash"
	},
	"HudWeaponWheelGetSlotHash": {
		"body": [
			"HudWeaponWheelGetSlotHash(${1:weaponTypeIndex})"
		],
		"scope": "lua",
		"prefix": "HudWeaponWheelGetSlotHash"
	},
	"HudWeaponWheelIgnoreControlInput": {
		"body": [
			"HudWeaponWheelIgnoreControlInput(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "HudWeaponWheelIgnoreControlInput"
	},
	"HudWeaponWheelIgnoreSelection": {
		"body": [
			"HudWeaponWheelIgnoreSelection()"
		],
		"scope": "lua",
		"prefix": "HudWeaponWheelIgnoreSelection"
	},
	"IgnoreNextRestart": {
		"body": [
			"IgnoreNextRestart(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "IgnoreNextRestart"
	},
	"InitCreatorBudget": {
		"body": [
			"InitCreatorBudget()"
		],
		"scope": "lua",
		"prefix": "InitCreatorBudget"
	},
	"InitShopPedComponent": {
		"body": [
			"InitShopPedComponent(${1:outComponent})"
		],
		"scope": "lua",
		"prefix": "InitShopPedComponent"
	},
	"InitShopPedProp": {
		"body": [
			"InitShopPedProp(${1:outProp})"
		],
		"scope": "lua",
		"prefix": "InitShopPedProp"
	},
	"InstantlyFillPedPopulation": {
		"body": [
			"InstantlyFillPedPopulation()"
		],
		"scope": "lua",
		"prefix": "InstantlyFillPedPopulation"
	},
	"InstantlyFillVehiclePopulation": {
		"body": [
			"InstantlyFillVehiclePopulation()"
		],
		"scope": "lua",
		"prefix": "InstantlyFillVehiclePopulation"
	},
	"InterruptConversation": {
		"body": [
			"InterruptConversation(${1:p0})"
		],
		"scope": "lua",
		"prefix": "InterruptConversation"
	},
	"InterruptConversationAndPause": {
		"body": [
			"InterruptConversationAndPause(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "InterruptConversationAndPause"
	},
	"IntToParticipantindex": {
		"body": [
			"IntToParticipantindex(${1:value})"
		],
		"scope": "lua",
		"prefix": "IntToParticipantindex"
	},
	"IntToPlayerindex": {
		"body": [
			"IntToPlayerindex(${1:value})"
		],
		"scope": "lua",
		"prefix": "IntToPlayerindex"
	},
	"InvalidateIdleCam": {
		"body": [
			"InvalidateIdleCam()"
		],
		"scope": "lua",
		"prefix": "InvalidateIdleCam"
	},
	"InvalidateVehicleIdleCam": {
		"body": [
			"InvalidateVehicleIdleCam()"
		],
		"scope": "lua",
		"prefix": "InvalidateVehicleIdleCam"
	},
	"InvokeFunctionReference": {
		"body": [
			"InvokeFunctionReference(${1:referenceIdentity}, ${2:argsSerialized}, ${3:argsLength}, ${4:retvalLength})"
		],
		"scope": "lua",
		"prefix": "InvokeFunctionReference"
	},
	"IsAceAllowed": {
		"body": [
			"IsAceAllowed(${1:object})"
		],
		"scope": "lua",
		"prefix": "IsAceAllowed"
	},
	"IsAimCamActive": {
		"body": [
			"IsAimCamActive()"
		],
		"scope": "lua",
		"prefix": "IsAimCamActive"
	},
	"IsAimCamThirdPersonActive": {
		"body": [
			"IsAimCamThirdPersonActive()"
		],
		"scope": "lua",
		"prefix": "IsAimCamThirdPersonActive"
	},
	"IsAlarmPlaying": {
		"body": [
			"IsAlarmPlaying(${1:alarmName})"
		],
		"scope": "lua",
		"prefix": "IsAlarmPlaying"
	},
	"IsAmbientSpeechDisabled": {
		"body": [
			"IsAmbientSpeechDisabled(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsAmbientSpeechDisabled"
	},
	"IsAmbientSpeechPlaying": {
		"body": [
			"IsAmbientSpeechPlaying(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsAmbientSpeechPlaying"
	},
	"IsAmbientZoneEnabled": {
		"body": [
			"IsAmbientZoneEnabled(${1:ambientZone})"
		],
		"scope": "lua",
		"prefix": "IsAmbientZoneEnabled"
	},
	"IsAnEntity": {
		"body": [
			"IsAnEntity(${1:handle})"
		],
		"scope": "lua",
		"prefix": "IsAnEntity"
	},
	"IsAnimalVocalizationPlaying": {
		"body": [
			"IsAnimalVocalizationPlaying(${1:pedHandle})"
		],
		"scope": "lua",
		"prefix": "IsAnimalVocalizationPlaying"
	},
	"IsAnyAirDefenseZoneInsideSphere": {
		"body": [
			"IsAnyAirDefenseZoneInsideSphere(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:outZoneId})"
		],
		"scope": "lua",
		"prefix": "IsAnyAirDefenseZoneInsideSphere"
	},
	"IsAnyEntityAttachedToHandlerFrame": {
		"body": [
			"IsAnyEntityAttachedToHandlerFrame(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsAnyEntityAttachedToHandlerFrame"
	},
	"IsAnyEntityEntirelyInsideGarage": {
		"body": [
			"IsAnyEntityEntirelyInsideGarage(${1:garageHash}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "IsAnyEntityEntirelyInsideGarage"
	},
	"IsAnyHostilePedNearPoint": {
		"body": [
			"IsAnyHostilePedNearPoint(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:radius})"
		],
		"scope": "lua",
		"prefix": "IsAnyHostilePedNearPoint"
	},
	"IsAnyObjectNearPoint": {
		"body": [
			"IsAnyObjectNearPoint(${1:x}, ${2:y}, ${3:z}, ${4:range}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "IsAnyObjectNearPoint"
	},
	"IsAnyPedNearPoint": {
		"body": [
			"IsAnyPedNearPoint(${1:x}, ${2:y}, ${3:z}, ${4:radius})"
		],
		"scope": "lua",
		"prefix": "IsAnyPedNearPoint"
	},
	"IsAnyPedRappellingFromHeli": {
		"body": [
			"IsAnyPedRappellingFromHeli(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsAnyPedRappellingFromHeli"
	},
	"IsAnyPedShootingInArea": {
		"body": [
			"IsAnyPedShootingInArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "IsAnyPedShootingInArea"
	},
	"IsAnySpeechPlaying": {
		"body": [
			"IsAnySpeechPlaying(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsAnySpeechPlaying"
	},
	"IsAnyVehicleNearPoint": {
		"body": [
			"IsAnyVehicleNearPoint(${1:x}, ${2:y}, ${3:z}, ${4:radius})"
		],
		"scope": "lua",
		"prefix": "IsAnyVehicleNearPoint"
	},
	"IsAreaOccupied": {
		"body": [
			"IsAreaOccupied(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11}, ${13:p12})"
		],
		"scope": "lua",
		"prefix": "IsAreaOccupied"
	},
	"IsAudioSceneActive": {
		"body": [
			"IsAudioSceneActive(${1:scene})"
		],
		"scope": "lua",
		"prefix": "IsAudioSceneActive"
	},
	"IsAussieVersion": {
		"body": [
			"IsAussieVersion()"
		],
		"scope": "lua",
		"prefix": "IsAussieVersion"
	},
	"IsAutoSaveInProgress": {
		"body": [
			"IsAutoSaveInProgress()"
		],
		"scope": "lua",
		"prefix": "IsAutoSaveInProgress"
	},
	"IsBigmapActive": {
		"body": [
			"IsBigmapActive()"
		],
		"scope": "lua",
		"prefix": "IsBigmapActive"
	},
	"IsBigmapFull": {
		"body": [
			"IsBigmapFull()"
		],
		"scope": "lua",
		"prefix": "IsBigmapFull"
	},
	"IsBigVehicle": {
		"body": [
			"IsBigVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsBigVehicle"
	},
	"IsBitSet": {
		"body": [
			"IsBitSet(${1:address}, ${2:offset})"
		],
		"scope": "lua",
		"prefix": "IsBitSet"
	},
	"IsBlipFlashing": {
		"body": [
			"IsBlipFlashing(${1:blip})"
		],
		"scope": "lua",
		"prefix": "IsBlipFlashing"
	},
	"IsBlipOnMinimap": {
		"body": [
			"IsBlipOnMinimap(${1:blip})"
		],
		"scope": "lua",
		"prefix": "IsBlipOnMinimap"
	},
	"IsBlipShortRange": {
		"body": [
			"IsBlipShortRange(${1:blip})"
		],
		"scope": "lua",
		"prefix": "IsBlipShortRange"
	},
	"IsBoatAnchoredAndFrozen": {
		"body": [
			"IsBoatAnchoredAndFrozen(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsBoatAnchoredAndFrozen"
	},
	"IsBulletInAngledArea": {
		"body": [
			"IsBulletInAngledArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:width}, ${8:ownedByPlayer})"
		],
		"scope": "lua",
		"prefix": "IsBulletInAngledArea"
	},
	"IsBulletInArea": {
		"body": [
			"IsBulletInArea(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:ownedByPlayer})"
		],
		"scope": "lua",
		"prefix": "IsBulletInArea"
	},
	"IsBulletInBox": {
		"body": [
			"IsBulletInBox(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:ownedByPlayer})"
		],
		"scope": "lua",
		"prefix": "IsBulletInBox"
	},
	"IsCamActive": {
		"body": [
			"IsCamActive(${1:cam})"
		],
		"scope": "lua",
		"prefix": "IsCamActive"
	},
	"IsCamInterpolating": {
		"body": [
			"IsCamInterpolating(${1:cam})"
		],
		"scope": "lua",
		"prefix": "IsCamInterpolating"
	},
	"IsCamPlayingAnim": {
		"body": [
			"IsCamPlayingAnim(${1:cam}, ${2:animName}, ${3:animDictionary})"
		],
		"scope": "lua",
		"prefix": "IsCamPlayingAnim"
	},
	"IsCamRendering": {
		"body": [
			"IsCamRendering(${1:cam})"
		],
		"scope": "lua",
		"prefix": "IsCamRendering"
	},
	"IsCamShaking": {
		"body": [
			"IsCamShaking(${1:cam})"
		],
		"scope": "lua",
		"prefix": "IsCamShaking"
	},
	"IsCamSplinePaused": {
		"body": [
			"IsCamSplinePaused(${1:p0})"
		],
		"scope": "lua",
		"prefix": "IsCamSplinePaused"
	},
	"IsCinematicCamActive": {
		"body": [
			"IsCinematicCamActive()"
		],
		"scope": "lua",
		"prefix": "IsCinematicCamActive"
	},
	"IsCinematicCamRendering": {
		"body": [
			"IsCinematicCamRendering()"
		],
		"scope": "lua",
		"prefix": "IsCinematicCamRendering"
	},
	"IsCinematicCamShaking": {
		"body": [
			"IsCinematicCamShaking()"
		],
		"scope": "lua",
		"prefix": "IsCinematicCamShaking"
	},
	"IsCinematicIdleCamRendering": {
		"body": [
			"IsCinematicIdleCamRendering()"
		],
		"scope": "lua",
		"prefix": "IsCinematicIdleCamRendering"
	},
	"IsCinematicShotActive": {
		"body": [
			"IsCinematicShotActive(${1:p0})"
		],
		"scope": "lua",
		"prefix": "IsCinematicShotActive"
	},
	"IsCollisionMarkedOutside": {
		"body": [
			"IsCollisionMarkedOutside(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "IsCollisionMarkedOutside"
	},
	"IsCommandLineBenchmarkValueSet": {
		"body": [
			"IsCommandLineBenchmarkValueSet()"
		],
		"scope": "lua",
		"prefix": "IsCommandLineBenchmarkValueSet"
	},
	"IsCommerceDataValid": {
		"body": [
			"IsCommerceDataValid()"
		],
		"scope": "lua",
		"prefix": "IsCommerceDataValid"
	},
	"IsCommerceStoreOpen": {
		"body": [
			"IsCommerceStoreOpen()"
		],
		"scope": "lua",
		"prefix": "IsCommerceStoreOpen"
	},
	"IsContentItemLocked": {
		"body": [
			"IsContentItemLocked(${1:itemHash})"
		],
		"scope": "lua",
		"prefix": "IsContentItemLocked"
	},
	"IsControlEnabled": {
		"body": [
			"IsControlEnabled(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "IsControlEnabled"
	},
	"IsControlJustPressed": {
		"body": [
			"IsControlJustPressed(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "IsControlJustPressed"
	},
	"IsControlJustReleased": {
		"body": [
			"IsControlJustReleased(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "IsControlJustReleased"
	},
	"IsControlPressed": {
		"body": [
			"IsControlPressed(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "IsControlPressed"
	},
	"IsControlReleased": {
		"body": [
			"IsControlReleased(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "IsControlReleased"
	},
	"IsConversationPedDead": {
		"body": [
			"IsConversationPedDead(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsConversationPedDead"
	},
	"IsCopPedInArea_3d": {
		"body": [
			"IsCopPedInArea_3d(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2})"
		],
		"scope": "lua",
		"prefix": "IsCopPedInArea_3d"
	},
	"IsCopVehicleInArea_3d": {
		"body": [
			"IsCopVehicleInArea_3d(${1:x1}, ${2:x2}, ${3:y1}, ${4:y2}, ${5:z1}, ${6:z2})"
		],
		"scope": "lua",
		"prefix": "IsCopVehicleInArea_3d"
	},
	"IsCutsceneActive": {
		"body": [
			"IsCutsceneActive()"
		],
		"scope": "lua",
		"prefix": "IsCutsceneActive"
	},
	"IsCutscenePlaybackFlagSet": {
		"body": [
			"IsCutscenePlaybackFlagSet(${1:flag})"
		],
		"scope": "lua",
		"prefix": "IsCutscenePlaybackFlagSet"
	},
	"IsCutscenePlaying": {
		"body": [
			"IsCutscenePlaying()"
		],
		"scope": "lua",
		"prefix": "IsCutscenePlaying"
	},
	"IsDamageTrackerActiveOnNetworkId": {
		"body": [
			"IsDamageTrackerActiveOnNetworkId(${1:netID})"
		],
		"scope": "lua",
		"prefix": "IsDamageTrackerActiveOnNetworkId"
	},
	"IsDamageTrackerActiveOnPlayer": {
		"body": [
			"IsDamageTrackerActiveOnPlayer(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsDamageTrackerActiveOnPlayer"
	},
	"IsDecalAlive": {
		"body": [
			"IsDecalAlive(${1:decal})"
		],
		"scope": "lua",
		"prefix": "IsDecalAlive"
	},
	"IsDisabledControlJustPressed": {
		"body": [
			"IsDisabledControlJustPressed(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "IsDisabledControlJustPressed"
	},
	"IsDisabledControlJustReleased": {
		"body": [
			"IsDisabledControlJustReleased(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "IsDisabledControlJustReleased"
	},
	"IsDisabledControlPressed": {
		"body": [
			"IsDisabledControlPressed(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "IsDisabledControlPressed"
	},
	"IsDisabledControlReleased": {
		"body": [
			"IsDisabledControlReleased(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "IsDisabledControlReleased"
	},
	"IsDlcPresent": {
		"body": [
			"IsDlcPresent(${1:dlcHash})"
		],
		"scope": "lua",
		"prefix": "IsDlcPresent"
	},
	"IsDlcVehicleMod": {
		"body": [
			"IsDlcVehicleMod(${1:hash})"
		],
		"scope": "lua",
		"prefix": "IsDlcVehicleMod"
	},
	"IsDoorClosed": {
		"body": [
			"IsDoorClosed(${1:doorHash})"
		],
		"scope": "lua",
		"prefix": "IsDoorClosed"
	},
	"IsDoorRegisteredWithSystem": {
		"body": [
			"IsDoorRegisteredWithSystem(${1:doorHash})"
		],
		"scope": "lua",
		"prefix": "IsDoorRegisteredWithSystem"
	},
	"IsDrivebyTaskUnderneathDrivingTask": {
		"body": [
			"IsDrivebyTaskUnderneathDrivingTask(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsDrivebyTaskUnderneathDrivingTask"
	},
	"IsDuiAvailable": {
		"body": [
			"IsDuiAvailable(${1:duiObject})"
		],
		"scope": "lua",
		"prefix": "IsDuiAvailable"
	},
	"IsDuplicityVersion": {
		"body": [
			"IsDuplicityVersion()"
		],
		"scope": "lua",
		"prefix": "IsDuplicityVersion"
	},
	"IsDurangoVersion": {
		"body": [
			"IsDurangoVersion()"
		],
		"scope": "lua",
		"prefix": "IsDurangoVersion"
	},
	"IsEntityAMissionEntity": {
		"body": [
			"IsEntityAMissionEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityAMissionEntity"
	},
	"IsEntityAnObject": {
		"body": [
			"IsEntityAnObject(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityAnObject"
	},
	"IsEntityAPed": {
		"body": [
			"IsEntityAPed(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityAPed"
	},
	"IsEntityAtCoord": {
		"body": [
			"IsEntityAtCoord(${1:entity}, ${2:xPos}, ${3:yPos}, ${4:zPos}, ${5:xSize}, ${6:ySize}, ${7:zSize}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "IsEntityAtCoord"
	},
	"IsEntityAtEntity": {
		"body": [
			"IsEntityAtEntity(${1:entity1}, ${2:entity2}, ${3:xSize}, ${4:ySize}, ${5:zSize}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "IsEntityAtEntity"
	},
	"IsEntityAttached": {
		"body": [
			"IsEntityAttached(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityAttached"
	},
	"IsEntityAttachedToAnyObject": {
		"body": [
			"IsEntityAttachedToAnyObject(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityAttachedToAnyObject"
	},
	"IsEntityAttachedToAnyPed": {
		"body": [
			"IsEntityAttachedToAnyPed(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityAttachedToAnyPed"
	},
	"IsEntityAttachedToAnyVehicle": {
		"body": [
			"IsEntityAttachedToAnyVehicle(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityAttachedToAnyVehicle"
	},
	"IsEntityAttachedToEntity": {
		"body": [
			"IsEntityAttachedToEntity(${1:from}, ${2:to})"
		],
		"scope": "lua",
		"prefix": "IsEntityAttachedToEntity"
	},
	"IsEntityAttachedToHandlerFrame": {
		"body": [
			"IsEntityAttachedToHandlerFrame(${1:vehicle}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityAttachedToHandlerFrame"
	},
	"IsEntityAVehicle": {
		"body": [
			"IsEntityAVehicle(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityAVehicle"
	},
	"IsEntityDead": {
		"body": [
			"IsEntityDead(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityDead"
	},
	"IsEntityFocus": {
		"body": [
			"IsEntityFocus(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityFocus"
	},
	"IsEntityGhostedToLocalPlayer": {
		"body": [
			"IsEntityGhostedToLocalPlayer(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityGhostedToLocalPlayer"
	},
	"IsEntityInAir": {
		"body": [
			"IsEntityInAir(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityInAir"
	},
	"IsEntityInAngledArea": {
		"body": [
			"IsEntityInAngledArea(${1:entity}, ${2:x1}, ${3:y1}, ${4:z1}, ${5:x2}, ${6:y2}, ${7:z2}, ${8:width}, ${9:debug}, ${10:includez}, ${11:p10})"
		],
		"scope": "lua",
		"prefix": "IsEntityInAngledArea"
	},
	"IsEntityInArea": {
		"body": [
			"IsEntityInArea(${1:entity}, ${2:x1}, ${3:y1}, ${4:z1}, ${5:x2}, ${6:y2}, ${7:z2}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "IsEntityInArea"
	},
	"IsEntityInWater": {
		"body": [
			"IsEntityInWater(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityInWater"
	},
	"IsEntityInZone": {
		"body": [
			"IsEntityInZone(${1:entity}, ${2:zone})"
		],
		"scope": "lua",
		"prefix": "IsEntityInZone"
	},
	"IsEntityOccluded": {
		"body": [
			"IsEntityOccluded(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityOccluded"
	},
	"IsEntityOnFire": {
		"body": [
			"IsEntityOnFire(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityOnFire"
	},
	"IsEntityOnScreen": {
		"body": [
			"IsEntityOnScreen(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityOnScreen"
	},
	"IsEntityPlayingAnim": {
		"body": [
			"IsEntityPlayingAnim(${1:entity}, ${2:animDict}, ${3:animName}, ${4:taskFlag})"
		],
		"scope": "lua",
		"prefix": "IsEntityPlayingAnim"
	},
	"IsEntityStatic": {
		"body": [
			"IsEntityStatic(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityStatic"
	},
	"IsEntityTouchingEntity": {
		"body": [
			"IsEntityTouchingEntity(${1:entity}, ${2:targetEntity})"
		],
		"scope": "lua",
		"prefix": "IsEntityTouchingEntity"
	},
	"IsEntityTouchingModel": {
		"body": [
			"IsEntityTouchingModel(${1:entity}, ${2:modelHash})"
		],
		"scope": "lua",
		"prefix": "IsEntityTouchingModel"
	},
	"IsEntityUpright": {
		"body": [
			"IsEntityUpright(${1:entity}, ${2:angle})"
		],
		"scope": "lua",
		"prefix": "IsEntityUpright"
	},
	"IsEntityUpsidedown": {
		"body": [
			"IsEntityUpsidedown(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityUpsidedown"
	},
	"IsEntityVisible": {
		"body": [
			"IsEntityVisible(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityVisible"
	},
	"IsEntityVisibleToScript": {
		"body": [
			"IsEntityVisibleToScript(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityVisibleToScript"
	},
	"IsEntityWaitingForWorldCollision": {
		"body": [
			"IsEntityWaitingForWorldCollision(${1:entity})"
		],
		"scope": "lua",
		"prefix": "IsEntityWaitingForWorldCollision"
	},
	"IsExplosionActiveInArea": {
		"body": [
			"IsExplosionActiveInArea(${1:explosionType}, ${2:x1}, ${3:y1}, ${4:z1}, ${5:x2}, ${6:y2}, ${7:z2})"
		],
		"scope": "lua",
		"prefix": "IsExplosionActiveInArea"
	},
	"IsExplosionInAngledArea": {
		"body": [
			"IsExplosionInAngledArea(${1:explosionType}, ${2:x1}, ${3:y1}, ${4:z1}, ${5:x2}, ${6:y2}, ${7:z2}, ${8:width})"
		],
		"scope": "lua",
		"prefix": "IsExplosionInAngledArea"
	},
	"IsExplosionInArea": {
		"body": [
			"IsExplosionInArea(${1:explosionType}, ${2:x1}, ${3:y1}, ${4:z1}, ${5:x2}, ${6:y2}, ${7:z2})"
		],
		"scope": "lua",
		"prefix": "IsExplosionInArea"
	},
	"IsExplosionInSphere": {
		"body": [
			"IsExplosionInSphere(${1:explosionType}, ${2:x}, ${3:y}, ${4:z}, ${5:radius})"
		],
		"scope": "lua",
		"prefix": "IsExplosionInSphere"
	},
	"IsFirstPersonAimCamActive": {
		"body": [
			"IsFirstPersonAimCamActive()"
		],
		"scope": "lua",
		"prefix": "IsFirstPersonAimCamActive"
	},
	"IsFlashLightOn": {
		"body": [
			"IsFlashLightOn(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsFlashLightOn"
	},
	"IsFloatingHelpTextOnScreen": {
		"body": [
			"IsFloatingHelpTextOnScreen(${1:hudIndex})"
		],
		"scope": "lua",
		"prefix": "IsFloatingHelpTextOnScreen"
	},
	"IsFollowPedCamActive": {
		"body": [
			"IsFollowPedCamActive()"
		],
		"scope": "lua",
		"prefix": "IsFollowPedCamActive"
	},
	"IsFollowVehicleCamActive": {
		"body": [
			"IsFollowVehicleCamActive()"
		],
		"scope": "lua",
		"prefix": "IsFollowVehicleCamActive"
	},
	"IsFrontendFading": {
		"body": [
			"IsFrontendFading()"
		],
		"scope": "lua",
		"prefix": "IsFrontendFading"
	},
	"IsFrontendReadyForControl": {
		"body": [
			"IsFrontendReadyForControl()"
		],
		"scope": "lua",
		"prefix": "IsFrontendReadyForControl"
	},
	"IsGameInControlOfMusic": {
		"body": [
			"IsGameInControlOfMusic()"
		],
		"scope": "lua",
		"prefix": "IsGameInControlOfMusic"
	},
	"IsGameplayCamLookingBehind": {
		"body": [
			"IsGameplayCamLookingBehind()"
		],
		"scope": "lua",
		"prefix": "IsGameplayCamLookingBehind"
	},
	"IsGameplayCamRendering": {
		"body": [
			"IsGameplayCamRendering()"
		],
		"scope": "lua",
		"prefix": "IsGameplayCamRendering"
	},
	"IsGameplayCamShaking": {
		"body": [
			"IsGameplayCamShaking()"
		],
		"scope": "lua",
		"prefix": "IsGameplayCamShaking"
	},
	"IsGameplayHintActive": {
		"body": [
			"IsGameplayHintActive()"
		],
		"scope": "lua",
		"prefix": "IsGameplayHintActive"
	},
	"IsGarageEmpty": {
		"body": [
			"IsGarageEmpty(${1:garageHash}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "IsGarageEmpty"
	},
	"IsHandlerFrameAboveContainer": {
		"body": [
			"IsHandlerFrameAboveContainer(${1:handler}, ${2:container})"
		],
		"scope": "lua",
		"prefix": "IsHandlerFrameAboveContainer"
	},
	"IsHeliLandingAreaBlocked": {
		"body": [
			"IsHeliLandingAreaBlocked(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsHeliLandingAreaBlocked"
	},
	"IsHeliPartBroken": {
		"body": [
			"IsHeliPartBroken(${1:vehicle}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "IsHeliPartBroken"
	},
	"IsHelpMessageBeingDisplayed": {
		"body": [
			"IsHelpMessageBeingDisplayed()"
		],
		"scope": "lua",
		"prefix": "IsHelpMessageBeingDisplayed"
	},
	"IsHelpMessageFadingOut": {
		"body": [
			"IsHelpMessageFadingOut()"
		],
		"scope": "lua",
		"prefix": "IsHelpMessageFadingOut"
	},
	"IsHelpMessageOnScreen": {
		"body": [
			"IsHelpMessageOnScreen()"
		],
		"scope": "lua",
		"prefix": "IsHelpMessageOnScreen"
	},
	"IsHornActive": {
		"body": [
			"IsHornActive(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsHornActive"
	},
	"IsHoveringOverMissionCreatorBlip": {
		"body": [
			"IsHoveringOverMissionCreatorBlip()"
		],
		"scope": "lua",
		"prefix": "IsHoveringOverMissionCreatorBlip"
	},
	"IsHudComponentActive": {
		"body": [
			"IsHudComponentActive(${1:id})"
		],
		"scope": "lua",
		"prefix": "IsHudComponentActive"
	},
	"IsHudHidden": {
		"body": [
			"IsHudHidden()"
		],
		"scope": "lua",
		"prefix": "IsHudHidden"
	},
	"IsHudPreferenceSwitchedOn": {
		"body": [
			"IsHudPreferenceSwitchedOn()"
		],
		"scope": "lua",
		"prefix": "IsHudPreferenceSwitchedOn"
	},
	"IsIncidentValid": {
		"body": [
			"IsIncidentValid(${1:incidentId})"
		],
		"scope": "lua",
		"prefix": "IsIncidentValid"
	},
	"IsInItemset": {
		"body": [
			"IsInItemset(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "IsInItemset"
	},
	"IsInPowerSavingMode": {
		"body": [
			"IsInPowerSavingMode()"
		],
		"scope": "lua",
		"prefix": "IsInPowerSavingMode"
	},
	"IsInteriorCapped": {
		"body": [
			"IsInteriorCapped(${1:interiorID})"
		],
		"scope": "lua",
		"prefix": "IsInteriorCapped"
	},
	"IsInteriorDisabled": {
		"body": [
			"IsInteriorDisabled(${1:interior})"
		],
		"scope": "lua",
		"prefix": "IsInteriorDisabled"
	},
	"IsInteriorEntitySetActive": {
		"body": [
			"IsInteriorEntitySetActive(${1:interior}, ${2:entitySetName})"
		],
		"scope": "lua",
		"prefix": "IsInteriorEntitySetActive"
	},
	"IsInteriorReady": {
		"body": [
			"IsInteriorReady(${1:interiorID})"
		],
		"scope": "lua",
		"prefix": "IsInteriorReady"
	},
	"IsInteriorRenderingDisabled": {
		"body": [
			"IsInteriorRenderingDisabled()"
		],
		"scope": "lua",
		"prefix": "IsInteriorRenderingDisabled"
	},
	"IsInteriorScene": {
		"body": [
			"IsInteriorScene()"
		],
		"scope": "lua",
		"prefix": "IsInteriorScene"
	},
	"IsInVehicleCamDisabled": {
		"body": [
			"IsInVehicleCamDisabled()"
		],
		"scope": "lua",
		"prefix": "IsInVehicleCamDisabled"
	},
	"IsIplActive": {
		"body": [
			"IsIplActive(${1:iplName})"
		],
		"scope": "lua",
		"prefix": "IsIplActive"
	},
	"IsItemsetValid": {
		"body": [
			"IsItemsetValid(${1:p0})"
		],
		"scope": "lua",
		"prefix": "IsItemsetValid"
	},
	"IsLookInverted": {
		"body": [
			"IsLookInverted()"
		],
		"scope": "lua",
		"prefix": "IsLookInverted"
	},
	"IsMemoryCardInUse": {
		"body": [
			"IsMemoryCardInUse()"
		],
		"scope": "lua",
		"prefix": "IsMemoryCardInUse"
	},
	"IsMessageBeingDisplayed": {
		"body": [
			"IsMessageBeingDisplayed()"
		],
		"scope": "lua",
		"prefix": "IsMessageBeingDisplayed"
	},
	"IsMinigameInProgress": {
		"body": [
			"IsMinigameInProgress()"
		],
		"scope": "lua",
		"prefix": "IsMinigameInProgress"
	},
	"IsMinimapInInterior": {
		"body": [
			"IsMinimapInInterior()"
		],
		"scope": "lua",
		"prefix": "IsMinimapInInterior"
	},
	"IsMinimapRendering": {
		"body": [
			"IsMinimapRendering()"
		],
		"scope": "lua",
		"prefix": "IsMinimapRendering"
	},
	"IsMissionCompletePlaying": {
		"body": [
			"IsMissionCompletePlaying()"
		],
		"scope": "lua",
		"prefix": "IsMissionCompletePlaying"
	},
	"IsMissionCompleteReadyForUi": {
		"body": [
			"IsMissionCompleteReadyForUi()"
		],
		"scope": "lua",
		"prefix": "IsMissionCompleteReadyForUi"
	},
	"IsMissionCreatorBlip": {
		"body": [
			"IsMissionCreatorBlip(${1:blip})"
		],
		"scope": "lua",
		"prefix": "IsMissionCreatorBlip"
	},
	"IsMissionNewsStoryUnlocked": {
		"body": [
			"IsMissionNewsStoryUnlocked(${1:newsStory})"
		],
		"scope": "lua",
		"prefix": "IsMissionNewsStoryUnlocked"
	},
	"IsMobilePhoneCallOngoing": {
		"body": [
			"IsMobilePhoneCallOngoing()"
		],
		"scope": "lua",
		"prefix": "IsMobilePhoneCallOngoing"
	},
	"IsMobilePhoneRadioActive": {
		"body": [
			"IsMobilePhoneRadioActive()"
		],
		"scope": "lua",
		"prefix": "IsMobilePhoneRadioActive"
	},
	"IsModelAPed": {
		"body": [
			"IsModelAPed(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsModelAPed"
	},
	"IsModelAVehicle": {
		"body": [
			"IsModelAVehicle(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsModelAVehicle"
	},
	"IsModelInCdimage": {
		"body": [
			"IsModelInCdimage(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsModelInCdimage"
	},
	"IsModelValid": {
		"body": [
			"IsModelValid(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsModelValid"
	},
	"IsMountedWeaponTaskUnderneathDrivingTask": {
		"body": [
			"IsMountedWeaponTaskUnderneathDrivingTask(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsMountedWeaponTaskUnderneathDrivingTask"
	},
	"IsMoveBlendRatioRunning": {
		"body": [
			"IsMoveBlendRatioRunning(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsMoveBlendRatioRunning"
	},
	"IsMoveBlendRatioSprinting": {
		"body": [
			"IsMoveBlendRatioSprinting(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsMoveBlendRatioSprinting"
	},
	"IsMoveBlendRatioStill": {
		"body": [
			"IsMoveBlendRatioStill(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsMoveBlendRatioStill"
	},
	"IsMoveBlendRatioWalking": {
		"body": [
			"IsMoveBlendRatioWalking(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsMoveBlendRatioWalking"
	},
	"IsMpGamerTagActive": {
		"body": [
			"IsMpGamerTagActive(${1:gamerTagId})"
		],
		"scope": "lua",
		"prefix": "IsMpGamerTagActive"
	},
	"IsMpGamerTagFree": {
		"body": [
			"IsMpGamerTagFree(${1:gamerTagId})"
		],
		"scope": "lua",
		"prefix": "IsMpGamerTagFree"
	},
	"IsMpGamerTagMovieActive": {
		"body": [
			"IsMpGamerTagMovieActive()"
		],
		"scope": "lua",
		"prefix": "IsMpGamerTagMovieActive"
	},
	"IsMultiplayerChatActive": {
		"body": [
			"IsMultiplayerChatActive()"
		],
		"scope": "lua",
		"prefix": "IsMultiplayerChatActive"
	},
	"IsMusicOneshotPlaying": {
		"body": [
			"IsMusicOneshotPlaying()"
		],
		"scope": "lua",
		"prefix": "IsMusicOneshotPlaying"
	},
	"IsNamedRendertargetLinked": {
		"body": [
			"IsNamedRendertargetLinked(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "IsNamedRendertargetLinked"
	},
	"IsNamedRendertargetRegistered": {
		"body": [
			"IsNamedRendertargetRegistered(${1:name})"
		],
		"scope": "lua",
		"prefix": "IsNamedRendertargetRegistered"
	},
	"IsNavigatingMenuContent": {
		"body": [
			"IsNavigatingMenuContent()"
		],
		"scope": "lua",
		"prefix": "IsNavigatingMenuContent"
	},
	"IsNavmeshLoadedInArea": {
		"body": [
			"IsNavmeshLoadedInArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2})"
		],
		"scope": "lua",
		"prefix": "IsNavmeshLoadedInArea"
	},
	"IsNavmeshRequiredRegionOwnedByAnyThread": {
		"body": [
			"IsNavmeshRequiredRegionOwnedByAnyThread()"
		],
		"scope": "lua",
		"prefix": "IsNavmeshRequiredRegionOwnedByAnyThread"
	},
	"IsNetworkIdOwnedByParticipant": {
		"body": [
			"IsNetworkIdOwnedByParticipant(${1:netId})"
		],
		"scope": "lua",
		"prefix": "IsNetworkIdOwnedByParticipant"
	},
	"IsNetworkLoadingScene": {
		"body": [
			"IsNetworkLoadingScene()"
		],
		"scope": "lua",
		"prefix": "IsNetworkLoadingScene"
	},
	"IsNewLoadSceneActive": {
		"body": [
			"IsNewLoadSceneActive()"
		],
		"scope": "lua",
		"prefix": "IsNewLoadSceneActive"
	},
	"IsNewLoadSceneLoaded": {
		"body": [
			"IsNewLoadSceneLoaded()"
		],
		"scope": "lua",
		"prefix": "IsNewLoadSceneLoaded"
	},
	"IsNextWeatherType": {
		"body": [
			"IsNextWeatherType(${1:weatherType})"
		],
		"scope": "lua",
		"prefix": "IsNextWeatherType"
	},
	"IsObjectAPickup": {
		"body": [
			"IsObjectAPickup(${1:object})"
		],
		"scope": "lua",
		"prefix": "IsObjectAPickup"
	},
	"IsObjectAPortablePickup": {
		"body": [
			"IsObjectAPortablePickup(${1:object})"
		],
		"scope": "lua",
		"prefix": "IsObjectAPortablePickup"
	},
	"IsObjectEntirelyInsideGarage": {
		"body": [
			"IsObjectEntirelyInsideGarage(${1:garageHash}, ${2:entity}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "IsObjectEntirelyInsideGarage"
	},
	"IsObjectNearPoint": {
		"body": [
			"IsObjectNearPoint(${1:objectHash}, ${2:x}, ${3:y}, ${4:z}, ${5:range})"
		],
		"scope": "lua",
		"prefix": "IsObjectNearPoint"
	},
	"IsObjectPartiallyInsideGarage": {
		"body": [
			"IsObjectPartiallyInsideGarage(${1:garageHash}, ${2:entity}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "IsObjectPartiallyInsideGarage"
	},
	"IsObjectVisible": {
		"body": [
			"IsObjectVisible(${1:object})"
		],
		"scope": "lua",
		"prefix": "IsObjectVisible"
	},
	"IsObjectWithinBrainActivationRange": {
		"body": [
			"IsObjectWithinBrainActivationRange(${1:object})"
		],
		"scope": "lua",
		"prefix": "IsObjectWithinBrainActivationRange"
	},
	"IsOnlinePoliciesMenuActive": {
		"body": [
			"IsOnlinePoliciesMenuActive()"
		],
		"scope": "lua",
		"prefix": "IsOnlinePoliciesMenuActive"
	},
	"IsOrbisVersion": {
		"body": [
			"IsOrbisVersion()"
		],
		"scope": "lua",
		"prefix": "IsOrbisVersion"
	},
	"IsPauseMenuActive": {
		"body": [
			"IsPauseMenuActive()"
		],
		"scope": "lua",
		"prefix": "IsPauseMenuActive"
	},
	"IsPauseMenuRestarting": {
		"body": [
			"IsPauseMenuRestarting()"
		],
		"scope": "lua",
		"prefix": "IsPauseMenuRestarting"
	},
	"IsPcVersion": {
		"body": [
			"IsPcVersion()"
		],
		"scope": "lua",
		"prefix": "IsPcVersion"
	},
	"IsPedActiveInScenario": {
		"body": [
			"IsPedActiveInScenario(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedActiveInScenario"
	},
	"IsPedAimingFromCover": {
		"body": [
			"IsPedAimingFromCover(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedAimingFromCover"
	},
	"IsPedAPlayer": {
		"body": [
			"IsPedAPlayer(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedAPlayer"
	},
	"IsPedArmed": {
		"body": [
			"IsPedArmed(${1:ped}, ${2:typeFlags})"
		],
		"scope": "lua",
		"prefix": "IsPedArmed"
	},
	"IsPedBeingArrested": {
		"body": [
			"IsPedBeingArrested(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedBeingArrested"
	},
	"IsPedBeingJacked": {
		"body": [
			"IsPedBeingJacked(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedBeingJacked"
	},
	"IsPedBeingStealthKilled": {
		"body": [
			"IsPedBeingStealthKilled(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedBeingStealthKilled"
	},
	"IsPedBeingStunned": {
		"body": [
			"IsPedBeingStunned(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "IsPedBeingStunned"
	},
	"IsPedBlushColorValid": {
		"body": [
			"IsPedBlushColorValid(${1:colorID})"
		],
		"scope": "lua",
		"prefix": "IsPedBlushColorValid"
	},
	"IsPedBlushColorValid_2": {
		"body": [
			"IsPedBlushColorValid_2(${1:colorId})"
		],
		"scope": "lua",
		"prefix": "IsPedBlushColorValid_2"
	},
	"IsPedBodyBlemishValid": {
		"body": [
			"IsPedBodyBlemishValid(${1:colorID})"
		],
		"scope": "lua",
		"prefix": "IsPedBodyBlemishValid"
	},
	"IsPedClimbing": {
		"body": [
			"IsPedClimbing(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedClimbing"
	},
	"IsPedComponentVariationValid": {
		"body": [
			"IsPedComponentVariationValid(${1:ped}, ${2:componentId}, ${3:drawableId}, ${4:textureId})"
		],
		"scope": "lua",
		"prefix": "IsPedComponentVariationValid"
	},
	"IsPedCuffed": {
		"body": [
			"IsPedCuffed(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedCuffed"
	},
	"IsPedCurrentWeaponSilenced": {
		"body": [
			"IsPedCurrentWeaponSilenced(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedCurrentWeaponSilenced"
	},
	"IsPedDeadOrDying": {
		"body": [
			"IsPedDeadOrDying(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "IsPedDeadOrDying"
	},
	"IsPedDefensiveAreaActive": {
		"body": [
			"IsPedDefensiveAreaActive(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "IsPedDefensiveAreaActive"
	},
	"IsPedDiving": {
		"body": [
			"IsPedDiving(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedDiving"
	},
	"IsPedDoingBeastJump": {
		"body": [
			"IsPedDoingBeastJump(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedDoingBeastJump"
	},
	"IsPedDoingDriveby": {
		"body": [
			"IsPedDoingDriveby(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedDoingDriveby"
	},
	"IsPedDucking": {
		"body": [
			"IsPedDucking(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedDucking"
	},
	"IsPedEvasiveDiving": {
		"body": [
			"IsPedEvasiveDiving(${1:ped}, ${2:evadingEntity})"
		],
		"scope": "lua",
		"prefix": "IsPedEvasiveDiving"
	},
	"IsPedExclusiveDriverOfVehicle": {
		"body": [
			"IsPedExclusiveDriverOfVehicle(${1:ped}, ${2:vehicle}, ${3:outIndex})"
		],
		"scope": "lua",
		"prefix": "IsPedExclusiveDriverOfVehicle"
	},
	"IsPedFacingPed": {
		"body": [
			"IsPedFacingPed(${1:ped}, ${2:otherPed}, ${3:angle})"
		],
		"scope": "lua",
		"prefix": "IsPedFacingPed"
	},
	"IsPedFalling": {
		"body": [
			"IsPedFalling(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedFalling"
	},
	"IsPedFatallyInjured": {
		"body": [
			"IsPedFatallyInjured(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedFatallyInjured"
	},
	"IsPedFleeing": {
		"body": [
			"IsPedFleeing(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedFleeing"
	},
	"IsPedGettingIntoAVehicle": {
		"body": [
			"IsPedGettingIntoAVehicle(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedGettingIntoAVehicle"
	},
	"IsPedGettingUp": {
		"body": [
			"IsPedGettingUp(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedGettingUp"
	},
	"IsPedGoingIntoCover": {
		"body": [
			"IsPedGoingIntoCover(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedGoingIntoCover"
	},
	"IsPedGroupMember": {
		"body": [
			"IsPedGroupMember(${1:ped}, ${2:groupId})"
		],
		"scope": "lua",
		"prefix": "IsPedGroupMember"
	},
	"IsPedHairColorValid": {
		"body": [
			"IsPedHairColorValid(${1:colorID})"
		],
		"scope": "lua",
		"prefix": "IsPedHairColorValid"
	},
	"IsPedHairColorValid_2": {
		"body": [
			"IsPedHairColorValid_2(${1:colorId})"
		],
		"scope": "lua",
		"prefix": "IsPedHairColorValid_2"
	},
	"IsPedHangingOnToVehicle": {
		"body": [
			"IsPedHangingOnToVehicle(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedHangingOnToVehicle"
	},
	"IsPedHeadingTowardsPosition": {
		"body": [
			"IsPedHeadingTowardsPosition(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "IsPedHeadingTowardsPosition"
	},
	"IsPedheadshotImgUploadAvailable": {
		"body": [
			"IsPedheadshotImgUploadAvailable()"
		],
		"scope": "lua",
		"prefix": "IsPedheadshotImgUploadAvailable"
	},
	"IsPedheadshotReady": {
		"body": [
			"IsPedheadshotReady(${1:id})"
		],
		"scope": "lua",
		"prefix": "IsPedheadshotReady"
	},
	"IsPedheadshotValid": {
		"body": [
			"IsPedheadshotValid(${1:handle})"
		],
		"scope": "lua",
		"prefix": "IsPedheadshotValid"
	},
	"IsPedHeadtrackingEntity": {
		"body": [
			"IsPedHeadtrackingEntity(${1:ped}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "IsPedHeadtrackingEntity"
	},
	"IsPedHeadtrackingPed": {
		"body": [
			"IsPedHeadtrackingPed(${1:ped1}, ${2:ped2})"
		],
		"scope": "lua",
		"prefix": "IsPedHeadtrackingPed"
	},
	"IsPedHelmetUnk": {
		"body": [
			"IsPedHelmetUnk(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedHelmetUnk"
	},
	"IsPedHuman": {
		"body": [
			"IsPedHuman(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedHuman"
	},
	"IsPedHurt": {
		"body": [
			"IsPedHurt(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedHurt"
	},
	"IsPedInAnyBoat": {
		"body": [
			"IsPedInAnyBoat(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInAnyBoat"
	},
	"IsPedInAnyHeli": {
		"body": [
			"IsPedInAnyHeli(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInAnyHeli"
	},
	"IsPedInAnyPlane": {
		"body": [
			"IsPedInAnyPlane(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInAnyPlane"
	},
	"IsPedInAnyPoliceVehicle": {
		"body": [
			"IsPedInAnyPoliceVehicle(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInAnyPoliceVehicle"
	},
	"IsPedInAnySub": {
		"body": [
			"IsPedInAnySub(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInAnySub"
	},
	"IsPedInAnyTaxi": {
		"body": [
			"IsPedInAnyTaxi(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInAnyTaxi"
	},
	"IsPedInAnyTrain": {
		"body": [
			"IsPedInAnyTrain(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInAnyTrain"
	},
	"IsPedInAnyVehicle": {
		"body": [
			"IsPedInAnyVehicle(${1:ped}, ${2:atGetIn})"
		],
		"scope": "lua",
		"prefix": "IsPedInAnyVehicle"
	},
	"IsPedInCombat": {
		"body": [
			"IsPedInCombat(${1:ped}, ${2:target})"
		],
		"scope": "lua",
		"prefix": "IsPedInCombat"
	},
	"IsPedInCover": {
		"body": [
			"IsPedInCover(${1:ped}, ${2:exceptUseWeapon})"
		],
		"scope": "lua",
		"prefix": "IsPedInCover"
	},
	"IsPedInCoverFacingLeft": {
		"body": [
			"IsPedInCoverFacingLeft(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInCoverFacingLeft"
	},
	"IsPedInCurrentConversation": {
		"body": [
			"IsPedInCurrentConversation(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInCurrentConversation"
	},
	"IsPedInFlyingVehicle": {
		"body": [
			"IsPedInFlyingVehicle(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInFlyingVehicle"
	},
	"IsPedInGroup": {
		"body": [
			"IsPedInGroup(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInGroup"
	},
	"IsPedInHighCover": {
		"body": [
			"IsPedInHighCover(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInHighCover"
	},
	"IsPedInjured": {
		"body": [
			"IsPedInjured(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInjured"
	},
	"IsPedInMeleeCombat": {
		"body": [
			"IsPedInMeleeCombat(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInMeleeCombat"
	},
	"IsPedInModel": {
		"body": [
			"IsPedInModel(${1:ped}, ${2:modelHash})"
		],
		"scope": "lua",
		"prefix": "IsPedInModel"
	},
	"IsPedInParachuteFreeFall": {
		"body": [
			"IsPedInParachuteFreeFall(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInParachuteFreeFall"
	},
	"IsPedInVehicle": {
		"body": [
			"IsPedInVehicle(${1:ped}, ${2:vehicle}, ${3:atGetIn})"
		],
		"scope": "lua",
		"prefix": "IsPedInVehicle"
	},
	"IsPedInWrithe": {
		"body": [
			"IsPedInWrithe(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedInWrithe"
	},
	"IsPedJacking": {
		"body": [
			"IsPedJacking(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedJacking"
	},
	"IsPedJumping": {
		"body": [
			"IsPedJumping(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedJumping"
	},
	"IsPedJumpingOutOfVehicle": {
		"body": [
			"IsPedJumpingOutOfVehicle(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedJumpingOutOfVehicle"
	},
	"IsPedLipstickColorValid": {
		"body": [
			"IsPedLipstickColorValid(${1:colorID})"
		],
		"scope": "lua",
		"prefix": "IsPedLipstickColorValid"
	},
	"IsPedLipstickColorValid_2": {
		"body": [
			"IsPedLipstickColorValid_2(${1:colorId})"
		],
		"scope": "lua",
		"prefix": "IsPedLipstickColorValid_2"
	},
	"IsPedMale": {
		"body": [
			"IsPedMale(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedMale"
	},
	"IsPedModel": {
		"body": [
			"IsPedModel(${1:ped}, ${2:modelHash})"
		],
		"scope": "lua",
		"prefix": "IsPedModel"
	},
	"IsPedOnAnyBike": {
		"body": [
			"IsPedOnAnyBike(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedOnAnyBike"
	},
	"IsPedOnFoot": {
		"body": [
			"IsPedOnFoot(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedOnFoot"
	},
	"IsPedOnMount": {
		"body": [
			"IsPedOnMount(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedOnMount"
	},
	"IsPedOnSpecificVehicle": {
		"body": [
			"IsPedOnSpecificVehicle(${1:ped}, ${2:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsPedOnSpecificVehicle"
	},
	"IsPedOnVehicle": {
		"body": [
			"IsPedOnVehicle(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedOnVehicle"
	},
	"IsPedOpeningADoor": {
		"body": [
			"IsPedOpeningADoor(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedOpeningADoor"
	},
	"IsPedPerformingDependentComboLimit": {
		"body": [
			"IsPedPerformingDependentComboLimit(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedPerformingDependentComboLimit"
	},
	"IsPedPerformingMeleeAction": {
		"body": [
			"IsPedPerformingMeleeAction(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedPerformingMeleeAction"
	},
	"IsPedPerformingStealthKill": {
		"body": [
			"IsPedPerformingStealthKill(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedPerformingStealthKill"
	},
	"IsPedPlantingBomb": {
		"body": [
			"IsPedPlantingBomb(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedPlantingBomb"
	},
	"IsPedPlayingBaseClipInScenario": {
		"body": [
			"IsPedPlayingBaseClipInScenario(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedPlayingBaseClipInScenario"
	},
	"IsPedProne": {
		"body": [
			"IsPedProne(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedProne"
	},
	"IsPedRagdoll": {
		"body": [
			"IsPedRagdoll(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedRagdoll"
	},
	"IsPedReloading": {
		"body": [
			"IsPedReloading(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedReloading"
	},
	"IsPedRespondingToEvent": {
		"body": [
			"IsPedRespondingToEvent(${1:ped}, ${2:event})"
		],
		"scope": "lua",
		"prefix": "IsPedRespondingToEvent"
	},
	"IsPedRingtonePlaying": {
		"body": [
			"IsPedRingtonePlaying(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedRingtonePlaying"
	},
	"IsPedRunning": {
		"body": [
			"IsPedRunning(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedRunning"
	},
	"IsPedRunningArrestTask": {
		"body": [
			"IsPedRunningArrestTask(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedRunningArrestTask"
	},
	"IsPedRunningMeleeTask": {
		"body": [
			"IsPedRunningMeleeTask(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedRunningMeleeTask"
	},
	"IsPedRunningMobilePhoneTask": {
		"body": [
			"IsPedRunningMobilePhoneTask(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedRunningMobilePhoneTask"
	},
	"IsPedRunningRagdollTask": {
		"body": [
			"IsPedRunningRagdollTask(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedRunningRagdollTask"
	},
	"IsPedShaderEffectValid": {
		"body": [
			"IsPedShaderEffectValid(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedShaderEffectValid"
	},
	"IsPedShooting": {
		"body": [
			"IsPedShooting(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedShooting"
	},
	"IsPedShootingInArea": {
		"body": [
			"IsPedShootingInArea(${1:ped}, ${2:x1}, ${3:y1}, ${4:z1}, ${5:x2}, ${6:y2}, ${7:z2}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "IsPedShootingInArea"
	},
	"IsPedSittingInAnyVehicle": {
		"body": [
			"IsPedSittingInAnyVehicle(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedSittingInAnyVehicle"
	},
	"IsPedSittingInVehicle": {
		"body": [
			"IsPedSittingInVehicle(${1:ped}, ${2:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsPedSittingInVehicle"
	},
	"IsPedSprinting": {
		"body": [
			"IsPedSprinting(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedSprinting"
	},
	"IsPedStill": {
		"body": [
			"IsPedStill(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedStill"
	},
	"IsPedStopped": {
		"body": [
			"IsPedStopped(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedStopped"
	},
	"IsPedStrafing": {
		"body": [
			"IsPedStrafing(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedStrafing"
	},
	"IsPedSwappingWeapon": {
		"body": [
			"IsPedSwappingWeapon(${1:Ped})"
		],
		"scope": "lua",
		"prefix": "IsPedSwappingWeapon"
	},
	"IsPedSwimming": {
		"body": [
			"IsPedSwimming(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedSwimming"
	},
	"IsPedSwimmingUnderWater": {
		"body": [
			"IsPedSwimmingUnderWater(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedSwimmingUnderWater"
	},
	"IsPedTakingOffHelmet": {
		"body": [
			"IsPedTakingOffHelmet(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedTakingOffHelmet"
	},
	"IsPedTracked": {
		"body": [
			"IsPedTracked(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedTracked"
	},
	"IsPedTryingToEnterALockedVehicle": {
		"body": [
			"IsPedTryingToEnterALockedVehicle(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedTryingToEnterALockedVehicle"
	},
	"IsPedUsingActionMode": {
		"body": [
			"IsPedUsingActionMode(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedUsingActionMode"
	},
	"IsPedUsingAnyScenario": {
		"body": [
			"IsPedUsingAnyScenario(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedUsingAnyScenario"
	},
	"IsPedUsingScenario": {
		"body": [
			"IsPedUsingScenario(${1:ped}, ${2:scenario})"
		],
		"scope": "lua",
		"prefix": "IsPedUsingScenario"
	},
	"IsPedVaulting": {
		"body": [
			"IsPedVaulting(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedVaulting"
	},
	"IsPedWalking": {
		"body": [
			"IsPedWalking(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedWalking"
	},
	"IsPedWeaponComponentActive": {
		"body": [
			"IsPedWeaponComponentActive(${1:ped}, ${2:weaponHash}, ${3:componentHash})"
		],
		"scope": "lua",
		"prefix": "IsPedWeaponComponentActive"
	},
	"IsPedWeaponReadyToShoot": {
		"body": [
			"IsPedWeaponReadyToShoot(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedWeaponReadyToShoot"
	},
	"IsPedWearingHelmet": {
		"body": [
			"IsPedWearingHelmet(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPedWearingHelmet"
	},
	"IsPickupWeaponObjectValid": {
		"body": [
			"IsPickupWeaponObjectValid(${1:object})"
		],
		"scope": "lua",
		"prefix": "IsPickupWeaponObjectValid"
	},
	"IsPlaneLandingGearIntact": {
		"body": [
			"IsPlaneLandingGearIntact(${1:plane})"
		],
		"scope": "lua",
		"prefix": "IsPlaneLandingGearIntact"
	},
	"IsPlaybackGoingOnForVehicle": {
		"body": [
			"IsPlaybackGoingOnForVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsPlaybackGoingOnForVehicle"
	},
	"IsPlaybackUsingAiGoingOnForVehicle": {
		"body": [
			"IsPlaybackUsingAiGoingOnForVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsPlaybackUsingAiGoingOnForVehicle"
	},
	"IsPlayerAceAllowed": {
		"body": [
			"IsPlayerAceAllowed(${1:playerSrc}, ${2:object})"
		],
		"scope": "lua",
		"prefix": "IsPlayerAceAllowed"
	},
	"IsPlayerBattleAware": {
		"body": [
			"IsPlayerBattleAware(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsPlayerBattleAware"
	},
	"IsPlayerBeingArrested": {
		"body": [
			"IsPlayerBeingArrested(${1:player}, ${2:atArresting})"
		],
		"scope": "lua",
		"prefix": "IsPlayerBeingArrested"
	},
	"IsPlayerBluetoothEnable": {
		"body": [
			"IsPlayerBluetoothEnable(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsPlayerBluetoothEnable"
	},
	"IsPlayerCamControlDisabled": {
		"body": [
			"IsPlayerCamControlDisabled()"
		],
		"scope": "lua",
		"prefix": "IsPlayerCamControlDisabled"
	},
	"IsPlayerClimbing": {
		"body": [
			"IsPlayerClimbing(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsPlayerClimbing"
	},
	"IsPlayerCommerceInfoLoaded": {
		"body": [
			"IsPlayerCommerceInfoLoaded(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "IsPlayerCommerceInfoLoaded"
	},
	"IsPlayerCommerceInfoLoadedExt": {
		"body": [
			"IsPlayerCommerceInfoLoadedExt(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "IsPlayerCommerceInfoLoadedExt"
	},
	"IsPlayerControlOn": {
		"body": [
			"IsPlayerControlOn(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsPlayerControlOn"
	},
	"IsPlayerDead": {
		"body": [
			"IsPlayerDead(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsPlayerDead"
	},
	"IsPlayerEntirelyInsideGarage": {
		"body": [
			"IsPlayerEntirelyInsideGarage(${1:garageHash}, ${2:player}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "IsPlayerEntirelyInsideGarage"
	},
	"IsPlayerEvadingWantedLevel": {
		"body": [
			"IsPlayerEvadingWantedLevel(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "IsPlayerEvadingWantedLevel"
	},
	"IsPlayerFreeAiming": {
		"body": [
			"IsPlayerFreeAiming(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsPlayerFreeAiming"
	},
	"IsPlayerFreeAimingAtEntity": {
		"body": [
			"IsPlayerFreeAimingAtEntity(${1:player}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "IsPlayerFreeAimingAtEntity"
	},
	"IsPlayerFreeForAmbientTask": {
		"body": [
			"IsPlayerFreeForAmbientTask(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsPlayerFreeForAmbientTask"
	},
	"IsPlayerInCutscene": {
		"body": [
			"IsPlayerInCutscene(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsPlayerInCutscene"
	},
	"IsPlayerLoggingInNp": {
		"body": [
			"IsPlayerLoggingInNp()"
		],
		"scope": "lua",
		"prefix": "IsPlayerLoggingInNp"
	},
	"IsPlayerOnline": {
		"body": [
			"IsPlayerOnline()"
		],
		"scope": "lua",
		"prefix": "IsPlayerOnline"
	},
	"IsPlayerPartiallyInsideGarage": {
		"body": [
			"IsPlayerPartiallyInsideGarage(${1:garageHash}, ${2:player}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "IsPlayerPartiallyInsideGarage"
	},
	"IsPlayerPlaying": {
		"body": [
			"IsPlayerPlaying(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsPlayerPlaying"
	},
	"IsPlayerPressingHorn": {
		"body": [
			"IsPlayerPressingHorn(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsPlayerPressingHorn"
	},
	"IsPlayerReadyForCutscene": {
		"body": [
			"IsPlayerReadyForCutscene(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsPlayerReadyForCutscene"
	},
	"IsPlayerRidingTrain": {
		"body": [
			"IsPlayerRidingTrain(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsPlayerRidingTrain"
	},
	"IsPlayerScriptControlOn": {
		"body": [
			"IsPlayerScriptControlOn(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsPlayerScriptControlOn"
	},
	"IsPlayerSwitchInProgress": {
		"body": [
			"IsPlayerSwitchInProgress()"
		],
		"scope": "lua",
		"prefix": "IsPlayerSwitchInProgress"
	},
	"IsPlayerTargettingAnything": {
		"body": [
			"IsPlayerTargettingAnything(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsPlayerTargettingAnything"
	},
	"IsPlayerTargettingEntity": {
		"body": [
			"IsPlayerTargettingEntity(${1:player}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "IsPlayerTargettingEntity"
	},
	"IsPlayerTeleportActive": {
		"body": [
			"IsPlayerTeleportActive()"
		],
		"scope": "lua",
		"prefix": "IsPlayerTeleportActive"
	},
	"IsPlayerUsingSuperJump": {
		"body": [
			"IsPlayerUsingSuperJump(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "IsPlayerUsingSuperJump"
	},
	"IsPlayerVehRadioEnable": {
		"body": [
			"IsPlayerVehRadioEnable()"
		],
		"scope": "lua",
		"prefix": "IsPlayerVehRadioEnable"
	},
	"IsPlayerWantedLevelGreater": {
		"body": [
			"IsPlayerWantedLevelGreater(${1:player}, ${2:wantedLevel})"
		],
		"scope": "lua",
		"prefix": "IsPlayerWantedLevelGreater"
	},
	"IsPlayingPhoneGestureAnim": {
		"body": [
			"IsPlayingPhoneGestureAnim(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsPlayingPhoneGestureAnim"
	},
	"IsPlaylistUnk": {
		"body": [
			"IsPlaylistUnk(${1:tvChannel}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "IsPlaylistUnk"
	},
	"IsPointInAngledArea": {
		"body": [
			"IsPointInAngledArea(${1:xPos}, ${2:yPos}, ${3:zPos}, ${4:x1}, ${5:y1}, ${6:z1}, ${7:x2}, ${8:y2}, ${9:z2}, ${10:width}, ${11:p10}, ${12:includez})"
		],
		"scope": "lua",
		"prefix": "IsPointInAngledArea"
	},
	"IsPointObscuredByAMissionEntity": {
		"body": [
			"IsPointObscuredByAMissionEntity(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "IsPointObscuredByAMissionEntity"
	},
	"IsPointOnRoad": {
		"body": [
			"IsPointOnRoad(${1:x}, ${2:y}, ${3:z}, ${4:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsPointOnRoad"
	},
	"IsPopMultiplierAreaUnk": {
		"body": [
			"IsPopMultiplierAreaUnk(${1:id})"
		],
		"scope": "lua",
		"prefix": "IsPopMultiplierAreaUnk"
	},
	"IsPositionOccupied": {
		"body": [
			"IsPositionOccupied(${1:x}, ${2:y}, ${3:z}, ${4:range}, ${5:p4}, ${6:checkVehicles}, ${7:checkPeds}, ${8:p7}, ${9:p8}, ${10:ignoreEntity}, ${11:p10})"
		],
		"scope": "lua",
		"prefix": "IsPositionOccupied"
	},
	"IsPrevWeatherType": {
		"body": [
			"IsPrevWeatherType(${1:weatherType})"
		],
		"scope": "lua",
		"prefix": "IsPrevWeatherType"
	},
	"IsPrincipalAceAllowed": {
		"body": [
			"IsPrincipalAceAllowed(${1:principal}, ${2:object})"
		],
		"scope": "lua",
		"prefix": "IsPrincipalAceAllowed"
	},
	"IsProjectileInArea": {
		"body": [
			"IsProjectileInArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:ownedByPlayer})"
		],
		"scope": "lua",
		"prefix": "IsProjectileInArea"
	},
	"IsProjectileTypeInAngledArea": {
		"body": [
			"IsProjectileTypeInAngledArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:width}, ${8:p6}, ${9:p7}, ${10:ownedByPlayer})"
		],
		"scope": "lua",
		"prefix": "IsProjectileTypeInAngledArea"
	},
	"IsProjectileTypeInArea": {
		"body": [
			"IsProjectileTypeInArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:type}, ${8:ownedByPlayer})"
		],
		"scope": "lua",
		"prefix": "IsProjectileTypeInArea"
	},
	"IsProjectileTypeWithinDistance": {
		"body": [
			"IsProjectileTypeWithinDistance(${1:x}, ${2:y}, ${3:z}, ${4:projHash}, ${5:radius}, ${6:ownedByPlayer})"
		],
		"scope": "lua",
		"prefix": "IsProjectileTypeWithinDistance"
	},
	"IsPs3Version": {
		"body": [
			"IsPs3Version()"
		],
		"scope": "lua",
		"prefix": "IsPs3Version"
	},
	"IsRadarHidden": {
		"body": [
			"IsRadarHidden()"
		],
		"scope": "lua",
		"prefix": "IsRadarHidden"
	},
	"IsRadarPreferenceSwitchedOn": {
		"body": [
			"IsRadarPreferenceSwitchedOn()"
		],
		"scope": "lua",
		"prefix": "IsRadarPreferenceSwitchedOn"
	},
	"IsRadioFadedOut": {
		"body": [
			"IsRadioFadedOut()"
		],
		"scope": "lua",
		"prefix": "IsRadioFadedOut"
	},
	"IsRadioRetuning": {
		"body": [
			"IsRadioRetuning()"
		],
		"scope": "lua",
		"prefix": "IsRadioRetuning"
	},
	"IsRecording": {
		"body": [
			"IsRecording()"
		],
		"scope": "lua",
		"prefix": "IsRecording"
	},
	"IsReportugcMenuOpen": {
		"body": [
			"IsReportugcMenuOpen()"
		],
		"scope": "lua",
		"prefix": "IsReportugcMenuOpen"
	},
	"IsRockstarMessageReadyForScript": {
		"body": [
			"IsRockstarMessageReadyForScript()"
		],
		"scope": "lua",
		"prefix": "IsRockstarMessageReadyForScript"
	},
	"IsScaleformMovieMethodReturnValueReady": {
		"body": [
			"IsScaleformMovieMethodReturnValueReady(${1:method_return})"
		],
		"scope": "lua",
		"prefix": "IsScaleformMovieMethodReturnValueReady"
	},
	"IsScenarioGroupEnabled": {
		"body": [
			"IsScenarioGroupEnabled(${1:scenarioGroup})"
		],
		"scope": "lua",
		"prefix": "IsScenarioGroupEnabled"
	},
	"IsScenarioOccupied": {
		"body": [
			"IsScenarioOccupied(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "IsScenarioOccupied"
	},
	"IsScenarioTypeEnabled": {
		"body": [
			"IsScenarioTypeEnabled(${1:scenarioType})"
		],
		"scope": "lua",
		"prefix": "IsScenarioTypeEnabled"
	},
	"IsScInboxValid": {
		"body": [
			"IsScInboxValid(${1:p0})"
		],
		"scope": "lua",
		"prefix": "IsScInboxValid"
	},
	"IsScreenblurFadeRunning": {
		"body": [
			"IsScreenblurFadeRunning()"
		],
		"scope": "lua",
		"prefix": "IsScreenblurFadeRunning"
	},
	"IsScreenFadedIn": {
		"body": [
			"IsScreenFadedIn()"
		],
		"scope": "lua",
		"prefix": "IsScreenFadedIn"
	},
	"IsScreenFadedOut": {
		"body": [
			"IsScreenFadedOut()"
		],
		"scope": "lua",
		"prefix": "IsScreenFadedOut"
	},
	"IsScreenFadingIn": {
		"body": [
			"IsScreenFadingIn()"
		],
		"scope": "lua",
		"prefix": "IsScreenFadingIn"
	},
	"IsScreenFadingOut": {
		"body": [
			"IsScreenFadingOut()"
		],
		"scope": "lua",
		"prefix": "IsScreenFadingOut"
	},
	"IsScriptedConversationLoaded": {
		"body": [
			"IsScriptedConversationLoaded()"
		],
		"scope": "lua",
		"prefix": "IsScriptedConversationLoaded"
	},
	"IsScriptedConversationOngoing": {
		"body": [
			"IsScriptedConversationOngoing()"
		],
		"scope": "lua",
		"prefix": "IsScriptedConversationOngoing"
	},
	"IsScriptedHudComponentActive": {
		"body": [
			"IsScriptedHudComponentActive(${1:id})"
		],
		"scope": "lua",
		"prefix": "IsScriptedHudComponentActive"
	},
	"IsScriptedHudComponentHiddenThisFrame": {
		"body": [
			"IsScriptedHudComponentHiddenThisFrame(${1:id})"
		],
		"scope": "lua",
		"prefix": "IsScriptedHudComponentHiddenThisFrame"
	},
	"IsScriptedScenarioPedUsingConditionalAnim": {
		"body": [
			"IsScriptedScenarioPedUsingConditionalAnim(${1:ped}, ${2:animDict}, ${3:anim})"
		],
		"scope": "lua",
		"prefix": "IsScriptedScenarioPedUsingConditionalAnim"
	},
	"IsScriptedSpeechPlaying": {
		"body": [
			"IsScriptedSpeechPlaying(${1:p0})"
		],
		"scope": "lua",
		"prefix": "IsScriptedSpeechPlaying"
	},
	"IsScriptGlobalShaking": {
		"body": [
			"IsScriptGlobalShaking()"
		],
		"scope": "lua",
		"prefix": "IsScriptGlobalShaking"
	},
	"IsScubaGearLightEnabled": {
		"body": [
			"IsScubaGearLightEnabled(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsScubaGearLightEnabled"
	},
	"IsSeatWarpOnly": {
		"body": [
			"IsSeatWarpOnly(${1:vehicle}, ${2:seatIndex})"
		],
		"scope": "lua",
		"prefix": "IsSeatWarpOnly"
	},
	"IsShockingEventInSphere": {
		"body": [
			"IsShockingEventInSphere(${1:eventType}, ${2:x}, ${3:y}, ${4:z}, ${5:radius})"
		],
		"scope": "lua",
		"prefix": "IsShockingEventInSphere"
	},
	"IsSniperBulletInArea": {
		"body": [
			"IsSniperBulletInArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2})"
		],
		"scope": "lua",
		"prefix": "IsSniperBulletInArea"
	},
	"IsSniperInverted": {
		"body": [
			"IsSniperInverted()"
		],
		"scope": "lua",
		"prefix": "IsSniperInverted"
	},
	"IsSocialClubActive": {
		"body": [
			"IsSocialClubActive()"
		],
		"scope": "lua",
		"prefix": "IsSocialClubActive"
	},
	"IsSpecialAbilityActive": {
		"body": [
			"IsSpecialAbilityActive(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsSpecialAbilityActive"
	},
	"IsSpecialAbilityEnabled": {
		"body": [
			"IsSpecialAbilityEnabled(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsSpecialAbilityEnabled"
	},
	"IsSpecialAbilityMeterFull": {
		"body": [
			"IsSpecialAbilityMeterFull(${1:player})"
		],
		"scope": "lua",
		"prefix": "IsSpecialAbilityMeterFull"
	},
	"IsSpecialAbilityUnlocked": {
		"body": [
			"IsSpecialAbilityUnlocked(${1:playerModel})"
		],
		"scope": "lua",
		"prefix": "IsSpecialAbilityUnlocked"
	},
	"IsSphereVisible": {
		"body": [
			"IsSphereVisible(${1:x}, ${2:y}, ${3:z}, ${4:radius})"
		],
		"scope": "lua",
		"prefix": "IsSphereVisible"
	},
	"IsSphereVisibleToAnotherMachine": {
		"body": [
			"IsSphereVisibleToAnotherMachine(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "IsSphereVisibleToAnotherMachine"
	},
	"IsSphereVisibleToPlayer": {
		"body": [
			"IsSphereVisibleToPlayer(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "IsSphereVisibleToPlayer"
	},
	"IsSrlLoaded": {
		"body": [
			"IsSrlLoaded()"
		],
		"scope": "lua",
		"prefix": "IsSrlLoaded"
	},
	"IsStoreAvailableToUser": {
		"body": [
			"IsStoreAvailableToUser()"
		],
		"scope": "lua",
		"prefix": "IsStoreAvailableToUser"
	},
	"IsStreamingAdditionalText": {
		"body": [
			"IsStreamingAdditionalText(${1:p0})"
		],
		"scope": "lua",
		"prefix": "IsStreamingAdditionalText"
	},
	"IsStreamingFileReady": {
		"body": [
			"IsStreamingFileReady(${1:registerAs})"
		],
		"scope": "lua",
		"prefix": "IsStreamingFileReady"
	},
	"IsStreamPlaying": {
		"body": [
			"IsStreamPlaying()"
		],
		"scope": "lua",
		"prefix": "IsStreamPlaying"
	},
	"IsStreamvolActive": {
		"body": [
			"IsStreamvolActive()"
		],
		"scope": "lua",
		"prefix": "IsStreamvolActive"
	},
	"IsStringNull": {
		"body": [
			"IsStringNull(${1:string})"
		],
		"scope": "lua",
		"prefix": "IsStringNull"
	},
	"IsStringNullOrEmpty": {
		"body": [
			"IsStringNullOrEmpty(${1:string})"
		],
		"scope": "lua",
		"prefix": "IsStringNullOrEmpty"
	},
	"IsStuntJumpInProgress": {
		"body": [
			"IsStuntJumpInProgress()"
		],
		"scope": "lua",
		"prefix": "IsStuntJumpInProgress"
	},
	"IsStuntJumpMessageShowing": {
		"body": [
			"IsStuntJumpMessageShowing()"
		],
		"scope": "lua",
		"prefix": "IsStuntJumpMessageShowing"
	},
	"IsSubtitlePreferenceSwitchedOn": {
		"body": [
			"IsSubtitlePreferenceSwitchedOn()"
		],
		"scope": "lua",
		"prefix": "IsSubtitlePreferenceSwitchedOn"
	},
	"IsSwitchReadyForDescent": {
		"body": [
			"IsSwitchReadyForDescent()"
		],
		"scope": "lua",
		"prefix": "IsSwitchReadyForDescent"
	},
	"IsSwitchSkippingDescent": {
		"body": [
			"IsSwitchSkippingDescent()"
		],
		"scope": "lua",
		"prefix": "IsSwitchSkippingDescent"
	},
	"IsSynchronizedSceneHoldLastFrame": {
		"body": [
			"IsSynchronizedSceneHoldLastFrame(${1:sceneID})"
		],
		"scope": "lua",
		"prefix": "IsSynchronizedSceneHoldLastFrame"
	},
	"IsSynchronizedSceneLooped": {
		"body": [
			"IsSynchronizedSceneLooped(${1:sceneID})"
		],
		"scope": "lua",
		"prefix": "IsSynchronizedSceneLooped"
	},
	"IsSynchronizedSceneRunning": {
		"body": [
			"IsSynchronizedSceneRunning(${1:sceneId})"
		],
		"scope": "lua",
		"prefix": "IsSynchronizedSceneRunning"
	},
	"IsSystemUiBeingDisplayed": {
		"body": [
			"IsSystemUiBeingDisplayed()"
		],
		"scope": "lua",
		"prefix": "IsSystemUiBeingDisplayed"
	},
	"IsTaskMoveNetworkActive": {
		"body": [
			"IsTaskMoveNetworkActive(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsTaskMoveNetworkActive"
	},
	"IsTaskMoveNetworkReadyForTransition": {
		"body": [
			"IsTaskMoveNetworkReadyForTransition(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsTaskMoveNetworkReadyForTransition"
	},
	"IsTaxiLightOn": {
		"body": [
			"IsTaxiLightOn(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsTaxiLightOn"
	},
	"IsTennisMode": {
		"body": [
			"IsTennisMode(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsTennisMode"
	},
	"IsThisAMinigameScript": {
		"body": [
			"IsThisAMinigameScript()"
		],
		"scope": "lua",
		"prefix": "IsThisAMinigameScript"
	},
	"IsThisModelABicycle": {
		"body": [
			"IsThisModelABicycle(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsThisModelABicycle"
	},
	"IsThisModelABike": {
		"body": [
			"IsThisModelABike(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsThisModelABike"
	},
	"IsThisModelABoat": {
		"body": [
			"IsThisModelABoat(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsThisModelABoat"
	},
	"IsThisModelACar": {
		"body": [
			"IsThisModelACar(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsThisModelACar"
	},
	"IsThisModelAHeli": {
		"body": [
			"IsThisModelAHeli(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsThisModelAHeli"
	},
	"IsThisModelAJetski": {
		"body": [
			"IsThisModelAJetski(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsThisModelAJetski"
	},
	"IsThisModelAnAmphibiousCar": {
		"body": [
			"IsThisModelAnAmphibiousCar(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsThisModelAnAmphibiousCar"
	},
	"IsThisModelAnAmphibiousQuadbike": {
		"body": [
			"IsThisModelAnAmphibiousQuadbike(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsThisModelAnAmphibiousQuadbike"
	},
	"IsThisModelAPlane": {
		"body": [
			"IsThisModelAPlane(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsThisModelAPlane"
	},
	"IsThisModelAQuadbike": {
		"body": [
			"IsThisModelAQuadbike(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsThisModelAQuadbike"
	},
	"IsThisModelATrain": {
		"body": [
			"IsThisModelATrain(${1:model})"
		],
		"scope": "lua",
		"prefix": "IsThisModelATrain"
	},
	"IsThreadActive": {
		"body": [
			"IsThreadActive(${1:threadId})"
		],
		"scope": "lua",
		"prefix": "IsThreadActive"
	},
	"IsTimeEqualTo": {
		"body": [
			"IsTimeEqualTo(${1:timeA}, ${2:timeB})"
		],
		"scope": "lua",
		"prefix": "IsTimeEqualTo"
	},
	"IsTimeLessThan": {
		"body": [
			"IsTimeLessThan(${1:timeA}, ${2:timeB})"
		],
		"scope": "lua",
		"prefix": "IsTimeLessThan"
	},
	"IsTimeMoreThan": {
		"body": [
			"IsTimeMoreThan(${1:timeA}, ${2:timeB})"
		],
		"scope": "lua",
		"prefix": "IsTimeMoreThan"
	},
	"IsToggleModOn": {
		"body": [
			"IsToggleModOn(${1:vehicle}, ${2:modType})"
		],
		"scope": "lua",
		"prefix": "IsToggleModOn"
	},
	"IsTrackedPedVisible": {
		"body": [
			"IsTrackedPedVisible(${1:ped})"
		],
		"scope": "lua",
		"prefix": "IsTrackedPedVisible"
	},
	"IsTrackedPointVisible": {
		"body": [
			"IsTrackedPointVisible(${1:point})"
		],
		"scope": "lua",
		"prefix": "IsTrackedPointVisible"
	},
	"IsTurretSeat": {
		"body": [
			"IsTurretSeat(${1:vehicle}, ${2:seatIndex})"
		],
		"scope": "lua",
		"prefix": "IsTurretSeat"
	},
	"IsTvPlaylistItemPlaying": {
		"body": [
			"IsTvPlaylistItemPlaying(${1:videoCliphash})"
		],
		"scope": "lua",
		"prefix": "IsTvPlaylistItemPlaying"
	},
	"IsUsingKeyboard": {
		"body": [
			"IsUsingKeyboard(${1:padIndex})"
		],
		"scope": "lua",
		"prefix": "IsUsingKeyboard"
	},
	"IsUsingKeyboard_2": {
		"body": [
			"IsUsingKeyboard_2(${1:padIndex})"
		],
		"scope": "lua",
		"prefix": "IsUsingKeyboard_2"
	},
	"IsValidInterior": {
		"body": [
			"IsValidInterior(${1:interior})"
		],
		"scope": "lua",
		"prefix": "IsValidInterior"
	},
	"IsValidMpGamerTagMovie": {
		"body": [
			"IsValidMpGamerTagMovie(${1:gamerTagId})"
		],
		"scope": "lua",
		"prefix": "IsValidMpGamerTagMovie"
	},
	"IsVehicleAConvertible": {
		"body": [
			"IsVehicleAConvertible(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "IsVehicleAConvertible"
	},
	"IsVehicleAlarmActivated": {
		"body": [
			"IsVehicleAlarmActivated(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleAlarmActivated"
	},
	"IsVehicleAlarmSet": {
		"body": [
			"IsVehicleAlarmSet(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleAlarmSet"
	},
	"IsVehicleAttachedToCargobob": {
		"body": [
			"IsVehicleAttachedToCargobob(${1:cargobob}, ${2:vehicleAttached})"
		],
		"scope": "lua",
		"prefix": "IsVehicleAttachedToCargobob"
	},
	"IsVehicleAttachedToTowTruck": {
		"body": [
			"IsVehicleAttachedToTowTruck(${1:towTruck}, ${2:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleAttachedToTowTruck"
	},
	"IsVehicleAttachedToTrailer": {
		"body": [
			"IsVehicleAttachedToTrailer(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleAttachedToTrailer"
	},
	"IsVehicleBeingHalted": {
		"body": [
			"IsVehicleBeingHalted(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleBeingHalted"
	},
	"IsVehicleBumperBouncing": {
		"body": [
			"IsVehicleBumperBouncing(${1:vehicle}, ${2:frontBumper})"
		],
		"scope": "lua",
		"prefix": "IsVehicleBumperBouncing"
	},
	"IsVehicleBumperBrokenOff": {
		"body": [
			"IsVehicleBumperBrokenOff(${1:vehicle}, ${2:front})"
		],
		"scope": "lua",
		"prefix": "IsVehicleBumperBrokenOff"
	},
	"IsVehicleDamaged": {
		"body": [
			"IsVehicleDamaged(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleDamaged"
	},
	"IsVehicleDoorDamaged": {
		"body": [
			"IsVehicleDoorDamaged(${1:veh}, ${2:doorID})"
		],
		"scope": "lua",
		"prefix": "IsVehicleDoorDamaged"
	},
	"IsVehicleDoorFullyOpen": {
		"body": [
			"IsVehicleDoorFullyOpen(${1:vehicle}, ${2:doorIndex})"
		],
		"scope": "lua",
		"prefix": "IsVehicleDoorFullyOpen"
	},
	"IsVehicleDriveable": {
		"body": [
			"IsVehicleDriveable(${1:vehicle}, ${2:isOnFireCheck})"
		],
		"scope": "lua",
		"prefix": "IsVehicleDriveable"
	},
	"IsVehicleEngineOnFire": {
		"body": [
			"IsVehicleEngineOnFire(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleEngineOnFire"
	},
	"IsVehicleEngineStarting": {
		"body": [
			"IsVehicleEngineStarting(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleEngineStarting"
	},
	"IsVehicleExtraTurnedOn": {
		"body": [
			"IsVehicleExtraTurnedOn(${1:vehicle}, ${2:extraId})"
		],
		"scope": "lua",
		"prefix": "IsVehicleExtraTurnedOn"
	},
	"IsVehicleHighDetail": {
		"body": [
			"IsVehicleHighDetail(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleHighDetail"
	},
	"IsVehicleInBurnout": {
		"body": [
			"IsVehicleInBurnout(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleInBurnout"
	},
	"IsVehicleInGarageArea": {
		"body": [
			"IsVehicleInGarageArea(${1:garageName}, ${2:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleInGarageArea"
	},
	"IsVehicleInteriorLightOn": {
		"body": [
			"IsVehicleInteriorLightOn(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleInteriorLightOn"
	},
	"IsVehicleModel": {
		"body": [
			"IsVehicleModel(${1:vehicle}, ${2:model})"
		],
		"scope": "lua",
		"prefix": "IsVehicleModel"
	},
	"IsVehicleNeedsToBeHotwired": {
		"body": [
			"IsVehicleNeedsToBeHotwired(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleNeedsToBeHotwired"
	},
	"IsVehicleNeonLightEnabled": {
		"body": [
			"IsVehicleNeonLightEnabled(${1:vehicle}, ${2:index})"
		],
		"scope": "lua",
		"prefix": "IsVehicleNeonLightEnabled"
	},
	"IsVehicleNodeIdValid": {
		"body": [
			"IsVehicleNodeIdValid(${1:vehicleNodeId})"
		],
		"scope": "lua",
		"prefix": "IsVehicleNodeIdValid"
	},
	"IsVehicleOnAllWheels": {
		"body": [
			"IsVehicleOnAllWheels(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleOnAllWheels"
	},
	"IsVehicleParachuteActive": {
		"body": [
			"IsVehicleParachuteActive(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleParachuteActive"
	},
	"IsVehiclePreviouslyOwnedByPlayer": {
		"body": [
			"IsVehiclePreviouslyOwnedByPlayer(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehiclePreviouslyOwnedByPlayer"
	},
	"IsVehicleRadioEnabled": {
		"body": [
			"IsVehicleRadioEnabled(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleRadioEnabled"
	},
	"IsVehicleRadioLoud": {
		"body": [
			"IsVehicleRadioLoud(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleRadioLoud"
	},
	"IsVehicleRocketBoostActive": {
		"body": [
			"IsVehicleRocketBoostActive(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleRocketBoostActive"
	},
	"IsVehicleSearchlightOn": {
		"body": [
			"IsVehicleSearchlightOn(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleSearchlightOn"
	},
	"IsVehicleSeatAccessible": {
		"body": [
			"IsVehicleSeatAccessible(${1:ped}, ${2:vehicle}, ${3:seatIndex}, ${4:side}, ${5:onEnter})"
		],
		"scope": "lua",
		"prefix": "IsVehicleSeatAccessible"
	},
	"IsVehicleSeatFree": {
		"body": [
			"IsVehicleSeatFree(${1:vehicle}, ${2:seatIndex})"
		],
		"scope": "lua",
		"prefix": "IsVehicleSeatFree"
	},
	"IsVehicleSirenAudioOn": {
		"body": [
			"IsVehicleSirenAudioOn(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleSirenAudioOn"
	},
	"IsVehicleSirenOn": {
		"body": [
			"IsVehicleSirenOn(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleSirenOn"
	},
	"IsVehicleSlipstreamLeader": {
		"body": [
			"IsVehicleSlipstreamLeader(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleSlipstreamLeader"
	},
	"IsVehicleSprayable": {
		"body": [
			"IsVehicleSprayable(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleSprayable"
	},
	"IsVehicleStolen": {
		"body": [
			"IsVehicleStolen(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleStolen"
	},
	"IsVehicleStopped": {
		"body": [
			"IsVehicleStopped(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleStopped"
	},
	"IsVehicleStoppedAtTrafficLights": {
		"body": [
			"IsVehicleStoppedAtTrafficLights(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleStoppedAtTrafficLights"
	},
	"IsVehicleStuckOnRoof": {
		"body": [
			"IsVehicleStuckOnRoof(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleStuckOnRoof"
	},
	"IsVehicleStuckTimerUp": {
		"body": [
			"IsVehicleStuckTimerUp(${1:vehicle}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "IsVehicleStuckTimerUp"
	},
	"IsVehicleTyreBurst": {
		"body": [
			"IsVehicleTyreBurst(${1:vehicle}, ${2:wheelID}, ${3:completely})"
		],
		"scope": "lua",
		"prefix": "IsVehicleTyreBurst"
	},
	"IsVehicleVisible": {
		"body": [
			"IsVehicleVisible(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleVisible"
	},
	"IsVehicleWanted": {
		"body": [
			"IsVehicleWanted(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsVehicleWanted"
	},
	"IsVehicleWeaponDisabled": {
		"body": [
			"IsVehicleWeaponDisabled(${1:weaponHash}, ${2:vehicle}, ${3:owner})"
		],
		"scope": "lua",
		"prefix": "IsVehicleWeaponDisabled"
	},
	"IsVehicleWindowIntact": {
		"body": [
			"IsVehicleWindowIntact(${1:vehicle}, ${2:windowIndex})"
		],
		"scope": "lua",
		"prefix": "IsVehicleWindowIntact"
	},
	"IsWarningMessageActive": {
		"body": [
			"IsWarningMessageActive()"
		],
		"scope": "lua",
		"prefix": "IsWarningMessageActive"
	},
	"IsWarningMessageActive_2": {
		"body": [
			"IsWarningMessageActive_2()"
		],
		"scope": "lua",
		"prefix": "IsWarningMessageActive_2"
	},
	"IsWaypointActive": {
		"body": [
			"IsWaypointActive()"
		],
		"scope": "lua",
		"prefix": "IsWaypointActive"
	},
	"IsWaypointPlaybackGoingOnForPed": {
		"body": [
			"IsWaypointPlaybackGoingOnForPed(${1:p0})"
		],
		"scope": "lua",
		"prefix": "IsWaypointPlaybackGoingOnForPed"
	},
	"IsWaypointPlaybackGoingOnForVehicle": {
		"body": [
			"IsWaypointPlaybackGoingOnForVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "IsWaypointPlaybackGoingOnForVehicle"
	},
	"IsWeaponValid": {
		"body": [
			"IsWeaponValid(${1:weaponHash})"
		],
		"scope": "lua",
		"prefix": "IsWeaponValid"
	},
	"IsWorldPointWithinBrainActivationRange": {
		"body": [
			"IsWorldPointWithinBrainActivationRange()"
		],
		"scope": "lua",
		"prefix": "IsWorldPointWithinBrainActivationRange"
	},
	"IsXbox360Version": {
		"body": [
			"IsXbox360Version()"
		],
		"scope": "lua",
		"prefix": "IsXbox360Version"
	},
	"KnockOffPedProp": {
		"body": [
			"KnockOffPedProp(${1:ped}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "KnockOffPedProp"
	},
	"KnockPedOffVehicle": {
		"body": [
			"KnockPedOffVehicle(${1:ped})"
		],
		"scope": "lua",
		"prefix": "KnockPedOffVehicle"
	},
	"LandingMenuIsActive": {
		"body": [
			"LandingMenuIsActive()"
		],
		"scope": "lua",
		"prefix": "LandingMenuIsActive"
	},
	"Leaderboards2ReadByHandle": {
		"body": [
			"Leaderboards2ReadByHandle()"
		],
		"scope": "lua",
		"prefix": "Leaderboards2ReadByHandle"
	},
	"Leaderboards2ReadByPlatform": {
		"body": [
			"Leaderboards2ReadByPlatform(${1:gamerHandleCsv}, ${2:platformName})"
		],
		"scope": "lua",
		"prefix": "Leaderboards2ReadByPlatform"
	},
	"Leaderboards2ReadByRadius": {
		"body": [
			"Leaderboards2ReadByRadius(${1:p1})"
		],
		"scope": "lua",
		"prefix": "Leaderboards2ReadByRadius"
	},
	"Leaderboards2ReadByRank": {
		"body": [
			"Leaderboards2ReadByRank(${1:p1}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "Leaderboards2ReadByRank"
	},
	"Leaderboards2ReadByRow": {
		"body": [
			"Leaderboards2ReadByRow(${1:p2}, ${2:p4}, ${3:p6})"
		],
		"scope": "lua",
		"prefix": "Leaderboards2ReadByRow"
	},
	"Leaderboards2ReadByScoreFloat": {
		"body": [
			"Leaderboards2ReadByScoreFloat(${1:p1}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "Leaderboards2ReadByScoreFloat"
	},
	"Leaderboards2ReadByScoreInt": {
		"body": [
			"Leaderboards2ReadByScoreInt(${1:p1}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "Leaderboards2ReadByScoreInt"
	},
	"Leaderboards2ReadFriendsByRow": {
		"body": [
			"Leaderboards2ReadFriendsByRow(${1:p2}, ${2:p3}, ${3:p4}, ${4:p5})"
		],
		"scope": "lua",
		"prefix": "Leaderboards2ReadFriendsByRow"
	},
	"Leaderboards2ReadRankPrediction": {
		"body": [
			"Leaderboards2ReadRankPrediction()"
		],
		"scope": "lua",
		"prefix": "Leaderboards2ReadRankPrediction"
	},
	"Leaderboards2WriteData": {
		"body": [
			"Leaderboards2WriteData(${1:p0})"
		],
		"scope": "lua",
		"prefix": "Leaderboards2WriteData"
	},
	"Leaderboards2WriteDataForEventType": {
		"body": [
			"Leaderboards2WriteDataForEventType()"
		],
		"scope": "lua",
		"prefix": "Leaderboards2WriteDataForEventType"
	},
	"LeaderboardsCacheDataRow": {
		"body": [
			"LeaderboardsCacheDataRow(${1:p0})"
		],
		"scope": "lua",
		"prefix": "LeaderboardsCacheDataRow"
	},
	"LeaderboardsClearCacheData": {
		"body": [
			"LeaderboardsClearCacheData()"
		],
		"scope": "lua",
		"prefix": "LeaderboardsClearCacheData"
	},
	"LeaderboardsDeaths": {
		"body": [
			"LeaderboardsDeaths(${1:statName}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "LeaderboardsDeaths"
	},
	"LeaderboardsGetCacheDataRow": {
		"body": [
			"LeaderboardsGetCacheDataRow(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "LeaderboardsGetCacheDataRow"
	},
	"LeaderboardsGetCacheExists": {
		"body": [
			"LeaderboardsGetCacheExists(${1:p0})"
		],
		"scope": "lua",
		"prefix": "LeaderboardsGetCacheExists"
	},
	"LeaderboardsGetCacheNumberOfRows": {
		"body": [
			"LeaderboardsGetCacheNumberOfRows(${1:p0})"
		],
		"scope": "lua",
		"prefix": "LeaderboardsGetCacheNumberOfRows"
	},
	"LeaderboardsGetCacheTime": {
		"body": [
			"LeaderboardsGetCacheTime(${1:p0})"
		],
		"scope": "lua",
		"prefix": "LeaderboardsGetCacheTime"
	},
	"LeaderboardsGetColumnId": {
		"body": [
			"LeaderboardsGetColumnId(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "LeaderboardsGetColumnId"
	},
	"LeaderboardsGetColumnType": {
		"body": [
			"LeaderboardsGetColumnType(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "LeaderboardsGetColumnType"
	},
	"LeaderboardsGetNumberOfColumns": {
		"body": [
			"LeaderboardsGetNumberOfColumns(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "LeaderboardsGetNumberOfColumns"
	},
	"LeaderboardsReadAnyPending": {
		"body": [
			"LeaderboardsReadAnyPending()"
		],
		"scope": "lua",
		"prefix": "LeaderboardsReadAnyPending"
	},
	"LeaderboardsReadClear": {
		"body": [
			"LeaderboardsReadClear(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "LeaderboardsReadClear"
	},
	"LeaderboardsReadClearAll": {
		"body": [
			"LeaderboardsReadClearAll()"
		],
		"scope": "lua",
		"prefix": "LeaderboardsReadClearAll"
	},
	"LeaderboardsReadPending": {
		"body": [
			"LeaderboardsReadPending(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "LeaderboardsReadPending"
	},
	"LeaderboardsReadSuccessful": {
		"body": [
			"LeaderboardsReadSuccessful(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "LeaderboardsReadSuccessful"
	},
	"LeaderboardsWriteAddColumn": {
		"body": [
			"LeaderboardsWriteAddColumn(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "LeaderboardsWriteAddColumn"
	},
	"LeaderboardsWriteAddColumnLong": {
		"body": [
			"LeaderboardsWriteAddColumnLong(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "LeaderboardsWriteAddColumnLong"
	},
	"LeaveCursorMode": {
		"body": [
			"LeaveCursorMode()"
		],
		"scope": "lua",
		"prefix": "LeaveCursorMode"
	},
	"LinkNamedRendertarget": {
		"body": [
			"LinkNamedRendertarget(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "LinkNamedRendertarget"
	},
	"LinkStaticEmitterToEntity": {
		"body": [
			"LinkStaticEmitterToEntity(${1:emitterName}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "LinkStaticEmitterToEntity"
	},
	"LoadAllObjectsNow": {
		"body": [
			"LoadAllObjectsNow()"
		],
		"scope": "lua",
		"prefix": "LoadAllObjectsNow"
	},
	"LoadAllPathNodes": {
		"body": [
			"LoadAllPathNodes(${1:keepInMemory})"
		],
		"scope": "lua",
		"prefix": "LoadAllPathNodes"
	},
	"LoadCloudHat": {
		"body": [
			"LoadCloudHat(${1:name}, ${2:transitionTime})"
		],
		"scope": "lua",
		"prefix": "LoadCloudHat"
	},
	"LoadContentChangeSetGroup": {
		"body": [
			"LoadContentChangeSetGroup(${1:hash})"
		],
		"scope": "lua",
		"prefix": "LoadContentChangeSetGroup"
	},
	"LoadGlobalWaterType": {
		"body": [
			"LoadGlobalWaterType(${1:waterType})"
		],
		"scope": "lua",
		"prefix": "LoadGlobalWaterType"
	},
	"LoadingscreenGetLoadFreemode": {
		"body": [
			"LoadingscreenGetLoadFreemode()"
		],
		"scope": "lua",
		"prefix": "LoadingscreenGetLoadFreemode"
	},
	"LoadingscreenGetLoadFreemodeWithEventName": {
		"body": [
			"LoadingscreenGetLoadFreemodeWithEventName()"
		],
		"scope": "lua",
		"prefix": "LoadingscreenGetLoadFreemodeWithEventName"
	},
	"LoadingscreenIsLoadingFreemode": {
		"body": [
			"LoadingscreenIsLoadingFreemode()"
		],
		"scope": "lua",
		"prefix": "LoadingscreenIsLoadingFreemode"
	},
	"LoadingscreenSetIsLoadingFreemode": {
		"body": [
			"LoadingscreenSetIsLoadingFreemode(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "LoadingscreenSetIsLoadingFreemode"
	},
	"LoadingscreenSetLoadFreemode": {
		"body": [
			"LoadingscreenSetLoadFreemode(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "LoadingscreenSetLoadFreemode"
	},
	"LoadingscreenSetLoadFreemodeWithEventName": {
		"body": [
			"LoadingscreenSetLoadFreemodeWithEventName(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "LoadingscreenSetLoadFreemodeWithEventName"
	},
	"LoadMissionCreatorPhoto": {
		"body": [
			"LoadMissionCreatorPhoto(${1:p0}, ${2:p3})"
		],
		"scope": "lua",
		"prefix": "LoadMissionCreatorPhoto"
	},
	"LoadMovieMeshSet": {
		"body": [
			"LoadMovieMeshSet(${1:movieMeshSetName})"
		],
		"scope": "lua",
		"prefix": "LoadMovieMeshSet"
	},
	"LoadPlayerCommerceData": {
		"body": [
			"LoadPlayerCommerceData(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "LoadPlayerCommerceData"
	},
	"LoadPlayerCommerceDataExt": {
		"body": [
			"LoadPlayerCommerceDataExt(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "LoadPlayerCommerceDataExt"
	},
	"LoadResourceFile": {
		"body": [
			"LoadResourceFile(${1:resourceName}, ${2:fileName})"
		],
		"scope": "lua",
		"prefix": "LoadResourceFile"
	},
	"LoadRopeData": {
		"body": [
			"LoadRopeData(${1:ropeId}, ${2:rope_preset})"
		],
		"scope": "lua",
		"prefix": "LoadRopeData"
	},
	"LoadScene": {
		"body": [
			"LoadScene(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "LoadScene"
	},
	"LoadStream": {
		"body": [
			"LoadStream(${1:streamName}, ${2:soundSet})"
		],
		"scope": "lua",
		"prefix": "LoadStream"
	},
	"LoadStreamWithStartOffset": {
		"body": [
			"LoadStreamWithStartOffset(${1:streamName}, ${2:startOffset}, ${3:soundSet})"
		],
		"scope": "lua",
		"prefix": "LoadStreamWithStartOffset"
	},
	"LocalizationGetSystemDateFormat": {
		"body": [
			"LocalizationGetSystemDateFormat()"
		],
		"scope": "lua",
		"prefix": "LocalizationGetSystemDateFormat"
	},
	"LocalizationGetSystemLanguage": {
		"body": [
			"LocalizationGetSystemLanguage()"
		],
		"scope": "lua",
		"prefix": "LocalizationGetSystemLanguage"
	},
	"LockMinimapAngle": {
		"body": [
			"LockMinimapAngle(${1:angle})"
		],
		"scope": "lua",
		"prefix": "LockMinimapAngle"
	},
	"LockMinimapPosition": {
		"body": [
			"LockMinimapPosition(${1:x}, ${2:y})"
		],
		"scope": "lua",
		"prefix": "LockMinimapPosition"
	},
	"LockRadioStation": {
		"body": [
			"LockRadioStation(${1:radioStationName}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "LockRadioStation"
	},
	"Log10": {
		"body": [
			"Log10(${1:value})"
		],
		"scope": "lua",
		"prefix": "Log10"
	},
	"LogDebugInfo": {
		"body": [
			"LogDebugInfo(${1:p0})"
		],
		"scope": "lua",
		"prefix": "LogDebugInfo"
	},
	"LowerConvertibleRoof": {
		"body": [
			"LowerConvertibleRoof(${1:vehicle}, ${2:instantlyLower})"
		],
		"scope": "lua",
		"prefix": "LowerConvertibleRoof"
	},
	"LowerRetractableWheels": {
		"body": [
			"LowerRetractableWheels(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "LowerRetractableWheels"
	},
	"MakePedReload": {
		"body": [
			"MakePedReload(${1:ped})"
		],
		"scope": "lua",
		"prefix": "MakePedReload"
	},
	"MarkObjectForDeletion": {
		"body": [
			"MarkObjectForDeletion(${1:object})"
		],
		"scope": "lua",
		"prefix": "MarkObjectForDeletion"
	},
	"ModifyVehicleTopSpeed": {
		"body": [
			"ModifyVehicleTopSpeed(${1:vehicle}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "ModifyVehicleTopSpeed"
	},
	"ModifyWater": {
		"body": [
			"ModifyWater(${1:x}, ${2:y}, ${3:radius}, ${4:height})"
		],
		"scope": "lua",
		"prefix": "ModifyWater"
	},
	"MoveVehicleDecals": {
		"body": [
			"MoveVehicleDecals(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "MoveVehicleDecals"
	},
	"MumbleAddVoiceChannelListen": {
		"body": [
			"MumbleAddVoiceChannelListen(${1:channel})"
		],
		"scope": "lua",
		"prefix": "MumbleAddVoiceChannelListen"
	},
	"MumbleAddVoiceTargetChannel": {
		"body": [
			"MumbleAddVoiceTargetChannel(${1:targetId}, ${2:channel})"
		],
		"scope": "lua",
		"prefix": "MumbleAddVoiceTargetChannel"
	},
	"MumbleAddVoiceTargetPlayer": {
		"body": [
			"MumbleAddVoiceTargetPlayer(${1:targetId}, ${2:player})"
		],
		"scope": "lua",
		"prefix": "MumbleAddVoiceTargetPlayer"
	},
	"MumbleAddVoiceTargetPlayerByServerId": {
		"body": [
			"MumbleAddVoiceTargetPlayerByServerId(${1:targetId}, ${2:serverId})"
		],
		"scope": "lua",
		"prefix": "MumbleAddVoiceTargetPlayerByServerId"
	},
	"MumbleClearVoiceTarget": {
		"body": [
			"MumbleClearVoiceTarget(${1:targetId})"
		],
		"scope": "lua",
		"prefix": "MumbleClearVoiceTarget"
	},
	"MumbleClearVoiceTargetChannels": {
		"body": [
			"MumbleClearVoiceTargetChannels(${1:targetId})"
		],
		"scope": "lua",
		"prefix": "MumbleClearVoiceTargetChannels"
	},
	"MumbleClearVoiceTargetPlayers": {
		"body": [
			"MumbleClearVoiceTargetPlayers(${1:targetId})"
		],
		"scope": "lua",
		"prefix": "MumbleClearVoiceTargetPlayers"
	},
	"MumbleCreateChannel": {
		"body": [
			"MumbleCreateChannel(${1:id})"
		],
		"scope": "lua",
		"prefix": "MumbleCreateChannel"
	},
	"MumbleGetVoiceChannelFromServerId": {
		"body": [
			"MumbleGetVoiceChannelFromServerId(${1:serverId})"
		],
		"scope": "lua",
		"prefix": "MumbleGetVoiceChannelFromServerId"
	},
	"MumbleIsConnected": {
		"body": [
			"MumbleIsConnected()"
		],
		"scope": "lua",
		"prefix": "MumbleIsConnected"
	},
	"MumbleRemoveVoiceChannelListen": {
		"body": [
			"MumbleRemoveVoiceChannelListen(${1:channel})"
		],
		"scope": "lua",
		"prefix": "MumbleRemoveVoiceChannelListen"
	},
	"MumbleSetAudioInputDistance": {
		"body": [
			"MumbleSetAudioInputDistance(${1:distance})"
		],
		"scope": "lua",
		"prefix": "MumbleSetAudioInputDistance"
	},
	"MumbleSetAudioInputIntent": {
		"body": [
			"MumbleSetAudioInputIntent(${1:intentHash})"
		],
		"scope": "lua",
		"prefix": "MumbleSetAudioInputIntent"
	},
	"MumbleSetAudioOutputDistance": {
		"body": [
			"MumbleSetAudioOutputDistance(${1:distance})"
		],
		"scope": "lua",
		"prefix": "MumbleSetAudioOutputDistance"
	},
	"MumbleSetServerAddress": {
		"body": [
			"MumbleSetServerAddress(${1:address}, ${2:port})"
		],
		"scope": "lua",
		"prefix": "MumbleSetServerAddress"
	},
	"MumbleSetSubmixForServerId": {
		"body": [
			"MumbleSetSubmixForServerId(${1:serverId}, ${2:submixId})"
		],
		"scope": "lua",
		"prefix": "MumbleSetSubmixForServerId"
	},
	"MumbleSetVoiceTarget": {
		"body": [
			"MumbleSetVoiceTarget(${1:targetId})"
		],
		"scope": "lua",
		"prefix": "MumbleSetVoiceTarget"
	},
	"MumbleSetVolumeOverride": {
		"body": [
			"MumbleSetVolumeOverride(${1:player}, ${2:volume})"
		],
		"scope": "lua",
		"prefix": "MumbleSetVolumeOverride"
	},
	"MumbleSetVolumeOverrideByServerId": {
		"body": [
			"MumbleSetVolumeOverrideByServerId(${1:serverId}, ${2:volume})"
		],
		"scope": "lua",
		"prefix": "MumbleSetVolumeOverrideByServerId"
	},
	"N_0x0032a6dba562c518": {
		"body": [
			"N_0x0032a6dba562c518()"
		],
		"scope": "lua",
		"prefix": "N_0x0032a6dba562c518"
	},
	"N_0x003e92ba477f9d7f": {
		"body": [
			"N_0x003e92ba477f9d7f(${1:blip})"
		],
		"scope": "lua",
		"prefix": "N_0x003e92ba477f9d7f"
	},
	"N_0x006e4b040ed37ec3": {
		"body": [
			"N_0x006e4b040ed37ec3(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x006e4b040ed37ec3"
	},
	"N_0x0077f15613d36993": {
		"body": [
			"N_0x0077f15613d36993(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x0077f15613d36993"
	},
	"N_0x011883f41211432a": {
		"body": [
			"N_0x011883f41211432a(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "N_0x011883f41211432a"
	},
	"N_0x0150b6ff25a9e2e5": {
		"body": [
			"N_0x0150b6ff25a9e2e5()"
		],
		"scope": "lua",
		"prefix": "N_0x0150b6ff25a9e2e5"
	},
	"N_0x015b03ee1c43e6ec": {
		"body": [
			"N_0x015b03ee1c43e6ec(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x015b03ee1c43e6ec"
	},
	"N_0x01708e8dd3ff8c65": {
		"body": [
			"N_0x01708e8dd3ff8c65(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "N_0x01708e8dd3ff8c65"
	},
	"N_0x0205f5365292d2eb": {
		"body": [
			"N_0x0205f5365292d2eb(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x0205f5365292d2eb"
	},
	"N_0x0218ba067d249dea": {
		"body": [
			"N_0x0218ba067d249dea()"
		],
		"scope": "lua",
		"prefix": "N_0x0218ba067d249dea"
	},
	"N_0x0225778816fdc28c": {
		"body": [
			"N_0x0225778816fdc28c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x0225778816fdc28c"
	},
	"N_0x02369d5c8a51fdcf": {
		"body": [
			"N_0x02369d5c8a51fdcf(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x02369d5c8a51fdcf"
	},
	"N_0x023acab2dc9dc4a4": {
		"body": [
			"N_0x023acab2dc9dc4a4()"
		],
		"scope": "lua",
		"prefix": "N_0x023acab2dc9dc4a4"
	},
	"N_0x02deaac8f8ea7fe7": {
		"body": [
			"N_0x02deaac8f8ea7fe7(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x02deaac8f8ea7fe7"
	},
	"N_0x02e93c796abd3a97": {
		"body": [
			"N_0x02e93c796abd3a97(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x02e93c796abd3a97"
	},
	"N_0x03300b57fcac6ddb": {
		"body": [
			"N_0x03300b57fcac6ddb(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x03300b57fcac6ddb"
	},
	"N_0x0379daf89ba09aa5": {
		"body": [
			"N_0x0379daf89ba09aa5(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x0379daf89ba09aa5"
	},
	"N_0x0395cb47b022e62c": {
		"body": [
			"N_0x0395cb47b022e62c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x0395cb47b022e62c"
	},
	"N_0x03c2eebb04b3fb72": {
		"body": [
			"N_0x03c2eebb04b3fb72(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "N_0x03c2eebb04b3fb72"
	},
	"N_0x03ea03af85a85cb7": {
		"body": [
			"N_0x03ea03af85a85cb7(${1:ped}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "N_0x03ea03af85a85cb7"
	},
	"N_0x03f1a106bda7dd3e": {
		"body": [
			"N_0x03f1a106bda7dd3e()"
		],
		"scope": "lua",
		"prefix": "N_0x03f1a106bda7dd3e"
	},
	"N_0x0419b167ee128f33": {
		"body": [
			"N_0x0419b167ee128f33(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x0419b167ee128f33"
	},
	"N_0x041c7f2a6c9894e6": {
		"body": [
			"N_0x041c7f2a6c9894e6(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x041c7f2a6c9894e6"
	},
	"N_0x04655f9d075d0ae5": {
		"body": [
			"N_0x04655f9d075d0ae5(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x04655f9d075d0ae5"
	},
	"N_0x04918a41bc9b8157": {
		"body": [
			"N_0x04918a41bc9b8157(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x04918a41bc9b8157"
	},
	"N_0x0581730ab9380412": {
		"body": [
			"N_0x0581730ab9380412(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "N_0x0581730ab9380412"
	},
	"N_0x0596843b34b95ce5": {
		"body": [
			"N_0x0596843b34b95ce5(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x0596843b34b95ce5"
	},
	"N_0x06087579e7aa85a9": {
		"body": [
			"N_0x06087579e7aa85a9(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "N_0x06087579e7aa85a9"
	},
	"N_0x061cb768363d6424": {
		"body": [
			"N_0x061cb768363d6424(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x061cb768363d6424"
	},
	"N_0x062d5ead4da2fa6a": {
		"body": [
			"N_0x062d5ead4da2fa6a()"
		],
		"scope": "lua",
		"prefix": "N_0x062d5ead4da2fa6a"
	},
	"N_0x063ae2b2cc273588": {
		"body": [
			"N_0x063ae2b2cc273588(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x063ae2b2cc273588"
	},
	"N_0x06462a961e94b67c": {
		"body": [
			"N_0x06462a961e94b67c()"
		],
		"scope": "lua",
		"prefix": "N_0x06462a961e94b67c"
	},
	"N_0x065d03a9d6b2c6b5": {
		"body": [
			"N_0x065d03a9d6b2c6b5(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x065d03a9d6b2c6b5"
	},
	"N_0x06eaf70ae066441e": {
		"body": [
			"N_0x06eaf70ae066441e(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x06eaf70ae066441e"
	},
	"N_0x06ee9048fd080382": {
		"body": [
			"N_0x06ee9048fd080382(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x06ee9048fd080382"
	},
	"N_0x07c313f94746702c": {
		"body": [
			"N_0x07c313f94746702c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x07c313f94746702c"
	},
	"N_0x07c61676e5bb52cd": {
		"body": [
			"N_0x07c61676e5bb52cd(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x07c61676e5bb52cd"
	},
	"N_0x07dbd622d9533857": {
		"body": [
			"N_0x07dbd622d9533857(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x07dbd622d9533857"
	},
	"N_0x07eab372c8841d99": {
		"body": [
			"N_0x07eab372c8841d99(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x07eab372c8841d99"
	},
	"N_0x0811381ef5062fec": {
		"body": [
			"N_0x0811381ef5062fec(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x0811381ef5062fec"
	},
	"N_0x08e8eeadfd0dc4a0": {
		"body": [
			"N_0x08e8eeadfd0dc4a0(${1:amount})"
		],
		"scope": "lua",
		"prefix": "N_0x08e8eeadfd0dc4a0"
	},
	"N_0x0a3f820a9a9a9ac5": {
		"body": [
			"N_0x0a3f820a9a9a9ac5(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x0a3f820a9a9a9ac5"
	},
	"N_0x0a436b8643716d14": {
		"body": [
			"N_0x0a436b8643716d14()"
		],
		"scope": "lua",
		"prefix": "N_0x0a436b8643716d14"
	},
	"N_0x0a9c7f36e5d7b683": {
		"body": [
			"N_0x0a9c7f36e5d7b683(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x0a9c7f36e5d7b683"
	},
	"N_0x0aa27680a0bd43fa": {
		"body": [
			"N_0x0aa27680a0bd43fa()"
		],
		"scope": "lua",
		"prefix": "N_0x0aa27680a0bd43fa"
	},
	"N_0x0ad9710cee2f590f": {
		"body": [
			"N_0x0ad9710cee2f590f(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "N_0x0ad9710cee2f590f"
	},
	"N_0x0ad9e8f87ff7c16f": {
		"body": [
			"N_0x0ad9e8f87ff7c16f(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x0ad9e8f87ff7c16f"
	},
	"N_0x0ae73d8df3a762b2": {
		"body": [
			"N_0x0ae73d8df3a762b2(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x0ae73d8df3a762b2"
	},
	"N_0x0b3e35ac043707d9": {
		"body": [
			"N_0x0b3e35ac043707d9(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x0b3e35ac043707d9"
	},
	"N_0x0b40ed49d7d6ff84": {
		"body": [
			"N_0x0b40ed49d7d6ff84()"
		],
		"scope": "lua",
		"prefix": "N_0x0b40ed49d7d6ff84"
	},
	"N_0x0b565b0aae56a0e8": {
		"body": [
			"N_0x0b565b0aae56a0e8(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "N_0x0b565b0aae56a0e8"
	},
	"N_0x0b568201dd99f0eb": {
		"body": [
			"N_0x0b568201dd99f0eb(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x0b568201dd99f0eb"
	},
	"N_0x0b8b7f74bf061c6d": {
		"body": [
			"N_0x0b8b7f74bf061c6d()"
		],
		"scope": "lua",
		"prefix": "N_0x0b8b7f74bf061c6d"
	},
	"N_0x0bbb9a7a8ffe931b": {
		"body": [
			"N_0x0bbb9a7a8ffe931b(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x0bbb9a7a8ffe931b"
	},
	"N_0x0be4be946463f917": {
		"body": [
			"N_0x0be4be946463f917(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "N_0x0be4be946463f917"
	},
	"N_0x0c698d8f099174c7": {
		"body": [
			"N_0x0c698d8f099174c7(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x0c698d8f099174c7"
	},
	"N_0x0cf54f20de43879c": {
		"body": [
			"N_0x0cf54f20de43879c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x0cf54f20de43879c"
	},
	"N_0x0cf6cc51aa18f0f8": {
		"body": [
			"N_0x0cf6cc51aa18f0f8(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x0cf6cc51aa18f0f8"
	},
	"N_0x0cf97f497fe7d048": {
		"body": [
			"N_0x0cf97f497fe7d048(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x0cf97f497fe7d048"
	},
	"N_0x0d01d20616fc73fb": {
		"body": [
			"N_0x0d01d20616fc73fb(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x0d01d20616fc73fb"
	},
	"N_0x0d30eb83668e63c5": {
		"body": [
			"N_0x0d30eb83668e63c5(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x0d30eb83668e63c5"
	},
	"N_0x0d77a82dc2d0da59": {
		"body": [
			"N_0x0d77a82dc2d0da59()"
		],
		"scope": "lua",
		"prefix": "N_0x0d77a82dc2d0da59"
	},
	"N_0x0dd362f14f18942a": {
		"body": [
			"N_0x0dd362f14f18942a(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x0dd362f14f18942a"
	},
	"N_0x0e3a041ed6ac2b45": {
		"body": [
			"N_0x0e3a041ed6ac2b45(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0x0e3a041ed6ac2b45"
	},
	"N_0x0e4299c549f0d1f1": {
		"body": [
			"N_0x0e4299c549f0d1f1(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x0e4299c549f0d1f1"
	},
	"N_0x0e4f77f7b9d74d84": {
		"body": [
			"N_0x0e4f77f7b9d74d84(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x0e4f77f7b9d74d84"
	},
	"N_0x0ede326d47cd0f3e": {
		"body": [
			"N_0x0ede326d47cd0f3e(${1:ped}, ${2:player})"
		],
		"scope": "lua",
		"prefix": "N_0x0ede326d47cd0f3e"
	},
	"N_0x0f1a4b45b7693b95": {
		"body": [
			"N_0x0f1a4b45b7693b95(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x0f1a4b45b7693b95"
	},
	"N_0x0f62619393661d6e": {
		"body": [
			"N_0x0f62619393661d6e(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x0f62619393661d6e"
	},
	"N_0x0f6f1ebbc4e1d5e6": {
		"body": [
			"N_0x0f6f1ebbc4e1d5e6(${1:scriptIndex}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x0f6f1ebbc4e1d5e6"
	},
	"N_0x0f73393bac7e6730": {
		"body": [
			"N_0x0f73393bac7e6730()"
		],
		"scope": "lua",
		"prefix": "N_0x0f73393bac7e6730"
	},
	"N_0x0ffb3c758e8c07b9": {
		"body": [
			"N_0x0ffb3c758e8c07b9(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x0ffb3c758e8c07b9"
	},
	"N_0x10144267dd22866c": {
		"body": [
			"N_0x10144267dd22866c(${1:overlayHash}, ${2:p1}, ${3:character})"
		],
		"scope": "lua",
		"prefix": "N_0x10144267dd22866c"
	},
	"N_0x107a473d7a6647a9": {
		"body": [
			"N_0x107a473d7a6647a9(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x107a473d7a6647a9"
	},
	"N_0x108be26959a9d9bb": {
		"body": [
			"N_0x108be26959a9d9bb(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x108be26959a9d9bb"
	},
	"N_0x110f526ab784111f": {
		"body": [
			"N_0x110f526ab784111f(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x110f526ab784111f"
	},
	"N_0x112209ce0290c03a": {
		"body": [
			"N_0x112209ce0290c03a(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x112209ce0290c03a"
	},
	"N_0x1153fa02a659051c": {
		"body": [
			"N_0x1153fa02a659051c()"
		],
		"scope": "lua",
		"prefix": "N_0x1153fa02a659051c"
	},
	"N_0x11579d940949c49e": {
		"body": [
			"N_0x11579d940949c49e(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x11579d940949c49e"
	},
	"N_0x116fb94dc4b79f17": {
		"body": [
			"N_0x116fb94dc4b79f17(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x116fb94dc4b79f17"
	},
	"N_0x1171a97a3d3981b6": {
		"body": [
			"N_0x1171a97a3d3981b6(${1:p2}, ${2:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x1171a97a3d3981b6"
	},
	"N_0x1178e104409fe58c": {
		"body": [
			"N_0x1178e104409fe58c(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x1178e104409fe58c"
	},
	"N_0x1185a8087587322c": {
		"body": [
			"N_0x1185a8087587322c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x1185a8087587322c"
	},
	"N_0x1216e0bfa72cc703": {
		"body": [
			"N_0x1216e0bfa72cc703(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x1216e0bfa72cc703"
	},
	"N_0x12ded8ca53d47ea5": {
		"body": [
			"N_0x12ded8ca53d47ea5(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x12ded8ca53d47ea5"
	},
	"N_0x1312ddd8385aee4e": {
		"body": [
			"N_0x1312ddd8385aee4e(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x1312ddd8385aee4e"
	},
	"N_0x1398582b7f72b3ed": {
		"body": [
			"N_0x1398582b7f72b3ed(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x1398582b7f72b3ed"
	},
	"N_0x13b350b8ad0eee10": {
		"body": [
			"N_0x13b350b8ad0eee10()"
		],
		"scope": "lua",
		"prefix": "N_0x13b350b8ad0eee10"
	},
	"N_0x13c4b962653a5280": {
		"body": [
			"N_0x13c4b962653a5280()"
		],
		"scope": "lua",
		"prefix": "N_0x13c4b962653a5280"
	},
	"N_0x13f1fcb111b820b0": {
		"body": [
			"N_0x13f1fcb111b820b0(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x13f1fcb111b820b0"
	},
	"N_0x140e6a44870a11ce": {
		"body": [
			"N_0x140e6a44870a11ce()"
		],
		"scope": "lua",
		"prefix": "N_0x140e6a44870a11ce"
	},
	"N_0x144da052257ae7d8": {
		"body": [
			"N_0x144da052257ae7d8(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x144da052257ae7d8"
	},
	"N_0x14922ed3e38761f0": {
		"body": [
			"N_0x14922ed3e38761f0()"
		],
		"scope": "lua",
		"prefix": "N_0x14922ed3e38761f0"
	},
	"N_0x149aee66f0cb3a99": {
		"body": [
			"N_0x149aee66f0cb3a99(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x149aee66f0cb3a99"
	},
	"N_0x14d29bb12d47f68c": {
		"body": [
			"N_0x14d29bb12d47f68c(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0x14d29bb12d47f68c"
	},
	"N_0x14e0b2d1ad1044e0": {
		"body": [
			"N_0x14e0b2d1ad1044e0()"
		],
		"scope": "lua",
		"prefix": "N_0x14e0b2d1ad1044e0"
	},
	"N_0x14eda9ee27bd1626": {
		"body": [
			"N_0x14eda9ee27bd1626(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x14eda9ee27bd1626"
	},
	"N_0x14fc5833464340a8": {
		"body": [
			"N_0x14fc5833464340a8()"
		],
		"scope": "lua",
		"prefix": "N_0x14fc5833464340a8"
	},
	"N_0x155467aca0f55705": {
		"body": [
			"N_0x155467aca0f55705()"
		],
		"scope": "lua",
		"prefix": "N_0x155467aca0f55705"
	},
	"N_0x159b7318403a1cd8": {
		"body": [
			"N_0x159b7318403a1cd8(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x159b7318403a1cd8"
	},
	"N_0x15e69e2802c24b8d": {
		"body": [
			"N_0x15e69e2802c24b8d(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x15e69e2802c24b8d"
	},
	"N_0x1612c45f9e3e0d44": {
		"body": [
			"N_0x1612c45f9e3e0d44()"
		],
		"scope": "lua",
		"prefix": "N_0x1612c45f9e3e0d44"
	},
	"N_0x162c23ca83ed0a62": {
		"body": [
			"N_0x162c23ca83ed0a62(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x162c23ca83ed0a62"
	},
	"N_0x164c5ff663790845": {
		"body": [
			"N_0x164c5ff663790845(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x164c5ff663790845"
	},
	"N_0x16d3d49902f697bb": {
		"body": [
			"N_0x16d3d49902f697bb(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0x16d3d49902f697bb"
	},
	"N_0x16da8172459434aa": {
		"body": [
			"N_0x16da8172459434aa()"
		],
		"scope": "lua",
		"prefix": "N_0x16da8172459434aa"
	},
	"N_0x170910093218c8b9": {
		"body": [
			"N_0x170910093218c8b9(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x170910093218c8b9"
	},
	"N_0x170f541e1cadd1de": {
		"body": [
			"N_0x170f541e1cadd1de(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x170f541e1cadd1de"
	},
	"N_0x17330ebf2f2124a8": {
		"body": [
			"N_0x17330ebf2f2124a8()"
		],
		"scope": "lua",
		"prefix": "N_0x17330ebf2f2124a8"
	},
	"N_0x17c9e241111a674d": {
		"body": [
			"N_0x17c9e241111a674d(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x17c9e241111a674d"
	},
	"N_0x17fca7199a530203": {
		"body": [
			"N_0x17fca7199a530203()"
		],
		"scope": "lua",
		"prefix": "N_0x17fca7199a530203"
	},
	"N_0x182f266c2d9e2beb": {
		"body": [
			"N_0x182f266c2d9e2beb(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x182f266c2d9e2beb"
	},
	"N_0x1888694923ef4591": {
		"body": [
			"N_0x1888694923ef4591()"
		],
		"scope": "lua",
		"prefix": "N_0x1888694923ef4591"
	},
	"N_0x190428512b240692": {
		"body": [
			"N_0x190428512b240692(${1:garageHash}, ${2:vehicles}, ${3:peds}, ${4:objects}, ${5:isNetwork})"
		],
		"scope": "lua",
		"prefix": "N_0x190428512b240692"
	},
	"N_0x19853b5b17d77bca": {
		"body": [
			"N_0x19853b5b17d77bca(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x19853b5b17d77bca"
	},
	"N_0x1989c6e6f67e76a8": {
		"body": [
			"N_0x1989c6e6f67e76a8()"
		],
		"scope": "lua",
		"prefix": "N_0x1989c6e6f67e76a8"
	},
	"N_0x19af7ed9b9d23058": {
		"body": [
			"N_0x19af7ed9b9d23058()"
		],
		"scope": "lua",
		"prefix": "N_0x19af7ed9b9d23058"
	},
	"N_0x19bfed045c647c49": {
		"body": [
			"N_0x19bfed045c647c49(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0x19bfed045c647c49"
	},
	"N_0x19cafa3c87f7c2ff": {
		"body": [
			"N_0x19cafa3c87f7c2ff()"
		],
		"scope": "lua",
		"prefix": "N_0x19cafa3c87f7c2ff"
	},
	"N_0x1a092bb0c3808b96": {
		"body": [
			"N_0x1a092bb0c3808b96(${1:entity}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x1a092bb0c3808b96"
	},
	"N_0x1a330d297aac6bc1": {
		"body": [
			"N_0x1a330d297aac6bc1(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x1a330d297aac6bc1"
	},
	"N_0x1a6cbb06e2d0d79d": {
		"body": [
			"N_0x1a6cbb06e2d0d79d(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x1a6cbb06e2d0d79d"
	},
	"N_0x1a7ce7cd3e653485": {
		"body": [
			"N_0x1a7ce7cd3e653485(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x1a7ce7cd3e653485"
	},
	"N_0x1a8ea222f9c67dbb": {
		"body": [
			"N_0x1a8ea222f9c67dbb(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x1a8ea222f9c67dbb"
	},
	"N_0x1b0b4aeed5b9b41c": {
		"body": [
			"N_0x1b0b4aeed5b9b41c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x1b0b4aeed5b9b41c"
	},
	"N_0x1b212b26dd3c04df": {
		"body": [
			"N_0x1b212b26dd3c04df(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x1b212b26dd3c04df"
	},
	"N_0x1b7abe26cbcbf8c7": {
		"body": [
			"N_0x1b7abe26cbcbf8c7(${1:ped}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x1b7abe26cbcbf8c7"
	},
	"N_0x1bb299305c3e8c13": {
		"body": [
			"N_0x1bb299305c3e8c13(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x1bb299305c3e8c13"
	},
	"N_0x1bbc135a4d25edde": {
		"body": [
			"N_0x1bbc135a4d25edde(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x1bbc135a4d25edde"
	},
	"N_0x1c073274e065c6d2": {
		"body": [
			"N_0x1c073274e065c6d2(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x1c073274e065c6d2"
	},
	"N_0x1c57c94a6446492a": {
		"body": [
			"N_0x1c57c94a6446492a(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x1c57c94a6446492a"
	},
	"N_0x1cba05ae7bd7ee05": {
		"body": [
			"N_0x1cba05ae7bd7ee05(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x1cba05ae7bd7ee05"
	},
	"N_0x1d12a56fc95be92e": {
		"body": [
			"N_0x1d12a56fc95be92e()"
		],
		"scope": "lua",
		"prefix": "N_0x1d12a56fc95be92e"
	},
	"N_0x1d4446a62d35b0d0": {
		"body": [
			"N_0x1d4446a62d35b0d0(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x1d4446a62d35b0d0"
	},
	"N_0x1d4dc17c38feaff0": {
		"body": [
			"N_0x1d4dc17c38feaff0()"
		],
		"scope": "lua",
		"prefix": "N_0x1d4dc17c38feaff0"
	},
	"N_0x1d610eb0fea716d9": {
		"body": [
			"N_0x1d610eb0fea716d9(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x1d610eb0fea716d9"
	},
	"N_0x1dc9b749e7ae282b": {
		"body": [
			"N_0x1dc9b749e7ae282b(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x1dc9b749e7ae282b"
	},
	"N_0x1e3f1b1b891a2aaa": {
		"body": [
			"N_0x1e3f1b1b891a2aaa(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x1e3f1b1b891a2aaa"
	},
	"N_0x1e77fa7a62ee6c4c": {
		"body": [
			"N_0x1e77fa7a62ee6c4c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x1e77fa7a62ee6c4c"
	},
	"N_0x1e9057a74fd73e23": {
		"body": [
			"N_0x1e9057a74fd73e23()"
		],
		"scope": "lua",
		"prefix": "N_0x1e9057a74fd73e23"
	},
	"N_0x1eae0a6e978894a2": {
		"body": [
			"N_0x1eae0a6e978894a2(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x1eae0a6e978894a2"
	},
	"N_0x1ee7d8df4425f053": {
		"body": [
			"N_0x1ee7d8df4425f053(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x1ee7d8df4425f053"
	},
	"N_0x1f2300cb7fa7b7f6": {
		"body": [
			"N_0x1f2300cb7fa7b7f6()"
		],
		"scope": "lua",
		"prefix": "N_0x1f2300cb7fa7b7f6"
	},
	"N_0x1f34b0626c594380": {
		"body": [
			"N_0x1f34b0626c594380(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x1f34b0626c594380"
	},
	"N_0x1f351cf1c6475734": {
		"body": [
			"N_0x1f351cf1c6475734(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "N_0x1f351cf1c6475734"
	},
	"N_0x1f3f018bc3afa77c": {
		"body": [
			"N_0x1f3f018bc3afa77c(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "N_0x1f3f018bc3afa77c"
	},
	"N_0x1f7bc3539f9e0224": {
		"body": [
			"N_0x1f7bc3539f9e0224()"
		],
		"scope": "lua",
		"prefix": "N_0x1f7bc3539f9e0224"
	},
	"N_0x1f8e00fb18239600": {
		"body": [
			"N_0x1f8e00fb18239600(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x1f8e00fb18239600"
	},
	"N_0x1f9fb66f3a3842d2": {
		"body": [
			"N_0x1f9fb66f3a3842d2(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x1f9fb66f3a3842d2"
	},
	"N_0x2016c603d6b8987c": {
		"body": [
			"N_0x2016c603d6b8987c(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x2016c603d6b8987c"
	},
	"N_0x202a5ed9ce01d6e7": {
		"body": [
			"N_0x202a5ed9ce01d6e7(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "N_0x202a5ed9ce01d6e7"
	},
	"N_0x20746f7b1032a3c7": {
		"body": [
			"N_0x20746f7b1032a3c7(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x20746f7b1032a3c7"
	},
	"N_0x208784099002bc30": {
		"body": [
			"N_0x208784099002bc30(${1:missionNameLabel}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x208784099002bc30"
	},
	"N_0x20c6c7e4eb082a7f": {
		"body": [
			"N_0x20c6c7e4eb082a7f(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x20c6c7e4eb082a7f"
	},
	"N_0x2107a3773771186d": {
		"body": [
			"N_0x2107a3773771186d()"
		],
		"scope": "lua",
		"prefix": "N_0x2107a3773771186d"
	},
	"N_0x211c4ef450086857": {
		"body": [
			"N_0x211c4ef450086857()"
		],
		"scope": "lua",
		"prefix": "N_0x211c4ef450086857"
	},
	"N_0x214cd562a939246a": {
		"body": [
			"N_0x214cd562a939246a()"
		],
		"scope": "lua",
		"prefix": "N_0x214cd562a939246a"
	},
	"N_0x21c235bc64831e5a": {
		"body": [
			"N_0x21c235bc64831e5a(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "N_0x21c235bc64831e5a"
	},
	"N_0x225798743970412b": {
		"body": [
			"N_0x225798743970412b(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x225798743970412b"
	},
	"N_0x226c284c830d0ca8": {
		"body": [
			"N_0x226c284c830d0ca8(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x226c284c830d0ca8"
	},
	"N_0x22e21fbcfc88c149": {
		"body": [
			"N_0x22e21fbcfc88c149(${1:scriptIndex}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x22e21fbcfc88c149"
	},
	"N_0x2302c0264ea58d31": {
		"body": [
			"N_0x2302c0264ea58d31()"
		],
		"scope": "lua",
		"prefix": "N_0x2302c0264ea58d31"
	},
	"N_0x2311dd7159f00582": {
		"body": [
			"N_0x2311dd7159f00582(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2311dd7159f00582"
	},
	"N_0x23227df0b2115469": {
		"body": [
			"N_0x23227df0b2115469()"
		],
		"scope": "lua",
		"prefix": "N_0x23227df0b2115469"
	},
	"N_0x237440e46d918649": {
		"body": [
			"N_0x237440e46d918649(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x237440e46d918649"
	},
	"N_0x2382ab11450ae7ba": {
		"body": [
			"N_0x2382ab11450ae7ba(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2382ab11450ae7ba"
	},
	"N_0x23f09eadc01449d6": {
		"body": [
			"N_0x23f09eadc01449d6(${1:padIndex})"
		],
		"scope": "lua",
		"prefix": "N_0x23f09eadc01449d6"
	},
	"N_0x241fca5b1aa14f75": {
		"body": [
			"N_0x241fca5b1aa14f75()"
		],
		"scope": "lua",
		"prefix": "N_0x241fca5b1aa14f75"
	},
	"N_0x243296a510b562b6": {
		"body": [
			"N_0x243296a510b562b6()"
		],
		"scope": "lua",
		"prefix": "N_0x243296a510b562b6"
	},
	"N_0x247acbc4abbc9d1c": {
		"body": [
			"N_0x247acbc4abbc9d1c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x247acbc4abbc9d1c"
	},
	"N_0x24a49beaf468dc90": {
		"body": [
			"N_0x24a49beaf468dc90(${1:p0}, ${2:p2}, ${3:p3}, ${4:p4})"
		],
		"scope": "lua",
		"prefix": "N_0x24a49beaf468dc90"
	},
	"N_0x24c024ba8379a70a": {
		"body": [
			"N_0x24c024ba8379a70a(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x24c024ba8379a70a"
	},
	"N_0x24e4e51fc16305f9": {
		"body": [
			"N_0x24e4e51fc16305f9()"
		],
		"scope": "lua",
		"prefix": "N_0x24e4e51fc16305f9"
	},
	"N_0x25361a96e0f7e419": {
		"body": [
			"N_0x25361a96e0f7e419(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x25361a96e0f7e419"
	},
	"N_0x2542269291c6ac84": {
		"body": [
			"N_0x2542269291c6ac84(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2542269291c6ac84"
	},
	"N_0x2555cf7da5473794": {
		"body": [
			"N_0x2555cf7da5473794()"
		],
		"scope": "lua",
		"prefix": "N_0x2555cf7da5473794"
	},
	"N_0x2570e26be63964e3": {
		"body": [
			"N_0x2570e26be63964e3()"
		],
		"scope": "lua",
		"prefix": "N_0x2570e26be63964e3"
	},
	"N_0x259ba6d4e6f808f1": {
		"body": [
			"N_0x259ba6d4e6f808f1(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x259ba6d4e6f808f1"
	},
	"N_0x25aaa32bdc98f2a3": {
		"body": [
			"N_0x25aaa32bdc98f2a3()"
		],
		"scope": "lua",
		"prefix": "N_0x25aaa32bdc98f2a3"
	},
	"N_0x25d990f8e0e3f13c": {
		"body": [
			"N_0x25d990f8e0e3f13c()"
		],
		"scope": "lua",
		"prefix": "N_0x25d990f8e0e3f13c"
	},
	"N_0x25fc3e33a31ad0c9": {
		"body": [
			"N_0x25fc3e33a31ad0c9(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x25fc3e33a31ad0c9"
	},
	"N_0x261e97ad7bcf3d40": {
		"body": [
			"N_0x261e97ad7bcf3d40(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x261e97ad7bcf3d40"
	},
	"N_0x265559da40b3f327": {
		"body": [
			"N_0x265559da40b3f327(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x265559da40b3f327"
	},
	"N_0x265635150fb0d82e": {
		"body": [
			"N_0x265635150fb0d82e()"
		],
		"scope": "lua",
		"prefix": "N_0x265635150fb0d82e"
	},
	"N_0x26d7399b9587fe89": {
		"body": [
			"N_0x26d7399b9587fe89(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x26d7399b9587fe89"
	},
	"N_0x26d99d5a82fd18e8": {
		"body": [
			"N_0x26d99d5a82fd18e8(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x26d99d5a82fd18e8"
	},
	"N_0x26e13d440e7f6064": {
		"body": [
			"N_0x26e13d440e7f6064(${1:vehicle}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "N_0x26e13d440e7f6064"
	},
	"N_0x26f07dd83a5f7f98": {
		"body": [
			"N_0x26f07dd83a5f7f98()"
		],
		"scope": "lua",
		"prefix": "N_0x26f07dd83a5f7f98"
	},
	"N_0x271017b9ba825366": {
		"body": [
			"N_0x271017b9ba825366(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x271017b9ba825366"
	},
	"N_0x271401846bd26e92": {
		"body": [
			"N_0x271401846bd26e92(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x271401846bd26e92"
	},
	"N_0x2735233a786b1bef": {
		"body": [
			"N_0x2735233a786b1bef(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2735233a786b1bef"
	},
	"N_0x2790f4b17d098e26": {
		"body": [
			"N_0x2790f4b17d098e26(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x2790f4b17d098e26"
	},
	"N_0x27aa1c973cacfe63": {
		"body": [
			"N_0x27aa1c973cacfe63(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "N_0x27aa1c973cacfe63"
	},
	"N_0x27cfb1b1e078cb2d": {
		"body": [
			"N_0x27cfb1b1e078cb2d()"
		],
		"scope": "lua",
		"prefix": "N_0x27cfb1b1e078cb2d"
	},
	"N_0x27feb5254759cde3": {
		"body": [
			"N_0x27feb5254759cde3(${1:textureDict}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x27feb5254759cde3"
	},
	"N_0x2818ff6638cb09de": {
		"body": [
			"N_0x2818ff6638cb09de(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2818ff6638cb09de"
	},
	"N_0x282b6739644f4347": {
		"body": [
			"N_0x282b6739644f4347(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x282b6739644f4347"
	},
	"N_0x283b6062a2c01e9b": {
		"body": [
			"N_0x283b6062a2c01e9b()"
		],
		"scope": "lua",
		"prefix": "N_0x283b6062a2c01e9b"
	},
	"N_0x288df530c92dad6f": {
		"body": [
			"N_0x288df530c92dad6f(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "N_0x288df530c92dad6f"
	},
	"N_0x28b022a17b068a3a": {
		"body": [
			"N_0x28b022a17b068a3a(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x28b022a17b068a3a"
	},
	"N_0x28ecb8ac2f607db2": {
		"body": [
			"N_0x28ecb8ac2f607db2(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0x28ecb8ac2f607db2"
	},
	"N_0x2916a928514c9827": {
		"body": [
			"N_0x2916a928514c9827()"
		],
		"scope": "lua",
		"prefix": "N_0x2916a928514c9827"
	},
	"N_0x293220da1b46cebc": {
		"body": [
			"N_0x293220da1b46cebc(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x293220da1b46cebc"
	},
	"N_0x29682e2ccf21e9b5": {
		"body": [
			"N_0x29682e2ccf21e9b5(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11}, ${13:p12}, ${14:p13})"
		],
		"scope": "lua",
		"prefix": "N_0x29682e2ccf21e9b5"
	},
	"N_0x2a2173e46daecd12": {
		"body": [
			"N_0x2a2173e46daecd12(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2a2173e46daecd12"
	},
	"N_0x2a251aa48b2b46db": {
		"body": [
			"N_0x2a251aa48b2b46db()"
		],
		"scope": "lua",
		"prefix": "N_0x2a251aa48b2b46db"
	},
	"N_0x2a5e0621dd815a9a": {
		"body": [
			"N_0x2a5e0621dd815a9a(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x2a5e0621dd815a9a"
	},
	"N_0x2a7cec72c3443bcc": {
		"body": [
			"N_0x2a7cec72c3443bcc(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x2a7cec72c3443bcc"
	},
	"N_0x2a893980e96b659a": {
		"body": [
			"N_0x2a893980e96b659a(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2a893980e96b659a"
	},
	"N_0x2a93c46aab1eacc9": {
		"body": [
			"N_0x2a93c46aab1eacc9(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x2a93c46aab1eacc9"
	},
	"N_0x2acabed337622df2": {
		"body": [
			"N_0x2acabed337622df2(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2acabed337622df2"
	},
	"N_0x2afc2d19b50797f2": {
		"body": [
			"N_0x2afc2d19b50797f2(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x2afc2d19b50797f2"
	},
	"N_0x2b1c623823db0d9d": {
		"body": [
			"N_0x2b1c623823db0d9d(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "N_0x2b1c623823db0d9d"
	},
	"N_0x2b40a97646381508": {
		"body": [
			"N_0x2b40a97646381508(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2b40a97646381508"
	},
	"N_0x2b51edbefc301339": {
		"body": [
			"N_0x2b51edbefc301339(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2b51edbefc301339"
	},
	"N_0x2b5e102e4a42f2bf": {
		"body": [
			"N_0x2b5e102e4a42f2bf()"
		],
		"scope": "lua",
		"prefix": "N_0x2b5e102e4a42f2bf"
	},
	"N_0x2b694afcf64e6994": {
		"body": [
			"N_0x2b694afcf64e6994(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2b694afcf64e6994"
	},
	"N_0x2bf66d2e7414f686": {
		"body": [
			"N_0x2bf66d2e7414f686()"
		],
		"scope": "lua",
		"prefix": "N_0x2bf66d2e7414f686"
	},
	"N_0x2c173ae2bdb9385e": {
		"body": [
			"N_0x2c173ae2bdb9385e(${1:blip})"
		],
		"scope": "lua",
		"prefix": "N_0x2c173ae2bdb9385e"
	},
	"N_0x2c1d8b3b19e517cc": {
		"body": [
			"N_0x2c1d8b3b19e517cc(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2c1d8b3b19e517cc"
	},
	"N_0x2c42340f916c5930": {
		"body": [
			"N_0x2c42340f916c5930(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2c42340f916c5930"
	},
	"N_0x2c4a1590abf43e8b": {
		"body": [
			"N_0x2c4a1590abf43e8b(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2c4a1590abf43e8b"
	},
	"N_0x2c9f302398e13141": {
		"body": [
			"N_0x2c9f302398e13141(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2c9f302398e13141"
	},
	"N_0x2cc848a861d01493": {
		"body": [
			"N_0x2cc848a861d01493()"
		],
		"scope": "lua",
		"prefix": "N_0x2cc848a861d01493"
	},
	"N_0x2cd90358f67d0aa8": {
		"body": [
			"N_0x2cd90358f67d0aa8(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2cd90358f67d0aa8"
	},
	"N_0x2ce9d95e4051aecd": {
		"body": [
			"N_0x2ce9d95e4051aecd(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2ce9d95e4051aecd"
	},
	"N_0x2d3b147afad49de0": {
		"body": [
			"N_0x2d3b147afad49de0(${1:textureDict}, ${2:textureName}, ${3:x}, ${4:y}, ${5:width}, ${6:height}, ${7:p6}, ${8:red}, ${9:green}, ${10:blue}, ${11:alpha}, ${12:p11})"
		],
		"scope": "lua",
		"prefix": "N_0x2d3b147afad49de0"
	},
	"N_0x2d5dc831176d0114": {
		"body": [
			"N_0x2d5dc831176d0114(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2d5dc831176d0114"
	},
	"N_0x2d7a9b577e72385e": {
		"body": [
			"N_0x2d7a9b577e72385e(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2d7a9b577e72385e"
	},
	"N_0x2d874d4ae612a65f": {
		"body": [
			"N_0x2d874d4ae612a65f()"
		],
		"scope": "lua",
		"prefix": "N_0x2d874d4ae612a65f"
	},
	"N_0x2da41ed6e1fcd7a5": {
		"body": [
			"N_0x2da41ed6e1fcd7a5(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2da41ed6e1fcd7a5"
	},
	"N_0x2dd39bf3e2f9c47f": {
		"body": [
			"N_0x2dd39bf3e2f9c47f()"
		],
		"scope": "lua",
		"prefix": "N_0x2dd39bf3e2f9c47f"
	},
	"N_0x2de6c5e2e996f178": {
		"body": [
			"N_0x2de6c5e2e996f178(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2de6c5e2e996f178"
	},
	"N_0x2dfc81c9b9608549": {
		"body": [
			"N_0x2dfc81c9b9608549(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2dfc81c9b9608549"
	},
	"N_0x2e0259babc27a327": {
		"body": [
			"N_0x2e0259babc27a327(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2e0259babc27a327"
	},
	"N_0x2e0bf682cc778d49": {
		"body": [
			"N_0x2e0bf682cc778d49(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2e0bf682cc778d49"
	},
	"N_0x2e22fefa0100275e": {
		"body": [
			"N_0x2e22fefa0100275e()"
		],
		"scope": "lua",
		"prefix": "N_0x2e22fefa0100275e"
	},
	"N_0x2e4c123d1c8a710e": {
		"body": [
			"N_0x2e4c123d1c8a710e(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "N_0x2e4c123d1c8a710e"
	},
	"N_0x2e89990ddff670c3": {
		"body": [
			"N_0x2e89990ddff670c3(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2e89990ddff670c3"
	},
	"N_0x2f057596f2bd0061": {
		"body": [
			"N_0x2f057596f2bd0061()"
		],
		"scope": "lua",
		"prefix": "N_0x2f057596f2bd0061"
	},
	"N_0x2f074c904d85129e": {
		"body": [
			"N_0x2f074c904d85129e(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "N_0x2f074c904d85129e"
	},
	"N_0x2f137b508de238f2": {
		"body": [
			"N_0x2f137b508de238f2(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2f137b508de238f2"
	},
	"N_0x2f3c3d9f50681de4": {
		"body": [
			"N_0x2f3c3d9f50681de4(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2f3c3d9f50681de4"
	},
	"N_0x2f41a3bae005e5fa": {
		"body": [
			"N_0x2f41a3bae005e5fa(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2f41a3bae005e5fa"
	},
	"N_0x2f7ceb6520288061": {
		"body": [
			"N_0x2f7ceb6520288061(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2f7ceb6520288061"
	},
	"N_0x2f7f2b26dd3f18ee": {
		"body": [
			"N_0x2f7f2b26dd3f18ee(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2f7f2b26dd3f18ee"
	},
	"N_0x2fa2494b47fdd009": {
		"body": [
			"N_0x2fa2494b47fdd009(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x2fa2494b47fdd009"
	},
	"N_0x2fa3173480008493": {
		"body": [
			"N_0x2fa3173480008493(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0x2fa3173480008493"
	},
	"N_0x2fab6614ce22e196": {
		"body": [
			"N_0x2fab6614ce22e196(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x2fab6614ce22e196"
	},
	"N_0x2fcb133ca50a49eb": {
		"body": [
			"N_0x2fcb133ca50a49eb(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x2fcb133ca50a49eb"
	},
	"N_0x3001bef2feca3680": {
		"body": [
			"N_0x3001bef2feca3680()"
		],
		"scope": "lua",
		"prefix": "N_0x3001bef2feca3680"
	},
	"N_0x30432a0118736e00": {
		"body": [
			"N_0x30432a0118736e00()"
		],
		"scope": "lua",
		"prefix": "N_0x30432a0118736e00"
	},
	"N_0x3044240d2e0fa842": {
		"body": [
			"N_0x3044240d2e0fa842()"
		],
		"scope": "lua",
		"prefix": "N_0x3044240d2e0fa842"
	},
	"N_0x30ca2ef91d15adf8": {
		"body": [
			"N_0x30ca2ef91d15adf8()"
		],
		"scope": "lua",
		"prefix": "N_0x30ca2ef91d15adf8"
	},
	"N_0x31125fd509d9043f": {
		"body": [
			"N_0x31125fd509d9043f(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x31125fd509d9043f"
	},
	"N_0x3117d84efa60f77b": {
		"body": [
			"N_0x3117d84efa60f77b(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x3117d84efa60f77b"
	},
	"N_0x31574b1b41268673": {
		"body": [
			"N_0x31574b1b41268673(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x31574b1b41268673"
	},
	"N_0x316db59cd14c1774": {
		"body": [
			"N_0x316db59cd14c1774(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x316db59cd14c1774"
	},
	"N_0x31ba138f6304fb9f": {
		"body": [
			"N_0x31ba138f6304fb9f(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x31ba138f6304fb9f"
	},
	"N_0x31e90b8873a4cd3b": {
		"body": [
			"N_0x31e90b8873a4cd3b(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x31e90b8873a4cd3b"
	},
	"N_0x31f924b53eaddf65": {
		"body": [
			"N_0x31f924b53eaddf65(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x31f924b53eaddf65"
	},
	"N_0x324c5aa411da7737": {
		"body": [
			"N_0x324c5aa411da7737(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x324c5aa411da7737"
	},
	"N_0x32cac93c9de73d32": {
		"body": [
			"N_0x32cac93c9de73d32()"
		],
		"scope": "lua",
		"prefix": "N_0x32cac93c9de73d32"
	},
	"N_0x32ebd154cb6b8b99": {
		"body": [
			"N_0x32ebd154cb6b8b99(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x32ebd154cb6b8b99"
	},
	"N_0x32f34ff7f617643b": {
		"body": [
			"N_0x32f34ff7f617643b(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x32f34ff7f617643b"
	},
	"N_0x336b3d200ab007cb": {
		"body": [
			"N_0x336b3d200ab007cb(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0x336b3d200ab007cb"
	},
	"N_0x33d47e85b476abcd": {
		"body": [
			"N_0x33d47e85b476abcd(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x33d47e85b476abcd"
	},
	"N_0x33d72899e24c3365": {
		"body": [
			"N_0x33d72899e24c3365(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x33d72899e24c3365"
	},
	"N_0x33de49edf4dde77a": {
		"body": [
			"N_0x33de49edf4dde77a(${1:entity})"
		],
		"scope": "lua",
		"prefix": "N_0x33de49edf4dde77a"
	},
	"N_0x33df47cc0642061b": {
		"body": [
			"N_0x33df47cc0642061b()"
		],
		"scope": "lua",
		"prefix": "N_0x33df47cc0642061b"
	},
	"N_0x33e3c6c6f2f0b506": {
		"body": [
			"N_0x33e3c6c6f2f0b506(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x33e3c6c6f2f0b506"
	},
	"N_0x3441cad2f2231923": {
		"body": [
			"N_0x3441cad2f2231923(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x3441cad2f2231923"
	},
	"N_0x346ef3ecaaab149e": {
		"body": [
			"N_0x346ef3ecaaab149e()"
		],
		"scope": "lua",
		"prefix": "N_0x346ef3ecaaab149e"
	},
	"N_0x34770b9ce0e03b91": {
		"body": [
			"N_0x34770b9ce0e03b91(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x34770b9ce0e03b91"
	},
	"N_0x34d66bc058019ce0": {
		"body": [
			"N_0x34d66bc058019ce0(${1:radioStationName})"
		],
		"scope": "lua",
		"prefix": "N_0x34d66bc058019ce0"
	},
	"N_0x350c23949e43686c": {
		"body": [
			"N_0x350c23949e43686c(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0x350c23949e43686c"
	},
	"N_0x352e2b5cf420bf3b": {
		"body": [
			"N_0x352e2b5cf420bf3b(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x352e2b5cf420bf3b"
	},
	"N_0x357b152ef96c30b6": {
		"body": [
			"N_0x357b152ef96c30b6()"
		],
		"scope": "lua",
		"prefix": "N_0x357b152ef96c30b6"
	},
	"N_0x359af31a4b52f5ed": {
		"body": [
			"N_0x359af31a4b52f5ed()"
		],
		"scope": "lua",
		"prefix": "N_0x359af31a4b52f5ed"
	},
	"N_0x35a3cd97b2c0a6d2": {
		"body": [
			"N_0x35a3cd97b2c0a6d2(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x35a3cd97b2c0a6d2"
	},
	"N_0x35bb21de06784373": {
		"body": [
			"N_0x35bb21de06784373(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x35bb21de06784373"
	},
	"N_0x35e0654f4bad7971": {
		"body": [
			"N_0x35e0654f4bad7971(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x35e0654f4bad7971"
	},
	"N_0x36391f397731595d": {
		"body": [
			"N_0x36391f397731595d(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x36391f397731595d"
	},
	"N_0x367ef5e2f439b4c6": {
		"body": [
			"N_0x367ef5e2f439b4c6(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x367ef5e2f439b4c6"
	},
	"N_0x36ccb9be67b970fd": {
		"body": [
			"N_0x36ccb9be67b970fd(${1:ropeId}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x36ccb9be67b970fd"
	},
	"N_0x36de109527a2c0c4": {
		"body": [
			"N_0x36de109527a2c0c4(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x36de109527a2c0c4"
	},
	"N_0x36f1b38855f2a8df": {
		"body": [
			"N_0x36f1b38855f2a8df(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0x36f1b38855f2a8df"
	},
	"N_0x36f32de87082343e": {
		"body": [
			"N_0x36f32de87082343e(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x36f32de87082343e"
	},
	"N_0x36f6626459d91457": {
		"body": [
			"N_0x36f6626459d91457(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x36f6626459d91457"
	},
	"N_0x37d5f739fd494675": {
		"body": [
			"N_0x37d5f739fd494675(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x37d5f739fd494675"
	},
	"N_0x380b4968d1e09e55": {
		"body": [
			"N_0x380b4968d1e09e55()"
		],
		"scope": "lua",
		"prefix": "N_0x380b4968d1e09e55"
	},
	"N_0x38491439b6ba7f7d": {
		"body": [
			"N_0x38491439b6ba7f7d(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x38491439b6ba7f7d"
	},
	"N_0x3855fb5eb2c5e8b2": {
		"body": [
			"N_0x3855fb5eb2c5e8b2(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x3855fb5eb2c5e8b2"
	},
	"N_0x38b7c51ab1edc7d8": {
		"body": [
			"N_0x38b7c51ab1edc7d8(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x38b7c51ab1edc7d8"
	},
	"N_0x38baaa5dd4c9d19f": {
		"body": [
			"N_0x38baaa5dd4c9d19f(${1:value})"
		],
		"scope": "lua",
		"prefix": "N_0x38baaa5dd4c9d19f"
	},
	"N_0x38c1cb1cb119a016": {
		"body": [
			"N_0x38c1cb1cb119a016(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x38c1cb1cb119a016"
	},
	"N_0x392183bb9ea57697": {
		"body": [
			"N_0x392183bb9ea57697(${1:vehicle}, ${2:wheelIndex}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x392183bb9ea57697"
	},
	"N_0x393bd2275ceb7793": {
		"body": [
			"N_0x393bd2275ceb7793()"
		],
		"scope": "lua",
		"prefix": "N_0x393bd2275ceb7793"
	},
	"N_0x39455bf4f4f55186": {
		"body": [
			"N_0x39455bf4f4f55186(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11}, ${13:p12})"
		],
		"scope": "lua",
		"prefix": "N_0x39455bf4f4f55186"
	},
	"N_0x394bde2a7bba031e": {
		"body": [
			"N_0x394bde2a7bba031e(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x394bde2a7bba031e"
	},
	"N_0x394cd08e31313c28": {
		"body": [
			"N_0x394cd08e31313c28()"
		],
		"scope": "lua",
		"prefix": "N_0x394cd08e31313c28"
	},
	"N_0x397baa01068baa96": {
		"body": [
			"N_0x397baa01068baa96()"
		],
		"scope": "lua",
		"prefix": "N_0x397baa01068baa96"
	},
	"N_0x39917e1b4cb0f911": {
		"body": [
			"N_0x39917e1b4cb0f911(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x39917e1b4cb0f911"
	},
	"N_0x39a5fb7eaf150840": {
		"body": [
			"N_0x39a5fb7eaf150840(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x39a5fb7eaf150840"
	},
	"N_0x3a48ab4445d499be": {
		"body": [
			"N_0x3a48ab4445d499be()"
		],
		"scope": "lua",
		"prefix": "N_0x3a48ab4445d499be"
	},
	"N_0x3a9128352eac9e85": {
		"body": [
			"N_0x3a9128352eac9e85(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x3a9128352eac9e85"
	},
	"N_0x3b2fd68db5f8331c": {
		"body": [
			"N_0x3b2fd68db5f8331c(${1:object}, ${2:toggle}, ${3:R}, ${4:G}, ${5:B})"
		],
		"scope": "lua",
		"prefix": "N_0x3b2fd68db5f8331c"
	},
	"N_0x3b458ddb57038f08": {
		"body": [
			"N_0x3b458ddb57038f08(${1:vehicle}, ${2:doorIndex}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x3b458ddb57038f08"
	},
	"N_0x3bd770d281982db5": {
		"body": [
			"N_0x3bd770d281982db5(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x3bd770d281982db5"
	},
	"N_0x3c5c1e2c2ff814b1": {
		"body": [
			"N_0x3c5c1e2c2ff814b1(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x3c5c1e2c2ff814b1"
	},
	"N_0x3c788e7f6438754d": {
		"body": [
			"N_0x3c788e7f6438754d(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x3c788e7f6438754d"
	},
	"N_0x3d9acb1eb139e702": {
		"body": [
			"N_0x3d9acb1eb139e702()"
		],
		"scope": "lua",
		"prefix": "N_0x3d9acb1eb139e702"
	},
	"N_0x3de3aa516fb126a4": {
		"body": [
			"N_0x3de3aa516fb126a4(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x3de3aa516fb126a4"
	},
	"N_0x3de51e9c80b116cf": {
		"body": [
			"N_0x3de51e9c80b116cf(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x3de51e9c80b116cf"
	},
	"N_0x3e38e28a1d80ddf6": {
		"body": [
			"N_0x3e38e28a1d80ddf6(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0x3e38e28a1d80ddf6"
	},
	"N_0x3e9679c1dfcf422c": {
		"body": [
			"N_0x3e9679c1dfcf422c(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x3e9679c1dfcf422c"
	},
	"N_0x3ebeac6c3f81f6bd": {
		"body": [
			"N_0x3ebeac6c3f81f6bd(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x3ebeac6c3f81f6bd"
	},
	"N_0x3f9990bf5f22759c": {
		"body": [
			"N_0x3f9990bf5f22759c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x3f9990bf5f22759c"
	},
	"N_0x3fa36981311fa4ff": {
		"body": [
			"N_0x3fa36981311fa4ff(${1:netId}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "N_0x3fa36981311fa4ff"
	},
	"N_0x3fc795691834481d": {
		"body": [
			"N_0x3fc795691834481d(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x3fc795691834481d"
	},
	"N_0x4008edf7d6e48175": {
		"body": [
			"N_0x4008edf7d6e48175(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x4008edf7d6e48175"
	},
	"N_0x4056ea1105f5abd7": {
		"body": [
			"N_0x4056ea1105f5abd7(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x4056ea1105f5abd7"
	},
	"N_0x405dc2aef6af95b9": {
		"body": [
			"N_0x405dc2aef6af95b9(${1:roomHashKey})"
		],
		"scope": "lua",
		"prefix": "N_0x405dc2aef6af95b9"
	},
	"N_0x40763ea7b9b783e7": {
		"body": [
			"N_0x40763ea7b9b783e7(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x40763ea7b9b783e7"
	},
	"N_0x407dc5e97db1a4d3": {
		"body": [
			"N_0x407dc5e97db1a4d3(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x407dc5e97db1a4d3"
	},
	"N_0x40aefd1a244741f2": {
		"body": [
			"N_0x40aefd1a244741f2(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x40aefd1a244741f2"
	},
	"N_0x41062318f23ed854": {
		"body": [
			"N_0x41062318f23ed854(${1:vehicle}, ${2:ped}, ${3:index})"
		],
		"scope": "lua",
		"prefix": "N_0x41062318f23ed854"
	},
	"N_0x4128464231e3ca0b": {
		"body": [
			"N_0x4128464231e3ca0b(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x4128464231e3ca0b"
	},
	"N_0x41290b40fa63e6da": {
		"body": [
			"N_0x41290b40fa63e6da(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x41290b40fa63e6da"
	},
	"N_0x412f1364fa066cfb": {
		"body": [
			"N_0x412f1364fa066cfb(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x412f1364fa066cfb"
	},
	"N_0x41350b4fc28e3941": {
		"body": [
			"N_0x41350b4fc28e3941(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x41350b4fc28e3941"
	},
	"N_0x419615486bbf1956": {
		"body": [
			"N_0x419615486bbf1956(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x419615486bbf1956"
	},
	"N_0x4237e822315d8ba9": {
		"body": [
			"N_0x4237e822315d8ba9()"
		],
		"scope": "lua",
		"prefix": "N_0x4237e822315d8ba9"
	},
	"N_0x425aecf167663f48": {
		"body": [
			"N_0x425aecf167663f48(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x425aecf167663f48"
	},
	"N_0x4282e08174868be3": {
		"body": [
			"N_0x4282e08174868be3()"
		],
		"scope": "lua",
		"prefix": "N_0x4282e08174868be3"
	},
	"N_0x428ad3e26c8d9eb0": {
		"body": [
			"N_0x428ad3e26c8d9eb0(${1:vehicle}, ${2:x}, ${3:y}, ${4:z}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0x428ad3e26c8d9eb0"
	},
	"N_0x430a7631a84c9be7": {
		"body": [
			"N_0x430a7631a84c9be7(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x430a7631a84c9be7"
	},
	"N_0x4348bfda56023a2f": {
		"body": [
			"N_0x4348bfda56023a2f(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x4348bfda56023a2f"
	},
	"N_0x43fa0dfc5df87815": {
		"body": [
			"N_0x43fa0dfc5df87815(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x43fa0dfc5df87815"
	},
	"N_0x43fa7cbe20dab219": {
		"body": [
			"N_0x43fa7cbe20dab219(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x43fa7cbe20dab219"
	},
	"N_0x4419966c9936071a": {
		"body": [
			"N_0x4419966c9936071a(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "N_0x4419966c9936071a"
	},
	"N_0x44621483ff966526": {
		"body": [
			"N_0x44621483ff966526(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x44621483ff966526"
	},
	"N_0x44919cc079bb60bf": {
		"body": [
			"N_0x44919cc079bb60bf(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x44919cc079bb60bf"
	},
	"N_0x44a0bdc559b35f6e": {
		"body": [
			"N_0x44a0bdc559b35f6e()"
		],
		"scope": "lua",
		"prefix": "N_0x44a0bdc559b35f6e"
	},
	"N_0x44aca259d67651db": {
		"body": [
			"N_0x44aca259d67651db(${1:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x44aca259d67651db"
	},
	"N_0x450819d8cf90c416": {
		"body": [
			"N_0x450819d8cf90c416()"
		],
		"scope": "lua",
		"prefix": "N_0x450819d8cf90c416"
	},
	"N_0x451d05012ccec234": {
		"body": [
			"N_0x451d05012ccec234(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x451d05012ccec234"
	},
	"N_0x45a83257ed02d9bc": {
		"body": [
			"N_0x45a83257ed02d9bc()"
		],
		"scope": "lua",
		"prefix": "N_0x45a83257ed02d9bc"
	},
	"N_0x45e816772e93a9db": {
		"body": [
			"N_0x45e816772e93a9db()"
		],
		"scope": "lua",
		"prefix": "N_0x45e816772e93a9db"
	},
	"N_0x45f35c0edc33b03b": {
		"body": [
			"N_0x45f35c0edc33b03b(${1:netScene}, ${2:modelHash}, ${3:x}, ${4:y}, ${5:z}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:flags})"
		],
		"scope": "lua",
		"prefix": "N_0x45f35c0edc33b03b"
	},
	"N_0x4669b3ed80f24b4e": {
		"body": [
			"N_0x4669b3ed80f24b4e(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0x4669b3ed80f24b4e"
	},
	"N_0x466da42c89865553": {
		"body": [
			"N_0x466da42c89865553(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x466da42c89865553"
	},
	"N_0x469f2ecdec046337": {
		"body": [
			"N_0x469f2ecdec046337(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x469f2ecdec046337"
	},
	"N_0x46b05bcae43856b0": {
		"body": [
			"N_0x46b05bcae43856b0(${1:ped}, ${2:flag})"
		],
		"scope": "lua",
		"prefix": "N_0x46b05bcae43856b0"
	},
	"N_0x46d1a61a21f566fc": {
		"body": [
			"N_0x46d1a61a21f566fc(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x46d1a61a21f566fc"
	},
	"N_0x46f3add1e2d5baf2": {
		"body": [
			"N_0x46f3add1e2d5baf2(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x46f3add1e2d5baf2"
	},
	"N_0x472397322e92a856": {
		"body": [
			"N_0x472397322e92a856()"
		],
		"scope": "lua",
		"prefix": "N_0x472397322e92a856"
	},
	"N_0x4737980e8a283806": {
		"body": [
			"N_0x4737980e8a283806(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x4737980e8a283806"
	},
	"N_0x4811bbac21c5fcd5": {
		"body": [
			"N_0x4811bbac21c5fcd5(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x4811bbac21c5fcd5"
	},
	"N_0x483aca1176ca93f1": {
		"body": [
			"N_0x483aca1176ca93f1()"
		],
		"scope": "lua",
		"prefix": "N_0x483aca1176ca93f1"
	},
	"N_0x48621c9fca3ebd28": {
		"body": [
			"N_0x48621c9fca3ebd28(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x48621c9fca3ebd28"
	},
	"N_0x487912fd248efddf": {
		"body": [
			"N_0x487912fd248efddf(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x487912fd248efddf"
	},
	"N_0x4879e4fe39074cdf": {
		"body": [
			"N_0x4879e4fe39074cdf()"
		],
		"scope": "lua",
		"prefix": "N_0x4879e4fe39074cdf"
	},
	"N_0x4895bdea16e7c080": {
		"body": [
			"N_0x4895bdea16e7c080(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x4895bdea16e7c080"
	},
	"N_0x48f069265a0e4bec": {
		"body": [
			"N_0x48f069265a0e4bec(${1:name})"
		],
		"scope": "lua",
		"prefix": "N_0x48f069265a0e4bec"
	},
	"N_0x490861b88f4fd846": {
		"body": [
			"N_0x490861b88f4fd846(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x490861b88f4fd846"
	},
	"N_0x49b856b1360c47c7": {
		"body": [
			"N_0x49b856b1360c47c7(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x49b856b1360c47c7"
	},
	"N_0x49e50bdb8ba4dab2": {
		"body": [
			"N_0x49e50bdb8ba4dab2(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x49e50bdb8ba4dab2"
	},
	"N_0x4a7d6e727f941747": {
		"body": [
			"N_0x4a7d6e727f941747(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x4a7d6e727f941747"
	},
	"N_0x4a9fde3a5a6d0437": {
		"body": [
			"N_0x4a9fde3a5a6d0437(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x4a9fde3a5a6d0437"
	},
	"N_0x4ad280eb48b2d8e6": {
		"body": [
			"N_0x4ad280eb48b2d8e6(${1:vehicle}, ${2:togle})"
		],
		"scope": "lua",
		"prefix": "N_0x4ad280eb48b2d8e6"
	},
	"N_0x4ad490ae1536933b": {
		"body": [
			"N_0x4ad490ae1536933b(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x4ad490ae1536933b"
	},
	"N_0x4af92acd3141d96c": {
		"body": [
			"N_0x4af92acd3141d96c()"
		],
		"scope": "lua",
		"prefix": "N_0x4af92acd3141d96c"
	},
	"N_0x4aff7e02e485e92b": {
		"body": [
			"N_0x4aff7e02e485e92b()"
		],
		"scope": "lua",
		"prefix": "N_0x4aff7e02e485e92b"
	},
	"N_0x4b5b620c9b59ed34": {
		"body": [
			"N_0x4b5b620c9b59ed34(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x4b5b620c9b59ed34"
	},
	"N_0x4ba166079d658ed4": {
		"body": [
			"N_0x4ba166079d658ed4(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x4ba166079d658ed4"
	},
	"N_0x4c134b4df76025d0": {
		"body": [
			"N_0x4c134b4df76025d0(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x4c134b4df76025d0"
	},
	"N_0x4c2330e61d3deb56": {
		"body": [
			"N_0x4c2330e61d3deb56(${1:interior})"
		],
		"scope": "lua",
		"prefix": "N_0x4c2330e61d3deb56"
	},
	"N_0x4c2a9fdc22377075": {
		"body": [
			"N_0x4c2a9fdc22377075()"
		],
		"scope": "lua",
		"prefix": "N_0x4c2a9fdc22377075"
	},
	"N_0x4c3b75694f7e0d9c": {
		"body": [
			"N_0x4c3b75694f7e0d9c(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x4c3b75694f7e0d9c"
	},
	"N_0x4c815eb175086f84": {
		"body": [
			"N_0x4c815eb175086f84(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x4c815eb175086f84"
	},
	"N_0x4c89fe2bdeb3f169": {
		"body": [
			"N_0x4c89fe2bdeb3f169()"
		],
		"scope": "lua",
		"prefix": "N_0x4c89fe2bdeb3f169"
	},
	"N_0x4c9034162368e206": {
		"body": [
			"N_0x4c9034162368e206()"
		],
		"scope": "lua",
		"prefix": "N_0x4c9034162368e206"
	},
	"N_0x4cebc1ed31e8925e": {
		"body": [
			"N_0x4cebc1ed31e8925e(${1:cutsceneName})"
		],
		"scope": "lua",
		"prefix": "N_0x4cebc1ed31e8925e"
	},
	"N_0x4d02279c83be69fe": {
		"body": [
			"N_0x4d02279c83be69fe()"
		],
		"scope": "lua",
		"prefix": "N_0x4d02279c83be69fe"
	},
	"N_0x4d953df78ebf8158": {
		"body": [
			"N_0x4d953df78ebf8158()"
		],
		"scope": "lua",
		"prefix": "N_0x4d953df78ebf8158"
	},
	"N_0x4d9d109f63fee1d4": {
		"body": [
			"N_0x4d9d109f63fee1d4(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x4d9d109f63fee1d4"
	},
	"N_0x4dc416f246a41fc8": {
		"body": [
			"N_0x4dc416f246a41fc8(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0x4dc416f246a41fc8"
	},
	"N_0x4dcdf92bf64236cd": {
		"body": [
			"N_0x4dcdf92bf64236cd(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x4dcdf92bf64236cd"
	},
	"N_0x4df7cfff471a7fb1": {
		"body": [
			"N_0x4df7cfff471a7fb1(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x4df7cfff471a7fb1"
	},
	"N_0x4e52e752c76e7e7a": {
		"body": [
			"N_0x4e52e752c76e7e7a(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x4e52e752c76e7e7a"
	},
	"N_0x4e74e62e0a97e901": {
		"body": [
			"N_0x4e74e62e0a97e901(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x4e74e62e0a97e901"
	},
	"N_0x4ed9c8d6da297639": {
		"body": [
			"N_0x4ed9c8d6da297639()"
		],
		"scope": "lua",
		"prefix": "N_0x4ed9c8d6da297639"
	},
	"N_0x4fcd976da686580c": {
		"body": [
			"N_0x4fcd976da686580c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x4fcd976da686580c"
	},
	"N_0x4fcdbd3f0a813c25": {
		"body": [
			"N_0x4fcdbd3f0a813c25(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x4fcdbd3f0a813c25"
	},
	"N_0x50276ef8172f5f12": {
		"body": [
			"N_0x50276ef8172f5f12(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0x50276ef8172f5f12"
	},
	"N_0x504dfe62a1692296": {
		"body": [
			"N_0x504dfe62a1692296(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x504dfe62a1692296"
	},
	"N_0x5068f488ddb54dd8": {
		"body": [
			"N_0x5068f488ddb54dd8()"
		],
		"scope": "lua",
		"prefix": "N_0x5068f488ddb54dd8"
	},
	"N_0x50a8a36201dbf83e": {
		"body": [
			"N_0x50a8a36201dbf83e()"
		],
		"scope": "lua",
		"prefix": "N_0x50a8a36201dbf83e"
	},
	"N_0x511f1a683387c7e2": {
		"body": [
			"N_0x511f1a683387c7e2(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0x511f1a683387c7e2"
	},
	"N_0x51db102f4a3ba5e0": {
		"body": [
			"N_0x51db102f4a3ba5e0(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x51db102f4a3ba5e0"
	},
	"N_0x51f30db60626a20e": {
		"body": [
			"N_0x51f30db60626a20e(${1:vehicle}, ${2:x}, ${3:y}, ${4:z}, ${5:rotX}, ${6:rotY}, ${7:rotZ}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "N_0x51f30db60626a20e"
	},
	"N_0x5324a0e3e4ce3570": {
		"body": [
			"N_0x5324a0e3e4ce3570(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x5324a0e3e4ce3570"
	},
	"N_0x53c10c8bd774f2c9": {
		"body": [
			"N_0x53c10c8bd774f2c9()"
		],
		"scope": "lua",
		"prefix": "N_0x53c10c8bd774f2c9"
	},
	"N_0x53c31853ec9531ff": {
		"body": [
			"N_0x53c31853ec9531ff(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x53c31853ec9531ff"
	},
	"N_0x53cae13e9b426993": {
		"body": [
			"N_0x53cae13e9b426993(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x53cae13e9b426993"
	},
	"N_0x53ddc75bc3ac0a90": {
		"body": [
			"N_0x53ddc75bc3ac0a90(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "N_0x53ddc75bc3ac0a90"
	},
	"N_0x53f4892d18ec90a4": {
		"body": [
			"N_0x53f4892d18ec90a4(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x53f4892d18ec90a4"
	},
	"N_0x5407b7288d0478b7": {
		"body": [
			"N_0x5407b7288d0478b7(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5407b7288d0478b7"
	},
	"N_0x547237aa71ab44de": {
		"body": [
			"N_0x547237aa71ab44de(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x547237aa71ab44de"
	},
	"N_0x54e22ea2c1956a8d": {
		"body": [
			"N_0x54e22ea2c1956a8d(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x54e22ea2c1956a8d"
	},
	"N_0x54f157e0336a3822": {
		"body": [
			"N_0x54f157e0336a3822(${1:ped}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x54f157e0336a3822"
	},
	"N_0x5501b7a5cdb79d37": {
		"body": [
			"N_0x5501b7a5cdb79d37(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0x5501b7a5cdb79d37"
	},
	"N_0x55384438fc55ad8e": {
		"body": [
			"N_0x55384438fc55ad8e(${1:value})"
		],
		"scope": "lua",
		"prefix": "N_0x55384438fc55ad8e"
	},
	"N_0x5539c3ebf104a53a": {
		"body": [
			"N_0x5539c3ebf104a53a(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5539c3ebf104a53a"
	},
	"N_0x5574637681911fda": {
		"body": [
			"N_0x5574637681911fda(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x5574637681911fda"
	},
	"N_0x55a1e095db052fa5": {
		"body": [
			"N_0x55a1e095db052fa5(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x55a1e095db052fa5"
	},
	"N_0x55a8becaf28a4eb7": {
		"body": [
			"N_0x55a8becaf28a4eb7()"
		],
		"scope": "lua",
		"prefix": "N_0x55a8becaf28a4eb7"
	},
	"N_0x55ecf4d13d9903b0": {
		"body": [
			"N_0x55ecf4d13d9903b0(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x55ecf4d13d9903b0"
	},
	"N_0x55f5a5f07134de60": {
		"body": [
			"N_0x55f5a5f07134de60()"
		],
		"scope": "lua",
		"prefix": "N_0x55f5a5f07134de60"
	},
	"N_0x55fcc0c390620314": {
		"body": [
			"N_0x55fcc0c390620314(${1:player1}, ${2:player2}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x55fcc0c390620314"
	},
	"N_0x560b423d73015e77": {
		"body": [
			"N_0x560b423d73015e77(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x560b423d73015e77"
	},
	"N_0x5615e0c5eb2bc6e2": {
		"body": [
			"N_0x5615e0c5eb2bc6e2(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x5615e0c5eb2bc6e2"
	},
	"N_0x5688585e6d563cd8": {
		"body": [
			"N_0x5688585e6d563cd8(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5688585e6d563cd8"
	},
	"N_0x56eb5e94318d3fb6": {
		"body": [
			"N_0x56eb5e94318d3fb6(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x56eb5e94318d3fb6"
	},
	"N_0x577599cced639ca2": {
		"body": [
			"N_0x577599cced639ca2(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x577599cced639ca2"
	},
	"N_0x57d760d55f54e071": {
		"body": [
			"N_0x57d760d55f54e071(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x57d760d55f54e071"
	},
	"N_0x583df8e3d4afbd98": {
		"body": [
			"N_0x583df8e3d4afbd98()"
		],
		"scope": "lua",
		"prefix": "N_0x583df8e3d4afbd98"
	},
	"N_0x5845066d8a1ea7f7": {
		"body": [
			"N_0x5845066d8a1ea7f7(${1:vehicle}, ${2:x}, ${3:y}, ${4:z}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0x5845066d8a1ea7f7"
	},
	"N_0x584770794d758c18": {
		"body": [
			"N_0x584770794d758c18(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x584770794d758c18"
	},
	"N_0x58bb377bec7cd5f4": {
		"body": [
			"N_0x58bb377bec7cd5f4(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x58bb377bec7cd5f4"
	},
	"N_0x59328eb08c5ceb2b": {
		"body": [
			"N_0x59328eb08c5ceb2b()"
		],
		"scope": "lua",
		"prefix": "N_0x59328eb08c5ceb2b"
	},
	"N_0x593feae1f73392d4": {
		"body": [
			"N_0x593feae1f73392d4()"
		],
		"scope": "lua",
		"prefix": "N_0x593feae1f73392d4"
	},
	"N_0x59424bd75174c9b1": {
		"body": [
			"N_0x59424bd75174c9b1()"
		],
		"scope": "lua",
		"prefix": "N_0x59424bd75174c9b1"
	},
	"N_0x59c3757b3b7408e8": {
		"body": [
			"N_0x59c3757b3b7408e8(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x59c3757b3b7408e8"
	},
	"N_0x59d421683d31835a": {
		"body": [
			"N_0x59d421683d31835a(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x59d421683d31835a"
	},
	"N_0x5a34cd9c3c5bec44": {
		"body": [
			"N_0x5a34cd9c3c5bec44(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5a34cd9c3c5bec44"
	},
	"N_0x5a43c76f7fc7ba5f": {
		"body": [
			"N_0x5a43c76f7fc7ba5f()"
		],
		"scope": "lua",
		"prefix": "N_0x5a43c76f7fc7ba5f"
	},
	"N_0x5a556b229a169402": {
		"body": [
			"N_0x5a556b229a169402()"
		],
		"scope": "lua",
		"prefix": "N_0x5a556b229a169402"
	},
	"N_0x5a7f62fda59759bd": {
		"body": [
			"N_0x5a7f62fda59759bd()"
		],
		"scope": "lua",
		"prefix": "N_0x5a7f62fda59759bd"
	},
	"N_0x5ad3932daeb1e5d3": {
		"body": [
			"N_0x5ad3932daeb1e5d3()"
		],
		"scope": "lua",
		"prefix": "N_0x5ad3932daeb1e5d3"
	},
	"N_0x5ae17c6b0134b7f1": {
		"body": [
			"N_0x5ae17c6b0134b7f1()"
		],
		"scope": "lua",
		"prefix": "N_0x5ae17c6b0134b7f1"
	},
	"N_0x5b0316762afd4a64": {
		"body": [
			"N_0x5b0316762afd4a64()"
		],
		"scope": "lua",
		"prefix": "N_0x5b0316762afd4a64"
	},
	"N_0x5b1f2e327b6b6fe1": {
		"body": [
			"N_0x5b1f2e327b6b6fe1()"
		],
		"scope": "lua",
		"prefix": "N_0x5b1f2e327b6b6fe1"
	},
	"N_0x5b48a06dd0e792a5": {
		"body": [
			"N_0x5b48a06dd0e792a5()"
		],
		"scope": "lua",
		"prefix": "N_0x5b48a06dd0e792a5"
	},
	"N_0x5b6010b3cbc29095": {
		"body": [
			"N_0x5b6010b3cbc29095(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x5b6010b3cbc29095"
	},
	"N_0x5b73c77d9eb66e24": {
		"body": [
			"N_0x5b73c77d9eb66e24(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5b73c77d9eb66e24"
	},
	"N_0x5b9853296731e88d": {
		"body": [
			"N_0x5b9853296731e88d(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "N_0x5b9853296731e88d"
	},
	"N_0x5ba68a0840d546ac": {
		"body": [
			"N_0x5ba68a0840d546ac(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x5ba68a0840d546ac"
	},
	"N_0x5bbcf35bf6e456f7": {
		"body": [
			"N_0x5bbcf35bf6e456f7(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x5bbcf35bf6e456f7"
	},
	"N_0x5bd5f255321c4aaf": {
		"body": [
			"N_0x5bd5f255321c4aaf(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5bd5f255321c4aaf"
	},
	"N_0x5bf29846c6527c54": {
		"body": [
			"N_0x5bf29846c6527c54(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0x5bf29846c6527c54"
	},
	"N_0x5bff36d6ed83e0ae": {
		"body": [
			"N_0x5bff36d6ed83e0ae()"
		],
		"scope": "lua",
		"prefix": "N_0x5bff36d6ed83e0ae"
	},
	"N_0x5c3b791d580e0bc2": {
		"body": [
			"N_0x5c3b791d580e0bc2(${1:entity}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x5c3b791d580e0bc2"
	},
	"N_0x5c41e6babc9e2112": {
		"body": [
			"N_0x5c41e6babc9e2112(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5c41e6babc9e2112"
	},
	"N_0x5c48a1d6e3b33179": {
		"body": [
			"N_0x5c48a1d6e3b33179(${1:cam})"
		],
		"scope": "lua",
		"prefix": "N_0x5c48a1d6e3b33179"
	},
	"N_0x5c497525f803486b": {
		"body": [
			"N_0x5c497525f803486b()"
		],
		"scope": "lua",
		"prefix": "N_0x5c497525f803486b"
	},
	"N_0x5c4ebffa98bdb41c": {
		"body": [
			"N_0x5c4ebffa98bdb41c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5c4ebffa98bdb41c"
	},
	"N_0x5cdaed54b34b0ed0": {
		"body": [
			"N_0x5cdaed54b34b0ed0(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5cdaed54b34b0ed0"
	},
	"N_0x5d2bfaab8d956e0e": {
		"body": [
			"N_0x5d2bfaab8d956e0e()"
		],
		"scope": "lua",
		"prefix": "N_0x5d2bfaab8d956e0e"
	},
	"N_0x5d96cfb59da076a0": {
		"body": [
			"N_0x5d96cfb59da076a0(${1:vehicle}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x5d96cfb59da076a0"
	},
	"N_0x5db8010ee71fdef2": {
		"body": [
			"N_0x5db8010ee71fdef2(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "N_0x5db8010ee71fdef2"
	},
	"N_0x5dbf05db5926d089": {
		"body": [
			"N_0x5dbf05db5926d089(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5dbf05db5926d089"
	},
	"N_0x5debd9c4dc995692": {
		"body": [
			"N_0x5debd9c4dc995692()"
		],
		"scope": "lua",
		"prefix": "N_0x5debd9c4dc995692"
	},
	"N_0x5e3aa4ca2b6fb0ee": {
		"body": [
			"N_0x5e3aa4ca2b6fb0ee(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5e3aa4ca2b6fb0ee"
	},
	"N_0x5e569ec46ec21cae": {
		"body": [
			"N_0x5e569ec46ec21cae(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x5e569ec46ec21cae"
	},
	"N_0x5e657ef1099edd65": {
		"body": [
			"N_0x5e657ef1099edd65(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5e657ef1099edd65"
	},
	"N_0x5ead2bf6484852e4": {
		"body": [
			"N_0x5ead2bf6484852e4()"
		],
		"scope": "lua",
		"prefix": "N_0x5ead2bf6484852e4"
	},
	"N_0x5ecd378ee64450ab": {
		"body": [
			"N_0x5ecd378ee64450ab(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5ecd378ee64450ab"
	},
	"N_0x5edef0cf8c1dab3c": {
		"body": [
			"N_0x5edef0cf8c1dab3c()"
		],
		"scope": "lua",
		"prefix": "N_0x5edef0cf8c1dab3c"
	},
	"N_0x5ee5632f47ae9695": {
		"body": [
			"N_0x5ee5632f47ae9695(${1:vehicle}, ${2:health})"
		],
		"scope": "lua",
		"prefix": "N_0x5ee5632f47ae9695"
	},
	"N_0x5f2013f8bc24ee69": {
		"body": [
			"N_0x5f2013f8bc24ee69(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5f2013f8bc24ee69"
	},
	"N_0x5f456788b05faeac": {
		"body": [
			"N_0x5f456788b05faeac(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x5f456788b05faeac"
	},
	"N_0x5f6df3d92271e8a1": {
		"body": [
			"N_0x5f6df3d92271e8a1(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x5f6df3d92271e8a1"
	},
	"N_0x5fc472c501ccadb3": {
		"body": [
			"N_0x5fc472c501ccadb3(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0x5fc472c501ccadb3"
	},
	"N_0x5ff2c33b13a02a11": {
		"body": [
			"N_0x5ff2c33b13a02a11(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x5ff2c33b13a02a11"
	},
	"N_0x600f8cb31c7aab6e": {
		"body": [
			"N_0x600f8cb31c7aab6e(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x600f8cb31c7aab6e"
	},
	"N_0x60edd13eb3ac1ff3": {
		"body": [
			"N_0x60edd13eb3ac1ff3()"
		],
		"scope": "lua",
		"prefix": "N_0x60edd13eb3ac1ff3"
	},
	"N_0x60eedc12af66e846": {
		"body": [
			"N_0x60eedc12af66e846(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x60eedc12af66e846"
	},
	"N_0x6100b3cefd43452e": {
		"body": [
			"N_0x6100b3cefd43452e(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x6100b3cefd43452e"
	},
	"N_0x613f125ba3bd2eb9": {
		"body": [
			"N_0x613f125ba3bd2eb9()"
		],
		"scope": "lua",
		"prefix": "N_0x613f125ba3bd2eb9"
	},
	"N_0x615d3925e87a3b26": {
		"body": [
			"N_0x615d3925e87a3b26(${1:checkpoint})"
		],
		"scope": "lua",
		"prefix": "N_0x615d3925e87a3b26"
	},
	"N_0x61631f5df50d1c34": {
		"body": [
			"N_0x61631f5df50d1c34(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x61631f5df50d1c34"
	},
	"N_0x617f49c2668e6155": {
		"body": [
			"N_0x617f49c2668e6155()"
		],
		"scope": "lua",
		"prefix": "N_0x617f49c2668e6155"
	},
	"N_0x61f95e5bb3e0a8c6": {
		"body": [
			"N_0x61f95e5bb3e0a8c6(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x61f95e5bb3e0a8c6"
	},
	"N_0x62374889a4d59f72": {
		"body": [
			"N_0x62374889a4d59f72()"
		],
		"scope": "lua",
		"prefix": "N_0x62374889a4d59f72"
	},
	"N_0x62454a641b41f3c5": {
		"body": [
			"N_0x62454a641b41f3c5(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x62454a641b41f3c5"
	},
	"N_0x629526aba383bcaa": {
		"body": [
			"N_0x629526aba383bcaa()"
		],
		"scope": "lua",
		"prefix": "N_0x629526aba383bcaa"
	},
	"N_0x62e849b7eb28e770": {
		"body": [
			"N_0x62e849b7eb28e770(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x62e849b7eb28e770"
	},
	"N_0x62ecfcfdee7885d6": {
		"body": [
			"N_0x62ecfcfdee7885d6()"
		],
		"scope": "lua",
		"prefix": "N_0x62ecfcfdee7885d6"
	},
	"N_0x632b2940c67f4ea9": {
		"body": [
			"N_0x632b2940c67f4ea9(${1:scaleformHandle})"
		],
		"scope": "lua",
		"prefix": "N_0x632b2940c67f4ea9"
	},
	"N_0x638a3a81733086db": {
		"body": [
			"N_0x638a3a81733086db()"
		],
		"scope": "lua",
		"prefix": "N_0x638a3a81733086db"
	},
	"N_0x63b406d7884bfa95": {
		"body": [
			"N_0x63b406d7884bfa95()"
		],
		"scope": "lua",
		"prefix": "N_0x63b406d7884bfa95"
	},
	"N_0x63eb2b972a218cac": {
		"body": [
			"N_0x63eb2b972a218cac()"
		],
		"scope": "lua",
		"prefix": "N_0x63eb2b972a218cac"
	},
	"N_0x63ecf581bc70e363": {
		"body": [
			"N_0x63ecf581bc70e363(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x63ecf581bc70e363"
	},
	"N_0x641f272b52e2f0f8": {
		"body": [
			"N_0x641f272b52e2f0f8(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x641f272b52e2f0f8"
	},
	"N_0x6483c25849031c4f": {
		"body": [
			"N_0x6483c25849031c4f(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x6483c25849031c4f"
	},
	"N_0x649c97d52332341a": {
		"body": [
			"N_0x649c97d52332341a(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x649c97d52332341a"
	},
	"N_0x64d779659bc37b19": {
		"body": [
			"N_0x64d779659bc37b19(${1:entity})"
		],
		"scope": "lua",
		"prefix": "N_0x64d779659bc37b19"
	},
	"N_0x64e5c4cc82847b73": {
		"body": [
			"N_0x64e5c4cc82847b73()"
		],
		"scope": "lua",
		"prefix": "N_0x64e5c4cc82847b73"
	},
	"N_0x6501129c9e0ffa05": {
		"body": [
			"N_0x6501129c9e0ffa05(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x6501129c9e0ffa05"
	},
	"N_0x65482bfd0923c8a1": {
		"body": [
			"N_0x65482bfd0923c8a1(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "N_0x65482bfd0923c8a1"
	},
	"N_0x6551b1f7f6cd46ea": {
		"body": [
			"N_0x6551b1f7f6cd46ea(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x6551b1f7f6cd46ea"
	},
	"N_0x658500ae6d723a7e": {
		"body": [
			"N_0x658500ae6d723a7e(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x658500ae6d723a7e"
	},
	"N_0x659f9d71f52843f8": {
		"body": [
			"N_0x659f9d71f52843f8(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x659f9d71f52843f8"
	},
	"N_0x65b080555ea48149": {
		"body": [
			"N_0x65b080555ea48149(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x65b080555ea48149"
	},
	"N_0x65d2ebb47e1cec21": {
		"body": [
			"N_0x65d2ebb47e1cec21(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x65d2ebb47e1cec21"
	},
	"N_0x661b5c8654add825": {
		"body": [
			"N_0x661b5c8654add825(${1:cam}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x661b5c8654add825"
	},
	"N_0x66972397e0757e7a": {
		"body": [
			"N_0x66972397e0757e7a(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x66972397e0757e7a"
	},
	"N_0x66a49d021870fe88": {
		"body": [
			"N_0x66a49d021870fe88()"
		],
		"scope": "lua",
		"prefix": "N_0x66a49d021870fe88"
	},
	"N_0x66e3aaface2d1eb8": {
		"body": [
			"N_0x66e3aaface2d1eb8(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x66e3aaface2d1eb8"
	},
	"N_0x66e7cb63c97b7d20": {
		"body": [
			"N_0x66e7cb63c97b7d20()"
		],
		"scope": "lua",
		"prefix": "N_0x66e7cb63c97b7d20"
	},
	"N_0x675721c9f644d161": {
		"body": [
			"N_0x675721c9f644d161()"
		],
		"scope": "lua",
		"prefix": "N_0x675721c9f644d161"
	},
	"N_0x675d19c6067cae08": {
		"body": [
			"N_0x675d19c6067cae08(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x675d19c6067cae08"
	},
	"N_0x678f86d8fc040bdb": {
		"body": [
			"N_0x678f86d8fc040bdb(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x678f86d8fc040bdb"
	},
	"N_0x67fc09bc554a75e5": {
		"body": [
			"N_0x67fc09bc554a75e5()"
		],
		"scope": "lua",
		"prefix": "N_0x67fc09bc554a75e5"
	},
	"N_0x68103e2247887242": {
		"body": [
			"N_0x68103e2247887242()"
		],
		"scope": "lua",
		"prefix": "N_0x68103e2247887242"
	},
	"N_0x68b562e124cc0aef": {
		"body": [
			"N_0x68b562e124cc0aef(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x68b562e124cc0aef"
	},
	"N_0x690a61a6d13583f6": {
		"body": [
			"N_0x690a61a6d13583f6(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0x690a61a6d13583f6"
	},
	"N_0x692d58df40657e8c": {
		"body": [
			"N_0x692d58df40657e8c(${1:p0}, ${2:p1}, ${3:p2}, ${4:p4}, ${5:p5})"
		],
		"scope": "lua",
		"prefix": "N_0x692d58df40657e8c"
	},
	"N_0x693478acbd7f18e7": {
		"body": [
			"N_0x693478acbd7f18e7()"
		],
		"scope": "lua",
		"prefix": "N_0x693478acbd7f18e7"
	},
	"N_0x694e00132f2823ed": {
		"body": [
			"N_0x694e00132f2823ed(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x694e00132f2823ed"
	},
	"N_0x699e4a5c8c893a18": {
		"body": [
			"N_0x699e4a5c8c893a18(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x699e4a5c8c893a18"
	},
	"N_0x69ef772b192614c1": {
		"body": [
			"N_0x69ef772b192614c1(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x69ef772b192614c1"
	},
	"N_0x6a51f78772175a51": {
		"body": [
			"N_0x6a51f78772175a51(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x6a51f78772175a51"
	},
	"N_0x6a5d89d7769a40d8": {
		"body": [
			"N_0x6a5d89d7769a40d8(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x6a5d89d7769a40d8"
	},
	"N_0x6a60e43998228229": {
		"body": [
			"N_0x6a60e43998228229(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x6a60e43998228229"
	},
	"N_0x6a7f19756f1a9016": {
		"body": [
			"N_0x6a7f19756f1a9016()"
		],
		"scope": "lua",
		"prefix": "N_0x6a7f19756f1a9016"
	},
	"N_0x6a973569ba094650": {
		"body": [
			"N_0x6a973569ba094650(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x6a973569ba094650"
	},
	"N_0x6a98c2ecf57fa5d4": {
		"body": [
			"N_0x6a98c2ecf57fa5d4(${1:vehicle}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "N_0x6a98c2ecf57fa5d4"
	},
	"N_0x6ad0bd5e087866cb": {
		"body": [
			"N_0x6ad0bd5e087866cb(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x6ad0bd5e087866cb"
	},
	"N_0x6b7e4fb50d5f3d65": {
		"body": [
			"N_0x6b7e4fb50d5f3d65(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0x6b7e4fb50d5f3d65"
	},
	"N_0x6bc0acd0673acebe": {
		"body": [
			"N_0x6bc0acd0673acebe(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x6bc0acd0673acebe"
	},
	"N_0x6bccf9948492fd85": {
		"body": [
			"N_0x6bccf9948492fd85(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0x6bccf9948492fd85"
	},
	"N_0x6bfb12ce158e3dd4": {
		"body": [
			"N_0x6bfb12ce158e3dd4(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x6bfb12ce158e3dd4"
	},
	"N_0x6bff5f84102df80a": {
		"body": [
			"N_0x6bff5f84102df80a(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x6bff5f84102df80a"
	},
	"N_0x6cd79468a1e595c6": {
		"body": [
			"N_0x6cd79468a1e595c6(${1:padIndex})"
		],
		"scope": "lua",
		"prefix": "N_0x6cd79468a1e595c6"
	},
	"N_0x6cdd58146a436083": {
		"body": [
			"N_0x6cdd58146a436083(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x6cdd58146a436083"
	},
	"N_0x6ce50e47f5543d0c": {
		"body": [
			"N_0x6ce50e47f5543d0c()"
		],
		"scope": "lua",
		"prefix": "N_0x6ce50e47f5543d0c"
	},
	"N_0x6cebe002e58dee97": {
		"body": [
			"N_0x6cebe002e58dee97(${1:componentHash})"
		],
		"scope": "lua",
		"prefix": "N_0x6cebe002e58dee97"
	},
	"N_0x6d6840cee8845831": {
		"body": [
			"N_0x6d6840cee8845831(${1:action})"
		],
		"scope": "lua",
		"prefix": "N_0x6d6840cee8845831"
	},
	"N_0x6dee77aff8c21bd1": {
		"body": [
			"N_0x6dee77aff8c21bd1()"
		],
		"scope": "lua",
		"prefix": "N_0x6dee77aff8c21bd1"
	},
	"N_0x6e0a5253375c4584": {
		"body": [
			"N_0x6e0a5253375c4584()"
		],
		"scope": "lua",
		"prefix": "N_0x6e0a5253375c4584"
	},
	"N_0x6e4361ff3e8cd7ca": {
		"body": [
			"N_0x6e4361ff3e8cd7ca(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x6e4361ff3e8cd7ca"
	},
	"N_0x6e91b04e08773030": {
		"body": [
			"N_0x6e91b04e08773030(${1:action})"
		],
		"scope": "lua",
		"prefix": "N_0x6e91b04e08773030"
	},
	"N_0x6eaaefc76acc311f": {
		"body": [
			"N_0x6eaaefc76acc311f(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x6eaaefc76acc311f"
	},
	"N_0x6ebfb22d646ffc18": {
		"body": [
			"N_0x6ebfb22d646ffc18(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x6ebfb22d646ffc18"
	},
	"N_0x6f2135b6129620c1": {
		"body": [
			"N_0x6f2135b6129620c1(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x6f2135b6129620c1"
	},
	"N_0x6f361b8889a792a3": {
		"body": [
			"N_0x6f361b8889a792a3()"
		],
		"scope": "lua",
		"prefix": "N_0x6f361b8889a792a3"
	},
	"N_0x6fb7bb3607d27fa2": {
		"body": [
			"N_0x6fb7bb3607d27fa2()"
		],
		"scope": "lua",
		"prefix": "N_0x6fb7bb3607d27fa2"
	},
	"N_0x6fcf8ddea146c45b": {
		"body": [
			"N_0x6fcf8ddea146c45b(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x6fcf8ddea146c45b"
	},
	"N_0x6fd97159fe3c971a": {
		"body": [
			"N_0x6fd97159fe3c971a(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x6fd97159fe3c971a"
	},
	"N_0x6fd992c4a1c1b986": {
		"body": [
			"N_0x6fd992c4a1c1b986()"
		],
		"scope": "lua",
		"prefix": "N_0x6fd992c4a1c1b986"
	},
	"N_0x6fddad856e36988a": {
		"body": [
			"N_0x6fddad856e36988a(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x6fddad856e36988a"
	},
	"N_0x6fddf453c0c756ec": {
		"body": [
			"N_0x6fddf453c0c756ec()"
		],
		"scope": "lua",
		"prefix": "N_0x6fddf453c0c756ec"
	},
	"N_0x700569dba175a77c": {
		"body": [
			"N_0x700569dba175a77c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x700569dba175a77c"
	},
	"N_0x701fda1e82076ba4": {
		"body": [
			"N_0x701fda1e82076ba4()"
		],
		"scope": "lua",
		"prefix": "N_0x701fda1e82076ba4"
	},
	"N_0x702bc4d605522539": {
		"body": [
			"N_0x702bc4d605522539(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x702bc4d605522539"
	},
	"N_0x7033eefd9b28088e": {
		"body": [
			"N_0x7033eefd9b28088e(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7033eefd9b28088e"
	},
	"N_0x703cc7f60cbb2b57": {
		"body": [
			"N_0x703cc7f60cbb2b57(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x703cc7f60cbb2b57"
	},
	"N_0x705a276ebff3133d": {
		"body": [
			"N_0x705a276ebff3133d()"
		],
		"scope": "lua",
		"prefix": "N_0x705a276ebff3133d"
	},
	"N_0x70a382adec069dd3": {
		"body": [
			"N_0x70a382adec069dd3(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x70a382adec069dd3"
	},
	"N_0x70b8ec8fc108a634": {
		"body": [
			"N_0x70b8ec8fc108a634(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x70b8ec8fc108a634"
	},
	"N_0x710bcda8071eded1": {
		"body": [
			"N_0x710bcda8071eded1()"
		],
		"scope": "lua",
		"prefix": "N_0x710bcda8071eded1"
	},
	"N_0x711794453cfd692b": {
		"body": [
			"N_0x711794453cfd692b(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x711794453cfd692b"
	},
	"N_0x7148e0f43d11f0d9": {
		"body": [
			"N_0x7148e0f43d11f0d9()"
		],
		"scope": "lua",
		"prefix": "N_0x7148e0f43d11f0d9"
	},
	"N_0x71b008056e5692d6": {
		"body": [
			"N_0x71b008056e5692d6()"
		],
		"scope": "lua",
		"prefix": "N_0x71b008056e5692d6"
	},
	"N_0x71dc455f5cd1c2b1": {
		"body": [
			"N_0x71dc455f5cd1c2b1(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "N_0x71dc455f5cd1c2b1"
	},
	"N_0x71e7b2e657449aad": {
		"body": [
			"N_0x71e7b2e657449aad()"
		],
		"scope": "lua",
		"prefix": "N_0x71e7b2e657449aad"
	},
	"N_0x723c1ce13fbfdb67": {
		"body": [
			"N_0x723c1ce13fbfdb67(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x723c1ce13fbfdb67"
	},
	"N_0x7241ccb7d020db69": {
		"body": [
			"N_0x7241ccb7d020db69(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x7241ccb7d020db69"
	},
	"N_0x7242f8b741ce1086": {
		"body": [
			"N_0x7242f8b741ce1086(${1:netId})"
		],
		"scope": "lua",
		"prefix": "N_0x7242f8b741ce1086"
	},
	"N_0x725012a415dba050": {
		"body": [
			"N_0x725012a415dba050(${1:p0}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x725012a415dba050"
	},
	"N_0x72beccf4b829522e": {
		"body": [
			"N_0x72beccf4b829522e(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x72beccf4b829522e"
	},
	"N_0x72de52178c291cb5": {
		"body": [
			"N_0x72de52178c291cb5()"
		],
		"scope": "lua",
		"prefix": "N_0x72de52178c291cb5"
	},
	"N_0x72eb7ba9b69bf6ab": {
		"body": [
			"N_0x72eb7ba9b69bf6ab()"
		],
		"scope": "lua",
		"prefix": "N_0x72eb7ba9b69bf6ab"
	},
	"N_0x73001e34f85137f8": {
		"body": [
			"N_0x73001e34f85137f8(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x73001e34f85137f8"
	},
	"N_0x733c87d4ce22bea2": {
		"body": [
			"N_0x733c87d4ce22bea2(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0x733c87d4ce22bea2"
	},
	"N_0x734e1714d077da9a": {
		"body": [
			"N_0x734e1714d077da9a(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x734e1714d077da9a"
	},
	"N_0x73561d4425a021a2": {
		"body": [
			"N_0x73561d4425a021a2(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x73561d4425a021a2"
	},
	"N_0x737e398138550fff": {
		"body": [
			"N_0x737e398138550fff(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x737e398138550fff"
	},
	"N_0x741a3d8380319a81": {
		"body": [
			"N_0x741a3d8380319a81()"
		],
		"scope": "lua",
		"prefix": "N_0x741a3d8380319a81"
	},
	"N_0x742b58f723233ed9": {
		"body": [
			"N_0x742b58f723233ed9(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x742b58f723233ed9"
	},
	"N_0x74a0fd0688f1ee45": {
		"body": [
			"N_0x74a0fd0688f1ee45(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x74a0fd0688f1ee45"
	},
	"N_0x74fb3e29e6d10fa9": {
		"body": [
			"N_0x74fb3e29e6d10fa9()"
		],
		"scope": "lua",
		"prefix": "N_0x74fb3e29e6d10fa9"
	},
	"N_0x754615490a029508": {
		"body": [
			"N_0x754615490a029508()"
		],
		"scope": "lua",
		"prefix": "N_0x754615490a029508"
	},
	"N_0x759650634f07b6b4": {
		"body": [
			"N_0x759650634f07b6b4(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x759650634f07b6b4"
	},
	"N_0x75ba1cb3b7d40caf": {
		"body": [
			"N_0x75ba1cb3b7d40caf(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x75ba1cb3b7d40caf"
	},
	"N_0x760910b49d2b98ea": {
		"body": [
			"N_0x760910b49d2b98ea()"
		],
		"scope": "lua",
		"prefix": "N_0x760910b49d2b98ea"
	},
	"N_0x762db2d380b48d04": {
		"body": [
			"N_0x762db2d380b48d04(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x762db2d380b48d04"
	},
	"N_0x76b3f29d3f967692": {
		"body": [
			"N_0x76b3f29d3f967692(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x76b3f29d3f967692"
	},
	"N_0x76d26a22750e849e": {
		"body": [
			"N_0x76d26a22750e849e(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "N_0x76d26a22750e849e"
	},
	"N_0x77f16b447824da6c": {
		"body": [
			"N_0x77f16b447824da6c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x77f16b447824da6c"
	},
	"N_0x77faddcbe3499df7": {
		"body": [
			"N_0x77faddcbe3499df7(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x77faddcbe3499df7"
	},
	"N_0x7808619f31ff22db": {
		"body": [
			"N_0x7808619f31ff22db()"
		],
		"scope": "lua",
		"prefix": "N_0x7808619f31ff22db"
	},
	"N_0x7813e8b8c4ae4799": {
		"body": [
			"N_0x7813e8b8c4ae4799(${1:pickup})"
		],
		"scope": "lua",
		"prefix": "N_0x7813e8b8c4ae4799"
	},
	"N_0x78321bea235fd8cd": {
		"body": [
			"N_0x78321bea235fd8cd(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x78321bea235fd8cd"
	},
	"N_0x78ceee41f49f421f": {
		"body": [
			"N_0x78ceee41f49f421f(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x78ceee41f49f421f"
	},
	"N_0x78e8e3a640178255": {
		"body": [
			"N_0x78e8e3a640178255(${1:entity})"
		],
		"scope": "lua",
		"prefix": "N_0x78e8e3a640178255"
	},
	"N_0x793ff272d5b365f4": {
		"body": [
			"N_0x793ff272d5b365f4()"
		],
		"scope": "lua",
		"prefix": "N_0x793ff272d5b365f4"
	},
	"N_0x796a877e459b99ea": {
		"body": [
			"N_0x796a877e459b99ea(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x796a877e459b99ea"
	},
	"N_0x79c0e43eb9b944e2": {
		"body": [
			"N_0x79c0e43eb9b944e2(${1:hash})"
		],
		"scope": "lua",
		"prefix": "N_0x79c0e43eb9b944e2"
	},
	"N_0x79edac677ca62f81": {
		"body": [
			"N_0x79edac677ca62f81(${1:transactionId})"
		],
		"scope": "lua",
		"prefix": "N_0x79edac677ca62f81"
	},
	"N_0x7a42b2e236e71415": {
		"body": [
			"N_0x7a42b2e236e71415()"
		],
		"scope": "lua",
		"prefix": "N_0x7a42b2e236e71415"
	},
	"N_0x7ac24eab6d74118d": {
		"body": [
			"N_0x7ac24eab6d74118d(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7ac24eab6d74118d"
	},
	"N_0x7b18da61f6bae9d5": {
		"body": [
			"N_0x7b18da61f6bae9d5(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7b18da61f6bae9d5"
	},
	"N_0x7b21e0bb01e8224a": {
		"body": [
			"N_0x7b21e0bb01e8224a(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7b21e0bb01e8224a"
	},
	"N_0x7b8a361c1813fbef": {
		"body": [
			"N_0x7b8a361c1813fbef()"
		],
		"scope": "lua",
		"prefix": "N_0x7b8a361c1813fbef"
	},
	"N_0x7bae68775557ae0b": {
		"body": [
			"N_0x7bae68775557ae0b(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "N_0x7bae68775557ae0b"
	},
	"N_0x7bbe7ff626a591fe": {
		"body": [
			"N_0x7bbe7ff626a591fe(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7bbe7ff626a591fe"
	},
	"N_0x7c226d5346d4d10a": {
		"body": [
			"N_0x7c226d5346d4d10a(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7c226d5346d4d10a"
	},
	"N_0x7c4fccd2e4deb394": {
		"body": [
			"N_0x7c4fccd2e4deb394()"
		],
		"scope": "lua",
		"prefix": "N_0x7c4fccd2e4deb394"
	},
	"N_0x7d36291161859389": {
		"body": [
			"N_0x7d36291161859389(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7d36291161859389"
	},
	"N_0x7d395ea61622e116": {
		"body": [
			"N_0x7d395ea61622e116(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7d395ea61622e116"
	},
	"N_0x7d41e9d2d17c5b2d": {
		"body": [
			"N_0x7d41e9d2d17c5b2d(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7d41e9d2d17c5b2d"
	},
	"N_0x7d6f9a3ef26136a0": {
		"body": [
			"N_0x7d6f9a3ef26136a0(${1:vehicle}, ${2:toggle}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x7d6f9a3ef26136a0"
	},
	"N_0x7d8ba05688ad64c7": {
		"body": [
			"N_0x7d8ba05688ad64c7(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7d8ba05688ad64c7"
	},
	"N_0x7db18ca8cad5b098": {
		"body": [
			"N_0x7db18ca8cad5b098()"
		],
		"scope": "lua",
		"prefix": "N_0x7db18ca8cad5b098"
	},
	"N_0x7db53b37a2f211a0": {
		"body": [
			"N_0x7db53b37a2f211a0()"
		],
		"scope": "lua",
		"prefix": "N_0x7db53b37a2f211a0"
	},
	"N_0x7e07c78925d5fd96": {
		"body": [
			"N_0x7e07c78925d5fd96(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7e07c78925d5fd96"
	},
	"N_0x7e2bd3ef6c205f09": {
		"body": [
			"N_0x7e2bd3ef6c205f09(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x7e2bd3ef6c205f09"
	},
	"N_0x7e6946f68a38b74f": {
		"body": [
			"N_0x7e6946f68a38b74f(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7e6946f68a38b74f"
	},
	"N_0x7ec3c679d0e7e46b": {
		"body": [
			"N_0x7ec3c679d0e7e46b(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x7ec3c679d0e7e46b"
	},
	"N_0x7ec6f9a478a6a512": {
		"body": [
			"N_0x7ec6f9a478a6a512()"
		],
		"scope": "lua",
		"prefix": "N_0x7ec6f9a478a6a512"
	},
	"N_0x7ecdf98587e92dec": {
		"body": [
			"N_0x7ecdf98587e92dec(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7ecdf98587e92dec"
	},
	"N_0x7eec2a316c250073": {
		"body": [
			"N_0x7eec2a316c250073(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x7eec2a316c250073"
	},
	"N_0x7ef7649b64d7ff10": {
		"body": [
			"N_0x7ef7649b64d7ff10(${1:entity})"
		],
		"scope": "lua",
		"prefix": "N_0x7ef7649b64d7ff10"
	},
	"N_0x7f2c4cdf2e82df4c": {
		"body": [
			"N_0x7f2c4cdf2e82df4c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7f2c4cdf2e82df4c"
	},
	"N_0x7f8f6405f4777af6": {
		"body": [
			"N_0x7f8f6405f4777af6(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "N_0x7f8f6405f4777af6"
	},
	"N_0x7f96f23fa9b73327": {
		"body": [
			"N_0x7f96f23fa9b73327(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "N_0x7f96f23fa9b73327"
	},
	"N_0x7fa5d82b8f58ec06": {
		"body": [
			"N_0x7fa5d82b8f58ec06()"
		],
		"scope": "lua",
		"prefix": "N_0x7fa5d82b8f58ec06"
	},
	"N_0x7fcc39c46c3c03bd": {
		"body": [
			"N_0x7fcc39c46c3c03bd(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x7fcc39c46c3c03bd"
	},
	"N_0x7ffcbfee44ecfabf": {
		"body": [
			"N_0x7ffcbfee44ecfabf()"
		],
		"scope": "lua",
		"prefix": "N_0x7ffcbfee44ecfabf"
	},
	"N_0x80054d7fcc70eec6": {
		"body": [
			"N_0x80054d7fcc70eec6(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0x80054d7fcc70eec6"
	},
	"N_0x801879a9b4f4b2fb": {
		"body": [
			"N_0x801879a9b4f4b2fb()"
		],
		"scope": "lua",
		"prefix": "N_0x801879a9b4f4b2fb"
	},
	"N_0x80e3357fdef45c21": {
		"body": [
			"N_0x80e3357fdef45c21(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x80e3357fdef45c21"
	},
	"N_0x810b5fcc52ec7ff0": {
		"body": [
			"N_0x810b5fcc52ec7ff0(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x810b5fcc52ec7ff0"
	},
	"N_0x8147fff6a718e1ad": {
		"body": [
			"N_0x8147fff6a718e1ad(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x8147fff6a718e1ad"
	},
	"N_0x814af7dcaacc597b": {
		"body": [
			"N_0x814af7dcaacc597b(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x814af7dcaacc597b"
	},
	"N_0x817b86108eb94e51": {
		"body": [
			"N_0x817b86108eb94e51(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x817b86108eb94e51"
	},
	"N_0x81cbae94390f9f89": {
		"body": [
			"N_0x81cbae94390f9f89()"
		],
		"scope": "lua",
		"prefix": "N_0x81cbae94390f9f89"
	},
	"N_0x820e9892a77e97cd": {
		"body": [
			"N_0x820e9892a77e97cd(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x820e9892a77e97cd"
	},
	"N_0x8235f1bead557629": {
		"body": [
			"N_0x8235f1bead557629(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x8235f1bead557629"
	},
	"N_0x823ec8e82ba45986": {
		"body": [
			"N_0x823ec8e82ba45986(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x823ec8e82ba45986"
	},
	"N_0x8269816f6cfd40f8": {
		"body": [
			"N_0x8269816f6cfd40f8(${1:name})"
		],
		"scope": "lua",
		"prefix": "N_0x8269816f6cfd40f8"
	},
	"N_0x826d1ee4d1cafc78": {
		"body": [
			"N_0x826d1ee4d1cafc78(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x826d1ee4d1cafc78"
	},
	"N_0x829cd22e043a2577": {
		"body": [
			"N_0x829cd22e043a2577(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x829cd22e043a2577"
	},
	"N_0x82acc484ffa3b05f": {
		"body": [
			"N_0x82acc484ffa3b05f(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x82acc484ffa3b05f"
	},
	"N_0x82e0ac411e41a5b4": {
		"body": [
			"N_0x82e0ac411e41a5b4(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x82e0ac411e41a5b4"
	},
	"N_0x82ebb79e258fa2b7": {
		"body": [
			"N_0x82ebb79e258fa2b7(${1:entity}, ${2:interiorID})"
		],
		"scope": "lua",
		"prefix": "N_0x82ebb79e258fa2b7"
	},
	"N_0x830c3a44eb3f2cf9": {
		"body": [
			"N_0x830c3a44eb3f2cf9(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x830c3a44eb3f2cf9"
	},
	"N_0x83660b734994124d": {
		"body": [
			"N_0x83660b734994124d(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x83660b734994124d"
	},
	"N_0x836b62713e0534ca": {
		"body": [
			"N_0x836b62713e0534ca()"
		],
		"scope": "lua",
		"prefix": "N_0x836b62713e0534ca"
	},
	"N_0x838da0936a24ed4d": {
		"body": [
			"N_0x838da0936a24ed4d(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x838da0936a24ed4d"
	},
	"N_0x83a169eabcdb10a2": {
		"body": [
			"N_0x83a169eabcdb10a2(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x83a169eabcdb10a2"
	},
	"N_0x83fe8d7229593017": {
		"body": [
			"N_0x83fe8d7229593017()"
		],
		"scope": "lua",
		"prefix": "N_0x83fe8d7229593017"
	},
	"N_0x8410c5e0cd847b9d": {
		"body": [
			"N_0x8410c5e0cd847b9d()"
		],
		"scope": "lua",
		"prefix": "N_0x8410c5e0cd847b9d"
	},
	"N_0x8423541e8b3a1589": {
		"body": [
			"N_0x8423541e8b3a1589(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x8423541e8b3a1589"
	},
	"N_0x84a810b375e69c0e": {
		"body": [
			"N_0x84a810b375e69c0e()"
		],
		"scope": "lua",
		"prefix": "N_0x84a810b375e69c0e"
	},
	"N_0x84de3b5fb3e666f0": {
		"body": [
			"N_0x84de3b5fb3e666f0(${1:ropeId})"
		],
		"scope": "lua",
		"prefix": "N_0x84de3b5fb3e666f0"
	},
	"N_0x84dfc579c2fc214c": {
		"body": [
			"N_0x84dfc579c2fc214c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x84dfc579c2fc214c"
	},
	"N_0x851cd923176eba7c": {
		"body": [
			"N_0x851cd923176eba7c()"
		],
		"scope": "lua",
		"prefix": "N_0x851cd923176eba7c"
	},
	"N_0x8533cafde1f0f336": {
		"body": [
			"N_0x8533cafde1f0f336(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x8533cafde1f0f336"
	},
	"N_0x858ec9fd25de04aa": {
		"body": [
			"N_0x858ec9fd25de04aa(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x858ec9fd25de04aa"
	},
	"N_0x85f6c9aba1de2bcf": {
		"body": [
			"N_0x85f6c9aba1de2bcf()"
		],
		"scope": "lua",
		"prefix": "N_0x85f6c9aba1de2bcf"
	},
	"N_0x86255b1fc929e33e": {
		"body": [
			"N_0x86255b1fc929e33e(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x86255b1fc929e33e"
	},
	"N_0x8634cef2522d987b": {
		"body": [
			"N_0x8634cef2522d987b(${1:ped}, ${2:p1}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "N_0x8634cef2522d987b"
	},
	"N_0x8664170ef165c4a6": {
		"body": [
			"N_0x8664170ef165c4a6(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x8664170ef165c4a6"
	},
	"N_0x870289a558348378": {
		"body": [
			"N_0x870289a558348378(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x870289a558348378"
	},
	"N_0x870b8b7a766615c8": {
		"body": [
			"N_0x870b8b7a766615c8(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x870b8b7a766615c8"
	},
	"N_0x87ddeb611b329a9c": {
		"body": [
			"N_0x87ddeb611b329a9c(${1:multiplier})"
		],
		"scope": "lua",
		"prefix": "N_0x87ddeb611b329a9c"
	},
	"N_0x88087ee1f28024ae": {
		"body": [
			"N_0x88087ee1f28024ae(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x88087ee1f28024ae"
	},
	"N_0x8821196d91fa2de5": {
		"body": [
			"N_0x8821196d91fa2de5(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x8821196d91fa2de5"
	},
	"N_0x88578f6ec36b4a3a": {
		"body": [
			"N_0x88578f6ec36b4a3a(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x88578f6ec36b4a3a"
	},
	"N_0x887fa38787de8c72": {
		"body": [
			"N_0x887fa38787de8c72(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x887fa38787de8c72"
	},
	"N_0x8881c98a31117998": {
		"body": [
			"N_0x8881c98a31117998(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x8881c98a31117998"
	},
	"N_0x88b588b41ff7868e": {
		"body": [
			"N_0x88b588b41ff7868e()"
		],
		"scope": "lua",
		"prefix": "N_0x88b588b41ff7868e"
	},
	"N_0x88bc673ca9e0ae99": {
		"body": [
			"N_0x88bc673ca9e0ae99(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x88bc673ca9e0ae99"
	},
	"N_0x89049a84065ce68e": {
		"body": [
			"N_0x89049a84065ce68e(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x89049a84065ce68e"
	},
	"N_0x892b6ab8f33606f5": {
		"body": [
			"N_0x892b6ab8f33606f5(${1:p0}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "N_0x892b6ab8f33606f5"
	},
	"N_0x8951eb9c6906d3c8": {
		"body": [
			"N_0x8951eb9c6906d3c8()"
		],
		"scope": "lua",
		"prefix": "N_0x8951eb9c6906d3c8"
	},
	"N_0x8989cbd7b4e82534": {
		"body": [
			"N_0x8989cbd7b4e82534(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "N_0x8989cbd7b4e82534"
	},
	"N_0x8a4416c0db05fa66": {
		"body": [
			"N_0x8a4416c0db05fa66(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x8a4416c0db05fa66"
	},
	"N_0x8aa9180de2fedd45": {
		"body": [
			"N_0x8aa9180de2fedd45(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x8aa9180de2fedd45"
	},
	"N_0x8b0c2964ba471961": {
		"body": [
			"N_0x8b0c2964ba471961()"
		],
		"scope": "lua",
		"prefix": "N_0x8b0c2964ba471961"
	},
	"N_0x8b4ffc790ca131ef": {
		"body": [
			"N_0x8b4ffc790ca131ef(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x8b4ffc790ca131ef"
	},
	"N_0x8b9cdbd6c566c38c": {
		"body": [
			"N_0x8b9cdbd6c566c38c()"
		],
		"scope": "lua",
		"prefix": "N_0x8b9cdbd6c566c38c"
	},
	"N_0x8bf907833be275de": {
		"body": [
			"N_0x8bf907833be275de(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x8bf907833be275de"
	},
	"N_0x8c8d2739ba44af0f": {
		"body": [
			"N_0x8c8d2739ba44af0f(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x8c8d2739ba44af0f"
	},
	"N_0x8c9d11605e59d955": {
		"body": [
			"N_0x8c9d11605e59d955(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x8c9d11605e59d955"
	},
	"N_0x8caab2bd3ea58bd4": {
		"body": [
			"N_0x8caab2bd3ea58bd4(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x8caab2bd3ea58bd4"
	},
	"N_0x8cc469ab4d349b7c": {
		"body": [
			"N_0x8cc469ab4d349b7c(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x8cc469ab4d349b7c"
	},
	"N_0x8cde909a0370bb3a": {
		"body": [
			"N_0x8cde909a0370bb3a(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x8cde909a0370bb3a"
	},
	"N_0x8cff648fbd7330f1": {
		"body": [
			"N_0x8cff648fbd7330f1(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x8cff648fbd7330f1"
	},
	"N_0x8d74e26f54b4e5c3": {
		"body": [
			"N_0x8d74e26f54b4e5c3(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x8d74e26f54b4e5c3"
	},
	"N_0x8d768602adef2245": {
		"body": [
			"N_0x8d768602adef2245(${1:player}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x8d768602adef2245"
	},
	"N_0x8d8adb562f09a245": {
		"body": [
			"N_0x8d8adb562f09a245(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x8d8adb562f09a245"
	},
	"N_0x8d9df6eca8768583": {
		"body": [
			"N_0x8d9df6eca8768583(${1:threadId})"
		],
		"scope": "lua",
		"prefix": "N_0x8d9df6eca8768583"
	},
	"N_0x8dca505a5c196f05": {
		"body": [
			"N_0x8dca505a5c196f05(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x8dca505a5c196f05"
	},
	"N_0x8e243837643d9583": {
		"body": [
			"N_0x8e243837643d9583(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x8e243837643d9583"
	},
	"N_0x8ec74ceb042e7cff": {
		"body": [
			"N_0x8ec74ceb042e7cff(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x8ec74ceb042e7cff"
	},
	"N_0x8ef52acaecc51d9c": {
		"body": [
			"N_0x8ef52acaecc51d9c(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x8ef52acaecc51d9c"
	},
	"N_0x8f08017f9d7c47bd": {
		"body": [
			"N_0x8f08017f9d7c47bd(${1:p0}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x8f08017f9d7c47bd"
	},
	"N_0x8f0d5ba1c2cc91d7": {
		"body": [
			"N_0x8f0d5ba1c2cc91d7(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x8f0d5ba1c2cc91d7"
	},
	"N_0x906ca41a4b74eca4": {
		"body": [
			"N_0x906ca41a4b74eca4()"
		],
		"scope": "lua",
		"prefix": "N_0x906ca41a4b74eca4"
	},
	"N_0x908311265d42a820": {
		"body": [
			"N_0x908311265d42a820(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x908311265d42a820"
	},
	"N_0x9097eb6d4bb9a12a": {
		"body": [
			"N_0x9097eb6d4bb9a12a(${1:player}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "N_0x9097eb6d4bb9a12a"
	},
	"N_0x90cd7c6871fbf1b4": {
		"body": [
			"N_0x90cd7c6871fbf1b4(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x90cd7c6871fbf1b4"
	},
	"N_0x916ca67d26fd1e37": {
		"body": [
			"N_0x916ca67d26fd1e37(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x916ca67d26fd1e37"
	},
	"N_0x91ef6ee6419e5b97": {
		"body": [
			"N_0x91ef6ee6419e5b97(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x91ef6ee6419e5b97"
	},
	"N_0x9237e334f6e43156": {
		"body": [
			"N_0x9237e334f6e43156(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x9237e334f6e43156"
	},
	"N_0x9245e81072704b8a": {
		"body": [
			"N_0x9245e81072704b8a(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x9245e81072704b8a"
	},
	"N_0x92da6e70ef249bd1": {
		"body": [
			"N_0x92da6e70ef249bd1(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x92da6e70ef249bd1"
	},
	"N_0x92fc0eedfac04a14": {
		"body": [
			"N_0x92fc0eedfac04a14(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "N_0x92fc0eedfac04a14"
	},
	"N_0x930f504203f561c9": {
		"body": [
			"N_0x930f504203f561c9(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x930f504203f561c9"
	},
	"N_0x933bbeeb8c61b5f4": {
		"body": [
			"N_0x933bbeeb8c61b5f4()"
		],
		"scope": "lua",
		"prefix": "N_0x933bbeeb8c61b5f4"
	},
	"N_0x94538037ee44f5cf": {
		"body": [
			"N_0x94538037ee44f5cf(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x94538037ee44f5cf"
	},
	"N_0x9465e683b12d3f6b": {
		"body": [
			"N_0x9465e683b12d3f6b()"
		],
		"scope": "lua",
		"prefix": "N_0x9465e683b12d3f6b"
	},
	"N_0x9489659372a81585": {
		"body": [
			"N_0x9489659372a81585()"
		],
		"scope": "lua",
		"prefix": "N_0x9489659372a81585"
	},
	"N_0x949f397a288b28b3": {
		"body": [
			"N_0x949f397a288b28b3(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x949f397a288b28b3"
	},
	"N_0x94a8394d150b013a": {
		"body": [
			"N_0x94a8394d150b013a()"
		],
		"scope": "lua",
		"prefix": "N_0x94a8394d150b013a"
	},
	"N_0x95a7dabddbb78ae7": {
		"body": [
			"N_0x95a7dabddbb78ae7(${1:iplName1}, ${2:iplName2})"
		],
		"scope": "lua",
		"prefix": "N_0x95a7dabddbb78ae7"
	},
	"N_0x95baf97c82464629": {
		"body": [
			"N_0x95baf97c82464629(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x95baf97c82464629"
	},
	"N_0x9640e30a7f395e4b": {
		"body": [
			"N_0x9640e30a7f395e4b(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0x9640e30a7f395e4b"
	},
	"N_0x9641588dab93b4b5": {
		"body": [
			"N_0x9641588dab93b4b5(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x9641588dab93b4b5"
	},
	"N_0x96e2929292a4db77": {
		"body": [
			"N_0x96e2929292a4db77(${1:componentHash})"
		],
		"scope": "lua",
		"prefix": "N_0x96e2929292a4db77"
	},
	"N_0x96e6d5150dbf1c09": {
		"body": [
			"N_0x96e6d5150dbf1c09(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x96e6d5150dbf1c09"
	},
	"N_0x971d7b15bcdbef99": {
		"body": [
			"N_0x971d7b15bcdbef99()"
		],
		"scope": "lua",
		"prefix": "N_0x971d7b15bcdbef99"
	},
	"N_0x973d76aa760a6cb6": {
		"body": [
			"N_0x973d76aa760a6cb6(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x973d76aa760a6cb6"
	},
	"N_0x977ca98939e82e4b": {
		"body": [
			"N_0x977ca98939e82e4b(${1:weaponObject}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x977ca98939e82e4b"
	},
	"N_0x97841634ef7df1d6": {
		"body": [
			"N_0x97841634ef7df1d6(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x97841634ef7df1d6"
	},
	"N_0x97e7e2c04245115b": {
		"body": [
			"N_0x97e7e2c04245115b(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x97e7e2c04245115b"
	},
	"N_0x9849de24fcf23ccc": {
		"body": [
			"N_0x9849de24fcf23ccc(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x9849de24fcf23ccc"
	},
	"N_0x98c3cf913d895111": {
		"body": [
			"N_0x98c3cf913d895111(${1:string}, ${2:length})"
		],
		"scope": "lua",
		"prefix": "N_0x98c3cf913d895111"
	},
	"N_0x98d18905bf723b99": {
		"body": [
			"N_0x98d18905bf723b99()"
		],
		"scope": "lua",
		"prefix": "N_0x98d18905bf723b99"
	},
	"N_0x98e2bc1ca26287c3": {
		"body": [
			"N_0x98e2bc1ca26287c3()"
		],
		"scope": "lua",
		"prefix": "N_0x98e2bc1ca26287c3"
	},
	"N_0x98edf76a7271e4f2": {
		"body": [
			"N_0x98edf76a7271e4f2()"
		],
		"scope": "lua",
		"prefix": "N_0x98edf76a7271e4f2"
	},
	"N_0x9911f4a24485f653": {
		"body": [
			"N_0x9911f4a24485f653(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x9911f4a24485f653"
	},
	"N_0x998e18ceb44487fc": {
		"body": [
			"N_0x998e18ceb44487fc(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0x998e18ceb44487fc"
	},
	"N_0x99a05839c46ce316": {
		"body": [
			"N_0x99a05839c46ce316(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x99a05839c46ce316"
	},
	"N_0x99cad8e7afdb60fa": {
		"body": [
			"N_0x99cad8e7afdb60fa(${1:vehicle}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x99cad8e7afdb60fa"
	},
	"N_0x9a62ec95ae10e011": {
		"body": [
			"N_0x9a62ec95ae10e011()"
		],
		"scope": "lua",
		"prefix": "N_0x9a62ec95ae10e011"
	},
	"N_0x9a75585fb2e54fad": {
		"body": [
			"N_0x9a75585fb2e54fad(${1:x}, ${2:y}, ${3:z}, ${4:radius})"
		],
		"scope": "lua",
		"prefix": "N_0x9a75585fb2e54fad"
	},
	"N_0x9a77dfd295e29b09": {
		"body": [
			"N_0x9a77dfd295e29b09(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x9a77dfd295e29b09"
	},
	"N_0x9ac92eed5e4793ab": {
		"body": [
			"N_0x9ac92eed5e4793ab()"
		],
		"scope": "lua",
		"prefix": "N_0x9ac92eed5e4793ab"
	},
	"N_0x9b079e5221d984d3": {
		"body": [
			"N_0x9b079e5221d984d3(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x9b079e5221d984d3"
	},
	"N_0x9b4bd21d69b1e609": {
		"body": [
			"N_0x9b4bd21d69b1e609()"
		],
		"scope": "lua",
		"prefix": "N_0x9b4bd21d69b1e609"
	},
	"N_0x9b5016a6433a68c5": {
		"body": [
			"N_0x9b5016a6433a68c5()"
		],
		"scope": "lua",
		"prefix": "N_0x9b5016a6433a68c5"
	},
	"N_0x9bd7bd55e4533183": {
		"body": [
			"N_0x9bd7bd55e4533183(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x9bd7bd55e4533183"
	},
	"N_0x9bddc73cc6a115d4": {
		"body": [
			"N_0x9bddc73cc6a115d4(${1:vehicle}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0x9bddc73cc6a115d4"
	},
	"N_0x9becd4b9fef3f8a6": {
		"body": [
			"N_0x9becd4b9fef3f8a6(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x9becd4b9fef3f8a6"
	},
	"N_0x9c6a6c19b6c0c496": {
		"body": [
			"N_0x9c6a6c19b6c0c496(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x9c6a6c19b6c0c496"
	},
	"N_0x9d252648778160df": {
		"body": [
			"N_0x9d252648778160df(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x9d252648778160df"
	},
	"N_0x9d30687c57baa0bb": {
		"body": [
			"N_0x9d30687c57baa0bb(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x9d30687c57baa0bb"
	},
	"N_0x9d3af56e94c9ae98": {
		"body": [
			"N_0x9d3af56e94c9ae98(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x9d3af56e94c9ae98"
	},
	"N_0x9d724b400a7e8ffc": {
		"body": [
			"N_0x9d724b400a7e8ffc(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x9d724b400a7e8ffc"
	},
	"N_0x9d7afcbf21c51712": {
		"body": [
			"N_0x9d7afcbf21c51712(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x9d7afcbf21c51712"
	},
	"N_0x9de5d2f723575ed0": {
		"body": [
			"N_0x9de5d2f723575ed0()"
		],
		"scope": "lua",
		"prefix": "N_0x9de5d2f723575ed0"
	},
	"N_0x9dfe13ecdc1ec196": {
		"body": [
			"N_0x9dfe13ecdc1ec196(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x9dfe13ecdc1ec196"
	},
	"N_0x9e30e91fb03a2caf": {
		"body": [
			"N_0x9e30e91fb03a2caf()"
		],
		"scope": "lua",
		"prefix": "N_0x9e30e91fb03a2caf"
	},
	"N_0x9e6542f0ce8e70a3": {
		"body": [
			"N_0x9e6542f0ce8e70a3(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0x9e6542f0ce8e70a3"
	},
	"N_0x9ebd751e5787baf2": {
		"body": [
			"N_0x9ebd751e5787baf2(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0x9ebd751e5787baf2"
	},
	"N_0x9ec8858184cd253a": {
		"body": [
			"N_0x9ec8858184cd253a()"
		],
		"scope": "lua",
		"prefix": "N_0x9ec8858184cd253a"
	},
	"N_0x9edd76e87d5d51ba": {
		"body": [
			"N_0x9edd76e87d5d51ba(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0x9edd76e87d5d51ba"
	},
	"N_0x9f260bfb59adbca3": {
		"body": [
			"N_0x9f260bfb59adbca3(${1:player}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "N_0x9f260bfb59adbca3"
	},
	"N_0x9f3f689b814f2599": {
		"body": [
			"N_0x9f3f689b814f2599(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x9f3f689b814f2599"
	},
	"N_0x9f97da93681f87ea": {
		"body": [
			"N_0x9f97da93681f87ea()"
		],
		"scope": "lua",
		"prefix": "N_0x9f97da93681f87ea"
	},
	"N_0x9fcb3cbfb3ead69a": {
		"body": [
			"N_0x9fcb3cbfb3ead69a(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0x9fcb3cbfb3ead69a"
	},
	"N_0x9fedf86898f100e9": {
		"body": [
			"N_0x9fedf86898f100e9()"
		],
		"scope": "lua",
		"prefix": "N_0x9fedf86898f100e9"
	},
	"N_0xa01bc64dd4bfbbac": {
		"body": [
			"N_0xa01bc64dd4bfbbac(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xa01bc64dd4bfbbac"
	},
	"N_0xa08fe5e49bdc39dd": {
		"body": [
			"N_0xa08fe5e49bdc39dd(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xa08fe5e49bdc39dd"
	},
	"N_0xa0ad167e4b39d9a2": {
		"body": [
			"N_0xa0ad167e4b39d9a2(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11}, ${13:p12}, ${14:p13})"
		],
		"scope": "lua",
		"prefix": "N_0xa0ad167e4b39d9a2"
	},
	"N_0xa0cefcea390aab9b": {
		"body": [
			"N_0xa0cefcea390aab9b(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xa0cefcea390aab9b"
	},
	"N_0xa0f93d5465b3094d": {
		"body": [
			"N_0xa0f93d5465b3094d(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xa0f93d5465b3094d"
	},
	"N_0xa0fa4ec6a05da44e": {
		"body": [
			"N_0xa0fa4ec6a05da44e()"
		],
		"scope": "lua",
		"prefix": "N_0xa0fa4ec6a05da44e"
	},
	"N_0xa0fe76168a189ddb": {
		"body": [
			"N_0xa0fe76168a189ddb()"
		],
		"scope": "lua",
		"prefix": "N_0xa0fe76168a189ddb"
	},
	"N_0xa12d3a5a3753cc23": {
		"body": [
			"N_0xa12d3a5a3753cc23()"
		],
		"scope": "lua",
		"prefix": "N_0xa12d3a5a3753cc23"
	},
	"N_0xa17784fca9548d15": {
		"body": [
			"N_0xa17784fca9548d15(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xa17784fca9548d15"
	},
	"N_0xa1ae736541b0fca3": {
		"body": [
			"N_0xa1ae736541b0fca3(${1:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xa1ae736541b0fca3"
	},
	"N_0xa213b11dff526300": {
		"body": [
			"N_0xa213b11dff526300()"
		],
		"scope": "lua",
		"prefix": "N_0xa213b11dff526300"
	},
	"N_0xa238192f33110615": {
		"body": [
			"N_0xa238192f33110615()"
		],
		"scope": "lua",
		"prefix": "N_0xa238192f33110615"
	},
	"N_0xa247f9ef01d8082e": {
		"body": [
			"N_0xa247f9ef01d8082e(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xa247f9ef01d8082e"
	},
	"N_0xa2767257a320fc82": {
		"body": [
			"N_0xa2767257a320fc82(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xa2767257a320fc82"
	},
	"N_0xa2a707979fe754dc": {
		"body": [
			"N_0xa2a707979fe754dc(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xa2a707979fe754dc"
	},
	"N_0xa2c1f5e92afe49ed": {
		"body": [
			"N_0xa2c1f5e92afe49ed()"
		],
		"scope": "lua",
		"prefix": "N_0xa2c1f5e92afe49ed"
	},
	"N_0xa2c9ac24b4061285": {
		"body": [
			"N_0xa2c9ac24b4061285(${1:ped}, ${2:weaponHash})"
		],
		"scope": "lua",
		"prefix": "N_0xa2c9ac24b4061285"
	},
	"N_0xa2ccbe62cd4c91a4": {
		"body": [
			"N_0xa2ccbe62cd4c91a4(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xa2ccbe62cd4c91a4"
	},
	"N_0xa2e9c1ab8a92e8cd": {
		"body": [
			"N_0xa2e9c1ab8a92e8cd(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xa2e9c1ab8a92e8cd"
	},
	"N_0xa306f470d1660581": {
		"body": [
			"N_0xa306f470d1660581()"
		],
		"scope": "lua",
		"prefix": "N_0xa306f470d1660581"
	},
	"N_0xa3c53804bdb68ed2": {
		"body": [
			"N_0xa3c53804bdb68ed2(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xa3c53804bdb68ed2"
	},
	"N_0xa3f3564a5b3646c0": {
		"body": [
			"N_0xa3f3564a5b3646c0(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0xa3f3564a5b3646c0"
	},
	"N_0xa468e0be12b12c70": {
		"body": [
			"N_0xa468e0be12b12c70()"
		],
		"scope": "lua",
		"prefix": "N_0xa468e0be12b12c70"
	},
	"N_0xa46b73faa3460ae1": {
		"body": [
			"N_0xa46b73faa3460ae1(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xa46b73faa3460ae1"
	},
	"N_0xa4822f1cf23f4810": {
		"body": [
			"N_0xa4822f1cf23f4810(${1:p1}, ${2:p3}, ${3:p4}, ${4:p5}, ${5:p6}, ${6:p7}, ${7:p8})"
		],
		"scope": "lua",
		"prefix": "N_0xa4822f1cf23f4810"
	},
	"N_0xa4a0065e39c9f25c": {
		"body": [
			"N_0xa4a0065e39c9f25c()"
		],
		"scope": "lua",
		"prefix": "N_0xa4a0065e39c9f25c"
	},
	"N_0xa4a9a4c40e615885": {
		"body": [
			"N_0xa4a9a4c40e615885(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xa4a9a4c40e615885"
	},
	"N_0xa51338e0dccd4065": {
		"body": [
			"N_0xa51338e0dccd4065(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xa51338e0dccd4065"
	},
	"N_0xa51b086b0b2c0f7a": {
		"body": [
			"N_0xa51b086b0b2c0f7a(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xa51b086b0b2c0f7a"
	},
	"N_0xa52d5247a4227e14": {
		"body": [
			"N_0xa52d5247a4227e14(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xa52d5247a4227e14"
	},
	"N_0xa5eafe473e45c442": {
		"body": [
			"N_0xa5eafe473e45c442(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "N_0xa5eafe473e45c442"
	},
	"N_0xa5f377b175a699c5": {
		"body": [
			"N_0xa5f377b175a699c5(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xa5f377b175a699c5"
	},
	"N_0xa660faf550eb37e5": {
		"body": [
			"N_0xa660faf550eb37e5(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xa660faf550eb37e5"
	},
	"N_0xa6eef01087181edd": {
		"body": [
			"N_0xa6eef01087181edd(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xa6eef01087181edd"
	},
	"N_0xa6f54bb2ffca35ea": {
		"body": [
			"N_0xa6f54bb2ffca35ea(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xa6f54bb2ffca35ea"
	},
	"N_0xa6fceccf4721d679": {
		"body": [
			"N_0xa6fceccf4721d679(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xa6fceccf4721d679"
	},
	"N_0xa7092afe81944852": {
		"body": [
			"N_0xa7092afe81944852()"
		],
		"scope": "lua",
		"prefix": "N_0xa7092afe81944852"
	},
	"N_0xa736cf7fb7c5bff4": {
		"body": [
			"N_0xa736cf7fb7c5bff4()"
		],
		"scope": "lua",
		"prefix": "N_0xa736cf7fb7c5bff4"
	},
	"N_0xa761d4ac6115623d": {
		"body": [
			"N_0xa761d4ac6115623d()"
		],
		"scope": "lua",
		"prefix": "N_0xa761d4ac6115623d"
	},
	"N_0xa770c8eec6fb2ac5": {
		"body": [
			"N_0xa770c8eec6fb2ac5()"
		],
		"scope": "lua",
		"prefix": "N_0xa770c8eec6fb2ac5"
	},
	"N_0xa7862bc5ed1dfd7e": {
		"body": [
			"N_0xa7862bc5ed1dfd7e(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xa7862bc5ed1dfd7e"
	},
	"N_0xa78b8fa58200da56": {
		"body": [
			"N_0xa78b8fa58200da56(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xa78b8fa58200da56"
	},
	"N_0xa7c511fa1c5bda38": {
		"body": [
			"N_0xa7c511fa1c5bda38(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xa7c511fa1c5bda38"
	},
	"N_0xa7dcdf4ded40a8f4": {
		"body": [
			"N_0xa7dcdf4ded40a8f4(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xa7dcdf4ded40a8f4"
	},
	"N_0xa85a21582451e951": {
		"body": [
			"N_0xa85a21582451e951(${1:doorHash}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xa85a21582451e951"
	},
	"N_0xa8733668d1047b51": {
		"body": [
			"N_0xa8733668d1047b51(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xa8733668d1047b51"
	},
	"N_0xa8a7d434afb4b97b": {
		"body": [
			"N_0xa8a7d434afb4b97b(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xa8a7d434afb4b97b"
	},
	"N_0xa8acb6459542a8c8": {
		"body": [
			"N_0xa8acb6459542a8c8()"
		],
		"scope": "lua",
		"prefix": "N_0xa8acb6459542a8c8"
	},
	"N_0xa943fd1722e11efd": {
		"body": [
			"N_0xa943fd1722e11efd()"
		],
		"scope": "lua",
		"prefix": "N_0xa943fd1722e11efd"
	},
	"N_0xa95cfb4e02390842": {
		"body": [
			"N_0xa95cfb4e02390842(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xa95cfb4e02390842"
	},
	"N_0xa95f667a755725da": {
		"body": [
			"N_0xa95f667a755725da(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xa95f667a755725da"
	},
	"N_0xa9b61a329bfdcbea": {
		"body": [
			"N_0xa9b61a329bfdcbea(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xa9b61a329bfdcbea"
	},
	"N_0xaa059c615de9dd03": {
		"body": [
			"N_0xaa059c615de9dd03(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xaa059c615de9dd03"
	},
	"N_0xaa19f5572c38b564": {
		"body": [
			"N_0xaa19f5572c38b564(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xaa19f5572c38b564"
	},
	"N_0xaa525dff66bb82f5": {
		"body": [
			"N_0xaa525dff66bb82f5(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xaa525dff66bb82f5"
	},
	"N_0xaa5fafcd2c5f5e47": {
		"body": [
			"N_0xaa5fafcd2c5f5e47()"
		],
		"scope": "lua",
		"prefix": "N_0xaa5fafcd2c5f5e47"
	},
	"N_0xaa653ae61924b0a0": {
		"body": [
			"N_0xaa653ae61924b0a0(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xaa653ae61924b0a0"
	},
	"N_0xaa76052dda9bfc3e": {
		"body": [
			"N_0xaa76052dda9bfc3e(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "N_0xaa76052dda9bfc3e"
	},
	"N_0xaaa6a3698a69e048": {
		"body": [
			"N_0xaaa6a3698a69e048(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xaaa6a3698a69e048"
	},
	"N_0xaabd62873ffb1a33": {
		"body": [
			"N_0xaabd62873ffb1a33(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xaabd62873ffb1a33"
	},
	"N_0xaae9be70ec7c69ab": {
		"body": [
			"N_0xaae9be70ec7c69ab(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "N_0xaae9be70ec7c69ab"
	},
	"N_0xab04325045427aae": {
		"body": [
			"N_0xab04325045427aae(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xab04325045427aae"
	},
	"N_0xab13a5565480b6d9": {
		"body": [
			"N_0xab13a5565480b6d9(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xab13a5565480b6d9"
	},
	"N_0xab31ef4de6800ce9": {
		"body": [
			"N_0xab31ef4de6800ce9(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xab31ef4de6800ce9"
	},
	"N_0xab6781a5f3101470": {
		"body": [
			"N_0xab6781a5f3101470(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xab6781a5f3101470"
	},
	"N_0xac2890471901861c": {
		"body": [
			"N_0xac2890471901861c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xac2890471901861c"
	},
	"N_0xad27d957598e49e9": {
		"body": [
			"N_0xad27d957598e49e9(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "N_0xad27d957598e49e9"
	},
	"N_0xad73ce5a09e42d12": {
		"body": [
			"N_0xad73ce5a09e42d12(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0xad73ce5a09e42d12"
	},
	"N_0xadb57e5b663cca8b": {
		"body": [
			"N_0xadb57e5b663cca8b(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xadb57e5b663cca8b"
	},
	"N_0xadd6627c4d325458": {
		"body": [
			"N_0xadd6627c4d325458(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xadd6627c4d325458"
	},
	"N_0xadf084fb8f075d06": {
		"body": [
			"N_0xadf084fb8f075d06(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xadf084fb8f075d06"
	},
	"N_0xae3fee8709b39dcb": {
		"body": [
			"N_0xae3fee8709b39dcb(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "N_0xae3fee8709b39dcb"
	},
	"N_0xae51bc858f32ba66": {
		"body": [
			"N_0xae51bc858f32ba66(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0xae51bc858f32ba66"
	},
	"N_0xaeab987727c5a8a4": {
		"body": [
			"N_0xaeab987727c5a8a4(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xaeab987727c5a8a4"
	},
	"N_0xaedf1bc1c133d6e3": {
		"body": [
			"N_0xaedf1bc1c133d6e3()"
		],
		"scope": "lua",
		"prefix": "N_0xaedf1bc1c133d6e3"
	},
	"N_0xaf348afcb575a441": {
		"body": [
			"N_0xaf348afcb575a441(${1:roomName})"
		],
		"scope": "lua",
		"prefix": "N_0xaf348afcb575a441"
	},
	"N_0xaf60e6a2936f982a": {
		"body": [
			"N_0xaf60e6a2936f982a(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xaf60e6a2936f982a"
	},
	"N_0xafc976fd0580c7b3": {
		"body": [
			"N_0xafc976fd0580c7b3(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xafc976fd0580c7b3"
	},
	"N_0xafe24e4d29249e4a": {
		"body": [
			"N_0xafe24e4d29249e4a(${1:object}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xafe24e4d29249e4a"
	},
	"N_0xaff47709f1d5dcce": {
		"body": [
			"N_0xaff47709f1d5dcce()"
		],
		"scope": "lua",
		"prefix": "N_0xaff47709f1d5dcce"
	},
	"N_0xb1381b97f70c7b30": {
		"body": [
			"N_0xb1381b97f70c7b30()"
		],
		"scope": "lua",
		"prefix": "N_0xb1381b97f70c7b30"
	},
	"N_0xb13e88e655e5a3bc": {
		"body": [
			"N_0xb13e88e655e5a3bc()"
		],
		"scope": "lua",
		"prefix": "N_0xb13e88e655e5a3bc"
	},
	"N_0xb1577667c3708f9b": {
		"body": [
			"N_0xb1577667c3708f9b()"
		],
		"scope": "lua",
		"prefix": "N_0xb1577667c3708f9b"
	},
	"N_0xb17bc6453f6cf5ac": {
		"body": [
			"N_0xb17bc6453f6cf5ac(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xb17bc6453f6cf5ac"
	},
	"N_0xb1b6216ca2e7b55e": {
		"body": [
			"N_0xb1b6216ca2e7b55e(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xb1b6216ca2e7b55e"
	},
	"N_0xb1d2bb1e1631f5b1": {
		"body": [
			"N_0xb1d2bb1e1631f5b1()"
		],
		"scope": "lua",
		"prefix": "N_0xb1d2bb1e1631f5b1"
	},
	"N_0xb264c4d2f2b0a78b": {
		"body": [
			"N_0xb264c4d2f2b0a78b(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "N_0xb264c4d2f2b0a78b"
	},
	"N_0xb26f670685631727": {
		"body": [
			"N_0xb26f670685631727(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xb26f670685631727"
	},
	"N_0xb282749d5e028163": {
		"body": [
			"N_0xb282749d5e028163(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xb282749d5e028163"
	},
	"N_0xb2d0bde54f0e8e5a": {
		"body": [
			"N_0xb2d0bde54f0e8e5a(${1:object}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xb2d0bde54f0e8e5a"
	},
	"N_0xb2e0c0d6922d31f2": {
		"body": [
			"N_0xb2e0c0d6922d31f2(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xb2e0c0d6922d31f2"
	},
	"N_0xb2ebe8cbc58b90e9": {
		"body": [
			"N_0xb2ebe8cbc58b90e9()"
		],
		"scope": "lua",
		"prefix": "N_0xb2ebe8cbc58b90e9"
	},
	"N_0xb309ebea797e001f": {
		"body": [
			"N_0xb309ebea797e001f(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xb309ebea797e001f"
	},
	"N_0xb37e4e6a2388ca7b": {
		"body": [
			"N_0xb37e4e6a2388ca7b()"
		],
		"scope": "lua",
		"prefix": "N_0xb37e4e6a2388ca7b"
	},
	"N_0xb3c641f3630bf6da": {
		"body": [
			"N_0xb3c641f3630bf6da(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xb3c641f3630bf6da"
	},
	"N_0xb3da2606774a8e2d": {
		"body": [
			"N_0xb3da2606774a8e2d()"
		],
		"scope": "lua",
		"prefix": "N_0xb3da2606774a8e2d"
	},
	"N_0xb45eff719d8427a6": {
		"body": [
			"N_0xb45eff719d8427a6(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xb45eff719d8427a6"
	},
	"N_0xb4c2ec463672474e": {
		"body": [
			"N_0xb4c2ec463672474e(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xb4c2ec463672474e"
	},
	"N_0xb4deae67f35e2acd": {
		"body": [
			"N_0xb4deae67f35e2acd(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xb4deae67f35e2acd"
	},
	"N_0xb51b9ab9ef81868c": {
		"body": [
			"N_0xb51b9ab9ef81868c(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xb51b9ab9ef81868c"
	},
	"N_0xb542de8c3d1cb210": {
		"body": [
			"N_0xb542de8c3d1cb210(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xb542de8c3d1cb210"
	},
	"N_0xb552929b85fc27ec": {
		"body": [
			"N_0xb552929b85fc27ec(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xb552929b85fc27ec"
	},
	"N_0xb569f41f3e7e83a4": {
		"body": [
			"N_0xb569f41f3e7e83a4(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xb569f41f3e7e83a4"
	},
	"N_0xb5b58e24868cb09e": {
		"body": [
			"N_0xb5b58e24868cb09e(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0xb5b58e24868cb09e"
	},
	"N_0xb5b7742424bd4445": {
		"body": [
			"N_0xb5b7742424bd4445(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xb5b7742424bd4445"
	},
	"N_0xb5d3453c98456528": {
		"body": [
			"N_0xb5d3453c98456528()"
		],
		"scope": "lua",
		"prefix": "N_0xb5d3453c98456528"
	},
	"N_0xb606e6cc59664972": {
		"body": [
			"N_0xb606e6cc59664972(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xb606e6cc59664972"
	},
	"N_0xb68cfaf83a02768d": {
		"body": [
			"N_0xb68cfaf83a02768d(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xb68cfaf83a02768d"
	},
	"N_0xb743f735c03d7810": {
		"body": [
			"N_0xb743f735c03d7810(${1:ropeId}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xb743f735c03d7810"
	},
	"N_0xb746d20b17f2a229": {
		"body": [
			"N_0xb746d20b17f2a229()"
		],
		"scope": "lua",
		"prefix": "N_0xb746d20b17f2a229"
	},
	"N_0xb7b873520c84c118": {
		"body": [
			"N_0xb7b873520c84c118()"
		],
		"scope": "lua",
		"prefix": "N_0xb7b873520c84c118"
	},
	"N_0xb7c6d80fb371659a": {
		"body": [
			"N_0xb7c6d80fb371659a()"
		],
		"scope": "lua",
		"prefix": "N_0xb7c6d80fb371659a"
	},
	"N_0xb81cf134aeb56ffb": {
		"body": [
			"N_0xb81cf134aeb56ffb()"
		],
		"scope": "lua",
		"prefix": "N_0xb81cf134aeb56ffb"
	},
	"N_0xb885852c39cc265d": {
		"body": [
			"N_0xb885852c39cc265d()"
		],
		"scope": "lua",
		"prefix": "N_0xb885852c39cc265d"
	},
	"N_0xb8b52e498014f5b0": {
		"body": [
			"N_0xb8b52e498014f5b0(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0xb8b52e498014f5b0"
	},
	"N_0xb9351a07a0d458b1": {
		"body": [
			"N_0xb9351a07a0d458b1(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xb9351a07a0d458b1"
	},
	"N_0xb9562064627ff9db": {
		"body": [
			"N_0xb9562064627ff9db(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xb9562064627ff9db"
	},
	"N_0xb99c4e4d9499df29": {
		"body": [
			"N_0xb99c4e4d9499df29(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xb99c4e4d9499df29"
	},
	"N_0xb9cf1f793a9f1bf1": {
		"body": [
			"N_0xb9cf1f793a9f1bf1()"
		],
		"scope": "lua",
		"prefix": "N_0xb9cf1f793a9f1bf1"
	},
	"N_0xba0127da25fd54c9": {
		"body": [
			"N_0xba0127da25fd54c9(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xba0127da25fd54c9"
	},
	"N_0xba3d194057c79a7b": {
		"body": [
			"N_0xba3d194057c79a7b(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xba3d194057c79a7b"
	},
	"N_0xba4b8d83bdc75551": {
		"body": [
			"N_0xba4b8d83bdc75551(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xba4b8d83bdc75551"
	},
	"N_0xba7f0b77d80a4eb7": {
		"body": [
			"N_0xba7f0b77d80a4eb7(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xba7f0b77d80a4eb7"
	},
	"N_0xba8d65c1c65702e5": {
		"body": [
			"N_0xba8d65c1c65702e5(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xba8d65c1c65702e5"
	},
	"N_0xba91d045575699ad": {
		"body": [
			"N_0xba91d045575699ad(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "N_0xba91d045575699ad"
	},
	"N_0xba9749cc94c1fd85": {
		"body": [
			"N_0xba9749cc94c1fd85()"
		],
		"scope": "lua",
		"prefix": "N_0xba9749cc94c1fd85"
	},
	"N_0xbaa2f0490e146be8": {
		"body": [
			"N_0xbaa2f0490e146be8(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xbaa2f0490e146be8"
	},
	"N_0xbb2333bb87ddd87f": {
		"body": [
			"N_0xbb2333bb87ddd87f(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xbb2333bb87ddd87f"
	},
	"N_0xbb90e12cac1dab25": {
		"body": [
			"N_0xbb90e12cac1dab25(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xbb90e12cac1dab25"
	},
	"N_0xbc0753c9ca14b506": {
		"body": [
			"N_0xbc0753c9ca14b506(${1:player}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xbc0753c9ca14b506"
	},
	"N_0xbc0ce682d4d05650": {
		"body": [
			"N_0xbc0ce682d4d05650(${1:ropeId}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11}, ${13:p12}, ${14:p13})"
		],
		"scope": "lua",
		"prefix": "N_0xbc0ce682d4d05650"
	},
	"N_0xbc9490ca15aea8fb": {
		"body": [
			"N_0xbc9490ca15aea8fb(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0xbc9490ca15aea8fb"
	},
	"N_0xbc9823ab80a3dcac": {
		"body": [
			"N_0xbc9823ab80a3dcac()"
		],
		"scope": "lua",
		"prefix": "N_0xbc9823ab80a3dcac"
	},
	"N_0xbcedb009461da156": {
		"body": [
			"N_0xbcedb009461da156()"
		],
		"scope": "lua",
		"prefix": "N_0xbcedb009461da156"
	},
	"N_0xbd0efb25cca8f97a": {
		"body": [
			"N_0xbd0efb25cca8f97a(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xbd0efb25cca8f97a"
	},
	"N_0xbd545d44cce70597": {
		"body": [
			"N_0xbd545d44cce70597()"
		],
		"scope": "lua",
		"prefix": "N_0xbd545d44cce70597"
	},
	"N_0xbdb6f89c729cf388": {
		"body": [
			"N_0xbdb6f89c729cf388()"
		],
		"scope": "lua",
		"prefix": "N_0xbdb6f89c729cf388"
	},
	"N_0xbe197eaa669238f4": {
		"body": [
			"N_0xbe197eaa669238f4(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xbe197eaa669238f4"
	},
	"N_0xbe3db208333d9844": {
		"body": [
			"N_0xbe3db208333d9844()"
		],
		"scope": "lua",
		"prefix": "N_0xbe3db208333d9844"
	},
	"N_0xbe5c1255a1830ff5": {
		"body": [
			"N_0xbe5c1255a1830ff5(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xbe5c1255a1830ff5"
	},
	"N_0xbeb2d9a1d9a8f55a": {
		"body": [
			"N_0xbeb2d9a1d9a8f55a(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xbeb2d9a1d9a8f55a"
	},
	"N_0xbed8ca5ff5e04113": {
		"body": [
			"N_0xbed8ca5ff5e04113(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xbed8ca5ff5e04113"
	},
	"N_0xbed9f5693f34ed17": {
		"body": [
			"N_0xbed9f5693f34ed17(${1:statName}, ${2:p1}, ${3:outValue})"
		],
		"scope": "lua",
		"prefix": "N_0xbed9f5693f34ed17"
	},
	"N_0xbef34b1d9624d5dd": {
		"body": [
			"N_0xbef34b1d9624d5dd(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xbef34b1d9624d5dd"
	},
	"N_0xbf22e0f32968e967": {
		"body": [
			"N_0xbf22e0f32968e967(${1:player}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xbf22e0f32968e967"
	},
	"N_0xbf371cd2b64212fd": {
		"body": [
			"N_0xbf371cd2b64212fd(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xbf371cd2b64212fd"
	},
	"N_0xbf4dc1784be94dfa": {
		"body": [
			"N_0xbf4dc1784be94dfa(${1:ped}, ${2:p1}, ${3:hash})"
		],
		"scope": "lua",
		"prefix": "N_0xbf4dc1784be94dfa"
	},
	"N_0xbf4f34a85ca2970c": {
		"body": [
			"N_0xbf4f34a85ca2970c()"
		],
		"scope": "lua",
		"prefix": "N_0xbf4f34a85ca2970c"
	},
	"N_0xbf72910d0f26f025": {
		"body": [
			"N_0xbf72910d0f26f025()"
		],
		"scope": "lua",
		"prefix": "N_0xbf72910d0f26f025"
	},
	"N_0xbfafdb5faaa5c5ab": {
		"body": [
			"N_0xbfafdb5faaa5c5ab(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xbfafdb5faaa5c5ab"
	},
	"N_0xbffe53ae7e67fcdc": {
		"body": [
			"N_0xbffe53ae7e67fcdc(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xbffe53ae7e67fcdc"
	},
	"N_0xc03fab2c2f92289b": {
		"body": [
			"N_0xc03fab2c2f92289b(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xc03fab2c2f92289b"
	},
	"N_0xc0416b061f2b7e5e": {
		"body": [
			"N_0xc0416b061f2b7e5e(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xc0416b061f2b7e5e"
	},
	"N_0xc0e0d686ddfc6eae": {
		"body": [
			"N_0xc0e0d686ddfc6eae()"
		],
		"scope": "lua",
		"prefix": "N_0xc0e0d686ddfc6eae"
	},
	"N_0xc0ed6438e6d39ba8": {
		"body": [
			"N_0xc0ed6438e6d39ba8(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xc0ed6438e6d39ba8"
	},
	"N_0xc13c38e47ea5df31": {
		"body": [
			"N_0xc13c38e47ea5df31(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xc13c38e47ea5df31"
	},
	"N_0xc141b8917e0017ec": {
		"body": [
			"N_0xc141b8917e0017ec()"
		],
		"scope": "lua",
		"prefix": "N_0xc141b8917e0017ec"
	},
	"N_0xc14bd9f5337219b2": {
		"body": [
			"N_0xc14bd9f5337219b2(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xc14bd9f5337219b2"
	},
	"N_0xc1805d05e6d4fe10": {
		"body": [
			"N_0xc1805d05e6d4fe10(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "N_0xc1805d05e6d4fe10"
	},
	"N_0xc1e963c58664b556": {
		"body": [
			"N_0xc1e963c58664b556(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xc1e963c58664b556"
	},
	"N_0xc2c97ea97711d1ae": {
		"body": [
			"N_0xc2c97ea97711d1ae()"
		],
		"scope": "lua",
		"prefix": "N_0xc2c97ea97711d1ae"
	},
	"N_0xc2d2ad9eaae265b8": {
		"body": [
			"N_0xc2d2ad9eaae265b8()"
		],
		"scope": "lua",
		"prefix": "N_0xc2d2ad9eaae265b8"
	},
	"N_0xc2ee020f5fb4db53": {
		"body": [
			"N_0xc2ee020f5fb4db53(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0xc2ee020f5fb4db53"
	},
	"N_0xc30bdaee47256c13": {
		"body": [
			"N_0xc30bdaee47256c13(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xc30bdaee47256c13"
	},
	"N_0xc32ea7a2f6ca7557": {
		"body": [
			"N_0xc32ea7a2f6ca7557()"
		],
		"scope": "lua",
		"prefix": "N_0xc32ea7a2f6ca7557"
	},
	"N_0xc3376f42b1faccc6": {
		"body": [
			"N_0xc3376f42b1faccc6(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0xc3376f42b1faccc6"
	},
	"N_0xc34bc448da29f5e9": {
		"body": [
			"N_0xc34bc448da29f5e9(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xc34bc448da29f5e9"
	},
	"N_0xc35a6d07c93802b2": {
		"body": [
			"N_0xc35a6d07c93802b2()"
		],
		"scope": "lua",
		"prefix": "N_0xc35a6d07c93802b2"
	},
	"N_0xc361aa040d6637a8": {
		"body": [
			"N_0xc361aa040d6637a8(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xc361aa040d6637a8"
	},
	"N_0xc42dd763159f3461": {
		"body": [
			"N_0xc42dd763159f3461()"
		],
		"scope": "lua",
		"prefix": "N_0xc42dd763159f3461"
	},
	"N_0xc434133d9ba52777": {
		"body": [
			"N_0xc434133d9ba52777(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xc434133d9ba52777"
	},
	"N_0xc4637a6d03c24cc3": {
		"body": [
			"N_0xc4637a6d03c24cc3()"
		],
		"scope": "lua",
		"prefix": "N_0xc4637a6d03c24cc3"
	},
	"N_0xc4b3347bd68bd609": {
		"body": [
			"N_0xc4b3347bd68bd609(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xc4b3347bd68bd609"
	},
	"N_0xc50ce861b55eab8b": {
		"body": [
			"N_0xc50ce861b55eab8b(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xc50ce861b55eab8b"
	},
	"N_0xc56fbf2f228e1dac": {
		"body": [
			"N_0xc56fbf2f228e1dac(${1:modelHash}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xc56fbf2f228e1dac"
	},
	"N_0xc571d0e77d8bbc29": {
		"body": [
			"N_0xc571d0e77d8bbc29()"
		],
		"scope": "lua",
		"prefix": "N_0xc571d0e77d8bbc29"
	},
	"N_0xc594b315edf2d4af": {
		"body": [
			"N_0xc594b315edf2d4af(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0xc594b315edf2d4af"
	},
	"N_0xc5a35c73b68f3c49": {
		"body": [
			"N_0xc5a35c73b68f3c49()"
		],
		"scope": "lua",
		"prefix": "N_0xc5a35c73b68f3c49"
	},
	"N_0xc5c8f970d4edff71": {
		"body": [
			"N_0xc5c8f970d4edff71(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xc5c8f970d4edff71"
	},
	"N_0xc6033d32241f6fb5": {
		"body": [
			"N_0xc6033d32241f6fb5(${1:object}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xc6033d32241f6fb5"
	},
	"N_0xc61b86c9f61eb404": {
		"body": [
			"N_0xc61b86c9f61eb404(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xc61b86c9f61eb404"
	},
	"N_0xc64a06d939f826f5": {
		"body": [
			"N_0xc64a06d939f826f5()"
		],
		"scope": "lua",
		"prefix": "N_0xc64a06d939f826f5"
	},
	"N_0xc69bb1d832a710ef": {
		"body": [
			"N_0xc69bb1d832a710ef(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xc69bb1d832a710ef"
	},
	"N_0xc67db108a9ade3be": {
		"body": [
			"N_0xc67db108a9ade3be(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xc67db108a9ade3be"
	},
	"N_0xc67e2da1cbe759e2": {
		"body": [
			"N_0xc67e2da1cbe759e2()"
		],
		"scope": "lua",
		"prefix": "N_0xc67e2da1cbe759e2"
	},
	"N_0xc6e0e2616a7576bb": {
		"body": [
			"N_0xc6e0e2616a7576bb()"
		],
		"scope": "lua",
		"prefix": "N_0xc6e0e2616a7576bb"
	},
	"N_0xc6e74cf8c884c880": {
		"body": [
			"N_0xc6e74cf8c884c880(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "N_0xc6e74cf8c884c880"
	},
	"N_0xc7f29ca00f46350e": {
		"body": [
			"N_0xc7f29ca00f46350e(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xc7f29ca00f46350e"
	},
	"N_0xc830417d630a50f9": {
		"body": [
			"N_0xc830417d630a50f9(${1:transactionId})"
		],
		"scope": "lua",
		"prefix": "N_0xc830417d630a50f9"
	},
	"N_0xc8391c309684595a": {
		"body": [
			"N_0xc8391c309684595a()"
		],
		"scope": "lua",
		"prefix": "N_0xc8391c309684595a"
	},
	"N_0xc847b43f369ac0b5": {
		"body": [
			"N_0xc847b43f369ac0b5()"
		],
		"scope": "lua",
		"prefix": "N_0xc847b43f369ac0b5"
	},
	"N_0xc85a7127e7ad02aa": {
		"body": [
			"N_0xc85a7127e7ad02aa()"
		],
		"scope": "lua",
		"prefix": "N_0xc85a7127e7ad02aa"
	},
	"N_0xc87e740d9f3872cc": {
		"body": [
			"N_0xc87e740d9f3872cc()"
		],
		"scope": "lua",
		"prefix": "N_0xc87e740d9f3872cc"
	},
	"N_0xc8b1b2425604cdd0": {
		"body": [
			"N_0xc8b1b2425604cdd0()"
		],
		"scope": "lua",
		"prefix": "N_0xc8b1b2425604cdd0"
	},
	"N_0xc8b5c4a79cc18b94": {
		"body": [
			"N_0xc8b5c4a79cc18b94(${1:cam})"
		],
		"scope": "lua",
		"prefix": "N_0xc8b5c4a79cc18b94"
	},
	"N_0xc8e1071177a23be5": {
		"body": [
			"N_0xc8e1071177a23be5()"
		],
		"scope": "lua",
		"prefix": "N_0xc8e1071177a23be5"
	},
	"N_0xc8ede9bdbccba6d4": {
		"body": [
			"N_0xc8ede9bdbccba6d4(${1:p1}, ${2:p2}, ${3:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xc8ede9bdbccba6d4"
	},
	"N_0xc970d0e0fc31d768": {
		"body": [
			"N_0xc970d0e0fc31d768(${1:vehicle}, ${2:wheelIndex}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xc970d0e0fc31d768"
	},
	"N_0xc9b43a33d09cada7": {
		"body": [
			"N_0xc9b43a33d09cada7(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xc9b43a33d09cada7"
	},
	"N_0xca465d9cc0d231ba": {
		"body": [
			"N_0xca465d9cc0d231ba(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xca465d9cc0d231ba"
	},
	"N_0xca4ae345a153d573": {
		"body": [
			"N_0xca4ae345a153d573(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xca4ae345a153d573"
	},
	"N_0xca575c391fea25cc": {
		"body": [
			"N_0xca575c391fea25cc(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xca575c391fea25cc"
	},
	"N_0xca59ccae5d01e4ce": {
		"body": [
			"N_0xca59ccae5d01e4ce()"
		],
		"scope": "lua",
		"prefix": "N_0xca59ccae5d01e4ce"
	},
	"N_0xca6b2f7ce32ab653": {
		"body": [
			"N_0xca6b2f7ce32ab653(${1:p0}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xca6b2f7ce32ab653"
	},
	"N_0xcac57395b151135f": {
		"body": [
			"N_0xcac57395b151135f(${1:player}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xcac57395b151135f"
	},
	"N_0xcae55f48d3d7875c": {
		"body": [
			"N_0xcae55f48d3d7875c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xcae55f48d3d7875c"
	},
	"N_0xcb0360efefb2580d": {
		"body": [
			"N_0xcb0360efefb2580d(${1:padIndex})"
		],
		"scope": "lua",
		"prefix": "N_0xcb0360efefb2580d"
	},
	"N_0xcb645e85e97ea48b": {
		"body": [
			"N_0xcb645e85e97ea48b()"
		],
		"scope": "lua",
		"prefix": "N_0xcb645e85e97ea48b"
	},
	"N_0xcb82a0bf0e3e3265": {
		"body": [
			"N_0xcb82a0bf0e3e3265(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xcb82a0bf0e3e3265"
	},
	"N_0xcc25a4553dfbf9ea": {
		"body": [
			"N_0xcc25a4553dfbf9ea(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0xcc25a4553dfbf9ea"
	},
	"N_0xcc6e963682533882": {
		"body": [
			"N_0xcc6e963682533882(${1:object})"
		],
		"scope": "lua",
		"prefix": "N_0xcc6e963682533882"
	},
	"N_0xccd078c2665d2973": {
		"body": [
			"N_0xccd078c2665d2973(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xccd078c2665d2973"
	},
	"N_0xcd018c591f94cb43": {
		"body": [
			"N_0xcd018c591f94cb43(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xcd018c591f94cb43"
	},
	"N_0xcd0f5b5d932ae473": {
		"body": [
			"N_0xcd0f5b5d932ae473()"
		],
		"scope": "lua",
		"prefix": "N_0xcd0f5b5d932ae473"
	},
	"N_0xcd4d66b43b1dd28d": {
		"body": [
			"N_0xcd4d66b43b1dd28d(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xcd4d66b43b1dd28d"
	},
	"N_0xcd71a4ecab22709e": {
		"body": [
			"N_0xcd71a4ecab22709e(${1:entity})"
		],
		"scope": "lua",
		"prefix": "N_0xcd71a4ecab22709e"
	},
	"N_0xcd74233600c4ea6b": {
		"body": [
			"N_0xcd74233600c4ea6b(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xcd74233600c4ea6b"
	},
	"N_0xcdca26e80faecb8f": {
		"body": [
			"N_0xcdca26e80faecb8f()"
		],
		"scope": "lua",
		"prefix": "N_0xcdca26e80faecb8f"
	},
	"N_0xcea7c8e1b48ff68c": {
		"body": [
			"N_0xcea7c8e1b48ff68c(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xcea7c8e1b48ff68c"
	},
	"N_0xced08cbe8ebb97c7": {
		"body": [
			"N_0xced08cbe8ebb97c7(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xced08cbe8ebb97c7"
	},
	"N_0xceda60a74219d064": {
		"body": [
			"N_0xceda60a74219d064(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xceda60a74219d064"
	},
	"N_0xcf9159024555488c": {
		"body": [
			"N_0xcf9159024555488c(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xcf9159024555488c"
	},
	"N_0xcfd16f0db5a3535c": {
		"body": [
			"N_0xcfd16f0db5a3535c(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xcfd16f0db5a3535c"
	},
	"N_0xcfd778e7904c255e": {
		"body": [
			"N_0xcfd778e7904c255e(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "N_0xcfd778e7904c255e"
	},
	"N_0xcfeb46dcd7d8d5eb": {
		"body": [
			"N_0xcfeb46dcd7d8d5eb(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xcfeb46dcd7d8d5eb"
	},
	"N_0xd05a3241b9a86f19": {
		"body": [
			"N_0xd05a3241b9a86f19(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xd05a3241b9a86f19"
	},
	"N_0xd0ee05fe193646ea": {
		"body": [
			"N_0xd0ee05fe193646ea()"
		],
		"scope": "lua",
		"prefix": "N_0xd0ee05fe193646ea"
	},
	"N_0xd10282b6e3751ba0": {
		"body": [
			"N_0xd10282b6e3751ba0()"
		],
		"scope": "lua",
		"prefix": "N_0xd10282b6e3751ba0"
	},
	"N_0xd1032e482629049e": {
		"body": [
			"N_0xd1032e482629049e(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xd1032e482629049e"
	},
	"N_0xd1942374085c8469": {
		"body": [
			"N_0xd1942374085c8469(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xd1942374085c8469"
	},
	"N_0xd1a1ee3b4fa8e760": {
		"body": [
			"N_0xd1a1ee3b4fa8e760(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xd1a1ee3b4fa8e760"
	},
	"N_0xd1c55b110e4df534": {
		"body": [
			"N_0xd1c55b110e4df534(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xd1c55b110e4df534"
	},
	"N_0xd1c7cb175e012964": {
		"body": [
			"N_0xd1c7cb175e012964(${1:scaleformHandle})"
		],
		"scope": "lua",
		"prefix": "N_0xd1c7cb175e012964"
	},
	"N_0xd1c9b92bdd3f151d": {
		"body": [
			"N_0xd1c9b92bdd3f151d(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xd1c9b92bdd3f151d"
	},
	"N_0xd2049635deb9c375": {
		"body": [
			"N_0xd2049635deb9c375()"
		],
		"scope": "lua",
		"prefix": "N_0xd2049635deb9c375"
	},
	"N_0xd29334ed1a256dbf": {
		"body": [
			"N_0xd29334ed1a256dbf(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0xd29334ed1a256dbf"
	},
	"N_0xd2dccd8e16e20997": {
		"body": [
			"N_0xd2dccd8e16e20997(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xd2dccd8e16e20997"
	},
	"N_0xd302e99edf0449cf": {
		"body": [
			"N_0xd302e99edf0449cf(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xd302e99edf0449cf"
	},
	"N_0xd313de83394af134": {
		"body": [
			"N_0xd313de83394af134()"
		],
		"scope": "lua",
		"prefix": "N_0xd313de83394af134"
	},
	"N_0xd3301660a57c9272": {
		"body": [
			"N_0xd3301660a57c9272(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xd3301660a57c9272"
	},
	"N_0xd33daa36272177c4": {
		"body": [
			"N_0xd33daa36272177c4(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0xd33daa36272177c4"
	},
	"N_0xd3e51c0ab8c26eee": {
		"body": [
			"N_0xd3e51c0ab8c26eee(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xd3e51c0ab8c26eee"
	},
	"N_0xd4196117af7bb974": {
		"body": [
			"N_0xd4196117af7bb974(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xd4196117af7bb974"
	},
	"N_0xd4367d310f079db0": {
		"body": [
			"N_0xd4367d310f079db0(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xd4367d310f079db0"
	},
	"N_0xd414be129bb81b32": {
		"body": [
			"N_0xd414be129bb81b32(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0xd414be129bb81b32"
	},
	"N_0xd4a7a435b3710d05": {
		"body": [
			"N_0xd4a7a435b3710d05(${1:x}, ${2:y}, ${3:z}, ${4:radius})"
		],
		"scope": "lua",
		"prefix": "N_0xd4a7a435b3710d05"
	},
	"N_0xd4c4642cb7f50b5d": {
		"body": [
			"N_0xd4c4642cb7f50b5d(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "N_0xd4c4642cb7f50b5d"
	},
	"N_0xd558bec0bba7e8d2": {
		"body": [
			"N_0xd558bec0bba7e8d2(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0xd558bec0bba7e8d2"
	},
	"N_0xd565f438137f0e10": {
		"body": [
			"N_0xd565f438137f0e10(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xd565f438137f0e10"
	},
	"N_0xd642319c54aadeb6": {
		"body": [
			"N_0xd642319c54aadeb6()"
		],
		"scope": "lua",
		"prefix": "N_0xd642319c54aadeb6"
	},
	"N_0xd66c9e72b3cc4982": {
		"body": [
			"N_0xd66c9e72b3cc4982(${1:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xd66c9e72b3cc4982"
	},
	"N_0xd6ade981781fca09": {
		"body": [
			"N_0xd6ade981781fca09(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xd6ade981781fca09"
	},
	"N_0xd6ca58b3b53a0f22": {
		"body": [
			"N_0xd6ca58b3b53a0f22(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xd6ca58b3b53a0f22"
	},
	"N_0xd6d7478ca62b8d41": {
		"body": [
			"N_0xd6d7478ca62b8d41(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xd6d7478ca62b8d41"
	},
	"N_0xd7360051c885628b": {
		"body": [
			"N_0xd7360051c885628b()"
		],
		"scope": "lua",
		"prefix": "N_0xd7360051c885628b"
	},
	"N_0xd7b6c73cad419bcf": {
		"body": [
			"N_0xd7b6c73cad419bcf(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xd7b6c73cad419bcf"
	},
	"N_0xd7b80e7c3befc396": {
		"body": [
			"N_0xd7b80e7c3befc396(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xd7b80e7c3befc396"
	},
	"N_0xd8122c407663b995": {
		"body": [
			"N_0xd8122c407663b995()"
		],
		"scope": "lua",
		"prefix": "N_0xd8122c407663b995"
	},
	"N_0xd821056b9acf8052": {
		"body": [
			"N_0xd821056b9acf8052(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xd821056b9acf8052"
	},
	"N_0xd9454b5752c857dc": {
		"body": [
			"N_0xd9454b5752c857dc()"
		],
		"scope": "lua",
		"prefix": "N_0xd9454b5752c857dc"
	},
	"N_0xd9f692d349249528": {
		"body": [
			"N_0xd9f692d349249528()"
		],
		"scope": "lua",
		"prefix": "N_0xd9f692d349249528"
	},
	"N_0xda07819e452ffe8f": {
		"body": [
			"N_0xda07819e452ffe8f(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xda07819e452ffe8f"
	},
	"N_0xdaf80797fc534bec": {
		"body": [
			"N_0xdaf80797fc534bec(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xdaf80797fc534bec"
	},
	"N_0xdaf87174be7454ff": {
		"body": [
			"N_0xdaf87174be7454ff(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xdaf87174be7454ff"
	},
	"N_0xdb1ea9411c8911ec": {
		"body": [
			"N_0xdb1ea9411c8911ec(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xdb1ea9411c8911ec"
	},
	"N_0xdb41d07a45a6d4b7": {
		"body": [
			"N_0xdb41d07a45a6d4b7(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xdb41d07a45a6d4b7"
	},
	"N_0xdb663cc9ff3407a9": {
		"body": [
			"N_0xdb663cc9ff3407a9(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0xdb663cc9ff3407a9"
	},
	"N_0xdb90c6cca48940f1": {
		"body": [
			"N_0xdb90c6cca48940f1(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xdb90c6cca48940f1"
	},
	"N_0xdbc631f109350b8c": {
		"body": [
			"N_0xdbc631f109350b8c(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xdbc631f109350b8c"
	},
	"N_0xdbf860cf1db8e599": {
		"body": [
			"N_0xdbf860cf1db8e599(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xdbf860cf1db8e599"
	},
	"N_0xdc6f8601faf2e893": {
		"body": [
			"N_0xdc6f8601faf2e893(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xdc6f8601faf2e893"
	},
	"N_0xdc9da9e8789f5246": {
		"body": [
			"N_0xdc9da9e8789f5246()"
		],
		"scope": "lua",
		"prefix": "N_0xdc9da9e8789f5246"
	},
	"N_0xdcc07526b8ec45af": {
		"body": [
			"N_0xdcc07526b8ec45af(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0xdcc07526b8ec45af"
	},
	"N_0xdce97bdf8a0eabc8": {
		"body": [
			"N_0xdce97bdf8a0eabc8()"
		],
		"scope": "lua",
		"prefix": "N_0xdce97bdf8a0eabc8"
	},
	"N_0xdd2620b7b9d16ff1": {
		"body": [
			"N_0xdd2620b7b9d16ff1(${1:player}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xdd2620b7b9d16ff1"
	},
	"N_0xdd6bcf9e94425df9": {
		"body": [
			"N_0xdd6bcf9e94425df9()"
		],
		"scope": "lua",
		"prefix": "N_0xdd6bcf9e94425df9"
	},
	"N_0xdd79df9f4d26e1c9": {
		"body": [
			"N_0xdd79df9f4d26e1c9()"
		],
		"scope": "lua",
		"prefix": "N_0xdd79df9f4d26e1c9"
	},
	"N_0xde03620f8703a9df": {
		"body": [
			"N_0xde03620f8703a9df()"
		],
		"scope": "lua",
		"prefix": "N_0xde03620f8703a9df"
	},
	"N_0xde45d1a1ef45ee61": {
		"body": [
			"N_0xde45d1a1ef45ee61(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xde45d1a1ef45ee61"
	},
	"N_0xde68e30d89f97132": {
		"body": [
			"N_0xde68e30d89f97132(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xde68e30d89f97132"
	},
	"N_0xdeaaf77eb3687e97": {
		"body": [
			"N_0xdeaaf77eb3687e97(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xdeaaf77eb3687e97"
	},
	"N_0xdf4b952f7d381b95": {
		"body": [
			"N_0xdf4b952f7d381b95()"
		],
		"scope": "lua",
		"prefix": "N_0xdf4b952f7d381b95"
	},
	"N_0xdfbd93bf2943e29b": {
		"body": [
			"N_0xdfbd93bf2943e29b(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xdfbd93bf2943e29b"
	},
	"N_0xdfcdb14317a9b361": {
		"body": [
			"N_0xdfcdb14317a9b361(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xdfcdb14317a9b361"
	},
	"N_0xdfe68c4b787e1bfb": {
		"body": [
			"N_0xdfe68c4b787e1bfb(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xdfe68c4b787e1bfb"
	},
	"N_0xe058175f8eafe79a": {
		"body": [
			"N_0xe058175f8eafe79a(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xe058175f8eafe79a"
	},
	"N_0xe05dd0e9707003a3": {
		"body": [
			"N_0xe05dd0e9707003a3(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xe05dd0e9707003a3"
	},
	"N_0xe05f6aeefeb0bb02": {
		"body": [
			"N_0xe05f6aeefeb0bb02(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xe05f6aeefeb0bb02"
	},
	"N_0xe0f82d68c7039158": {
		"body": [
			"N_0xe0f82d68c7039158(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xe0f82d68c7039158"
	},
	"N_0xe111a7c0d200cbc5": {
		"body": [
			"N_0xe111a7c0d200cbc5(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xe111a7c0d200cbc5"
	},
	"N_0xe154b48b68ef72bc": {
		"body": [
			"N_0xe154b48b68ef72bc(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xe154b48b68ef72bc"
	},
	"N_0xe16142b94664defd": {
		"body": [
			"N_0xe16142b94664defd(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xe16142b94664defd"
	},
	"N_0xe1615ec03b3bb4fd": {
		"body": [
			"N_0xe1615ec03b3bb4fd()"
		],
		"scope": "lua",
		"prefix": "N_0xe1615ec03b3bb4fd"
	},
	"N_0xe16aa70ce9beedc3": {
		"body": [
			"N_0xe16aa70ce9beedc3(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xe16aa70ce9beedc3"
	},
	"N_0xe23adc6fcb1f29ae": {
		"body": [
			"N_0xe23adc6fcb1f29ae(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xe23adc6fcb1f29ae"
	},
	"N_0xe2892e7e55d7073a": {
		"body": [
			"N_0xe2892e7e55d7073a(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xe2892e7e55d7073a"
	},
	"N_0xe2bb399d90942091": {
		"body": [
			"N_0xe2bb399d90942091(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xe2bb399d90942091"
	},
	"N_0xe2e244ab823b4483": {
		"body": [
			"N_0xe2e244ab823b4483(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xe2e244ab823b4483"
	},
	"N_0xe2f53f172b45ede1": {
		"body": [
			"N_0xe2f53f172b45ede1()"
		],
		"scope": "lua",
		"prefix": "N_0xe2f53f172b45ede1"
	},
	"N_0xe3261d791eb44acb": {
		"body": [
			"N_0xe3261d791eb44acb(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xe3261d791eb44acb"
	},
	"N_0xe36a98d8ab3d3c66": {
		"body": [
			"N_0xe36a98d8ab3d3c66(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xe36a98d8ab3d3c66"
	},
	"N_0xe3b05614dce1d014": {
		"body": [
			"N_0xe3b05614dce1d014(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xe3b05614dce1d014"
	},
	"N_0xe3d969d2785ffb5e": {
		"body": [
			"N_0xe3d969d2785ffb5e()"
		],
		"scope": "lua",
		"prefix": "N_0xe3d969d2785ffb5e"
	},
	"N_0xe3e2c1b4c59dbc77": {
		"body": [
			"N_0xe3e2c1b4c59dbc77(${1:unk})"
		],
		"scope": "lua",
		"prefix": "N_0xe3e2c1b4c59dbc77"
	},
	"N_0xe3e5a7c64ca2c6ed": {
		"body": [
			"N_0xe3e5a7c64ca2c6ed()"
		],
		"scope": "lua",
		"prefix": "N_0xe3e5a7c64ca2c6ed"
	},
	"N_0xe42d626eec94e5d9": {
		"body": [
			"N_0xe42d626eec94e5d9(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "N_0xe42d626eec94e5d9"
	},
	"N_0xe496a53ba5f50a56": {
		"body": [
			"N_0xe496a53ba5f50a56(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xe496a53ba5f50a56"
	},
	"N_0xe4c3b169876d33d7": {
		"body": [
			"N_0xe4c3b169876d33d7(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xe4c3b169876d33d7"
	},
	"N_0xe4dcec7fd5b739a5": {
		"body": [
			"N_0xe4dcec7fd5b739a5(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0xe4dcec7fd5b739a5"
	},
	"N_0xe4e6dd5566d28c82": {
		"body": [
			"N_0xe4e6dd5566d28c82()"
		],
		"scope": "lua",
		"prefix": "N_0xe4e6dd5566d28c82"
	},
	"N_0xe4f6e8d07a2f0f51": {
		"body": [
			"N_0xe4f6e8d07a2f0f51(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xe4f6e8d07a2f0f51"
	},
	"N_0xe532ec1a63231b4f": {
		"body": [
			"N_0xe532ec1a63231b4f(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xe532ec1a63231b4f"
	},
	"N_0xe5810ac70602f2f5": {
		"body": [
			"N_0xe5810ac70602f2f5(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xe5810ac70602f2f5"
	},
	"N_0xe59343e9e96529e7": {
		"body": [
			"N_0xe59343e9e96529e7()"
		],
		"scope": "lua",
		"prefix": "N_0xe59343e9e96529e7"
	},
	"N_0xe63d7c6eececb66b": {
		"body": [
			"N_0xe63d7c6eececb66b(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xe63d7c6eececb66b"
	},
	"N_0xe66377cddada4810": {
		"body": [
			"N_0xe66377cddada4810(${1:entity}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xe66377cddada4810"
	},
	"N_0xe6717e652b8c8d8a": {
		"body": [
			"N_0xe6717e652b8c8d8a(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xe6717e652b8c8d8a"
	},
	"N_0xe67c6dfd386ea5e7": {
		"body": [
			"N_0xe67c6dfd386ea5e7(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xe67c6dfd386ea5e7"
	},
	"N_0xe6b0e8cfc3633bf0": {
		"body": [
			"N_0xe6b0e8cfc3633bf0(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "N_0xe6b0e8cfc3633bf0"
	},
	"N_0xe75a4a2e5e316d86": {
		"body": [
			"N_0xe75a4a2e5e316d86()"
		],
		"scope": "lua",
		"prefix": "N_0xe75a4a2e5e316d86"
	},
	"N_0xe791df1f73ed2c8b": {
		"body": [
			"N_0xe791df1f73ed2c8b(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xe791df1f73ed2c8b"
	},
	"N_0xe851471aefc3374f": {
		"body": [
			"N_0xe851471aefc3374f(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xe851471aefc3374f"
	},
	"N_0xe851e480b814d4ba": {
		"body": [
			"N_0xe851e480b814d4ba(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xe851e480b814d4ba"
	},
	"N_0xe861d0b05c7662b8": {
		"body": [
			"N_0xe861d0b05c7662b8(${1:ped}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xe861d0b05c7662b8"
	},
	"N_0xe8718faf591fd224": {
		"body": [
			"N_0xe8718faf591fd224(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "N_0xe8718faf591fd224"
	},
	"N_0xe8853fbce7d8d0d6": {
		"body": [
			"N_0xe8853fbce7d8d0d6()"
		],
		"scope": "lua",
		"prefix": "N_0xe8853fbce7d8d0d6"
	},
	"N_0xe906ec930f5fe7c8": {
		"body": [
			"N_0xe906ec930f5fe7c8(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xe906ec930f5fe7c8"
	},
	"N_0xe95b0c7d5ba3b96b": {
		"body": [
			"N_0xe95b0c7d5ba3b96b(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0xe95b0c7d5ba3b96b"
	},
	"N_0xea8c0ddb10e2822a": {
		"body": [
			"N_0xea8c0ddb10e2822a(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xea8c0ddb10e2822a"
	},
	"N_0xea95c0853a27888e": {
		"body": [
			"N_0xea95c0853a27888e()"
		],
		"scope": "lua",
		"prefix": "N_0xea95c0853a27888e"
	},
	"N_0xea9960d07dadcf10": {
		"body": [
			"N_0xea9960d07dadcf10(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xea9960d07dadcf10"
	},
	"N_0xeaf0fa793d05c592": {
		"body": [
			"N_0xeaf0fa793d05c592()"
		],
		"scope": "lua",
		"prefix": "N_0xeaf0fa793d05c592"
	},
	"N_0xeb078ca2b5e82add": {
		"body": [
			"N_0xeb078ca2b5e82add(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xeb078ca2b5e82add"
	},
	"N_0xeb2104e905c6f2e9": {
		"body": [
			"N_0xeb2104e905c6f2e9()"
		],
		"scope": "lua",
		"prefix": "N_0xeb2104e905c6f2e9"
	},
	"N_0xeb6f1a9b5510a5d2": {
		"body": [
			"N_0xeb6f1a9b5510a5d2(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xeb6f1a9b5510a5d2"
	},
	"N_0xeb81a3dadd503187": {
		"body": [
			"N_0xeb81a3dadd503187()"
		],
		"scope": "lua",
		"prefix": "N_0xeb81a3dadd503187"
	},
	"N_0xebcab9e5048434f4": {
		"body": [
			"N_0xebcab9e5048434f4()"
		],
		"scope": "lua",
		"prefix": "N_0xebcab9e5048434f4"
	},
	"N_0xebd3205a207939ed": {
		"body": [
			"N_0xebd3205a207939ed(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xebd3205a207939ed"
	},
	"N_0xebf8284d8cadeb53": {
		"body": [
			"N_0xebf8284d8cadeb53()"
		],
		"scope": "lua",
		"prefix": "N_0xebf8284d8cadeb53"
	},
	"N_0xebfa8d50addc54c4": {
		"body": [
			"N_0xebfa8d50addc54c4(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xebfa8d50addc54c4"
	},
	"N_0xec4b4b3b9908052a": {
		"body": [
			"N_0xec4b4b3b9908052a(${1:ped}, ${2:unk})"
		],
		"scope": "lua",
		"prefix": "N_0xec4b4b3b9908052a"
	},
	"N_0xec6935ebe0847b90": {
		"body": [
			"N_0xec6935ebe0847b90(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xec6935ebe0847b90"
	},
	"N_0xec72c258667be5ea": {
		"body": [
			"N_0xec72c258667be5ea(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xec72c258667be5ea"
	},
	"N_0xecb41ac6ab754401": {
		"body": [
			"N_0xecb41ac6ab754401()"
		],
		"scope": "lua",
		"prefix": "N_0xecb41ac6ab754401"
	},
	"N_0xed3c76adfa6d07c4": {
		"body": [
			"N_0xed3c76adfa6d07c4(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0xed3c76adfa6d07c4"
	},
	"N_0xed5ede9e676643c9": {
		"body": [
			"N_0xed5ede9e676643c9(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xed5ede9e676643c9"
	},
	"N_0xed5fd7af10f5e262": {
		"body": [
			"N_0xed5fd7af10f5e262(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xed5fd7af10f5e262"
	},
	"N_0xed76d195e6e3bf7f": {
		"body": [
			"N_0xed76d195e6e3bf7f(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xed76d195e6e3bf7f"
	},
	"N_0xedbc8405b3895cc9": {
		"body": [
			"N_0xedbc8405b3895cc9(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xedbc8405b3895cc9"
	},
	"N_0xedbf6c9b0d2c65c8": {
		"body": [
			"N_0xedbf6c9b0d2c65c8(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xedbf6c9b0d2c65c8"
	},
	"N_0xee778f8c7e1142e2": {
		"body": [
			"N_0xee778f8c7e1142e2(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xee778f8c7e1142e2"
	},
	"N_0xeebfc7a7efdc35b4": {
		"body": [
			"N_0xeebfc7a7efdc35b4(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "N_0xeebfc7a7efdc35b4"
	},
	"N_0xef398beee4ef45f9": {
		"body": [
			"N_0xef398beee4ef45f9(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xef398beee4ef45f9"
	},
	"N_0xef39ee20c537e98c": {
		"body": [
			"N_0xef39ee20c537e98c(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "N_0xef39ee20c537e98c"
	},
	"N_0xefabc7722293da7c": {
		"body": [
			"N_0xefabc7722293da7c()"
		],
		"scope": "lua",
		"prefix": "N_0xefabc7722293da7c"
	},
	"N_0xf033419d1b81fae8": {
		"body": [
			"N_0xf033419d1b81fae8(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xf033419d1b81fae8"
	},
	"N_0xf051d9bfb6ba39c0": {
		"body": [
			"N_0xf051d9bfb6ba39c0(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xf051d9bfb6ba39c0"
	},
	"N_0xf06a6f41cb445443": {
		"body": [
			"N_0xf06a6f41cb445443(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xf06a6f41cb445443"
	},
	"N_0xf06ebb91a81e09e3": {
		"body": [
			"N_0xf06ebb91a81e09e3(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xf06ebb91a81e09e3"
	},
	"N_0xf083835b70ba9bfe": {
		"body": [
			"N_0xf083835b70ba9bfe()"
		],
		"scope": "lua",
		"prefix": "N_0xf083835b70ba9bfe"
	},
	"N_0xf10b44fd479d69f3": {
		"body": [
			"N_0xf10b44fd479d69f3(${1:player}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xf10b44fd479d69f3"
	},
	"N_0xf11f01d98113536a": {
		"body": [
			"N_0xf11f01d98113536a(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xf11f01d98113536a"
	},
	"N_0xf13fe2a80c05c561": {
		"body": [
			"N_0xf13fe2a80c05c561()"
		],
		"scope": "lua",
		"prefix": "N_0xf13fe2a80c05c561"
	},
	"N_0xf1a1803d3476f215": {
		"body": [
			"N_0xf1a1803d3476f215(${1:value})"
		],
		"scope": "lua",
		"prefix": "N_0xf1a1803d3476f215"
	},
	"N_0xf1b84178f8674195": {
		"body": [
			"N_0xf1b84178f8674195(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xf1b84178f8674195"
	},
	"N_0xf1e22dc13f5eebad": {
		"body": [
			"N_0xf1e22dc13f5eebad(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xf1e22dc13f5eebad"
	},
	"N_0xf1f8157b8c3f171c": {
		"body": [
			"N_0xf1f8157b8c3f171c(${1:vehicle}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xf1f8157b8c3f171c"
	},
	"N_0xf22ca0fd74b80e7a": {
		"body": [
			"N_0xf22ca0fd74b80e7a(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xf22ca0fd74b80e7a"
	},
	"N_0xf2385935bffd4d92": {
		"body": [
			"N_0xf2385935bffd4d92(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0xf2385935bffd4d92"
	},
	"N_0xf239400e16c23e08": {
		"body": [
			"N_0xf239400e16c23e08(${1:padIndex}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xf239400e16c23e08"
	},
	"N_0xf25e02cb9c5818f8": {
		"body": [
			"N_0xf25e02cb9c5818f8()"
		],
		"scope": "lua",
		"prefix": "N_0xf25e02cb9c5818f8"
	},
	"N_0xf284ac67940c6812": {
		"body": [
			"N_0xf284ac67940c6812()"
		],
		"scope": "lua",
		"prefix": "N_0xf284ac67940c6812"
	},
	"N_0xf287f506767cc8a9": {
		"body": [
			"N_0xf287f506767cc8a9()"
		],
		"scope": "lua",
		"prefix": "N_0xf287f506767cc8a9"
	},
	"N_0xf2bebcdfafdaa19e": {
		"body": [
			"N_0xf2bebcdfafdaa19e(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xf2bebcdfafdaa19e"
	},
	"N_0xf2ca003f167e21d2": {
		"body": [
			"N_0xf2ca003f167e21d2()"
		],
		"scope": "lua",
		"prefix": "N_0xf2ca003f167e21d2"
	},
	"N_0xf2e07819ef1a5289": {
		"body": [
			"N_0xf2e07819ef1a5289()"
		],
		"scope": "lua",
		"prefix": "N_0xf2e07819ef1a5289"
	},
	"N_0xf3162836c28f9da5": {
		"body": [
			"N_0xf3162836c28f9da5(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xf3162836c28f9da5"
	},
	"N_0xf3365489e0dd50f9": {
		"body": [
			"N_0xf3365489e0dd50f9(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xf3365489e0dd50f9"
	},
	"N_0xf3b0e0aed097a3f5": {
		"body": [
			"N_0xf3b0e0aed097a3f5(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xf3b0e0aed097a3f5"
	},
	"N_0xf3f776ada161e47d": {
		"body": [
			"N_0xf3f776ada161e47d(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xf3f776ada161e47d"
	},
	"N_0xf49abc20d8552257": {
		"body": [
			"N_0xf49abc20d8552257(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xf49abc20d8552257"
	},
	"N_0xf4a0dadb70f57fa6": {
		"body": [
			"N_0xf4a0dadb70f57fa6()"
		],
		"scope": "lua",
		"prefix": "N_0xf4a0dadb70f57fa6"
	},
	"N_0xf51d36185993515d": {
		"body": [
			"N_0xf51d36185993515d(${1:checkpoint}, ${2:posX}, ${3:posY}, ${4:posZ}, ${5:unkX}, ${6:unkY}, ${7:unkZ})"
		],
		"scope": "lua",
		"prefix": "N_0xf51d36185993515d"
	},
	"N_0xf534d94dfa2ead26": {
		"body": [
			"N_0xf534d94dfa2ead26(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "N_0xf534d94dfa2ead26"
	},
	"N_0xf55e4046f6f831dc": {
		"body": [
			"N_0xf55e4046f6f831dc(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xf55e4046f6f831dc"
	},
	"N_0xf56dfb7b61be7276": {
		"body": [
			"N_0xf56dfb7b61be7276(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11}, ${13:p12})"
		],
		"scope": "lua",
		"prefix": "N_0xf56dfb7b61be7276"
	},
	"N_0xf5bb8dac426a52c0": {
		"body": [
			"N_0xf5bb8dac426a52c0()"
		],
		"scope": "lua",
		"prefix": "N_0xf5bb8dac426a52c0"
	},
	"N_0xf60165e1d2c5370b": {
		"body": [
			"N_0xf60165e1d2c5370b(${1:ped}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xf60165e1d2c5370b"
	},
	"N_0xf6baaaf762e1bf40": {
		"body": [
			"N_0xf6baaaf762e1bf40(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xf6baaaf762e1bf40"
	},
	"N_0xf6f4383b7c92f11a": {
		"body": [
			"N_0xf6f4383b7c92f11a(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xf6f4383b7c92f11a"
	},
	"N_0xf78b803082d4386f": {
		"body": [
			"N_0xf78b803082d4386f(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xf78b803082d4386f"
	},
	"N_0xf78f94d60248c737": {
		"body": [
			"N_0xf78f94d60248c737(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xf78f94d60248c737"
	},
	"N_0xf814fec6a19fd6e0": {
		"body": [
			"N_0xf814fec6a19fd6e0()"
		],
		"scope": "lua",
		"prefix": "N_0xf814fec6a19fd6e0"
	},
	"N_0xf8155a7f03ddfc8e": {
		"body": [
			"N_0xf8155a7f03ddfc8e(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xf8155a7f03ddfc8e"
	},
	"N_0xf83d0febe75e62c9": {
		"body": [
			"N_0xf83d0febe75e62c9(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "N_0xf83d0febe75e62c9"
	},
	"N_0xf854439efbb3b583": {
		"body": [
			"N_0xf854439efbb3b583()"
		],
		"scope": "lua",
		"prefix": "N_0xf854439efbb3b583"
	},
	"N_0xf8ad2eed7c47e8fe": {
		"body": [
			"N_0xf8ad2eed7c47e8fe(${1:ped}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xf8ad2eed7c47e8fe"
	},
	"N_0xf8b49f5ba7f850e7": {
		"body": [
			"N_0xf8b49f5ba7f850e7(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xf8b49f5ba7f850e7"
	},
	"N_0xf8c54a461c3e11dc": {
		"body": [
			"N_0xf8c54a461c3e11dc()"
		],
		"scope": "lua",
		"prefix": "N_0xf8c54a461c3e11dc"
	},
	"N_0xf9096193df1f99d4": {
		"body": [
			"N_0xf9096193df1f99d4(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xf9096193df1f99d4"
	},
	"N_0xf92099527db8e2a7": {
		"body": [
			"N_0xf92099527db8e2a7(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xf92099527db8e2a7"
	},
	"N_0xf9acf4a08098ea25": {
		"body": [
			"N_0xf9acf4a08098ea25(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xf9acf4a08098ea25"
	},
	"N_0xf9b83b77929d8863": {
		"body": [
			"N_0xf9b83b77929d8863()"
		],
		"scope": "lua",
		"prefix": "N_0xf9b83b77929d8863"
	},
	"N_0xf9c1681347c8bd15": {
		"body": [
			"N_0xf9c1681347c8bd15(${1:object})"
		],
		"scope": "lua",
		"prefix": "N_0xf9c1681347c8bd15"
	},
	"N_0xf9f2922717b819ec": {
		"body": [
			"N_0xf9f2922717b819ec()"
		],
		"scope": "lua",
		"prefix": "N_0xf9f2922717b819ec"
	},
	"N_0xfa07759e6fddd7cf": {
		"body": [
			"N_0xfa07759e6fddd7cf(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xfa07759e6fddd7cf"
	},
	"N_0xfa1e0e893d915215": {
		"body": [
			"N_0xfa1e0e893d915215(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xfa1e0e893d915215"
	},
	"N_0xfa2888e3833c8e96": {
		"body": [
			"N_0xfa2888e3833c8e96()"
		],
		"scope": "lua",
		"prefix": "N_0xfa2888e3833c8e96"
	},
	"N_0xfa3ffb0eebc288a3": {
		"body": [
			"N_0xfa3ffb0eebc288a3(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xfa3ffb0eebc288a3"
	},
	"N_0xfa83ca6776038f64": {
		"body": [
			"N_0xfa83ca6776038f64(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "N_0xfa83ca6776038f64"
	},
	"N_0xfaa457ef263e8763": {
		"body": [
			"N_0xfaa457ef263e8763(${1:name})"
		],
		"scope": "lua",
		"prefix": "N_0xfaa457ef263e8763"
	},
	"N_0xfab944d4d481accb": {
		"body": [
			"N_0xfab944d4d481accb(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xfab944d4d481accb"
	},
	"N_0xfac18e7356bd3210": {
		"body": [
			"N_0xfac18e7356bd3210()"
		],
		"scope": "lua",
		"prefix": "N_0xfac18e7356bd3210"
	},
	"N_0xfac75988a7d078d3": {
		"body": [
			"N_0xfac75988a7d078d3(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0xfac75988a7d078d3"
	},
	"N_0xfae628f1e9adb239": {
		"body": [
			"N_0xfae628f1e9adb239(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "N_0xfae628f1e9adb239"
	},
	"N_0xfaf2a78061fd9ef4": {
		"body": [
			"N_0xfaf2a78061fd9ef4(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "N_0xfaf2a78061fd9ef4"
	},
	"N_0xfb00ca71da386228": {
		"body": [
			"N_0xfb00ca71da386228()"
		],
		"scope": "lua",
		"prefix": "N_0xfb00ca71da386228"
	},
	"N_0xfb199266061f820a": {
		"body": [
			"N_0xfb199266061f820a()"
		],
		"scope": "lua",
		"prefix": "N_0xfb199266061f820a"
	},
	"N_0xfb1f9381e80fa13f": {
		"body": [
			"N_0xfb1f9381e80fa13f(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xfb1f9381e80fa13f"
	},
	"N_0xfb680d403909dc70": {
		"body": [
			"N_0xfb680d403909dc70(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xfb680d403909dc70"
	},
	"N_0xfb80ab299d2ee1bd": {
		"body": [
			"N_0xfb80ab299d2ee1bd(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xfb80ab299d2ee1bd"
	},
	"N_0xfcc228e07217fcac": {
		"body": [
			"N_0xfcc228e07217fcac(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xfcc228e07217fcac"
	},
	"N_0xfcf6788fc4860cd4": {
		"body": [
			"N_0xfcf6788fc4860cd4(${1:checkpoint})"
		],
		"scope": "lua",
		"prefix": "N_0xfcf6788fc4860cd4"
	},
	"N_0xfd3151cd37ea2245": {
		"body": [
			"N_0xfd3151cd37ea2245(${1:entity})"
		],
		"scope": "lua",
		"prefix": "N_0xfd3151cd37ea2245"
	},
	"N_0xfd325494792302d7": {
		"body": [
			"N_0xfd325494792302d7(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "N_0xfd325494792302d7"
	},
	"N_0xfd75dabc0957bf33": {
		"body": [
			"N_0xfd75dabc0957bf33(${1:p0})"
		],
		"scope": "lua",
		"prefix": "N_0xfd75dabc0957bf33"
	},
	"N_0xfdc07c58e8aab715": {
		"body": [
			"N_0xfdc07c58e8aab715(${1:pickupHash})"
		],
		"scope": "lua",
		"prefix": "N_0xfdc07c58e8aab715"
	},
	"N_0xfe4c1d0d3b9cc17e": {
		"body": [
			"N_0xfe4c1d0d3b9cc17e(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xfe4c1d0d3b9cc17e"
	},
	"N_0xfec9a3b1820f3331": {
		"body": [
			"N_0xfec9a3b1820f3331(${1:ped})"
		],
		"scope": "lua",
		"prefix": "N_0xfec9a3b1820f3331"
	},
	"N_0xff266d1d0eb1195d": {
		"body": [
			"N_0xff266d1d0eb1195d()"
		],
		"scope": "lua",
		"prefix": "N_0xff266d1d0eb1195d"
	},
	"N_0xff4803bc019852d9": {
		"body": [
			"N_0xff4803bc019852d9(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "N_0xff4803bc019852d9"
	},
	"N_0xff8f3a92b75ed67a": {
		"body": [
			"N_0xff8f3a92b75ed67a()"
		],
		"scope": "lua",
		"prefix": "N_0xff8f3a92b75ed67a"
	},
	"N_0xffee8fa29ab9a18e": {
		"body": [
			"N_0xffee8fa29ab9a18e(${1:player})"
		],
		"scope": "lua",
		"prefix": "N_0xffee8fa29ab9a18e"
	},
	"NetGameserverBasketAddItem": {
		"body": [
			"NetGameserverBasketAddItem(${1:quantity})"
		],
		"scope": "lua",
		"prefix": "NetGameserverBasketAddItem"
	},
	"NetGameserverBasketApplyServerData": {
		"body": [
			"NetGameserverBasketApplyServerData(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetGameserverBasketApplyServerData"
	},
	"NetGameserverBasketDelete": {
		"body": [
			"NetGameserverBasketDelete()"
		],
		"scope": "lua",
		"prefix": "NetGameserverBasketDelete"
	},
	"NetGameserverBasketEnd": {
		"body": [
			"NetGameserverBasketEnd()"
		],
		"scope": "lua",
		"prefix": "NetGameserverBasketEnd"
	},
	"NetGameserverBasketIsFull": {
		"body": [
			"NetGameserverBasketIsFull()"
		],
		"scope": "lua",
		"prefix": "NetGameserverBasketIsFull"
	},
	"NetGameserverBasketStart": {
		"body": [
			"NetGameserverBasketStart(${1:categoryHash}, ${2:actionHash}, ${3:flags})"
		],
		"scope": "lua",
		"prefix": "NetGameserverBasketStart"
	},
	"NetGameserverBeginService": {
		"body": [
			"NetGameserverBeginService(${1:categoryHash}, ${2:itemHash}, ${3:actionTypeHash}, ${4:value}, ${5:flags})"
		],
		"scope": "lua",
		"prefix": "NetGameserverBeginService"
	},
	"NetGameserverCatalogIsReady": {
		"body": [
			"NetGameserverCatalogIsReady()"
		],
		"scope": "lua",
		"prefix": "NetGameserverCatalogIsReady"
	},
	"NetGameserverCatalogItemExists": {
		"body": [
			"NetGameserverCatalogItemExists(${1:name})"
		],
		"scope": "lua",
		"prefix": "NetGameserverCatalogItemExists"
	},
	"NetGameserverCatalogItemExistsHash": {
		"body": [
			"NetGameserverCatalogItemExistsHash(${1:hash})"
		],
		"scope": "lua",
		"prefix": "NetGameserverCatalogItemExistsHash"
	},
	"NetGameserverCheckoutStart": {
		"body": [
			"NetGameserverCheckoutStart(${1:transactionId})"
		],
		"scope": "lua",
		"prefix": "NetGameserverCheckoutStart"
	},
	"NetGameserverDeleteCharacterSlot": {
		"body": [
			"NetGameserverDeleteCharacterSlot(${1:slot}, ${2:transfer}, ${3:reason})"
		],
		"scope": "lua",
		"prefix": "NetGameserverDeleteCharacterSlot"
	},
	"NetGameserverDeleteCharacterSlotGetStatus": {
		"body": [
			"NetGameserverDeleteCharacterSlotGetStatus()"
		],
		"scope": "lua",
		"prefix": "NetGameserverDeleteCharacterSlotGetStatus"
	},
	"NetGameserverDeleteSetTelemetryNonceSeed": {
		"body": [
			"NetGameserverDeleteSetTelemetryNonceSeed()"
		],
		"scope": "lua",
		"prefix": "NetGameserverDeleteSetTelemetryNonceSeed"
	},
	"NetGameserverEndService": {
		"body": [
			"NetGameserverEndService(${1:transactionId})"
		],
		"scope": "lua",
		"prefix": "NetGameserverEndService"
	},
	"NetGameserverGetBalance": {
		"body": [
			"NetGameserverGetBalance(${1:inventory}, ${2:playerbalance})"
		],
		"scope": "lua",
		"prefix": "NetGameserverGetBalance"
	},
	"NetGameserverGetCatalogState": {
		"body": [
			"NetGameserverGetCatalogState(${1:state})"
		],
		"scope": "lua",
		"prefix": "NetGameserverGetCatalogState"
	},
	"NetGameserverGetPrice": {
		"body": [
			"NetGameserverGetPrice(${1:itemHash}, ${2:categoryHash}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetGameserverGetPrice"
	},
	"NetGameserverGetTransactionManagerData": {
		"body": [
			"NetGameserverGetTransactionManagerData()"
		],
		"scope": "lua",
		"prefix": "NetGameserverGetTransactionManagerData"
	},
	"NetGameserverIsCatalogValid": {
		"body": [
			"NetGameserverIsCatalogValid()"
		],
		"scope": "lua",
		"prefix": "NetGameserverIsCatalogValid"
	},
	"NetGameserverIsSessionRefreshPending": {
		"body": [
			"NetGameserverIsSessionRefreshPending()"
		],
		"scope": "lua",
		"prefix": "NetGameserverIsSessionRefreshPending"
	},
	"NetGameserverIsSessionValid": {
		"body": [
			"NetGameserverIsSessionValid(${1:charSlot})"
		],
		"scope": "lua",
		"prefix": "NetGameserverIsSessionValid"
	},
	"NetGameserverSessionApplyReceivedData": {
		"body": [
			"NetGameserverSessionApplyReceivedData(${1:charSlot})"
		],
		"scope": "lua",
		"prefix": "NetGameserverSessionApplyReceivedData"
	},
	"NetGameserverSetTelemetryNonceSeed": {
		"body": [
			"NetGameserverSetTelemetryNonceSeed(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetGameserverSetTelemetryNonceSeed"
	},
	"NetGameserverStartSession": {
		"body": [
			"NetGameserverStartSession(${1:charSlot})"
		],
		"scope": "lua",
		"prefix": "NetGameserverStartSession"
	},
	"NetGameserverTransferBankToWallet": {
		"body": [
			"NetGameserverTransferBankToWallet(${1:charSlot}, ${2:amount})"
		],
		"scope": "lua",
		"prefix": "NetGameserverTransferBankToWallet"
	},
	"NetGameserverTransferCashGetStatus": {
		"body": [
			"NetGameserverTransferCashGetStatus()"
		],
		"scope": "lua",
		"prefix": "NetGameserverTransferCashGetStatus"
	},
	"NetGameserverTransferCashGetStatus_2": {
		"body": [
			"NetGameserverTransferCashGetStatus_2()"
		],
		"scope": "lua",
		"prefix": "NetGameserverTransferCashGetStatus_2"
	},
	"NetGameserverTransferCashSetTelemetryNonceSeed": {
		"body": [
			"NetGameserverTransferCashSetTelemetryNonceSeed()"
		],
		"scope": "lua",
		"prefix": "NetGameserverTransferCashSetTelemetryNonceSeed"
	},
	"NetGameserverTransferWalletToBank": {
		"body": [
			"NetGameserverTransferWalletToBank(${1:charSlot}, ${2:amount})"
		],
		"scope": "lua",
		"prefix": "NetGameserverTransferWalletToBank"
	},
	"NetGameserverUseServerTransactions": {
		"body": [
			"NetGameserverUseServerTransactions()"
		],
		"scope": "lua",
		"prefix": "NetGameserverUseServerTransactions"
	},
	"NetToEnt": {
		"body": [
			"NetToEnt(${1:netHandle})"
		],
		"scope": "lua",
		"prefix": "NetToEnt"
	},
	"NetToObj": {
		"body": [
			"NetToObj(${1:netHandle})"
		],
		"scope": "lua",
		"prefix": "NetToObj"
	},
	"NetToPed": {
		"body": [
			"NetToPed(${1:netHandle})"
		],
		"scope": "lua",
		"prefix": "NetToPed"
	},
	"NetToVeh": {
		"body": [
			"NetToVeh(${1:netHandle})"
		],
		"scope": "lua",
		"prefix": "NetToVeh"
	},
	"NetworkAcceptInvite": {
		"body": [
			"NetworkAcceptInvite()"
		],
		"scope": "lua",
		"prefix": "NetworkAcceptInvite"
	},
	"NetworkAcceptPresenceInvite": {
		"body": [
			"NetworkAcceptPresenceInvite(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkAcceptPresenceInvite"
	},
	"NetworkAccessTunableBool": {
		"body": [
			"NetworkAccessTunableBool(${1:tunableContext}, ${2:tunableName})"
		],
		"scope": "lua",
		"prefix": "NetworkAccessTunableBool"
	},
	"NetworkAccessTunableBoolHash": {
		"body": [
			"NetworkAccessTunableBoolHash(${1:tunableContext}, ${2:tunableName})"
		],
		"scope": "lua",
		"prefix": "NetworkAccessTunableBoolHash"
	},
	"NetworkAccessTunableFloat": {
		"body": [
			"NetworkAccessTunableFloat(${1:tunableContext}, ${2:tunableName}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "NetworkAccessTunableFloat"
	},
	"NetworkAccessTunableFloatHash": {
		"body": [
			"NetworkAccessTunableFloatHash(${1:tunableContext}, ${2:tunableName}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "NetworkAccessTunableFloatHash"
	},
	"NetworkAccessTunableInt": {
		"body": [
			"NetworkAccessTunableInt(${1:tunableContext}, ${2:tunableName}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "NetworkAccessTunableInt"
	},
	"NetworkAccessTunableIntHash": {
		"body": [
			"NetworkAccessTunableIntHash(${1:tunableContext}, ${2:tunableName}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "NetworkAccessTunableIntHash"
	},
	"NetworkActionFollowInvite": {
		"body": [
			"NetworkActionFollowInvite()"
		],
		"scope": "lua",
		"prefix": "NetworkActionFollowInvite"
	},
	"NetworkAddEntityAngledArea": {
		"body": [
			"NetworkAddEntityAngledArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:width})"
		],
		"scope": "lua",
		"prefix": "NetworkAddEntityAngledArea"
	},
	"NetworkAddEntityArea": {
		"body": [
			"NetworkAddEntityArea(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "NetworkAddEntityArea"
	},
	"NetworkAddEntityDisplayedBoundaries": {
		"body": [
			"NetworkAddEntityDisplayedBoundaries(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "NetworkAddEntityDisplayedBoundaries"
	},
	"NetworkAddEntityToSynchronisedScene": {
		"body": [
			"NetworkAddEntityToSynchronisedScene(${1:entity}, ${2:netScene}, ${3:animDict}, ${4:animName}, ${5:speed}, ${6:speedMulitiplier}, ${7:flag})"
		],
		"scope": "lua",
		"prefix": "NetworkAddEntityToSynchronisedScene"
	},
	"NetworkAddFollowers": {
		"body": [
			"NetworkAddFollowers(${1:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkAddFollowers"
	},
	"NetworkAddFriend": {
		"body": [
			"NetworkAddFriend(${1:message})"
		],
		"scope": "lua",
		"prefix": "NetworkAddFriend"
	},
	"NetworkAddPedToSynchronisedScene": {
		"body": [
			"NetworkAddPedToSynchronisedScene(${1:ped}, ${2:netScene}, ${3:animDict}, ${4:animnName}, ${5:blendInSpeed}, ${6:blendOutSpeed}, ${7:duration}, ${8:flag}, ${9:playbackRate}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "NetworkAddPedToSynchronisedScene"
	},
	"NetworkAllocateTunablesRegistrationDataMap": {
		"body": [
			"NetworkAllocateTunablesRegistrationDataMap()"
		],
		"scope": "lua",
		"prefix": "NetworkAllocateTunablesRegistrationDataMap"
	},
	"NetworkAllowLocalEntityAttachment": {
		"body": [
			"NetworkAllowLocalEntityAttachment(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkAllowLocalEntityAttachment"
	},
	"NetworkAmIBlockedByGamer": {
		"body": [
			"NetworkAmIBlockedByGamer(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkAmIBlockedByGamer"
	},
	"NetworkAmIBlockedByPlayer": {
		"body": [
			"NetworkAmIBlockedByPlayer(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkAmIBlockedByPlayer"
	},
	"NetworkAmIMutedByGamer": {
		"body": [
			"NetworkAmIMutedByGamer(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkAmIMutedByGamer"
	},
	"NetworkAmIMutedByPlayer": {
		"body": [
			"NetworkAmIMutedByPlayer(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkAmIMutedByPlayer"
	},
	"NetworkApplyCachedPlayerHeadBlendData": {
		"body": [
			"NetworkApplyCachedPlayerHeadBlendData(${1:ped}, ${2:player})"
		],
		"scope": "lua",
		"prefix": "NetworkApplyCachedPlayerHeadBlendData"
	},
	"NetworkApplyPedScarData": {
		"body": [
			"NetworkApplyPedScarData(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkApplyPedScarData"
	},
	"NetworkApplyTransitionParameter": {
		"body": [
			"NetworkApplyTransitionParameter(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkApplyTransitionParameter"
	},
	"NetworkApplyTransitionParameterString": {
		"body": [
			"NetworkApplyTransitionParameterString(${1:p0}, ${2:string}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkApplyTransitionParameterString"
	},
	"NetworkApplyVoiceProximityOverride": {
		"body": [
			"NetworkApplyVoiceProximityOverride(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "NetworkApplyVoiceProximityOverride"
	},
	"NetworkAreHandlesTheSame": {
		"body": [
			"NetworkAreHandlesTheSame()"
		],
		"scope": "lua",
		"prefix": "NetworkAreHandlesTheSame"
	},
	"NetworkAreSocialClubPoliciesCurrent": {
		"body": [
			"NetworkAreSocialClubPoliciesCurrent()"
		],
		"scope": "lua",
		"prefix": "NetworkAreSocialClubPoliciesCurrent"
	},
	"NetworkAreTransitionDetailsValid": {
		"body": [
			"NetworkAreTransitionDetailsValid(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkAreTransitionDetailsValid"
	},
	"NetworkAttachSynchronisedSceneToEntity": {
		"body": [
			"NetworkAttachSynchronisedSceneToEntity(${1:netScene}, ${2:entity}, ${3:bone})"
		],
		"scope": "lua",
		"prefix": "NetworkAttachSynchronisedSceneToEntity"
	},
	"NetworkBail": {
		"body": [
			"NetworkBail()"
		],
		"scope": "lua",
		"prefix": "NetworkBail"
	},
	"NetworkBailTransition": {
		"body": [
			"NetworkBailTransition()"
		],
		"scope": "lua",
		"prefix": "NetworkBailTransition"
	},
	"NetworkBlockInvites": {
		"body": [
			"NetworkBlockInvites(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkBlockInvites"
	},
	"NetworkBlockJoinQueueInvites": {
		"body": [
			"NetworkBlockJoinQueueInvites(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkBlockJoinQueueInvites"
	},
	"NetworkBlockKickedPlayers": {
		"body": [
			"NetworkBlockKickedPlayers(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkBlockKickedPlayers"
	},
	"NetworkBuyAirstrike": {
		"body": [
			"NetworkBuyAirstrike(${1:cost}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkBuyAirstrike"
	},
	"NetworkBuyBackupGang": {
		"body": [
			"NetworkBuyBackupGang(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkBuyBackupGang"
	},
	"NetworkBuyBounty": {
		"body": [
			"NetworkBuyBounty(${1:amount}, ${2:victim}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkBuyBounty"
	},
	"NetworkBuyContraband": {
		"body": [
			"NetworkBuyContraband(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "NetworkBuyContraband"
	},
	"NetworkBuyFairgroundRide": {
		"body": [
			"NetworkBuyFairgroundRide(${1:amountSpent}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkBuyFairgroundRide"
	},
	"NetworkBuyHealthcare": {
		"body": [
			"NetworkBuyHealthcare(${1:cost}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkBuyHealthcare"
	},
	"NetworkBuyHeliStrike": {
		"body": [
			"NetworkBuyHeliStrike(${1:cost}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkBuyHeliStrike"
	},
	"NetworkBuyItem": {
		"body": [
			"NetworkBuyItem(${1:amount}, ${2:item}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:item_name}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "NetworkBuyItem"
	},
	"NetworkBuyLotteryTicket": {
		"body": [
			"NetworkBuyLotteryTicket(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkBuyLotteryTicket"
	},
	"NetworkBuyProperty": {
		"body": [
			"NetworkBuyProperty(${1:propertyCost}, ${2:propertyName}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkBuyProperty"
	},
	"NetworkBuySmokes": {
		"body": [
			"NetworkBuySmokes(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkBuySmokes"
	},
	"NetworkCacheLocalPlayerHeadBlendData": {
		"body": [
			"NetworkCacheLocalPlayerHeadBlendData()"
		],
		"scope": "lua",
		"prefix": "NetworkCacheLocalPlayerHeadBlendData"
	},
	"NetworkCanAccessMultiplayer": {
		"body": [
			"NetworkCanAccessMultiplayer(${1:loadingState})"
		],
		"scope": "lua",
		"prefix": "NetworkCanAccessMultiplayer"
	},
	"NetworkCanBail": {
		"body": [
			"NetworkCanBail()"
		],
		"scope": "lua",
		"prefix": "NetworkCanBail"
	},
	"NetworkCanBet": {
		"body": [
			"NetworkCanBet(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkCanBet"
	},
	"NetworkCanBuyLotteryTicket": {
		"body": [
			"NetworkCanBuyLotteryTicket(${1:cost})"
		],
		"scope": "lua",
		"prefix": "NetworkCanBuyLotteryTicket"
	},
	"NetworkCancelRespawnSearch": {
		"body": [
			"NetworkCancelRespawnSearch()"
		],
		"scope": "lua",
		"prefix": "NetworkCancelRespawnSearch"
	},
	"NetworkCanCommunicateWithGamer": {
		"body": [
			"NetworkCanCommunicateWithGamer(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkCanCommunicateWithGamer"
	},
	"NetworkCanCommunicateWithGamer_2": {
		"body": [
			"NetworkCanCommunicateWithGamer_2(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkCanCommunicateWithGamer_2"
	},
	"NetworkCanEnterMultiplayer": {
		"body": [
			"NetworkCanEnterMultiplayer()"
		],
		"scope": "lua",
		"prefix": "NetworkCanEnterMultiplayer"
	},
	"NetworkCanGamerPlayMultiplayerWithMe": {
		"body": [
			"NetworkCanGamerPlayMultiplayerWithMe(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkCanGamerPlayMultiplayerWithMe"
	},
	"NetworkCanPlayMultiplayerWithGamer": {
		"body": [
			"NetworkCanPlayMultiplayerWithGamer(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkCanPlayMultiplayerWithGamer"
	},
	"NetworkCanReceivePlayerCash": {
		"body": [
			"NetworkCanReceivePlayerCash(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkCanReceivePlayerCash"
	},
	"NetworkCanSessionEnd": {
		"body": [
			"NetworkCanSessionEnd()"
		],
		"scope": "lua",
		"prefix": "NetworkCanSessionEnd"
	},
	"NetworkCanSetWaypoint": {
		"body": [
			"NetworkCanSetWaypoint()"
		],
		"scope": "lua",
		"prefix": "NetworkCanSetWaypoint"
	},
	"NetworkCanShareJobCash": {
		"body": [
			"NetworkCanShareJobCash()"
		],
		"scope": "lua",
		"prefix": "NetworkCanShareJobCash"
	},
	"NetworkCanSpendMoney": {
		"body": [
			"NetworkCanSpendMoney(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "NetworkCanSpendMoney"
	},
	"NetworkCanSpendMoney_2": {
		"body": [
			"NetworkCanSpendMoney_2(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p5})"
		],
		"scope": "lua",
		"prefix": "NetworkCanSpendMoney_2"
	},
	"NetworkCanViewGamerUserContent": {
		"body": [
			"NetworkCanViewGamerUserContent(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkCanViewGamerUserContent"
	},
	"NetworkCasinoCanGamble": {
		"body": [
			"NetworkCasinoCanGamble(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkCasinoCanGamble"
	},
	"NetworkCasinoCanPurchaseChipsWithPvc": {
		"body": [
			"NetworkCasinoCanPurchaseChipsWithPvc()"
		],
		"scope": "lua",
		"prefix": "NetworkCasinoCanPurchaseChipsWithPvc"
	},
	"NetworkCasinoCanPurchaseChipsWithPvc_2": {
		"body": [
			"NetworkCasinoCanPurchaseChipsWithPvc_2()"
		],
		"scope": "lua",
		"prefix": "NetworkCasinoCanPurchaseChipsWithPvc_2"
	},
	"NetworkCasinoCanUseGamblingType": {
		"body": [
			"NetworkCasinoCanUseGamblingType(${1:hash})"
		],
		"scope": "lua",
		"prefix": "NetworkCasinoCanUseGamblingType"
	},
	"NetworkCasinoPurchaseChips": {
		"body": [
			"NetworkCasinoPurchaseChips(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkCasinoPurchaseChips"
	},
	"NetworkCasinoSellChips": {
		"body": [
			"NetworkCasinoSellChips(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkCasinoSellChips"
	},
	"NetworkChangeTransitionSlots": {
		"body": [
			"NetworkChangeTransitionSlots(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkChangeTransitionSlots"
	},
	"NetworkCheckCommunicationPrivileges": {
		"body": [
			"NetworkCheckCommunicationPrivileges(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkCheckCommunicationPrivileges"
	},
	"NetworkCheckDataManagerSucceededForHandle": {
		"body": [
			"NetworkCheckDataManagerSucceededForHandle(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkCheckDataManagerSucceededForHandle"
	},
	"NetworkCheckUserContentPrivileges": {
		"body": [
			"NetworkCheckUserContentPrivileges(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkCheckUserContentPrivileges"
	},
	"NetworkClanAnimation": {
		"body": [
			"NetworkClanAnimation(${1:animDict}, ${2:animName})"
		],
		"scope": "lua",
		"prefix": "NetworkClanAnimation"
	},
	"NetworkClanDownloadMembership": {
		"body": [
			"NetworkClanDownloadMembership(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkClanDownloadMembership"
	},
	"NetworkClanDownloadMembershipPending": {
		"body": [
			"NetworkClanDownloadMembershipPending(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkClanDownloadMembershipPending"
	},
	"NetworkClanGetEmblemTxdName": {
		"body": [
			"NetworkClanGetEmblemTxdName()"
		],
		"scope": "lua",
		"prefix": "NetworkClanGetEmblemTxdName"
	},
	"NetworkClanGetLocalMembershipsCount": {
		"body": [
			"NetworkClanGetLocalMembershipsCount()"
		],
		"scope": "lua",
		"prefix": "NetworkClanGetLocalMembershipsCount"
	},
	"NetworkClanGetMembership": {
		"body": [
			"NetworkClanGetMembership(${1:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkClanGetMembership"
	},
	"NetworkClanGetMembershipCount": {
		"body": [
			"NetworkClanGetMembershipCount(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkClanGetMembershipCount"
	},
	"NetworkClanGetMembershipDesc": {
		"body": [
			"NetworkClanGetMembershipDesc(${1:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkClanGetMembershipDesc"
	},
	"NetworkClanGetMembershipValid": {
		"body": [
			"NetworkClanGetMembershipValid(${1:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkClanGetMembershipValid"
	},
	"NetworkClanGetUiFormattedTag": {
		"body": [
			"NetworkClanGetUiFormattedTag(${1:bufferSize})"
		],
		"scope": "lua",
		"prefix": "NetworkClanGetUiFormattedTag"
	},
	"NetworkClanIsEmblemReady": {
		"body": [
			"NetworkClanIsEmblemReady(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkClanIsEmblemReady"
	},
	"NetworkClanIsRockstarClan": {
		"body": [
			"NetworkClanIsRockstarClan(${1:bufferSize})"
		],
		"scope": "lua",
		"prefix": "NetworkClanIsRockstarClan"
	},
	"NetworkClanJoin": {
		"body": [
			"NetworkClanJoin(${1:clanDesc})"
		],
		"scope": "lua",
		"prefix": "NetworkClanJoin"
	},
	"NetworkClanPlayerGetDesc": {
		"body": [
			"NetworkClanPlayerGetDesc(${1:bufferSize})"
		],
		"scope": "lua",
		"prefix": "NetworkClanPlayerGetDesc"
	},
	"NetworkClanPlayerIsActive": {
		"body": [
			"NetworkClanPlayerIsActive(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkClanPlayerIsActive"
	},
	"NetworkClanReleaseEmblem": {
		"body": [
			"NetworkClanReleaseEmblem(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkClanReleaseEmblem"
	},
	"NetworkClanRemoteMembershipsAreInCache": {
		"body": [
			"NetworkClanRemoteMembershipsAreInCache(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkClanRemoteMembershipsAreInCache"
	},
	"NetworkClanRequestEmblem": {
		"body": [
			"NetworkClanRequestEmblem(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkClanRequestEmblem"
	},
	"NetworkClanServiceIsValid": {
		"body": [
			"NetworkClanServiceIsValid()"
		],
		"scope": "lua",
		"prefix": "NetworkClanServiceIsValid"
	},
	"NetworkClearCharacterWallet": {
		"body": [
			"NetworkClearCharacterWallet(${1:characterSlot})"
		],
		"scope": "lua",
		"prefix": "NetworkClearCharacterWallet"
	},
	"NetworkClearClockTimeOverride": {
		"body": [
			"NetworkClearClockTimeOverride()"
		],
		"scope": "lua",
		"prefix": "NetworkClearClockTimeOverride"
	},
	"NetworkClearFollowers": {
		"body": [
			"NetworkClearFollowers()"
		],
		"scope": "lua",
		"prefix": "NetworkClearFollowers"
	},
	"NetworkClearFollowInvite": {
		"body": [
			"NetworkClearFollowInvite()"
		],
		"scope": "lua",
		"prefix": "NetworkClearFollowInvite"
	},
	"NetworkClearFoundGamers": {
		"body": [
			"NetworkClearFoundGamers()"
		],
		"scope": "lua",
		"prefix": "NetworkClearFoundGamers"
	},
	"NetworkClearGetGamerStatus": {
		"body": [
			"NetworkClearGetGamerStatus()"
		],
		"scope": "lua",
		"prefix": "NetworkClearGetGamerStatus"
	},
	"NetworkClearPropertyId": {
		"body": [
			"NetworkClearPropertyId()"
		],
		"scope": "lua",
		"prefix": "NetworkClearPropertyId"
	},
	"NetworkClearTransitionCreatorHandle": {
		"body": [
			"NetworkClearTransitionCreatorHandle()"
		],
		"scope": "lua",
		"prefix": "NetworkClearTransitionCreatorHandle"
	},
	"NetworkClearVoiceChannel": {
		"body": [
			"NetworkClearVoiceChannel()"
		],
		"scope": "lua",
		"prefix": "NetworkClearVoiceChannel"
	},
	"NetworkClearVoiceProximityOverride": {
		"body": [
			"NetworkClearVoiceProximityOverride()"
		],
		"scope": "lua",
		"prefix": "NetworkClearVoiceProximityOverride"
	},
	"NetworkCloseTransitionMatchmaking": {
		"body": [
			"NetworkCloseTransitionMatchmaking()"
		],
		"scope": "lua",
		"prefix": "NetworkCloseTransitionMatchmaking"
	},
	"NetworkConcealEntity": {
		"body": [
			"NetworkConcealEntity(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkConcealEntity"
	},
	"NetworkConcealPlayer": {
		"body": [
			"NetworkConcealPlayer(${1:player}, ${2:toggle}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkConcealPlayer"
	},
	"NetworkConvertSynchronisedSceneToSynchronizedScene": {
		"body": [
			"NetworkConvertSynchronisedSceneToSynchronizedScene(${1:netScene})"
		],
		"scope": "lua",
		"prefix": "NetworkConvertSynchronisedSceneToSynchronizedScene"
	},
	"NetworkCreateSynchronisedScene": {
		"body": [
			"NetworkCreateSynchronisedScene(${1:x}, ${2:y}, ${3:z}, ${4:xRot}, ${5:yRot}, ${6:zRot}, ${7:rotationOrder}, ${8:holdLastFrame}, ${9:looped}, ${10:p9}, ${11:animTime}, ${12:p11})"
		],
		"scope": "lua",
		"prefix": "NetworkCreateSynchronisedScene"
	},
	"NetworkDeductCash": {
		"body": [
			"NetworkDeductCash(${1:amount}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "NetworkDeductCash"
	},
	"NetworkDeleteCharacter": {
		"body": [
			"NetworkDeleteCharacter(${1:characterSlot}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkDeleteCharacter"
	},
	"NetworkDidFindGamersSucceed": {
		"body": [
			"NetworkDidFindGamersSucceed()"
		],
		"scope": "lua",
		"prefix": "NetworkDidFindGamersSucceed"
	},
	"NetworkDidGetGamerStatusSucceed": {
		"body": [
			"NetworkDidGetGamerStatusSucceed()"
		],
		"scope": "lua",
		"prefix": "NetworkDidGetGamerStatusSucceed"
	},
	"NetworkDisableInvincibleFlashing": {
		"body": [
			"NetworkDisableInvincibleFlashing(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkDisableInvincibleFlashing"
	},
	"NetworkDisableLeaveRemotePedBehind": {
		"body": [
			"NetworkDisableLeaveRemotePedBehind(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkDisableLeaveRemotePedBehind"
	},
	"NetworkDisableProximityMigration": {
		"body": [
			"NetworkDisableProximityMigration(${1:netID})"
		],
		"scope": "lua",
		"prefix": "NetworkDisableProximityMigration"
	},
	"NetworkDoesEntityExistWithNetworkId": {
		"body": [
			"NetworkDoesEntityExistWithNetworkId(${1:netId})"
		],
		"scope": "lua",
		"prefix": "NetworkDoesEntityExistWithNetworkId"
	},
	"NetworkDoesNetworkIdExist": {
		"body": [
			"NetworkDoesNetworkIdExist(${1:netID})"
		],
		"scope": "lua",
		"prefix": "NetworkDoesNetworkIdExist"
	},
	"NetworkDoesTunableExist": {
		"body": [
			"NetworkDoesTunableExist(${1:tunableContext}, ${2:tunableName})"
		],
		"scope": "lua",
		"prefix": "NetworkDoesTunableExist"
	},
	"NetworkDoesTunableExistHash": {
		"body": [
			"NetworkDoesTunableExistHash(${1:tunableContext}, ${2:tunableName})"
		],
		"scope": "lua",
		"prefix": "NetworkDoesTunableExistHash"
	},
	"NetworkDoTransitionQuickmatch": {
		"body": [
			"NetworkDoTransitionQuickmatch(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkDoTransitionQuickmatch"
	},
	"NetworkDoTransitionQuickmatchAsync": {
		"body": [
			"NetworkDoTransitionQuickmatchAsync(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkDoTransitionQuickmatchAsync"
	},
	"NetworkDoTransitionQuickmatchWithGroup": {
		"body": [
			"NetworkDoTransitionQuickmatchWithGroup(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p5})"
		],
		"scope": "lua",
		"prefix": "NetworkDoTransitionQuickmatchWithGroup"
	},
	"NetworkDoTransitionToFreemode": {
		"body": [
			"NetworkDoTransitionToFreemode(${1:p1}, ${2:p2}, ${3:players}, ${4:p4})"
		],
		"scope": "lua",
		"prefix": "NetworkDoTransitionToFreemode"
	},
	"NetworkDoTransitionToGame": {
		"body": [
			"NetworkDoTransitionToGame(${1:p0}, ${2:maxPlayers})"
		],
		"scope": "lua",
		"prefix": "NetworkDoTransitionToGame"
	},
	"NetworkDoTransitionToNewFreemode": {
		"body": [
			"NetworkDoTransitionToNewFreemode(${1:players}, ${2:p3}, ${3:p4}, ${4:p5})"
		],
		"scope": "lua",
		"prefix": "NetworkDoTransitionToNewFreemode"
	},
	"NetworkDoTransitionToNewGame": {
		"body": [
			"NetworkDoTransitionToNewGame(${1:p0}, ${2:maxPlayers}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkDoTransitionToNewGame"
	},
	"NetworkEarnBoss": {
		"body": [
			"NetworkEarnBoss(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnBoss"
	},
	"NetworkEarnBossAgency": {
		"body": [
			"NetworkEarnBossAgency(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnBossAgency"
	},
	"NetworkEarnBountyHunterReward": {
		"body": [
			"NetworkEarnBountyHunterReward(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnBountyHunterReward"
	},
	"NetworkEarnCasinoHeist": {
		"body": [
			"NetworkEarnCasinoHeist(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnCasinoHeist"
	},
	"NetworkEarnCasinoHeistBonus": {
		"body": [
			"NetworkEarnCasinoHeistBonus(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnCasinoHeistBonus"
	},
	"NetworkEarnCollectableCompletedCollection": {
		"body": [
			"NetworkEarnCollectableCompletedCollection(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnCollectableCompletedCollection"
	},
	"NetworkEarnFmbbWageBonus": {
		"body": [
			"NetworkEarnFmbbWageBonus(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFmbbWageBonus"
	},
	"NetworkEarnFromAiTargetKill": {
		"body": [
			"NetworkEarnFromAiTargetKill(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromAiTargetKill"
	},
	"NetworkEarnFromAmbientJob": {
		"body": [
			"NetworkEarnFromAmbientJob(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromAmbientJob"
	},
	"NetworkEarnFromArenaCareerProgression": {
		"body": [
			"NetworkEarnFromArenaCareerProgression(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromArenaCareerProgression"
	},
	"NetworkEarnFromArenaSkillLevelProgression": {
		"body": [
			"NetworkEarnFromArenaSkillLevelProgression(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromArenaSkillLevelProgression"
	},
	"NetworkEarnFromArenaWar": {
		"body": [
			"NetworkEarnFromArenaWar(${1:amount}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromArenaWar"
	},
	"NetworkEarnFromArmourTruck": {
		"body": [
			"NetworkEarnFromArmourTruck(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromArmourTruck"
	},
	"NetworkEarnFromAssassinateTargetKilled": {
		"body": [
			"NetworkEarnFromAssassinateTargetKilled(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromAssassinateTargetKilled"
	},
	"NetworkEarnFromAssassinateTargetKilled_2": {
		"body": [
			"NetworkEarnFromAssassinateTargetKilled_2(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromAssassinateTargetKilled_2"
	},
	"NetworkEarnFromBbEventBonus": {
		"body": [
			"NetworkEarnFromBbEventBonus(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromBbEventBonus"
	},
	"NetworkEarnFromBbEventCargo": {
		"body": [
			"NetworkEarnFromBbEventCargo(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromBbEventCargo"
	},
	"NetworkEarnFromBendJob": {
		"body": [
			"NetworkEarnFromBendJob(${1:amount}, ${2:heistHash})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromBendJob"
	},
	"NetworkEarnFromBetting": {
		"body": [
			"NetworkEarnFromBetting(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromBetting"
	},
	"NetworkEarnFromBounty": {
		"body": [
			"NetworkEarnFromBounty(${1:amount}, ${2:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromBounty"
	},
	"NetworkEarnFromBusinessBattle": {
		"body": [
			"NetworkEarnFromBusinessBattle(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromBusinessBattle"
	},
	"NetworkEarnFromBusinessHubSell": {
		"body": [
			"NetworkEarnFromBusinessHubSell(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromBusinessHubSell"
	},
	"NetworkEarnFromBusinessProduct": {
		"body": [
			"NetworkEarnFromBusinessProduct(${1:amount}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromBusinessProduct"
	},
	"NetworkEarnFromCashingOut": {
		"body": [
			"NetworkEarnFromCashingOut(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromCashingOut"
	},
	"NetworkEarnFromCasinoAward": {
		"body": [
			"NetworkEarnFromCasinoAward(${1:amount}, ${2:hash})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromCasinoAward"
	},
	"NetworkEarnFromCasinoMissionParticipation": {
		"body": [
			"NetworkEarnFromCasinoMissionParticipation(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromCasinoMissionParticipation"
	},
	"NetworkEarnFromCasinoMissionReward": {
		"body": [
			"NetworkEarnFromCasinoMissionReward(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromCasinoMissionReward"
	},
	"NetworkEarnFromCasinoStoryMissionReward": {
		"body": [
			"NetworkEarnFromCasinoStoryMissionReward(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromCasinoStoryMissionReward"
	},
	"NetworkEarnFromChallengeWin": {
		"body": [
			"NetworkEarnFromChallengeWin(${1:p0}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromChallengeWin"
	},
	"NetworkEarnFromClubManagementParticipation": {
		"body": [
			"NetworkEarnFromClubManagementParticipation(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromClubManagementParticipation"
	},
	"NetworkEarnFromCollectablesActionFigures": {
		"body": [
			"NetworkEarnFromCollectablesActionFigures(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromCollectablesActionFigures"
	},
	"NetworkEarnFromCollectionItem": {
		"body": [
			"NetworkEarnFromCollectionItem(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromCollectionItem"
	},
	"NetworkEarnFromCompleteCollection": {
		"body": [
			"NetworkEarnFromCompleteCollection(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromCompleteCollection"
	},
	"NetworkEarnFromContraband": {
		"body": [
			"NetworkEarnFromContraband(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromContraband"
	},
	"NetworkEarnFromCrateDrop": {
		"body": [
			"NetworkEarnFromCrateDrop(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromCrateDrop"
	},
	"NetworkEarnFromCriminalMastermindBonus": {
		"body": [
			"NetworkEarnFromCriminalMastermindBonus(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromCriminalMastermindBonus"
	},
	"NetworkEarnFromDailyObjectiveEvent": {
		"body": [
			"NetworkEarnFromDailyObjectiveEvent(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromDailyObjectiveEvent"
	},
	"NetworkEarnFromDailyObjectives": {
		"body": [
			"NetworkEarnFromDailyObjectives(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromDailyObjectives"
	},
	"NetworkEarnFromDarChallenge": {
		"body": [
			"NetworkEarnFromDarChallenge(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromDarChallenge"
	},
	"NetworkEarnFromDestroyingContraband": {
		"body": [
			"NetworkEarnFromDestroyingContraband(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromDestroyingContraband"
	},
	"NetworkEarnFromDoomsdayFinaleBonus": {
		"body": [
			"NetworkEarnFromDoomsdayFinaleBonus(${1:amount}, ${2:vehicleHash})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromDoomsdayFinaleBonus"
	},
	"NetworkEarnFromFmbbBossWork": {
		"body": [
			"NetworkEarnFromFmbbBossWork(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromFmbbBossWork"
	},
	"NetworkEarnFromFmbbPhonecallMission": {
		"body": [
			"NetworkEarnFromFmbbPhonecallMission(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromFmbbPhonecallMission"
	},
	"NetworkEarnFromGangopsAwards": {
		"body": [
			"NetworkEarnFromGangopsAwards(${1:amount}, ${2:unk}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromGangopsAwards"
	},
	"NetworkEarnFromGangopsElite": {
		"body": [
			"NetworkEarnFromGangopsElite(${1:amount}, ${2:unk}, ${3:actIndex})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromGangopsElite"
	},
	"NetworkEarnFromGangopsJobsFinale": {
		"body": [
			"NetworkEarnFromGangopsJobsFinale(${1:amount}, ${2:unk})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromGangopsJobsFinale"
	},
	"NetworkEarnFromGangopsJobsPrepParticipation": {
		"body": [
			"NetworkEarnFromGangopsJobsPrepParticipation(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromGangopsJobsPrepParticipation"
	},
	"NetworkEarnFromGangopsJobsSetup": {
		"body": [
			"NetworkEarnFromGangopsJobsSetup(${1:amount}, ${2:unk})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromGangopsJobsSetup"
	},
	"NetworkEarnFromGangopsWages": {
		"body": [
			"NetworkEarnFromGangopsWages(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromGangopsWages"
	},
	"NetworkEarnFromGangopsWagesBonus": {
		"body": [
			"NetworkEarnFromGangopsWagesBonus(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromGangopsWagesBonus"
	},
	"NetworkEarnFromGangPickup": {
		"body": [
			"NetworkEarnFromGangPickup(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromGangPickup"
	},
	"NetworkEarnFromHackerTruckMission": {
		"body": [
			"NetworkEarnFromHackerTruckMission(${1:p0}, ${2:amount}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromHackerTruckMission"
	},
	"NetworkEarnFromHoldups": {
		"body": [
			"NetworkEarnFromHoldups(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromHoldups"
	},
	"NetworkEarnFromImportExport": {
		"body": [
			"NetworkEarnFromImportExport(${1:amount}, ${2:modelHash})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromImportExport"
	},
	"NetworkEarnFromJob": {
		"body": [
			"NetworkEarnFromJob(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromJob"
	},
	"NetworkEarnFromJobBonus": {
		"body": [
			"NetworkEarnFromJobBonus(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromJobBonus"
	},
	"NetworkEarnFromJobX2": {
		"body": [
			"NetworkEarnFromJobX2(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromJobX2"
	},
	"NetworkEarnFromNotBadsport": {
		"body": [
			"NetworkEarnFromNotBadsport(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromNotBadsport"
	},
	"NetworkEarnFromPersonalVehicle": {
		"body": [
			"NetworkEarnFromPersonalVehicle(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromPersonalVehicle"
	},
	"NetworkEarnFromPickup": {
		"body": [
			"NetworkEarnFromPickup(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromPickup"
	},
	"NetworkEarnFromPremiumJob": {
		"body": [
			"NetworkEarnFromPremiumJob(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromPremiumJob"
	},
	"NetworkEarnFromProperty": {
		"body": [
			"NetworkEarnFromProperty(${1:amount}, ${2:propertyName})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromProperty"
	},
	"NetworkEarnFromRcTimeTrial": {
		"body": [
			"NetworkEarnFromRcTimeTrial(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromRcTimeTrial"
	},
	"NetworkEarnFromRdrBonus": {
		"body": [
			"NetworkEarnFromRdrBonus(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromRdrBonus"
	},
	"NetworkEarnFromRockstar": {
		"body": [
			"NetworkEarnFromRockstar(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromRockstar"
	},
	"NetworkEarnFromSellBase": {
		"body": [
			"NetworkEarnFromSellBase(${1:amount}, ${2:baseNameHash})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromSellBase"
	},
	"NetworkEarnFromSellBunker": {
		"body": [
			"NetworkEarnFromSellBunker(${1:amount}, ${2:bunkerHash})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromSellBunker"
	},
	"NetworkEarnFromSellingVehicle": {
		"body": [
			"NetworkEarnFromSellingVehicle(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromSellingVehicle"
	},
	"NetworkEarnFromSmuggling": {
		"body": [
			"NetworkEarnFromSmuggling(${1:amount}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromSmuggling"
	},
	"NetworkEarnFromSpinTheWheelCash": {
		"body": [
			"NetworkEarnFromSpinTheWheelCash(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromSpinTheWheelCash"
	},
	"NetworkEarnFromTargetRefund": {
		"body": [
			"NetworkEarnFromTargetRefund(${1:amount}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromTargetRefund"
	},
	"NetworkEarnFromTimeTrialWin": {
		"body": [
			"NetworkEarnFromTimeTrialWin(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromTimeTrialWin"
	},
	"NetworkEarnFromVehicle": {
		"body": [
			"NetworkEarnFromVehicle(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromVehicle"
	},
	"NetworkEarnFromVehicleExport": {
		"body": [
			"NetworkEarnFromVehicleExport(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromVehicleExport"
	},
	"NetworkEarnFromWagePayment": {
		"body": [
			"NetworkEarnFromWagePayment(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromWagePayment"
	},
	"NetworkEarnFromWagePaymentBonus": {
		"body": [
			"NetworkEarnFromWagePaymentBonus(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromWagePaymentBonus"
	},
	"NetworkEarnFromWarehouse": {
		"body": [
			"NetworkEarnFromWarehouse()"
		],
		"scope": "lua",
		"prefix": "NetworkEarnFromWarehouse"
	},
	"NetworkEarnGoon": {
		"body": [
			"NetworkEarnGoon(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnGoon"
	},
	"NetworkEarnIslandHeist": {
		"body": [
			"NetworkEarnIslandHeist(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnIslandHeist"
	},
	"NetworkEarnJobBonusFirstTimeBonus": {
		"body": [
			"NetworkEarnJobBonusFirstTimeBonus(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnJobBonusFirstTimeBonus"
	},
	"NetworkEarnJobBonusHeistAward": {
		"body": [
			"NetworkEarnJobBonusHeistAward(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkEarnJobBonusHeistAward"
	},
	"NetworkEndTutorialSession": {
		"body": [
			"NetworkEndTutorialSession()"
		],
		"scope": "lua",
		"prefix": "NetworkEndTutorialSession"
	},
	"NetworkEntityAreaDoesExist": {
		"body": [
			"NetworkEntityAreaDoesExist(${1:areaHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkEntityAreaDoesExist"
	},
	"NetworkEntityAreaIsOccupied": {
		"body": [
			"NetworkEntityAreaIsOccupied(${1:areaHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkEntityAreaIsOccupied"
	},
	"NetworkExplodeVehicle": {
		"body": [
			"NetworkExplodeVehicle(${1:vehicle}, ${2:isAudible}, ${3:isInvisible}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkExplodeVehicle"
	},
	"NetworkFadeInEntity": {
		"body": [
			"NetworkFadeInEntity(${1:entity}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "NetworkFadeInEntity"
	},
	"NetworkFadeOutEntity": {
		"body": [
			"NetworkFadeOutEntity(${1:entity}, ${2:normal}, ${3:slow})"
		],
		"scope": "lua",
		"prefix": "NetworkFadeOutEntity"
	},
	"NetworkFindGamersInCrew": {
		"body": [
			"NetworkFindGamersInCrew(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkFindGamersInCrew"
	},
	"NetworkFindMatchedGamers": {
		"body": [
			"NetworkFindMatchedGamers(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkFindMatchedGamers"
	},
	"NetworkFinishBroadcastingData": {
		"body": [
			"NetworkFinishBroadcastingData()"
		],
		"scope": "lua",
		"prefix": "NetworkFinishBroadcastingData"
	},
	"NetworkForceLocalUseOfSyncedSceneCamera": {
		"body": [
			"NetworkForceLocalUseOfSyncedSceneCamera(${1:netScene}, ${2:animDict}, ${3:animName})"
		],
		"scope": "lua",
		"prefix": "NetworkForceLocalUseOfSyncedSceneCamera"
	},
	"NetworkGamerHasHeadset": {
		"body": [
			"NetworkGamerHasHeadset(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkGamerHasHeadset"
	},
	"NetworkGamertagFromHandlePending": {
		"body": [
			"NetworkGamertagFromHandlePending()"
		],
		"scope": "lua",
		"prefix": "NetworkGamertagFromHandlePending"
	},
	"NetworkGamertagFromHandleStart": {
		"body": [
			"NetworkGamertagFromHandleStart(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkGamertagFromHandleStart"
	},
	"NetworkGamertagFromHandleSucceeded": {
		"body": [
			"NetworkGamertagFromHandleSucceeded()"
		],
		"scope": "lua",
		"prefix": "NetworkGamertagFromHandleSucceeded"
	},
	"NetworkGetActivityPlayerNum": {
		"body": [
			"NetworkGetActivityPlayerNum(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkGetActivityPlayerNum"
	},
	"NetworkGetAgeGroup": {
		"body": [
			"NetworkGetAgeGroup()"
		],
		"scope": "lua",
		"prefix": "NetworkGetAgeGroup"
	},
	"NetworkGetAverageLatencyForPlayer": {
		"body": [
			"NetworkGetAverageLatencyForPlayer(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkGetAverageLatencyForPlayer"
	},
	"NetworkGetAverageLatencyForPlayer_2": {
		"body": [
			"NetworkGetAverageLatencyForPlayer_2(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkGetAverageLatencyForPlayer_2"
	},
	"NetworkGetBackgroundLoadingRecipients": {
		"body": [
			"NetworkGetBackgroundLoadingRecipients(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkGetBackgroundLoadingRecipients"
	},
	"NetworkGetContentModifierListId": {
		"body": [
			"NetworkGetContentModifierListId(${1:contentHash})"
		],
		"scope": "lua",
		"prefix": "NetworkGetContentModifierListId"
	},
	"NetworkGetCurrentlySelectedGamerHandleFromInviteMenu": {
		"body": [
			"NetworkGetCurrentlySelectedGamerHandleFromInviteMenu(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkGetCurrentlySelectedGamerHandleFromInviteMenu"
	},
	"NetworkGetDestroyerOfEntity": {
		"body": [
			"NetworkGetDestroyerOfEntity(${1:p0}, ${2:p1}, ${3:weaponHash})"
		],
		"scope": "lua",
		"prefix": "NetworkGetDestroyerOfEntity"
	},
	"NetworkGetDestroyerOfNetworkId": {
		"body": [
			"NetworkGetDestroyerOfNetworkId(${1:netId}, ${2:weaponHash})"
		],
		"scope": "lua",
		"prefix": "NetworkGetDestroyerOfNetworkId"
	},
	"NetworkGetDisplaynamesFromHandles": {
		"body": [
			"NetworkGetDisplaynamesFromHandles(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkGetDisplaynamesFromHandles"
	},
	"NetworkGetEntityFromNetworkId": {
		"body": [
			"NetworkGetEntityFromNetworkId(${1:netId})"
		],
		"scope": "lua",
		"prefix": "NetworkGetEntityFromNetworkId"
	},
	"NetworkGetEntityIsLocal": {
		"body": [
			"NetworkGetEntityIsLocal(${1:entity})"
		],
		"scope": "lua",
		"prefix": "NetworkGetEntityIsLocal"
	},
	"NetworkGetEntityIsNetworked": {
		"body": [
			"NetworkGetEntityIsNetworked(${1:entity})"
		],
		"scope": "lua",
		"prefix": "NetworkGetEntityIsNetworked"
	},
	"NetworkGetEntityKillerOfPlayer": {
		"body": [
			"NetworkGetEntityKillerOfPlayer(${1:player}, ${2:weaponHash})"
		],
		"scope": "lua",
		"prefix": "NetworkGetEntityKillerOfPlayer"
	},
	"NetworkGetEntityNetScriptId": {
		"body": [
			"NetworkGetEntityNetScriptId(${1:entity})"
		],
		"scope": "lua",
		"prefix": "NetworkGetEntityNetScriptId"
	},
	"NetworkGetEntityOwner": {
		"body": [
			"NetworkGetEntityOwner(${1:entity})"
		],
		"scope": "lua",
		"prefix": "NetworkGetEntityOwner"
	},
	"NetworkGetEvcBalance": {
		"body": [
			"NetworkGetEvcBalance()"
		],
		"scope": "lua",
		"prefix": "NetworkGetEvcBalance"
	},
	"NetworkGetFirstEntityOwner": {
		"body": [
			"NetworkGetFirstEntityOwner(${1:entity})"
		],
		"scope": "lua",
		"prefix": "NetworkGetFirstEntityOwner"
	},
	"NetworkGetFoundGamer": {
		"body": [
			"NetworkGetFoundGamer(${1:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkGetFoundGamer"
	},
	"NetworkGetFriendCount": {
		"body": [
			"NetworkGetFriendCount()"
		],
		"scope": "lua",
		"prefix": "NetworkGetFriendCount"
	},
	"NetworkGetFriendName": {
		"body": [
			"NetworkGetFriendName(${1:friendIndex})"
		],
		"scope": "lua",
		"prefix": "NetworkGetFriendName"
	},
	"NetworkGetFriendNameFromIndex": {
		"body": [
			"NetworkGetFriendNameFromIndex(${1:friendIndex})"
		],
		"scope": "lua",
		"prefix": "NetworkGetFriendNameFromIndex"
	},
	"NetworkGetGamerStatus": {
		"body": [
			"NetworkGetGamerStatus(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkGetGamerStatus"
	},
	"NetworkGetGamerStatusFromQueue": {
		"body": [
			"NetworkGetGamerStatusFromQueue()"
		],
		"scope": "lua",
		"prefix": "NetworkGetGamerStatusFromQueue"
	},
	"NetworkGetGamerStatusResult": {
		"body": [
			"NetworkGetGamerStatusResult(${1:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkGetGamerStatusResult"
	},
	"NetworkGetGamertagFromHandle": {
		"body": [
			"NetworkGetGamertagFromHandle(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkGetGamertagFromHandle"
	},
	"NetworkGetGlobalMultiplayerClock": {
		"body": [
			"NetworkGetGlobalMultiplayerClock()"
		],
		"scope": "lua",
		"prefix": "NetworkGetGlobalMultiplayerClock"
	},
	"NetworkGetHostOfScript": {
		"body": [
			"NetworkGetHostOfScript(${1:scriptName}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkGetHostOfScript"
	},
	"NetworkGetHostOfThisScript": {
		"body": [
			"NetworkGetHostOfThisScript()"
		],
		"scope": "lua",
		"prefix": "NetworkGetHostOfThisScript"
	},
	"NetworkGetIsHighEarner": {
		"body": [
			"NetworkGetIsHighEarner()"
		],
		"scope": "lua",
		"prefix": "NetworkGetIsHighEarner"
	},
	"NetworkGetLocalHandle": {
		"body": [
			"NetworkGetLocalHandle(${1:bufferSize})"
		],
		"scope": "lua",
		"prefix": "NetworkGetLocalHandle"
	},
	"NetworkGetMaxFriends": {
		"body": [
			"NetworkGetMaxFriends()"
		],
		"scope": "lua",
		"prefix": "NetworkGetMaxFriends"
	},
	"NetworkGetMaxNumParticipants": {
		"body": [
			"NetworkGetMaxNumParticipants()"
		],
		"scope": "lua",
		"prefix": "NetworkGetMaxNumParticipants"
	},
	"NetworkGetNetworkIdFromEntity": {
		"body": [
			"NetworkGetNetworkIdFromEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "NetworkGetNetworkIdFromEntity"
	},
	"NetworkGetNumBodyTrackers": {
		"body": [
			"NetworkGetNumBodyTrackers()"
		],
		"scope": "lua",
		"prefix": "NetworkGetNumBodyTrackers"
	},
	"NetworkGetNumConnectedPlayers": {
		"body": [
			"NetworkGetNumConnectedPlayers()"
		],
		"scope": "lua",
		"prefix": "NetworkGetNumConnectedPlayers"
	},
	"NetworkGetNumFoundGamers": {
		"body": [
			"NetworkGetNumFoundGamers()"
		],
		"scope": "lua",
		"prefix": "NetworkGetNumFoundGamers"
	},
	"NetworkGetNumParticipants": {
		"body": [
			"NetworkGetNumParticipants()"
		],
		"scope": "lua",
		"prefix": "NetworkGetNumParticipants"
	},
	"NetworkGetNumPresenceInvites": {
		"body": [
			"NetworkGetNumPresenceInvites()"
		],
		"scope": "lua",
		"prefix": "NetworkGetNumPresenceInvites"
	},
	"NetworkGetNumScriptParticipants": {
		"body": [
			"NetworkGetNumScriptParticipants(${1:p1}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkGetNumScriptParticipants"
	},
	"NetworkGetNumUnackedForPlayer": {
		"body": [
			"NetworkGetNumUnackedForPlayer(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkGetNumUnackedForPlayer"
	},
	"NetworkGetOldestResendCountForPlayer": {
		"body": [
			"NetworkGetOldestResendCountForPlayer(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkGetOldestResendCountForPlayer"
	},
	"NetworkGetParticipantIndex": {
		"body": [
			"NetworkGetParticipantIndex(${1:index})"
		],
		"scope": "lua",
		"prefix": "NetworkGetParticipantIndex"
	},
	"NetworkGetPlatformPartyMembers": {
		"body": [
			"NetworkGetPlatformPartyMembers(${1:dataSize})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPlatformPartyMembers"
	},
	"NetworkGetPlatformPartyUnk": {
		"body": [
			"NetworkGetPlatformPartyUnk()"
		],
		"scope": "lua",
		"prefix": "NetworkGetPlatformPartyUnk"
	},
	"NetworkGetPlayerCoords": {
		"body": [
			"NetworkGetPlayerCoords(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPlayerCoords"
	},
	"NetworkGetPlayerFromGamerHandle": {
		"body": [
			"NetworkGetPlayerFromGamerHandle(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPlayerFromGamerHandle"
	},
	"NetworkGetPlayerIndex": {
		"body": [
			"NetworkGetPlayerIndex(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPlayerIndex"
	},
	"NetworkGetPlayerIndexFromPed": {
		"body": [
			"NetworkGetPlayerIndexFromPed(${1:ped})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPlayerIndexFromPed"
	},
	"NetworkGetPlayerLoudness": {
		"body": [
			"NetworkGetPlayerLoudness(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPlayerLoudness"
	},
	"NetworkGetPlayerOwnsWaypoint": {
		"body": [
			"NetworkGetPlayerOwnsWaypoint(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPlayerOwnsWaypoint"
	},
	"NetworkGetPlayerTutorialSessionInstance": {
		"body": [
			"NetworkGetPlayerTutorialSessionInstance(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPlayerTutorialSessionInstance"
	},
	"NetworkGetPresenceInviteContentId": {
		"body": [
			"NetworkGetPresenceInviteContentId(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPresenceInviteContentId"
	},
	"NetworkGetPresenceInviteFromAdmin": {
		"body": [
			"NetworkGetPresenceInviteFromAdmin(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPresenceInviteFromAdmin"
	},
	"NetworkGetPresenceInviteHandle": {
		"body": [
			"NetworkGetPresenceInviteHandle(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPresenceInviteHandle"
	},
	"NetworkGetPresenceInviteId": {
		"body": [
			"NetworkGetPresenceInviteId(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPresenceInviteId"
	},
	"NetworkGetPresenceInviteInviter": {
		"body": [
			"NetworkGetPresenceInviteInviter(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPresenceInviteInviter"
	},
	"NetworkGetPresenceInviteIsTournament": {
		"body": [
			"NetworkGetPresenceInviteIsTournament(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPresenceInviteIsTournament"
	},
	"NetworkGetPresenceInvitePlaylistCurrent": {
		"body": [
			"NetworkGetPresenceInvitePlaylistCurrent(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPresenceInvitePlaylistCurrent"
	},
	"NetworkGetPresenceInvitePlaylistLength": {
		"body": [
			"NetworkGetPresenceInvitePlaylistLength(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPresenceInvitePlaylistLength"
	},
	"NetworkGetPresenceInviteSessionId": {
		"body": [
			"NetworkGetPresenceInviteSessionId(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPresenceInviteSessionId"
	},
	"NetworkGetPrimaryClanDataCancel": {
		"body": [
			"NetworkGetPrimaryClanDataCancel()"
		],
		"scope": "lua",
		"prefix": "NetworkGetPrimaryClanDataCancel"
	},
	"NetworkGetPrimaryClanDataClear": {
		"body": [
			"NetworkGetPrimaryClanDataClear()"
		],
		"scope": "lua",
		"prefix": "NetworkGetPrimaryClanDataClear"
	},
	"NetworkGetPrimaryClanDataNew": {
		"body": [
			"NetworkGetPrimaryClanDataNew()"
		],
		"scope": "lua",
		"prefix": "NetworkGetPrimaryClanDataNew"
	},
	"NetworkGetPrimaryClanDataPending": {
		"body": [
			"NetworkGetPrimaryClanDataPending()"
		],
		"scope": "lua",
		"prefix": "NetworkGetPrimaryClanDataPending"
	},
	"NetworkGetPrimaryClanDataStart": {
		"body": [
			"NetworkGetPrimaryClanDataStart(${1:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkGetPrimaryClanDataStart"
	},
	"NetworkGetPrimaryClanDataSuccess": {
		"body": [
			"NetworkGetPrimaryClanDataSuccess()"
		],
		"scope": "lua",
		"prefix": "NetworkGetPrimaryClanDataSuccess"
	},
	"NetworkGetPvcBalance": {
		"body": [
			"NetworkGetPvcBalance()"
		],
		"scope": "lua",
		"prefix": "NetworkGetPvcBalance"
	},
	"NetworkGetPvcTransferBalance": {
		"body": [
			"NetworkGetPvcTransferBalance()"
		],
		"scope": "lua",
		"prefix": "NetworkGetPvcTransferBalance"
	},
	"NetworkGetRandomInt": {
		"body": [
			"NetworkGetRandomInt()"
		],
		"scope": "lua",
		"prefix": "NetworkGetRandomInt"
	},
	"NetworkGetRandomIntRanged": {
		"body": [
			"NetworkGetRandomIntRanged(${1:rangeStart}, ${2:rangeEnd})"
		],
		"scope": "lua",
		"prefix": "NetworkGetRandomIntRanged"
	},
	"NetworkGetRemainingTransferBalance": {
		"body": [
			"NetworkGetRemainingTransferBalance()"
		],
		"scope": "lua",
		"prefix": "NetworkGetRemainingTransferBalance"
	},
	"NetworkGetRespawnResult": {
		"body": [
			"NetworkGetRespawnResult(${1:randomInt})"
		],
		"scope": "lua",
		"prefix": "NetworkGetRespawnResult"
	},
	"NetworkGetRespawnResultFlags": {
		"body": [
			"NetworkGetRespawnResultFlags(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkGetRespawnResultFlags"
	},
	"NetworkGetRosPrivilege_24": {
		"body": [
			"NetworkGetRosPrivilege_24()"
		],
		"scope": "lua",
		"prefix": "NetworkGetRosPrivilege_24"
	},
	"NetworkGetRosPrivilege_25": {
		"body": [
			"NetworkGetRosPrivilege_25()"
		],
		"scope": "lua",
		"prefix": "NetworkGetRosPrivilege_25"
	},
	"NetworkGetRosPrivilege_9": {
		"body": [
			"NetworkGetRosPrivilege_9()"
		],
		"scope": "lua",
		"prefix": "NetworkGetRosPrivilege_9"
	},
	"NetworkGetScriptStatus": {
		"body": [
			"NetworkGetScriptStatus()"
		],
		"scope": "lua",
		"prefix": "NetworkGetScriptStatus"
	},
	"NetworkGetStringBankBalance": {
		"body": [
			"NetworkGetStringBankBalance()"
		],
		"scope": "lua",
		"prefix": "NetworkGetStringBankBalance"
	},
	"NetworkGetStringBankWalletBalance": {
		"body": [
			"NetworkGetStringBankWalletBalance()"
		],
		"scope": "lua",
		"prefix": "NetworkGetStringBankWalletBalance"
	},
	"NetworkGetStringWalletBalance": {
		"body": [
			"NetworkGetStringWalletBalance(${1:characterSlot})"
		],
		"scope": "lua",
		"prefix": "NetworkGetStringWalletBalance"
	},
	"NetworkGetTalkerProximity": {
		"body": [
			"NetworkGetTalkerProximity()"
		],
		"scope": "lua",
		"prefix": "NetworkGetTalkerProximity"
	},
	"NetworkGetTargetingMode": {
		"body": [
			"NetworkGetTargetingMode()"
		],
		"scope": "lua",
		"prefix": "NetworkGetTargetingMode"
	},
	"NetworkGetThisScriptIsNetworkScript": {
		"body": [
			"NetworkGetThisScriptIsNetworkScript()"
		],
		"scope": "lua",
		"prefix": "NetworkGetThisScriptIsNetworkScript"
	},
	"NetworkGetTimeoutTime": {
		"body": [
			"NetworkGetTimeoutTime()"
		],
		"scope": "lua",
		"prefix": "NetworkGetTimeoutTime"
	},
	"NetworkGetTotalNumPlayers": {
		"body": [
			"NetworkGetTotalNumPlayers()"
		],
		"scope": "lua",
		"prefix": "NetworkGetTotalNumPlayers"
	},
	"NetworkGetTransitionHost": {
		"body": [
			"NetworkGetTransitionHost(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkGetTransitionHost"
	},
	"NetworkGetTransitionMembers": {
		"body": [
			"NetworkGetTransitionMembers(${1:dataCount})"
		],
		"scope": "lua",
		"prefix": "NetworkGetTransitionMembers"
	},
	"NetworkGetTunableCloudCrc": {
		"body": [
			"NetworkGetTunableCloudCrc()"
		],
		"scope": "lua",
		"prefix": "NetworkGetTunableCloudCrc"
	},
	"NetworkGetUnreliableResendCountForPlayer": {
		"body": [
			"NetworkGetUnreliableResendCountForPlayer(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkGetUnreliableResendCountForPlayer"
	},
	"NetworkGetVcBalance": {
		"body": [
			"NetworkGetVcBalance()"
		],
		"scope": "lua",
		"prefix": "NetworkGetVcBalance"
	},
	"NetworkGetVcBankBalance": {
		"body": [
			"NetworkGetVcBankBalance()"
		],
		"scope": "lua",
		"prefix": "NetworkGetVcBankBalance"
	},
	"NetworkGetVcBankBalanceIsNotLessThan": {
		"body": [
			"NetworkGetVcBankBalanceIsNotLessThan(${1:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkGetVcBankBalanceIsNotLessThan"
	},
	"NetworkGetVcBankWalletBalanceIsNotLessThan": {
		"body": [
			"NetworkGetVcBankWalletBalanceIsNotLessThan(${1:amount}, ${2:characterSlot})"
		],
		"scope": "lua",
		"prefix": "NetworkGetVcBankWalletBalanceIsNotLessThan"
	},
	"NetworkGetVcWalletBalance": {
		"body": [
			"NetworkGetVcWalletBalance(${1:characterSlot})"
		],
		"scope": "lua",
		"prefix": "NetworkGetVcWalletBalance"
	},
	"NetworkGetVcWalletBalanceIsNotLessThan": {
		"body": [
			"NetworkGetVcWalletBalanceIsNotLessThan(${1:amount}, ${2:characterSlot})"
		],
		"scope": "lua",
		"prefix": "NetworkGetVcWalletBalanceIsNotLessThan"
	},
	"NetworkGetVoiceProximityOverride": {
		"body": [
			"NetworkGetVoiceProximityOverride(${1:playerSrc})"
		],
		"scope": "lua",
		"prefix": "NetworkGetVoiceProximityOverride"
	},
	"NetworkGivePlayerJobshareCash": {
		"body": [
			"NetworkGivePlayerJobshareCash(${1:amount}, ${2:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkGivePlayerJobshareCash"
	},
	"NetworkHandleFromFriend": {
		"body": [
			"NetworkHandleFromFriend(${1:friendIndex}, ${2:bufferSize})"
		],
		"scope": "lua",
		"prefix": "NetworkHandleFromFriend"
	},
	"NetworkHandleFromMemberId": {
		"body": [
			"NetworkHandleFromMemberId(${1:memberId}, ${2:bufferSize})"
		],
		"scope": "lua",
		"prefix": "NetworkHandleFromMemberId"
	},
	"NetworkHandleFromPlayer": {
		"body": [
			"NetworkHandleFromPlayer(${1:player}, ${2:bufferSize})"
		],
		"scope": "lua",
		"prefix": "NetworkHandleFromPlayer"
	},
	"NetworkHandleFromUserId": {
		"body": [
			"NetworkHandleFromUserId(${1:userId}, ${2:bufferSize})"
		],
		"scope": "lua",
		"prefix": "NetworkHandleFromUserId"
	},
	"NetworkHasAgeRestrictedProfile": {
		"body": [
			"NetworkHasAgeRestrictedProfile()"
		],
		"scope": "lua",
		"prefix": "NetworkHasAgeRestrictedProfile"
	},
	"NetworkHasCachedPlayerHeadBlendData": {
		"body": [
			"NetworkHasCachedPlayerHeadBlendData(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkHasCachedPlayerHeadBlendData"
	},
	"NetworkHasControlOfDoor": {
		"body": [
			"NetworkHasControlOfDoor(${1:doorHash})"
		],
		"scope": "lua",
		"prefix": "NetworkHasControlOfDoor"
	},
	"NetworkHasControlOfEntity": {
		"body": [
			"NetworkHasControlOfEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "NetworkHasControlOfEntity"
	},
	"NetworkHasControlOfNetworkId": {
		"body": [
			"NetworkHasControlOfNetworkId(${1:netId})"
		],
		"scope": "lua",
		"prefix": "NetworkHasControlOfNetworkId"
	},
	"NetworkHasControlOfPickup": {
		"body": [
			"NetworkHasControlOfPickup(${1:pickup})"
		],
		"scope": "lua",
		"prefix": "NetworkHasControlOfPickup"
	},
	"NetworkHasEntityBeenRegisteredWithThisThread": {
		"body": [
			"NetworkHasEntityBeenRegisteredWithThisThread(${1:entity})"
		],
		"scope": "lua",
		"prefix": "NetworkHasEntityBeenRegisteredWithThisThread"
	},
	"NetworkHasFollowInvite": {
		"body": [
			"NetworkHasFollowInvite()"
		],
		"scope": "lua",
		"prefix": "NetworkHasFollowInvite"
	},
	"NetworkHasGameBeenAltered": {
		"body": [
			"NetworkHasGameBeenAltered()"
		],
		"scope": "lua",
		"prefix": "NetworkHasGameBeenAltered"
	},
	"NetworkHasHeadset": {
		"body": [
			"NetworkHasHeadset()"
		],
		"scope": "lua",
		"prefix": "NetworkHasHeadset"
	},
	"NetworkHashFromGamerHandle": {
		"body": [
			"NetworkHashFromGamerHandle(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkHashFromGamerHandle"
	},
	"NetworkHashFromPlayerHandle": {
		"body": [
			"NetworkHashFromPlayerHandle(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkHashFromPlayerHandle"
	},
	"NetworkHasInvitedGamer": {
		"body": [
			"NetworkHasInvitedGamer(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkHasInvitedGamer"
	},
	"NetworkHasInvitedGamerToTransition": {
		"body": [
			"NetworkHasInvitedGamerToTransition(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkHasInvitedGamerToTransition"
	},
	"NetworkHasPendingInvite": {
		"body": [
			"NetworkHasPendingInvite()"
		],
		"scope": "lua",
		"prefix": "NetworkHasPendingInvite"
	},
	"NetworkHasPlayerStartedTransition": {
		"body": [
			"NetworkHasPlayerStartedTransition(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkHasPlayerStartedTransition"
	},
	"NetworkHasReceivedHostBroadcastData": {
		"body": [
			"NetworkHasReceivedHostBroadcastData()"
		],
		"scope": "lua",
		"prefix": "NetworkHasReceivedHostBroadcastData"
	},
	"NetworkHasRosPrivilege": {
		"body": [
			"NetworkHasRosPrivilege(${1:index})"
		],
		"scope": "lua",
		"prefix": "NetworkHasRosPrivilege"
	},
	"NetworkHasRosPrivilegeEndDate": {
		"body": [
			"NetworkHasRosPrivilegeEndDate(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkHasRosPrivilegeEndDate"
	},
	"NetworkHasSocialClubAccount": {
		"body": [
			"NetworkHasSocialClubAccount()"
		],
		"scope": "lua",
		"prefix": "NetworkHasSocialClubAccount"
	},
	"NetworkHasSocialNetworkingSharingPriv": {
		"body": [
			"NetworkHasSocialNetworkingSharingPriv()"
		],
		"scope": "lua",
		"prefix": "NetworkHasSocialNetworkingSharingPriv"
	},
	"NetworkHasValidRosCredentials": {
		"body": [
			"NetworkHasValidRosCredentials()"
		],
		"scope": "lua",
		"prefix": "NetworkHasValidRosCredentials"
	},
	"NetworkHasViewGamerUserContentResult": {
		"body": [
			"NetworkHasViewGamerUserContentResult(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkHasViewGamerUserContentResult"
	},
	"NetworkHaveCommunicationPrivileges": {
		"body": [
			"NetworkHaveCommunicationPrivileges(${1:p0}, ${2:player})"
		],
		"scope": "lua",
		"prefix": "NetworkHaveCommunicationPrivileges"
	},
	"NetworkHaveOnlinePrivilege_2": {
		"body": [
			"NetworkHaveOnlinePrivilege_2()"
		],
		"scope": "lua",
		"prefix": "NetworkHaveOnlinePrivilege_2"
	},
	"NetworkHaveOnlinePrivileges": {
		"body": [
			"NetworkHaveOnlinePrivileges()"
		],
		"scope": "lua",
		"prefix": "NetworkHaveOnlinePrivileges"
	},
	"NetworkHaveRosBannedPriv": {
		"body": [
			"NetworkHaveRosBannedPriv()"
		],
		"scope": "lua",
		"prefix": "NetworkHaveRosBannedPriv"
	},
	"NetworkHaveRosCreateTicketPriv": {
		"body": [
			"NetworkHaveRosCreateTicketPriv()"
		],
		"scope": "lua",
		"prefix": "NetworkHaveRosCreateTicketPriv"
	},
	"NetworkHaveRosLeaderboardWritePriv": {
		"body": [
			"NetworkHaveRosLeaderboardWritePriv()"
		],
		"scope": "lua",
		"prefix": "NetworkHaveRosLeaderboardWritePriv"
	},
	"NetworkHaveRosMultiplayerPriv": {
		"body": [
			"NetworkHaveRosMultiplayerPriv()"
		],
		"scope": "lua",
		"prefix": "NetworkHaveRosMultiplayerPriv"
	},
	"NetworkHaveRosSocialClubPriv": {
		"body": [
			"NetworkHaveRosSocialClubPriv()"
		],
		"scope": "lua",
		"prefix": "NetworkHaveRosSocialClubPriv"
	},
	"NetworkHaveUserContentPrivileges": {
		"body": [
			"NetworkHaveUserContentPrivileges(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkHaveUserContentPrivileges"
	},
	"NetworkHostTransition": {
		"body": [
			"NetworkHostTransition(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "NetworkHostTransition"
	},
	"NetworkInitializeCash": {
		"body": [
			"NetworkInitializeCash(${1:wallet}, ${2:bank})"
		],
		"scope": "lua",
		"prefix": "NetworkInitializeCash"
	},
	"NetworkInviteGamers": {
		"body": [
			"NetworkInviteGamers(${1:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkInviteGamers"
	},
	"NetworkInviteGamersToTransition": {
		"body": [
			"NetworkInviteGamersToTransition(${1:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkInviteGamersToTransition"
	},
	"NetworkIsActivitySession": {
		"body": [
			"NetworkIsActivitySession()"
		],
		"scope": "lua",
		"prefix": "NetworkIsActivitySession"
	},
	"NetworkIsActivitySpectator": {
		"body": [
			"NetworkIsActivitySpectator()"
		],
		"scope": "lua",
		"prefix": "NetworkIsActivitySpectator"
	},
	"NetworkIsActivitySpectatorFromHandle": {
		"body": [
			"NetworkIsActivitySpectatorFromHandle(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkIsActivitySpectatorFromHandle"
	},
	"NetworkIsAddingFriend": {
		"body": [
			"NetworkIsAddingFriend()"
		],
		"scope": "lua",
		"prefix": "NetworkIsAddingFriend"
	},
	"NetworkIsCableConnected": {
		"body": [
			"NetworkIsCableConnected()"
		],
		"scope": "lua",
		"prefix": "NetworkIsCableConnected"
	},
	"NetworkIsChattingInPlatformParty": {
		"body": [
			"NetworkIsChattingInPlatformParty(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkIsChattingInPlatformParty"
	},
	"NetworkIsClanMembershipFinishedDownloading": {
		"body": [
			"NetworkIsClanMembershipFinishedDownloading()"
		],
		"scope": "lua",
		"prefix": "NetworkIsClanMembershipFinishedDownloading"
	},
	"NetworkIsClockTimeOverridden": {
		"body": [
			"NetworkIsClockTimeOverridden()"
		],
		"scope": "lua",
		"prefix": "NetworkIsClockTimeOverridden"
	},
	"NetworkIsCloudAvailable": {
		"body": [
			"NetworkIsCloudAvailable()"
		],
		"scope": "lua",
		"prefix": "NetworkIsCloudAvailable"
	},
	"NetworkIsCloudBackgroundScriptRequestPending": {
		"body": [
			"NetworkIsCloudBackgroundScriptRequestPending()"
		],
		"scope": "lua",
		"prefix": "NetworkIsCloudBackgroundScriptRequestPending"
	},
	"NetworkIsConnectionEndpointRelayServer": {
		"body": [
			"NetworkIsConnectionEndpointRelayServer(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkIsConnectionEndpointRelayServer"
	},
	"NetworkIsDoorNetworked": {
		"body": [
			"NetworkIsDoorNetworked(${1:doorHash})"
		],
		"scope": "lua",
		"prefix": "NetworkIsDoorNetworked"
	},
	"NetworkIsEntityConcealed": {
		"body": [
			"NetworkIsEntityConcealed(${1:entity})"
		],
		"scope": "lua",
		"prefix": "NetworkIsEntityConcealed"
	},
	"NetworkIsEntityFading": {
		"body": [
			"NetworkIsEntityFading(${1:entity})"
		],
		"scope": "lua",
		"prefix": "NetworkIsEntityFading"
	},
	"NetworkIsFindingGamers": {
		"body": [
			"NetworkIsFindingGamers()"
		],
		"scope": "lua",
		"prefix": "NetworkIsFindingGamers"
	},
	"NetworkIsFriend": {
		"body": [
			"NetworkIsFriend(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkIsFriend"
	},
	"NetworkIsFriendHandleOnline": {
		"body": [
			"NetworkIsFriendHandleOnline(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkIsFriendHandleOnline"
	},
	"NetworkIsFriendIndexOnline": {
		"body": [
			"NetworkIsFriendIndexOnline(${1:friendIndex})"
		],
		"scope": "lua",
		"prefix": "NetworkIsFriendIndexOnline"
	},
	"NetworkIsFriendInMultiplayer": {
		"body": [
			"NetworkIsFriendInMultiplayer(${1:friendName})"
		],
		"scope": "lua",
		"prefix": "NetworkIsFriendInMultiplayer"
	},
	"NetworkIsFriendInSameTitle": {
		"body": [
			"NetworkIsFriendInSameTitle(${1:friendName})"
		],
		"scope": "lua",
		"prefix": "NetworkIsFriendInSameTitle"
	},
	"NetworkIsFriendOnline": {
		"body": [
			"NetworkIsFriendOnline(${1:name})"
		],
		"scope": "lua",
		"prefix": "NetworkIsFriendOnline"
	},
	"NetworkIsGameInProgress": {
		"body": [
			"NetworkIsGameInProgress()"
		],
		"scope": "lua",
		"prefix": "NetworkIsGameInProgress"
	},
	"NetworkIsGamerBlockedByMe": {
		"body": [
			"NetworkIsGamerBlockedByMe(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkIsGamerBlockedByMe"
	},
	"NetworkIsGamerInMySession": {
		"body": [
			"NetworkIsGamerInMySession(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkIsGamerInMySession"
	},
	"NetworkIsGamerMutedByMe": {
		"body": [
			"NetworkIsGamerMutedByMe(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkIsGamerMutedByMe"
	},
	"NetworkIsGamerTalking": {
		"body": [
			"NetworkIsGamerTalking(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkIsGamerTalking"
	},
	"NetworkIsGettingGamerStatus": {
		"body": [
			"NetworkIsGettingGamerStatus()"
		],
		"scope": "lua",
		"prefix": "NetworkIsGettingGamerStatus"
	},
	"NetworkIsHandleValid": {
		"body": [
			"NetworkIsHandleValid(${1:bufferSize})"
		],
		"scope": "lua",
		"prefix": "NetworkIsHandleValid"
	},
	"NetworkIsHost": {
		"body": [
			"NetworkIsHost()"
		],
		"scope": "lua",
		"prefix": "NetworkIsHost"
	},
	"NetworkIsHostOfThisScript": {
		"body": [
			"NetworkIsHostOfThisScript()"
		],
		"scope": "lua",
		"prefix": "NetworkIsHostOfThisScript"
	},
	"NetworkIsInactiveProfile": {
		"body": [
			"NetworkIsInactiveProfile(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkIsInactiveProfile"
	},
	"NetworkIsInMpCutscene": {
		"body": [
			"NetworkIsInMpCutscene()"
		],
		"scope": "lua",
		"prefix": "NetworkIsInMpCutscene"
	},
	"NetworkIsInParty": {
		"body": [
			"NetworkIsInParty()"
		],
		"scope": "lua",
		"prefix": "NetworkIsInParty"
	},
	"NetworkIsInPlatformParty": {
		"body": [
			"NetworkIsInPlatformParty()"
		],
		"scope": "lua",
		"prefix": "NetworkIsInPlatformParty"
	},
	"NetworkIsInPlatformPartyChat": {
		"body": [
			"NetworkIsInPlatformPartyChat()"
		],
		"scope": "lua",
		"prefix": "NetworkIsInPlatformPartyChat"
	},
	"NetworkIsInSession": {
		"body": [
			"NetworkIsInSession()"
		],
		"scope": "lua",
		"prefix": "NetworkIsInSession"
	},
	"NetworkIsInSpectatorMode": {
		"body": [
			"NetworkIsInSpectatorMode()"
		],
		"scope": "lua",
		"prefix": "NetworkIsInSpectatorMode"
	},
	"NetworkIsInTransition": {
		"body": [
			"NetworkIsInTransition()"
		],
		"scope": "lua",
		"prefix": "NetworkIsInTransition"
	},
	"NetworkIsInTutorialSession": {
		"body": [
			"NetworkIsInTutorialSession()"
		],
		"scope": "lua",
		"prefix": "NetworkIsInTutorialSession"
	},
	"NetworkIsLocalPlayerInvincible": {
		"body": [
			"NetworkIsLocalPlayerInvincible()"
		],
		"scope": "lua",
		"prefix": "NetworkIsLocalPlayerInvincible"
	},
	"NetworkIsLocalTalking": {
		"body": [
			"NetworkIsLocalTalking()"
		],
		"scope": "lua",
		"prefix": "NetworkIsLocalTalking"
	},
	"NetworkIsMultiplayerDisabled": {
		"body": [
			"NetworkIsMultiplayerDisabled()"
		],
		"scope": "lua",
		"prefix": "NetworkIsMultiplayerDisabled"
	},
	"NetworkIsOfflineInvitePending": {
		"body": [
			"NetworkIsOfflineInvitePending()"
		],
		"scope": "lua",
		"prefix": "NetworkIsOfflineInvitePending"
	},
	"NetworkIsParticipantActive": {
		"body": [
			"NetworkIsParticipantActive(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkIsParticipantActive"
	},
	"NetworkIsPartyMember": {
		"body": [
			"NetworkIsPartyMember(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkIsPartyMember"
	},
	"NetworkIsPendingFriend": {
		"body": [
			"NetworkIsPendingFriend(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkIsPendingFriend"
	},
	"NetworkIsPlayerActive": {
		"body": [
			"NetworkIsPlayerActive(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkIsPlayerActive"
	},
	"NetworkIsPlayerAParticipant": {
		"body": [
			"NetworkIsPlayerAParticipant(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkIsPlayerAParticipant"
	},
	"NetworkIsPlayerAParticipantOnScript": {
		"body": [
			"NetworkIsPlayerAParticipantOnScript(${1:p0}, ${2:script}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkIsPlayerAParticipantOnScript"
	},
	"NetworkIsPlayerBlockedByMe": {
		"body": [
			"NetworkIsPlayerBlockedByMe(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkIsPlayerBlockedByMe"
	},
	"NetworkIsPlayerConcealed": {
		"body": [
			"NetworkIsPlayerConcealed(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkIsPlayerConcealed"
	},
	"NetworkIsPlayerConnected": {
		"body": [
			"NetworkIsPlayerConnected(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkIsPlayerConnected"
	},
	"NetworkIsPlayerEqualToIndex": {
		"body": [
			"NetworkIsPlayerEqualToIndex(${1:player}, ${2:index})"
		],
		"scope": "lua",
		"prefix": "NetworkIsPlayerEqualToIndex"
	},
	"NetworkIsPlayerFading": {
		"body": [
			"NetworkIsPlayerFading(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkIsPlayerFading"
	},
	"NetworkIsPlayerInMpCutscene": {
		"body": [
			"NetworkIsPlayerInMpCutscene(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkIsPlayerInMpCutscene"
	},
	"NetworkIsPlayerMutedByMe": {
		"body": [
			"NetworkIsPlayerMutedByMe(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkIsPlayerMutedByMe"
	},
	"NetworkIsPlayerTalking": {
		"body": [
			"NetworkIsPlayerTalking(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkIsPlayerTalking"
	},
	"NetworkIsPsnAvailable": {
		"body": [
			"NetworkIsPsnAvailable()"
		],
		"scope": "lua",
		"prefix": "NetworkIsPsnAvailable"
	},
	"NetworkIsScriptActive": {
		"body": [
			"NetworkIsScriptActive(${1:scriptName}, ${2:player}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkIsScriptActive"
	},
	"NetworkIsScriptActiveByHash": {
		"body": [
			"NetworkIsScriptActiveByHash(${1:scriptHash}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkIsScriptActiveByHash"
	},
	"NetworkIsSessionActive": {
		"body": [
			"NetworkIsSessionActive()"
		],
		"scope": "lua",
		"prefix": "NetworkIsSessionActive"
	},
	"NetworkIsSessionBusy": {
		"body": [
			"NetworkIsSessionBusy()"
		],
		"scope": "lua",
		"prefix": "NetworkIsSessionBusy"
	},
	"NetworkIsSessionStarted": {
		"body": [
			"NetworkIsSessionStarted()"
		],
		"scope": "lua",
		"prefix": "NetworkIsSessionStarted"
	},
	"NetworkIsSignedIn": {
		"body": [
			"NetworkIsSignedIn()"
		],
		"scope": "lua",
		"prefix": "NetworkIsSignedIn"
	},
	"NetworkIsSignedOnline": {
		"body": [
			"NetworkIsSignedOnline()"
		],
		"scope": "lua",
		"prefix": "NetworkIsSignedOnline"
	},
	"NetworkIsTextChatActive": {
		"body": [
			"NetworkIsTextChatActive()"
		],
		"scope": "lua",
		"prefix": "NetworkIsTextChatActive"
	},
	"NetworkIsThisScriptMarked": {
		"body": [
			"NetworkIsThisScriptMarked(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkIsThisScriptMarked"
	},
	"NetworkIsTransitionBusy": {
		"body": [
			"NetworkIsTransitionBusy()"
		],
		"scope": "lua",
		"prefix": "NetworkIsTransitionBusy"
	},
	"NetworkIsTransitionClosedCrew": {
		"body": [
			"NetworkIsTransitionClosedCrew()"
		],
		"scope": "lua",
		"prefix": "NetworkIsTransitionClosedCrew"
	},
	"NetworkIsTransitionClosedFriends": {
		"body": [
			"NetworkIsTransitionClosedFriends()"
		],
		"scope": "lua",
		"prefix": "NetworkIsTransitionClosedFriends"
	},
	"NetworkIsTransitionHost": {
		"body": [
			"NetworkIsTransitionHost()"
		],
		"scope": "lua",
		"prefix": "NetworkIsTransitionHost"
	},
	"NetworkIsTransitionHostFromHandle": {
		"body": [
			"NetworkIsTransitionHostFromHandle(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkIsTransitionHostFromHandle"
	},
	"NetworkIsTransitionMatchmaking": {
		"body": [
			"NetworkIsTransitionMatchmaking()"
		],
		"scope": "lua",
		"prefix": "NetworkIsTransitionMatchmaking"
	},
	"NetworkIsTransitionOpenToMatchmaking": {
		"body": [
			"NetworkIsTransitionOpenToMatchmaking()"
		],
		"scope": "lua",
		"prefix": "NetworkIsTransitionOpenToMatchmaking"
	},
	"NetworkIsTransitionPrivate": {
		"body": [
			"NetworkIsTransitionPrivate()"
		],
		"scope": "lua",
		"prefix": "NetworkIsTransitionPrivate"
	},
	"NetworkIsTransitionSolo": {
		"body": [
			"NetworkIsTransitionSolo()"
		],
		"scope": "lua",
		"prefix": "NetworkIsTransitionSolo"
	},
	"NetworkIsTransitionStarted": {
		"body": [
			"NetworkIsTransitionStarted()"
		],
		"scope": "lua",
		"prefix": "NetworkIsTransitionStarted"
	},
	"NetworkIsTransitionToGame": {
		"body": [
			"NetworkIsTransitionToGame()"
		],
		"scope": "lua",
		"prefix": "NetworkIsTransitionToGame"
	},
	"NetworkIsTransitionVisibilityLocked": {
		"body": [
			"NetworkIsTransitionVisibilityLocked()"
		],
		"scope": "lua",
		"prefix": "NetworkIsTransitionVisibilityLocked"
	},
	"NetworkIsTunableCloudRequestPending": {
		"body": [
			"NetworkIsTunableCloudRequestPending()"
		],
		"scope": "lua",
		"prefix": "NetworkIsTunableCloudRequestPending"
	},
	"NetworkIsTutorialSessionChangePending": {
		"body": [
			"NetworkIsTutorialSessionChangePending()"
		],
		"scope": "lua",
		"prefix": "NetworkIsTutorialSessionChangePending"
	},
	"NetworkJoinGroupActivity": {
		"body": [
			"NetworkJoinGroupActivity()"
		],
		"scope": "lua",
		"prefix": "NetworkJoinGroupActivity"
	},
	"NetworkJoinPreviouslyFailedSession": {
		"body": [
			"NetworkJoinPreviouslyFailedSession()"
		],
		"scope": "lua",
		"prefix": "NetworkJoinPreviouslyFailedSession"
	},
	"NetworkJoinPreviouslyFailedTransition": {
		"body": [
			"NetworkJoinPreviouslyFailedTransition()"
		],
		"scope": "lua",
		"prefix": "NetworkJoinPreviouslyFailedTransition"
	},
	"NetworkJoinTransition": {
		"body": [
			"NetworkJoinTransition(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkJoinTransition"
	},
	"NetworkLaunchTransition": {
		"body": [
			"NetworkLaunchTransition()"
		],
		"scope": "lua",
		"prefix": "NetworkLaunchTransition"
	},
	"NetworkLeaveTransition": {
		"body": [
			"NetworkLeaveTransition()"
		],
		"scope": "lua",
		"prefix": "NetworkLeaveTransition"
	},
	"NetworkManualDeleteCharacter": {
		"body": [
			"NetworkManualDeleteCharacter(${1:characterSlot})"
		],
		"scope": "lua",
		"prefix": "NetworkManualDeleteCharacter"
	},
	"NetworkMarkTransitionGamerAsFullyJoined": {
		"body": [
			"NetworkMarkTransitionGamerAsFullyJoined(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkMarkTransitionGamerAsFullyJoined"
	},
	"NetworkMemberIdFromGamerHandle": {
		"body": [
			"NetworkMemberIdFromGamerHandle(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkMemberIdFromGamerHandle"
	},
	"NetworkMoneyCanBet": {
		"body": [
			"NetworkMoneyCanBet(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkMoneyCanBet"
	},
	"NetworkOpenTransitionMatchmaking": {
		"body": [
			"NetworkOpenTransitionMatchmaking()"
		],
		"scope": "lua",
		"prefix": "NetworkOpenTransitionMatchmaking"
	},
	"NetworkOverrideChatRestrictions": {
		"body": [
			"NetworkOverrideChatRestrictions(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkOverrideChatRestrictions"
	},
	"NetworkOverrideClockMillisecondsPerGameMinute": {
		"body": [
			"NetworkOverrideClockMillisecondsPerGameMinute(${1:ms})"
		],
		"scope": "lua",
		"prefix": "NetworkOverrideClockMillisecondsPerGameMinute"
	},
	"NetworkOverrideClockTime": {
		"body": [
			"NetworkOverrideClockTime(${1:hours}, ${2:minutes}, ${3:seconds})"
		],
		"scope": "lua",
		"prefix": "NetworkOverrideClockTime"
	},
	"NetworkOverrideCoordsAndHeading": {
		"body": [
			"NetworkOverrideCoordsAndHeading(${1:entity}, ${2:x}, ${3:y}, ${4:z}, ${5:heading})"
		],
		"scope": "lua",
		"prefix": "NetworkOverrideCoordsAndHeading"
	},
	"NetworkOverrideReceiveRestrictions": {
		"body": [
			"NetworkOverrideReceiveRestrictions(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkOverrideReceiveRestrictions"
	},
	"NetworkOverrideReceiveRestrictionsAll": {
		"body": [
			"NetworkOverrideReceiveRestrictionsAll(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkOverrideReceiveRestrictionsAll"
	},
	"NetworkOverrideSendRestrictions": {
		"body": [
			"NetworkOverrideSendRestrictions(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkOverrideSendRestrictions"
	},
	"NetworkOverrideSendRestrictionsAll": {
		"body": [
			"NetworkOverrideSendRestrictionsAll(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkOverrideSendRestrictionsAll"
	},
	"NetworkOverrideTeamRestrictions": {
		"body": [
			"NetworkOverrideTeamRestrictions(${1:team}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkOverrideTeamRestrictions"
	},
	"NetworkOverrideTransitionChat": {
		"body": [
			"NetworkOverrideTransitionChat(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkOverrideTransitionChat"
	},
	"NetworkPayEmployeeWage": {
		"body": [
			"NetworkPayEmployeeWage(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkPayEmployeeWage"
	},
	"NetworkPayMatchEntryFee": {
		"body": [
			"NetworkPayMatchEntryFee(${1:amount}, ${2:p2}, ${3:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkPayMatchEntryFee"
	},
	"NetworkPayUtilityBill": {
		"body": [
			"NetworkPayUtilityBill(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkPayUtilityBill"
	},
	"NetworkPlayerGetCheaterReason": {
		"body": [
			"NetworkPlayerGetCheaterReason()"
		],
		"scope": "lua",
		"prefix": "NetworkPlayerGetCheaterReason"
	},
	"NetworkPlayerGetName": {
		"body": [
			"NetworkPlayerGetName(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkPlayerGetName"
	},
	"NetworkPlayerGetUserid": {
		"body": [
			"NetworkPlayerGetUserid(${1:player}, ${2:userID})"
		],
		"scope": "lua",
		"prefix": "NetworkPlayerGetUserid"
	},
	"NetworkPlayerHasHeadset": {
		"body": [
			"NetworkPlayerHasHeadset(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkPlayerHasHeadset"
	},
	"NetworkPlayerIdToInt": {
		"body": [
			"NetworkPlayerIdToInt()"
		],
		"scope": "lua",
		"prefix": "NetworkPlayerIdToInt"
	},
	"NetworkPlayerIndexIsCheater": {
		"body": [
			"NetworkPlayerIndexIsCheater(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkPlayerIndexIsCheater"
	},
	"NetworkPlayerIsBadsport": {
		"body": [
			"NetworkPlayerIsBadsport()"
		],
		"scope": "lua",
		"prefix": "NetworkPlayerIsBadsport"
	},
	"NetworkPlayerIsCheater": {
		"body": [
			"NetworkPlayerIsCheater()"
		],
		"scope": "lua",
		"prefix": "NetworkPlayerIsCheater"
	},
	"NetworkPlayerIsRockstarDev": {
		"body": [
			"NetworkPlayerIsRockstarDev(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkPlayerIsRockstarDev"
	},
	"NetworkQueryRespawnResults": {
		"body": [
			"NetworkQueryRespawnResults(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkQueryRespawnResults"
	},
	"NetworkQueueGamerForStatus": {
		"body": [
			"NetworkQueueGamerForStatus(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkQueueGamerForStatus"
	},
	"NetworkReceivePlayerJobshareCash": {
		"body": [
			"NetworkReceivePlayerJobshareCash(${1:value}, ${2:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkReceivePlayerJobshareCash"
	},
	"NetworkRefundCash": {
		"body": [
			"NetworkRefundCash(${1:index}, ${2:context}, ${3:reason}, ${4:unk})"
		],
		"scope": "lua",
		"prefix": "NetworkRefundCash"
	},
	"NetworkRegisterEntityAsNetworked": {
		"body": [
			"NetworkRegisterEntityAsNetworked(${1:entity})"
		],
		"scope": "lua",
		"prefix": "NetworkRegisterEntityAsNetworked"
	},
	"NetworkRegisterHostBroadcastVariables": {
		"body": [
			"NetworkRegisterHostBroadcastVariables(${1:numVars})"
		],
		"scope": "lua",
		"prefix": "NetworkRegisterHostBroadcastVariables"
	},
	"NetworkRegisterPlayerBroadcastVariables": {
		"body": [
			"NetworkRegisterPlayerBroadcastVariables(${1:numVars})"
		],
		"scope": "lua",
		"prefix": "NetworkRegisterPlayerBroadcastVariables"
	},
	"NetworkRegisterTunableBoolHash": {
		"body": [
			"NetworkRegisterTunableBoolHash(${1:contextHash}, ${2:nameHash}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "NetworkRegisterTunableBoolHash"
	},
	"NetworkRegisterTunableFloatHash": {
		"body": [
			"NetworkRegisterTunableFloatHash(${1:contextHash}, ${2:nameHash}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "NetworkRegisterTunableFloatHash"
	},
	"NetworkRegisterTunableIntHash": {
		"body": [
			"NetworkRegisterTunableIntHash(${1:contextHash}, ${2:nameHash}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "NetworkRegisterTunableIntHash"
	},
	"NetworkRemoveAllTransitionInvite": {
		"body": [
			"NetworkRemoveAllTransitionInvite()"
		],
		"scope": "lua",
		"prefix": "NetworkRemoveAllTransitionInvite"
	},
	"NetworkRemoveEntityArea": {
		"body": [
			"NetworkRemoveEntityArea(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkRemoveEntityArea"
	},
	"NetworkRemovePresenceInvite": {
		"body": [
			"NetworkRemovePresenceInvite(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkRemovePresenceInvite"
	},
	"NetworkRemoveTransitionInvite": {
		"body": [
			"NetworkRemoveTransitionInvite(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkRemoveTransitionInvite"
	},
	"NetworkReportMyself": {
		"body": [
			"NetworkReportMyself()"
		],
		"scope": "lua",
		"prefix": "NetworkReportMyself"
	},
	"NetworkRequestCloudBackgroundScripts": {
		"body": [
			"NetworkRequestCloudBackgroundScripts()"
		],
		"scope": "lua",
		"prefix": "NetworkRequestCloudBackgroundScripts"
	},
	"NetworkRequestCloudTunables": {
		"body": [
			"NetworkRequestCloudTunables()"
		],
		"scope": "lua",
		"prefix": "NetworkRequestCloudTunables"
	},
	"NetworkRequestControlOfDoor": {
		"body": [
			"NetworkRequestControlOfDoor(${1:doorID})"
		],
		"scope": "lua",
		"prefix": "NetworkRequestControlOfDoor"
	},
	"NetworkRequestControlOfEntity": {
		"body": [
			"NetworkRequestControlOfEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "NetworkRequestControlOfEntity"
	},
	"NetworkRequestControlOfNetworkId": {
		"body": [
			"NetworkRequestControlOfNetworkId(${1:netId})"
		],
		"scope": "lua",
		"prefix": "NetworkRequestControlOfNetworkId"
	},
	"NetworkResetBodyTracker": {
		"body": [
			"NetworkResetBodyTracker()"
		],
		"scope": "lua",
		"prefix": "NetworkResetBodyTracker"
	},
	"NetworkRespawnCoords": {
		"body": [
			"NetworkRespawnCoords(${1:player}, ${2:x}, ${3:y}, ${4:z}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "NetworkRespawnCoords"
	},
	"NetworkResurrectLocalPlayer": {
		"body": [
			"NetworkResurrectLocalPlayer(${1:x}, ${2:y}, ${3:z}, ${4:heading}, ${5:unk}, ${6:changetime})"
		],
		"scope": "lua",
		"prefix": "NetworkResurrectLocalPlayer"
	},
	"NetworkRivalDeliveryCompleted": {
		"body": [
			"NetworkRivalDeliveryCompleted(${1:earnedMoney})"
		],
		"scope": "lua",
		"prefix": "NetworkRivalDeliveryCompleted"
	},
	"NetworkSeedRandomNumberGenerator": {
		"body": [
			"NetworkSeedRandomNumberGenerator(${1:seed})"
		],
		"scope": "lua",
		"prefix": "NetworkSeedRandomNumberGenerator"
	},
	"NetworkSendInviteViaPresence": {
		"body": [
			"NetworkSendInviteViaPresence(${1:p2}, ${2:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSendInviteViaPresence"
	},
	"NetworkSendPresenceTransitionInvite": {
		"body": [
			"NetworkSendPresenceTransitionInvite(${1:p2}, ${2:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSendPresenceTransitionInvite"
	},
	"NetworkSendTextMessage": {
		"body": [
			"NetworkSendTextMessage(${1:message}, ${2:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkSendTextMessage"
	},
	"NetworkSendTransitionGamerInstruction": {
		"body": [
			"NetworkSendTransitionGamerInstruction(${1:p1}, ${2:p2}, ${3:p3}, ${4:p4})"
		],
		"scope": "lua",
		"prefix": "NetworkSendTransitionGamerInstruction"
	},
	"NetworkSessionActivityQuickmatch": {
		"body": [
			"NetworkSessionActivityQuickmatch(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionActivityQuickmatch"
	},
	"NetworkSessionBlockJoinRequests": {
		"body": [
			"NetworkSessionBlockJoinRequests(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionBlockJoinRequests"
	},
	"NetworkSessionCancelInvite": {
		"body": [
			"NetworkSessionCancelInvite()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionCancelInvite"
	},
	"NetworkSessionChangeSlots": {
		"body": [
			"NetworkSessionChangeSlots(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionChangeSlots"
	},
	"NetworkSessionCrewMatchmaking": {
		"body": [
			"NetworkSessionCrewMatchmaking(${1:p0}, ${2:p1}, ${3:p2}, ${4:maxPlayers}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionCrewMatchmaking"
	},
	"NetworkSessionEnd": {
		"body": [
			"NetworkSessionEnd(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionEnd"
	},
	"NetworkSessionEnter": {
		"body": [
			"NetworkSessionEnter(${1:p0}, ${2:p1}, ${3:p2}, ${4:maxPlayers}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionEnter"
	},
	"NetworkSessionForceCancelInvite": {
		"body": [
			"NetworkSessionForceCancelInvite()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionForceCancelInvite"
	},
	"NetworkSessionFriendMatchmaking": {
		"body": [
			"NetworkSessionFriendMatchmaking(${1:p0}, ${2:p1}, ${3:maxPlayers}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionFriendMatchmaking"
	},
	"NetworkSessionGetInviter": {
		"body": [
			"NetworkSessionGetInviter(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionGetInviter"
	},
	"NetworkSessionGetKickVote": {
		"body": [
			"NetworkSessionGetKickVote(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionGetKickVote"
	},
	"NetworkSessionGetMatchmakingGroupFree": {
		"body": [
			"NetworkSessionGetMatchmakingGroupFree(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionGetMatchmakingGroupFree"
	},
	"NetworkSessionGetPrivateSlots": {
		"body": [
			"NetworkSessionGetPrivateSlots()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionGetPrivateSlots"
	},
	"NetworkSessionHost": {
		"body": [
			"NetworkSessionHost(${1:p0}, ${2:maxPlayers}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionHost"
	},
	"NetworkSessionHostClosed": {
		"body": [
			"NetworkSessionHostClosed(${1:p0}, ${2:maxPlayers})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionHostClosed"
	},
	"NetworkSessionHostFriendsOnly": {
		"body": [
			"NetworkSessionHostFriendsOnly(${1:p0}, ${2:maxPlayers})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionHostFriendsOnly"
	},
	"NetworkSessionHostSinglePlayer": {
		"body": [
			"NetworkSessionHostSinglePlayer(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionHostSinglePlayer"
	},
	"NetworkSessionIsClosedCrew": {
		"body": [
			"NetworkSessionIsClosedCrew()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionIsClosedCrew"
	},
	"NetworkSessionIsClosedFriends": {
		"body": [
			"NetworkSessionIsClosedFriends()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionIsClosedFriends"
	},
	"NetworkSessionIsInVoiceSession": {
		"body": [
			"NetworkSessionIsInVoiceSession()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionIsInVoiceSession"
	},
	"NetworkSessionIsPrivate": {
		"body": [
			"NetworkSessionIsPrivate()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionIsPrivate"
	},
	"NetworkSessionIsSolo": {
		"body": [
			"NetworkSessionIsSolo()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionIsSolo"
	},
	"NetworkSessionIsVisible": {
		"body": [
			"NetworkSessionIsVisible()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionIsVisible"
	},
	"NetworkSessionIsVoiceSessionBusy": {
		"body": [
			"NetworkSessionIsVoiceSessionBusy()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionIsVoiceSessionBusy"
	},
	"NetworkSessionJoinInvite": {
		"body": [
			"NetworkSessionJoinInvite()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionJoinInvite"
	},
	"NetworkSessionKickPlayer": {
		"body": [
			"NetworkSessionKickPlayer(${1:player})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionKickPlayer"
	},
	"NetworkSessionLeaveSinglePlayer": {
		"body": [
			"NetworkSessionLeaveSinglePlayer()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionLeaveSinglePlayer"
	},
	"NetworkSessionMarkVisible": {
		"body": [
			"NetworkSessionMarkVisible(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionMarkVisible"
	},
	"NetworkSessionSetMatchmakingGroup": {
		"body": [
			"NetworkSessionSetMatchmakingGroup(${1:matchmakingGroup})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionSetMatchmakingGroup"
	},
	"NetworkSessionSetMatchmakingGroupMax": {
		"body": [
			"NetworkSessionSetMatchmakingGroupMax(${1:playerType}, ${2:playerCount})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionSetMatchmakingGroupMax"
	},
	"NetworkSessionSetMatchmakingMentalState": {
		"body": [
			"NetworkSessionSetMatchmakingMentalState(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionSetMatchmakingMentalState"
	},
	"NetworkSessionSetMatchmakingPropertyId": {
		"body": [
			"NetworkSessionSetMatchmakingPropertyId(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionSetMatchmakingPropertyId"
	},
	"NetworkSessionValidateJoin": {
		"body": [
			"NetworkSessionValidateJoin(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionValidateJoin"
	},
	"NetworkSessionVoiceConnectToPlayer": {
		"body": [
			"NetworkSessionVoiceConnectToPlayer(${1:globalPtr})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionVoiceConnectToPlayer"
	},
	"NetworkSessionVoiceHost": {
		"body": [
			"NetworkSessionVoiceHost()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionVoiceHost"
	},
	"NetworkSessionVoiceLeave": {
		"body": [
			"NetworkSessionVoiceLeave()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionVoiceLeave"
	},
	"NetworkSessionVoiceRespondToRequest": {
		"body": [
			"NetworkSessionVoiceRespondToRequest(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionVoiceRespondToRequest"
	},
	"NetworkSessionVoiceSetTimeout": {
		"body": [
			"NetworkSessionVoiceSetTimeout(${1:timeout})"
		],
		"scope": "lua",
		"prefix": "NetworkSessionVoiceSetTimeout"
	},
	"NetworkSessionWasInvited": {
		"body": [
			"NetworkSessionWasInvited()"
		],
		"scope": "lua",
		"prefix": "NetworkSessionWasInvited"
	},
	"NetworkSetActivitySpectator": {
		"body": [
			"NetworkSetActivitySpectator(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetActivitySpectator"
	},
	"NetworkSetActivitySpectatorMax": {
		"body": [
			"NetworkSetActivitySpectatorMax(${1:maxSpectators})"
		],
		"scope": "lua",
		"prefix": "NetworkSetActivitySpectatorMax"
	},
	"NetworkSetChoiceMigrateOptions": {
		"body": [
			"NetworkSetChoiceMigrateOptions(${1:toggle}, ${2:player})"
		],
		"scope": "lua",
		"prefix": "NetworkSetChoiceMigrateOptions"
	},
	"NetworkSetCurrentDataManagerHandle": {
		"body": [
			"NetworkSetCurrentDataManagerHandle(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkSetCurrentDataManagerHandle"
	},
	"NetworkSetCurrentlySelectedGamerHandleFromInviteMenu": {
		"body": [
			"NetworkSetCurrentlySelectedGamerHandleFromInviteMenu(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkSetCurrentlySelectedGamerHandleFromInviteMenu"
	},
	"NetworkSetEntityCanBlend": {
		"body": [
			"NetworkSetEntityCanBlend(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetEntityCanBlend"
	},
	"NetworkSetEntityGhostedWithOwner": {
		"body": [
			"NetworkSetEntityGhostedWithOwner(${1:entity}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkSetEntityGhostedWithOwner"
	},
	"NetworkSetEntityInvisibleToNetwork": {
		"body": [
			"NetworkSetEntityInvisibleToNetwork(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetEntityInvisibleToNetwork"
	},
	"NetworkSetFriendlyFireOption": {
		"body": [
			"NetworkSetFriendlyFireOption(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetFriendlyFireOption"
	},
	"NetworkSetGamerInvitedToTransition": {
		"body": [
			"NetworkSetGamerInvitedToTransition(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetGamerInvitedToTransition"
	},
	"NetworkSetInFreeCamMode": {
		"body": [
			"NetworkSetInFreeCamMode(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetInFreeCamMode"
	},
	"NetworkSetInMpCutscene": {
		"body": [
			"NetworkSetInMpCutscene(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkSetInMpCutscene"
	},
	"NetworkSetInSpectatorMode": {
		"body": [
			"NetworkSetInSpectatorMode(${1:toggle}, ${2:playerPed})"
		],
		"scope": "lua",
		"prefix": "NetworkSetInSpectatorMode"
	},
	"NetworkSetInSpectatorModeExtended": {
		"body": [
			"NetworkSetInSpectatorModeExtended(${1:toggle}, ${2:playerPed}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSetInSpectatorModeExtended"
	},
	"NetworkSetInviteOnCallForInviteMenu": {
		"body": [
			"NetworkSetInviteOnCallForInviteMenu(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkSetInviteOnCallForInviteMenu"
	},
	"NetworkSetLocalPlayerInvincibleTime": {
		"body": [
			"NetworkSetLocalPlayerInvincibleTime(${1:time})"
		],
		"scope": "lua",
		"prefix": "NetworkSetLocalPlayerInvincibleTime"
	},
	"NetworkSetLocalPlayerSyncLookAt": {
		"body": [
			"NetworkSetLocalPlayerSyncLookAt(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetLocalPlayerSyncLookAt"
	},
	"NetworkSetMissionFinished": {
		"body": [
			"NetworkSetMissionFinished()"
		],
		"scope": "lua",
		"prefix": "NetworkSetMissionFinished"
	},
	"NetworkSetNetworkIdDynamic": {
		"body": [
			"NetworkSetNetworkIdDynamic(${1:netID}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetNetworkIdDynamic"
	},
	"NetworkSetNoSpectatorChat": {
		"body": [
			"NetworkSetNoSpectatorChat(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetNoSpectatorChat"
	},
	"NetworkSetOverrideSpectatorMode": {
		"body": [
			"NetworkSetOverrideSpectatorMode(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetOverrideSpectatorMode"
	},
	"NetworkSetPlayerIsPassive": {
		"body": [
			"NetworkSetPlayerIsPassive(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetPlayerIsPassive"
	},
	"NetworkSetPropertyId": {
		"body": [
			"NetworkSetPropertyId(${1:id})"
		],
		"scope": "lua",
		"prefix": "NetworkSetPropertyId"
	},
	"NetworkSetRichPresence": {
		"body": [
			"NetworkSetRichPresence(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSetRichPresence"
	},
	"NetworkSetRichPresenceString": {
		"body": [
			"NetworkSetRichPresenceString(${1:p0}, ${2:textLabel})"
		],
		"scope": "lua",
		"prefix": "NetworkSetRichPresenceString"
	},
	"NetworkSetScriptIsSafeForNetworkGame": {
		"body": [
			"NetworkSetScriptIsSafeForNetworkGame()"
		],
		"scope": "lua",
		"prefix": "NetworkSetScriptIsSafeForNetworkGame"
	},
	"NetworkSetScriptReadyForEvents": {
		"body": [
			"NetworkSetScriptReadyForEvents(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetScriptReadyForEvents"
	},
	"NetworkSetTalkerProximity": {
		"body": [
			"NetworkSetTalkerProximity(${1:value})"
		],
		"scope": "lua",
		"prefix": "NetworkSetTalkerProximity"
	},
	"NetworkSetTeamOnlyChat": {
		"body": [
			"NetworkSetTeamOnlyChat(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetTeamOnlyChat"
	},
	"NetworkSetThisScriptIsNetworkScript": {
		"body": [
			"NetworkSetThisScriptIsNetworkScript(${1:lobbySize}, ${2:p1}, ${3:playerId})"
		],
		"scope": "lua",
		"prefix": "NetworkSetThisScriptIsNetworkScript"
	},
	"NetworkSetTransitionActivityId": {
		"body": [
			"NetworkSetTransitionActivityId(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkSetTransitionActivityId"
	},
	"NetworkSetTransitionCreatorHandle": {
		"body": [
			"NetworkSetTransitionCreatorHandle(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkSetTransitionCreatorHandle"
	},
	"NetworkSetTransitionVisibilityLock": {
		"body": [
			"NetworkSetTransitionVisibilityLock(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "NetworkSetTransitionVisibilityLock"
	},
	"NetworkSetVehicleWheelsDestructible": {
		"body": [
			"NetworkSetVehicleWheelsDestructible(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetVehicleWheelsDestructible"
	},
	"NetworkSetVoiceActive": {
		"body": [
			"NetworkSetVoiceActive(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSetVoiceActive"
	},
	"NetworkSetVoiceChannel": {
		"body": [
			"NetworkSetVoiceChannel(${1:channel})"
		],
		"scope": "lua",
		"prefix": "NetworkSetVoiceChannel"
	},
	"NetworkShouldShowConnectivityTroubleshooting": {
		"body": [
			"NetworkShouldShowConnectivityTroubleshooting()"
		],
		"scope": "lua",
		"prefix": "NetworkShouldShowConnectivityTroubleshooting"
	},
	"NetworkShowProfileUi": {
		"body": [
			"NetworkShowProfileUi(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkShowProfileUi"
	},
	"NetworkSpentAmmoDrop": {
		"body": [
			"NetworkSpentAmmoDrop(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentAmmoDrop"
	},
	"NetworkSpentArcadeGame": {
		"body": [
			"NetworkSpentArcadeGame(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentArcadeGame"
	},
	"NetworkSpentArcadeGeneric": {
		"body": [
			"NetworkSpentArcadeGeneric(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentArcadeGeneric"
	},
	"NetworkSpentArenaJoinSpectator": {
		"body": [
			"NetworkSpentArenaJoinSpectator(${1:amount}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentArenaJoinSpectator"
	},
	"NetworkSpentArenaPremium": {
		"body": [
			"NetworkSpentArenaPremium(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentArenaPremium"
	},
	"NetworkSpentArenaSpectatorBox": {
		"body": [
			"NetworkSpentArenaSpectatorBox(${1:amount}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentArenaSpectatorBox"
	},
	"NetworkSpentArrestBail": {
		"body": [
			"NetworkSpentArrestBail(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentArrestBail"
	},
	"NetworkSpentBallisticEquipment": {
		"body": [
			"NetworkSpentBallisticEquipment(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBallisticEquipment"
	},
	"NetworkSpentBankInterest": {
		"body": [
			"NetworkSpentBankInterest(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBankInterest"
	},
	"NetworkSpentBaService": {
		"body": [
			"NetworkSpentBaService(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBaService"
	},
	"NetworkSpentBeachPartyGeneric": {
		"body": [
			"NetworkSpentBeachPartyGeneric(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBeachPartyGeneric"
	},
	"NetworkSpentBetting": {
		"body": [
			"NetworkSpentBetting(${1:amount}, ${2:p1}, ${3:p3}, ${4:p4})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBetting"
	},
	"NetworkSpentBoatPickup": {
		"body": [
			"NetworkSpentBoatPickup(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBoatPickup"
	},
	"NetworkSpentBoss": {
		"body": [
			"NetworkSpentBoss()"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBoss"
	},
	"NetworkSpentBounty": {
		"body": [
			"NetworkSpentBounty(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBounty"
	},
	"NetworkSpentBountyHunterMission": {
		"body": [
			"NetworkSpentBountyHunterMission(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBountyHunterMission"
	},
	"NetworkSpentBullShark": {
		"body": [
			"NetworkSpentBullShark(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBullShark"
	},
	"NetworkSpentBusiness": {
		"body": [
			"NetworkSpentBusiness(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBusiness"
	},
	"NetworkSpentBuyArena": {
		"body": [
			"NetworkSpentBuyArena(${1:amount}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBuyArena"
	},
	"NetworkSpentBuyBase": {
		"body": [
			"NetworkSpentBuyBase(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBuyBase"
	},
	"NetworkSpentBuyBunker": {
		"body": [
			"NetworkSpentBuyBunker(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBuyBunker"
	},
	"NetworkSpentBuyCasino": {
		"body": [
			"NetworkSpentBuyCasino(${1:amount}, ${2:p1}, ${3:p2}, ${4:data})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBuyCasino"
	},
	"NetworkSpentBuyOfftheradar": {
		"body": [
			"NetworkSpentBuyOfftheradar(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBuyOfftheradar"
	},
	"NetworkSpentBuyPassiveMode": {
		"body": [
			"NetworkSpentBuyPassiveMode(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBuyPassiveMode"
	},
	"NetworkSpentBuyRevealPlayers": {
		"body": [
			"NetworkSpentBuyRevealPlayers(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBuyRevealPlayers"
	},
	"NetworkSpentBuyTiltrotor": {
		"body": [
			"NetworkSpentBuyTiltrotor(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBuyTiltrotor"
	},
	"NetworkSpentBuyTruck": {
		"body": [
			"NetworkSpentBuyTruck(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBuyTruck"
	},
	"NetworkSpentBuyWantedlevel": {
		"body": [
			"NetworkSpentBuyWantedlevel(${1:p0}, ${2:p2}, ${3:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentBuyWantedlevel"
	},
	"NetworkSpentCallPlayer": {
		"body": [
			"NetworkSpentCallPlayer(${1:p0}, ${2:p2}, ${3:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentCallPlayer"
	},
	"NetworkSpentCarwash": {
		"body": [
			"NetworkSpentCarwash(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentCarwash"
	},
	"NetworkSpentCashDrop": {
		"body": [
			"NetworkSpentCashDrop(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentCashDrop"
	},
	"NetworkSpentCasinoClubGeneric": {
		"body": [
			"NetworkSpentCasinoClubGeneric(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentCasinoClubGeneric"
	},
	"NetworkSpentCasinoGeneric": {
		"body": [
			"NetworkSpentCasinoGeneric(${1:amount}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentCasinoGeneric"
	},
	"NetworkSpentCasinoHeist": {
		"body": [
			"NetworkSpentCasinoHeist(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentCasinoHeist"
	},
	"NetworkSpentCasinoHeistSkipMission": {
		"body": [
			"NetworkSpentCasinoHeistSkipMission(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentCasinoHeistSkipMission"
	},
	"NetworkSpentCasinoMembership": {
		"body": [
			"NetworkSpentCasinoMembership(${1:amount}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentCasinoMembership"
	},
	"NetworkSpentCinema": {
		"body": [
			"NetworkSpentCinema(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentCinema"
	},
	"NetworkSpentEmployAssassins": {
		"body": [
			"NetworkSpentEmployAssassins(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentEmployAssassins"
	},
	"NetworkSpentFromRockstar": {
		"body": [
			"NetworkSpentFromRockstar(${1:bank}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentFromRockstar"
	},
	"NetworkSpentGangopsCannon": {
		"body": [
			"NetworkSpentGangopsCannon(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentGangopsCannon"
	},
	"NetworkSpentGangopsStartMission": {
		"body": [
			"NetworkSpentGangopsStartMission(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentGangopsStartMission"
	},
	"NetworkSpentGangopsStartStrand": {
		"body": [
			"NetworkSpentGangopsStartStrand(${1:type}, ${2:amount}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentGangopsStartStrand"
	},
	"NetworkSpentGangopsTripSkip": {
		"body": [
			"NetworkSpentGangopsTripSkip(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentGangopsTripSkip"
	},
	"NetworkSpentHangarStaffCharges": {
		"body": [
			"NetworkSpentHangarStaffCharges(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentHangarStaffCharges"
	},
	"NetworkSpentHangarUtilityCharges": {
		"body": [
			"NetworkSpentHangarUtilityCharges(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentHangarUtilityCharges"
	},
	"NetworkSpentHeliPickup": {
		"body": [
			"NetworkSpentHeliPickup(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentHeliPickup"
	},
	"NetworkSpentHireMercenary": {
		"body": [
			"NetworkSpentHireMercenary(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentHireMercenary"
	},
	"NetworkSpentHireMugger": {
		"body": [
			"NetworkSpentHireMugger(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentHireMugger"
	},
	"NetworkSpentHoldups": {
		"body": [
			"NetworkSpentHoldups(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentHoldups"
	},
	"NetworkSpentImportExportRepair": {
		"body": [
			"NetworkSpentImportExportRepair(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentImportExportRepair"
	},
	"NetworkSpentInStripclub": {
		"body": [
			"NetworkSpentInStripclub(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentInStripclub"
	},
	"NetworkSpentIslandHeist": {
		"body": [
			"NetworkSpentIslandHeist(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentIslandHeist"
	},
	"NetworkSpentJobSkip": {
		"body": [
			"NetworkSpentJobSkip(${1:amount}, ${2:matchId}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentJobSkip"
	},
	"NetworkSpentJukebox": {
		"body": [
			"NetworkSpentJukebox(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentJukebox"
	},
	"NetworkSpentMakeItRain": {
		"body": [
			"NetworkSpentMakeItRain(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentMakeItRain"
	},
	"NetworkSpentMoveYacht": {
		"body": [
			"NetworkSpentMoveYacht(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentMoveYacht"
	},
	"NetworkSpentNightclubBarDrink": {
		"body": [
			"NetworkSpentNightclubBarDrink(${1:amount}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentNightclubBarDrink"
	},
	"NetworkSpentNightclubEntryFee": {
		"body": [
			"NetworkSpentNightclubEntryFee(${1:player}, ${2:amount}, ${3:p1}, ${4:p2}, ${5:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentNightclubEntryFee"
	},
	"NetworkSpentNoCops": {
		"body": [
			"NetworkSpentNoCops(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentNoCops"
	},
	"NetworkSpentOrderBodyguardVehicle": {
		"body": [
			"NetworkSpentOrderBodyguardVehicle(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentOrderBodyguardVehicle"
	},
	"NetworkSpentOrderWarehouseVehicle": {
		"body": [
			"NetworkSpentOrderWarehouseVehicle(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentOrderWarehouseVehicle"
	},
	"NetworkSpentPaServiceDancer": {
		"body": [
			"NetworkSpentPaServiceDancer(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentPaServiceDancer"
	},
	"NetworkSpentPaServiceHeliPickup": {
		"body": [
			"NetworkSpentPaServiceHeliPickup(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentPaServiceHeliPickup"
	},
	"NetworkSpentPayBoss": {
		"body": [
			"NetworkSpentPayBoss(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentPayBoss"
	},
	"NetworkSpentPayGoon": {
		"body": [
			"NetworkSpentPayGoon(${1:p0}, ${2:p1}, ${3:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentPayGoon"
	},
	"NetworkSpentPayVehicleInsurancePremium": {
		"body": [
			"NetworkSpentPayVehicleInsurancePremium(${1:amount}, ${2:vehicleModel}, ${3:notBankrupt}, ${4:hasTheMoney})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentPayVehicleInsurancePremium"
	},
	"NetworkSpentPlayerHealthcare": {
		"body": [
			"NetworkSpentPlayerHealthcare(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentPlayerHealthcare"
	},
	"NetworkSpentProstitutes": {
		"body": [
			"NetworkSpentProstitutes(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentProstitutes"
	},
	"NetworkSpentPurchaseHangar": {
		"body": [
			"NetworkSpentPurchaseHangar(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentPurchaseHangar"
	},
	"NetworkSpentPurchaseWarehouse": {
		"body": [
			"NetworkSpentPurchaseWarehouse(${1:amount}, ${2:data}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentPurchaseWarehouse"
	},
	"NetworkSpentRdrhatchetBonus": {
		"body": [
			"NetworkSpentRdrhatchetBonus(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentRdrhatchetBonus"
	},
	"NetworkSpentRehireDj": {
		"body": [
			"NetworkSpentRehireDj(${1:amount}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentRehireDj"
	},
	"NetworkSpentRenameOrganization": {
		"body": [
			"NetworkSpentRenameOrganization(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentRenameOrganization"
	},
	"NetworkSpentRequestHeist": {
		"body": [
			"NetworkSpentRequestHeist(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentRequestHeist"
	},
	"NetworkSpentRequestJob": {
		"body": [
			"NetworkSpentRequestJob(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentRequestJob"
	},
	"NetworkSpentRobbedByMugger": {
		"body": [
			"NetworkSpentRobbedByMugger(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentRobbedByMugger"
	},
	"NetworkSpentSpinTheWheelPayment": {
		"body": [
			"NetworkSpentSpinTheWheelPayment(${1:amount}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentSpinTheWheelPayment"
	},
	"NetworkSpentSubmarine": {
		"body": [
			"NetworkSpentSubmarine(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentSubmarine"
	},
	"NetworkSpentTaxi": {
		"body": [
			"NetworkSpentTaxi(${1:amount}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentTaxi"
	},
	"NetworkSpentTelescope": {
		"body": [
			"NetworkSpentTelescope(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentTelescope"
	},
	"NetworkSpentUpgradeArena": {
		"body": [
			"NetworkSpentUpgradeArena(${1:amount}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentUpgradeArena"
	},
	"NetworkSpentUpgradeBase": {
		"body": [
			"NetworkSpentUpgradeBase(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentUpgradeBase"
	},
	"NetworkSpentUpgradeBunker": {
		"body": [
			"NetworkSpentUpgradeBunker(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentUpgradeBunker"
	},
	"NetworkSpentUpgradeCasino": {
		"body": [
			"NetworkSpentUpgradeCasino(${1:amount}, ${2:p1}, ${3:p2}, ${4:data})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentUpgradeCasino"
	},
	"NetworkSpentUpgradeHangar": {
		"body": [
			"NetworkSpentUpgradeHangar(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentUpgradeHangar"
	},
	"NetworkSpentUpgradeTiltrotor": {
		"body": [
			"NetworkSpentUpgradeTiltrotor(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentUpgradeTiltrotor"
	},
	"NetworkSpentUpgradeTruck": {
		"body": [
			"NetworkSpentUpgradeTruck(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentUpgradeTruck"
	},
	"NetworkSpentVehicleExportMods": {
		"body": [
			"NetworkSpentVehicleExportMods(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentVehicleExportMods"
	},
	"NetworkSpentVipUtilityCharges": {
		"body": [
			"NetworkSpentVipUtilityCharges(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentVipUtilityCharges"
	},
	"NetworkSpentWager": {
		"body": [
			"NetworkSpentWager(${1:p0}, ${2:p1}, ${3:amount})"
		],
		"scope": "lua",
		"prefix": "NetworkSpentWager"
	},
	"NetworkStartRespawnSearchForPlayer": {
		"body": [
			"NetworkStartRespawnSearchForPlayer(${1:player}, ${2:x}, ${3:y}, ${4:z}, ${5:radius}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:flags})"
		],
		"scope": "lua",
		"prefix": "NetworkStartRespawnSearchForPlayer"
	},
	"NetworkStartRespawnSearchInAngledAreaForPlayer": {
		"body": [
			"NetworkStartRespawnSearchInAngledAreaForPlayer(${1:player}, ${2:x1}, ${3:y1}, ${4:z1}, ${5:x2}, ${6:y2}, ${7:z2}, ${8:width}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:flags})"
		],
		"scope": "lua",
		"prefix": "NetworkStartRespawnSearchInAngledAreaForPlayer"
	},
	"NetworkStartSoloTutorialSession": {
		"body": [
			"NetworkStartSoloTutorialSession()"
		],
		"scope": "lua",
		"prefix": "NetworkStartSoloTutorialSession"
	},
	"NetworkStartSynchronisedScene": {
		"body": [
			"NetworkStartSynchronisedScene(${1:netScene})"
		],
		"scope": "lua",
		"prefix": "NetworkStartSynchronisedScene"
	},
	"NetworkStartUserContentPermissionsCheck": {
		"body": [
			"NetworkStartUserContentPermissionsCheck(${1:netHandle})"
		],
		"scope": "lua",
		"prefix": "NetworkStartUserContentPermissionsCheck"
	},
	"NetworkStopLoadScene": {
		"body": [
			"NetworkStopLoadScene()"
		],
		"scope": "lua",
		"prefix": "NetworkStopLoadScene"
	},
	"NetworkStopSynchronisedScene": {
		"body": [
			"NetworkStopSynchronisedScene(${1:netScene})"
		],
		"scope": "lua",
		"prefix": "NetworkStopSynchronisedScene"
	},
	"NetworkSuppressInvite": {
		"body": [
			"NetworkSuppressInvite(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "NetworkSuppressInvite"
	},
	"NetworkTransitionTrack": {
		"body": [
			"NetworkTransitionTrack(${1:hash}, ${2:p1}, ${3:p2}, ${4:state}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "NetworkTransitionTrack"
	},
	"NetworkTryAccessTunableBoolHash": {
		"body": [
			"NetworkTryAccessTunableBoolHash(${1:tunableContext}, ${2:tunableName}, ${3:defaultValue})"
		],
		"scope": "lua",
		"prefix": "NetworkTryAccessTunableBoolHash"
	},
	"NetworkUnregisterNetworkedEntity": {
		"body": [
			"NetworkUnregisterNetworkedEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "NetworkUnregisterNetworkedEntity"
	},
	"NetworkUpdateLoadScene": {
		"body": [
			"NetworkUpdateLoadScene()"
		],
		"scope": "lua",
		"prefix": "NetworkUpdateLoadScene"
	},
	"NetworkUpdatePlayerScars": {
		"body": [
			"NetworkUpdatePlayerScars()"
		],
		"scope": "lua",
		"prefix": "NetworkUpdatePlayerScars"
	},
	"NewLoadSceneStart": {
		"body": [
			"NewLoadSceneStart(${1:posX}, ${2:posY}, ${3:posZ}, ${4:offsetX}, ${5:offsetY}, ${6:offsetZ}, ${7:radius}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "NewLoadSceneStart"
	},
	"NewLoadSceneStartSphere": {
		"body": [
			"NewLoadSceneStartSphere(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "NewLoadSceneStartSphere"
	},
	"NewLoadSceneStop": {
		"body": [
			"NewLoadSceneStop()"
		],
		"scope": "lua",
		"prefix": "NewLoadSceneStop"
	},
	"NextOnscreenKeyboardResultWillDisplayUsingTheseFonts": {
		"body": [
			"NextOnscreenKeyboardResultWillDisplayUsingTheseFonts(${1:p0})"
		],
		"scope": "lua",
		"prefix": "NextOnscreenKeyboardResultWillDisplayUsingTheseFonts"
	},
	"ObjToNet": {
		"body": [
			"ObjToNet(${1:object})"
		],
		"scope": "lua",
		"prefix": "ObjToNet"
	},
	"OnEnterMp": {
		"body": [
			"OnEnterMp()"
		],
		"scope": "lua",
		"prefix": "OnEnterMp"
	},
	"OnEnterSp": {
		"body": [
			"OnEnterSp()"
		],
		"scope": "lua",
		"prefix": "OnEnterSp"
	},
	"OpenBombBayDoors": {
		"body": [
			"OpenBombBayDoors(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "OpenBombBayDoors"
	},
	"OpenCommerceStore": {
		"body": [
			"OpenCommerceStore(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "OpenCommerceStore"
	},
	"OpenOnlinePoliciesMenu": {
		"body": [
			"OpenOnlinePoliciesMenu()"
		],
		"scope": "lua",
		"prefix": "OpenOnlinePoliciesMenu"
	},
	"OpenPatrolRoute": {
		"body": [
			"OpenPatrolRoute(${1:patrolRoute})"
		],
		"scope": "lua",
		"prefix": "OpenPatrolRoute"
	},
	"OpenReportugcMenu": {
		"body": [
			"OpenReportugcMenu()"
		],
		"scope": "lua",
		"prefix": "OpenReportugcMenu"
	},
	"OpenSequenceTask": {
		"body": [
			"OpenSequenceTask(${1:taskSequenceId})"
		],
		"scope": "lua",
		"prefix": "OpenSequenceTask"
	},
	"OpenSocialClubMenu": {
		"body": [
			"OpenSocialClubMenu()"
		],
		"scope": "lua",
		"prefix": "OpenSocialClubMenu"
	},
	"OrderedBossVehicle": {
		"body": [
			"OrderedBossVehicle(${1:p0}, ${2:p1}, ${3:vehicleHash})"
		],
		"scope": "lua",
		"prefix": "OrderedBossVehicle"
	},
	"OverrideCamSplineMotionBlur": {
		"body": [
			"OverrideCamSplineMotionBlur(${1:cam}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "OverrideCamSplineMotionBlur"
	},
	"OverrideCamSplineVelocity": {
		"body": [
			"OverrideCamSplineVelocity(${1:cam}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "OverrideCamSplineVelocity"
	},
	"OverrideInteriorSmokeEnd": {
		"body": [
			"OverrideInteriorSmokeEnd()"
		],
		"scope": "lua",
		"prefix": "OverrideInteriorSmokeEnd"
	},
	"OverrideInteriorSmokeLevel": {
		"body": [
			"OverrideInteriorSmokeLevel(${1:level})"
		],
		"scope": "lua",
		"prefix": "OverrideInteriorSmokeLevel"
	},
	"OverrideInteriorSmokeName": {
		"body": [
			"OverrideInteriorSmokeName(${1:name})"
		],
		"scope": "lua",
		"prefix": "OverrideInteriorSmokeName"
	},
	"OverrideLodscaleThisFrame": {
		"body": [
			"OverrideLodscaleThisFrame(${1:scaling})"
		],
		"scope": "lua",
		"prefix": "OverrideLodscaleThisFrame"
	},
	"OverrideMicrophoneSettings": {
		"body": [
			"OverrideMicrophoneSettings(${1:hash}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "OverrideMicrophoneSettings"
	},
	"OverrideMultiplayerChatColour": {
		"body": [
			"OverrideMultiplayerChatColour(${1:p0}, ${2:hudColor})"
		],
		"scope": "lua",
		"prefix": "OverrideMultiplayerChatColour"
	},
	"OverrideMultiplayerChatPrefix": {
		"body": [
			"OverrideMultiplayerChatPrefix(${1:gxtEntryHash})"
		],
		"scope": "lua",
		"prefix": "OverrideMultiplayerChatPrefix"
	},
	"OverridePedBadgeTexture": {
		"body": [
			"OverridePedBadgeTexture(${1:ped}, ${2:txd}, ${3:txn})"
		],
		"scope": "lua",
		"prefix": "OverridePedBadgeTexture"
	},
	"OverridePedsCanStandOnTopFlag": {
		"body": [
			"OverridePedsCanStandOnTopFlag(${1:flag})"
		],
		"scope": "lua",
		"prefix": "OverridePedsCanStandOnTopFlag"
	},
	"OverridePlayerGroundMaterial": {
		"body": [
			"OverridePlayerGroundMaterial(${1:hash}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "OverridePlayerGroundMaterial"
	},
	"OverridePopscheduleVehicleModel": {
		"body": [
			"OverridePopscheduleVehicleModel(${1:scheduleId}, ${2:vehicleHash})"
		],
		"scope": "lua",
		"prefix": "OverridePopscheduleVehicleModel"
	},
	"OverrideSaveHouse": {
		"body": [
			"OverrideSaveHouse(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "OverrideSaveHouse"
	},
	"OverrideTrevorRage": {
		"body": [
			"OverrideTrevorRage(${1:voiceEffect})"
		],
		"scope": "lua",
		"prefix": "OverrideTrevorRage"
	},
	"OverrideUnderwaterStream": {
		"body": [
			"OverrideUnderwaterStream(${1:p1})"
		],
		"scope": "lua",
		"prefix": "OverrideUnderwaterStream"
	},
	"OverrideVehHorn": {
		"body": [
			"OverrideVehHorn(${1:vehicle}, ${2:override}, ${3:hornHash})"
		],
		"scope": "lua",
		"prefix": "OverrideVehHorn"
	},
	"OverrideVehiclePedsCanStandOnTopFlag": {
		"body": [
			"OverrideVehiclePedsCanStandOnTopFlag(${1:vehicle}, ${2:can})"
		],
		"scope": "lua",
		"prefix": "OverrideVehiclePedsCanStandOnTopFlag"
	},
	"ParticipantId": {
		"body": [
			"ParticipantId()"
		],
		"scope": "lua",
		"prefix": "ParticipantId"
	},
	"ParticipantIdToInt": {
		"body": [
			"ParticipantIdToInt()"
		],
		"scope": "lua",
		"prefix": "ParticipantIdToInt"
	},
	"PatchDecalDiffuseMap": {
		"body": [
			"PatchDecalDiffuseMap(${1:decalType}, ${2:textureDict}, ${3:textureName})"
		],
		"scope": "lua",
		"prefix": "PatchDecalDiffuseMap"
	},
	"PauseClock": {
		"body": [
			"PauseClock(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "PauseClock"
	},
	"PauseDeathArrestRestart": {
		"body": [
			"PauseDeathArrestRestart(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "PauseDeathArrestRestart"
	},
	"PauseMenuActivateContext": {
		"body": [
			"PauseMenuActivateContext(${1:hash})"
		],
		"scope": "lua",
		"prefix": "PauseMenuActivateContext"
	},
	"PauseMenuDeactivateContext": {
		"body": [
			"PauseMenuDeactivateContext(${1:contextHash})"
		],
		"scope": "lua",
		"prefix": "PauseMenuDeactivateContext"
	},
	"PauseMenuIsContextActive": {
		"body": [
			"PauseMenuIsContextActive(${1:contextHash})"
		],
		"scope": "lua",
		"prefix": "PauseMenuIsContextActive"
	},
	"PauseMenuIsContextMenuActive": {
		"body": [
			"PauseMenuIsContextMenuActive()"
		],
		"scope": "lua",
		"prefix": "PauseMenuIsContextMenuActive"
	},
	"PauseMenuSetBusySpinner": {
		"body": [
			"PauseMenuSetBusySpinner(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "PauseMenuSetBusySpinner"
	},
	"PausePlaybackRecordedVehicle": {
		"body": [
			"PausePlaybackRecordedVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "PausePlaybackRecordedVehicle"
	},
	"PauseScriptedConversation": {
		"body": [
			"PauseScriptedConversation(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PauseScriptedConversation"
	},
	"PedHasUseScenarioTask": {
		"body": [
			"PedHasUseScenarioTask(${1:ped})"
		],
		"scope": "lua",
		"prefix": "PedHasUseScenarioTask"
	},
	"PedToNet": {
		"body": [
			"PedToNet(${1:ped})"
		],
		"scope": "lua",
		"prefix": "PedToNet"
	},
	"PerformHttpRequestInternal": {
		"body": [
			"PerformHttpRequestInternal(${1:requestData}, ${2:requestDataLength})"
		],
		"scope": "lua",
		"prefix": "PerformHttpRequestInternal"
	},
	"PinInteriorInMemory": {
		"body": [
			"PinInteriorInMemory(${1:interior})"
		],
		"scope": "lua",
		"prefix": "PinInteriorInMemory"
	},
	"PinRopeVertex": {
		"body": [
			"PinRopeVertex(${1:ropeId}, ${2:vertex}, ${3:x}, ${4:y}, ${5:z})"
		],
		"scope": "lua",
		"prefix": "PinRopeVertex"
	},
	"PlaceObjectOnGroundProperly": {
		"body": [
			"PlaceObjectOnGroundProperly(${1:object})"
		],
		"scope": "lua",
		"prefix": "PlaceObjectOnGroundProperly"
	},
	"PlaceObjectOnGroundProperly_2": {
		"body": [
			"PlaceObjectOnGroundProperly_2(${1:object})"
		],
		"scope": "lua",
		"prefix": "PlaceObjectOnGroundProperly_2"
	},
	"PlayAmbientSpeechFromPositionNative": {
		"body": [
			"PlayAmbientSpeechFromPositionNative(${1:speechName}, ${2:voiceName}, ${3:x}, ${4:y}, ${5:z}, ${6:speechParam})"
		],
		"scope": "lua",
		"prefix": "PlayAmbientSpeechFromPositionNative"
	},
	"PlayAnimalVocalization": {
		"body": [
			"PlayAnimalVocalization(${1:pedHandle}, ${2:p1}, ${3:speechName})"
		],
		"scope": "lua",
		"prefix": "PlayAnimalVocalization"
	},
	"PlayAnimOnRunningScenario": {
		"body": [
			"PlayAnimOnRunningScenario(${1:ped}, ${2:animDict}, ${3:animName})"
		],
		"scope": "lua",
		"prefix": "PlayAnimOnRunningScenario"
	},
	"PlayBinkMovie": {
		"body": [
			"PlayBinkMovie(${1:binkMovie})"
		],
		"scope": "lua",
		"prefix": "PlayBinkMovie"
	},
	"PlayCamAnim": {
		"body": [
			"PlayCamAnim(${1:cam}, ${2:animName}, ${3:animDictionary}, ${4:x}, ${5:y}, ${6:z}, ${7:xRot}, ${8:yRot}, ${9:zRot}, ${10:p9}, ${11:p10})"
		],
		"scope": "lua",
		"prefix": "PlayCamAnim"
	},
	"PlayDeferredSoundFrontend": {
		"body": [
			"PlayDeferredSoundFrontend(${1:soundName}, ${2:soundsetName})"
		],
		"scope": "lua",
		"prefix": "PlayDeferredSoundFrontend"
	},
	"PlayEndCreditsMusic": {
		"body": [
			"PlayEndCreditsMusic(${1:play})"
		],
		"scope": "lua",
		"prefix": "PlayEndCreditsMusic"
	},
	"PlayEntityAnim": {
		"body": [
			"PlayEntityAnim(${1:entity}, ${2:animName}, ${3:animDict}, ${4:p3}, ${5:loop}, ${6:stayInAnim}, ${7:p6}, ${8:delta}, ${9:bitset})"
		],
		"scope": "lua",
		"prefix": "PlayEntityAnim"
	},
	"PlayEntityScriptedAnim": {
		"body": [
			"PlayEntityScriptedAnim(${1:p0}, ${2:p4}, ${3:p5})"
		],
		"scope": "lua",
		"prefix": "PlayEntityScriptedAnim"
	},
	"PlayerAttachVirtualBound": {
		"body": [
			"PlayerAttachVirtualBound(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "PlayerAttachVirtualBound"
	},
	"PlayerDetachVirtualBound": {
		"body": [
			"PlayerDetachVirtualBound()"
		],
		"scope": "lua",
		"prefix": "PlayerDetachVirtualBound"
	},
	"PlayerId": {
		"body": [
			"PlayerId()"
		],
		"scope": "lua",
		"prefix": "PlayerId"
	},
	"PlayerPedId": {
		"body": [
			"PlayerPedId()"
		],
		"scope": "lua",
		"prefix": "PlayerPedId"
	},
	"PlayFacialAnim": {
		"body": [
			"PlayFacialAnim(${1:ped}, ${2:animName}, ${3:animDict})"
		],
		"scope": "lua",
		"prefix": "PlayFacialAnim"
	},
	"PlayMissionCompleteAudio": {
		"body": [
			"PlayMissionCompleteAudio(${1:audioName})"
		],
		"scope": "lua",
		"prefix": "PlayMissionCompleteAudio"
	},
	"PlayPain": {
		"body": [
			"PlayPain(${1:ped}, ${2:painID}, ${3:p1})"
		],
		"scope": "lua",
		"prefix": "PlayPain"
	},
	"PlayPedAmbientSpeechAndCloneNative": {
		"body": [
			"PlayPedAmbientSpeechAndCloneNative(${1:ped}, ${2:speechName}, ${3:speechParam})"
		],
		"scope": "lua",
		"prefix": "PlayPedAmbientSpeechAndCloneNative"
	},
	"PlayPedAmbientSpeechNative": {
		"body": [
			"PlayPedAmbientSpeechNative(${1:ped}, ${2:speechName}, ${3:speechParam})"
		],
		"scope": "lua",
		"prefix": "PlayPedAmbientSpeechNative"
	},
	"PlayPedAmbientSpeechWithVoiceNative": {
		"body": [
			"PlayPedAmbientSpeechWithVoiceNative(${1:ped}, ${2:speechName}, ${3:voiceName}, ${4:speechParam}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "PlayPedAmbientSpeechWithVoiceNative"
	},
	"PlayPedRingtone": {
		"body": [
			"PlayPedRingtone(${1:ringtoneName}, ${2:ped}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "PlayPedRingtone"
	},
	"PlayPoliceReport": {
		"body": [
			"PlayPoliceReport(${1:name}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "PlayPoliceReport"
	},
	"PlaySound": {
		"body": [
			"PlaySound(${1:soundId}, ${2:audioName}, ${3:audioRef}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "PlaySound"
	},
	"PlaySoundFromCoord": {
		"body": [
			"PlaySoundFromCoord(${1:soundId}, ${2:audioName}, ${3:x}, ${4:y}, ${5:z}, ${6:audioRef}, ${7:p6}, ${8:range}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "PlaySoundFromCoord"
	},
	"PlaySoundFromEntity": {
		"body": [
			"PlaySoundFromEntity(${1:soundId}, ${2:audioName}, ${3:entity}, ${4:audioRef}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "PlaySoundFromEntity"
	},
	"PlaySoundFrontend": {
		"body": [
			"PlaySoundFrontend(${1:soundId}, ${2:audioName}, ${3:audioRef}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "PlaySoundFrontend"
	},
	"PlaystatsAcquiredHiddenPackage": {
		"body": [
			"PlaystatsAcquiredHiddenPackage(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsAcquiredHiddenPackage"
	},
	"PlaystatsActivityDone": {
		"body": [
			"PlaystatsActivityDone(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "PlaystatsActivityDone"
	},
	"PlaystatsArcadegame": {
		"body": [
			"PlaystatsArcadegame(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "PlaystatsArcadegame"
	},
	"PlaystatsArenaWarsEnded": {
		"body": [
			"PlaystatsArenaWarsEnded(${1:data})"
		],
		"scope": "lua",
		"prefix": "PlaystatsArenaWarsEnded"
	},
	"PlaystatsArenaWarSpectator": {
		"body": [
			"PlaystatsArenaWarSpectator(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "PlaystatsArenaWarSpectator"
	},
	"PlaystatsAwardBadsport": {
		"body": [
			"PlaystatsAwardBadsport(${1:id})"
		],
		"scope": "lua",
		"prefix": "PlaystatsAwardBadsport"
	},
	"PlaystatsAwardXp": {
		"body": [
			"PlaystatsAwardXp(${1:amount}, ${2:type}, ${3:category})"
		],
		"scope": "lua",
		"prefix": "PlaystatsAwardXp"
	},
	"PlaystatsBackgroundScriptAction": {
		"body": [
			"PlaystatsBackgroundScriptAction(${1:action}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "PlaystatsBackgroundScriptAction"
	},
	"PlaystatsBanAlert": {
		"body": [
			"PlaystatsBanAlert(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsBanAlert"
	},
	"PlaystatsBuyContraband": {
		"body": [
			"PlaystatsBuyContraband(${1:data})"
		],
		"scope": "lua",
		"prefix": "PlaystatsBuyContraband"
	},
	"PlaystatsCasinoBlackjack": {
		"body": [
			"PlaystatsCasinoBlackjack(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCasinoBlackjack"
	},
	"PlaystatsCasinoBlackjackLight": {
		"body": [
			"PlaystatsCasinoBlackjackLight(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCasinoBlackjackLight"
	},
	"PlaystatsCasinoChip": {
		"body": [
			"PlaystatsCasinoChip(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCasinoChip"
	},
	"PlaystatsCasinoInsidetrack": {
		"body": [
			"PlaystatsCasinoInsidetrack(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCasinoInsidetrack"
	},
	"PlaystatsCasinoInsidetrackLight": {
		"body": [
			"PlaystatsCasinoInsidetrackLight(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCasinoInsidetrackLight"
	},
	"PlaystatsCasinoLuckyseven": {
		"body": [
			"PlaystatsCasinoLuckyseven(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCasinoLuckyseven"
	},
	"PlaystatsCasinoMissionEnded": {
		"body": [
			"PlaystatsCasinoMissionEnded(${1:data})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCasinoMissionEnded"
	},
	"PlaystatsCasinoRoulette": {
		"body": [
			"PlaystatsCasinoRoulette(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCasinoRoulette"
	},
	"PlaystatsCasinoRouletteLight": {
		"body": [
			"PlaystatsCasinoRouletteLight(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCasinoRouletteLight"
	},
	"PlaystatsCasinoSlotmachine": {
		"body": [
			"PlaystatsCasinoSlotmachine(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCasinoSlotmachine"
	},
	"PlaystatsCasinoSlotmachineLight": {
		"body": [
			"PlaystatsCasinoSlotmachineLight(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCasinoSlotmachineLight"
	},
	"PlaystatsCasinoStoryMissionEnded": {
		"body": [
			"PlaystatsCasinoStoryMissionEnded(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCasinoStoryMissionEnded"
	},
	"PlaystatsCasinoThreecardpoker": {
		"body": [
			"PlaystatsCasinoThreecardpoker(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCasinoThreecardpoker"
	},
	"PlaystatsCasinoThreecardpokerLight": {
		"body": [
			"PlaystatsCasinoThreecardpokerLight(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCasinoThreecardpokerLight"
	},
	"PlaystatsChangeMcEmblem": {
		"body": [
			"PlaystatsChangeMcEmblem(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "PlaystatsChangeMcEmblem"
	},
	"PlaystatsCheatApplied": {
		"body": [
			"PlaystatsCheatApplied(${1:cheat})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCheatApplied"
	},
	"PlaystatsClothChange": {
		"body": [
			"PlaystatsClothChange(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "PlaystatsClothChange"
	},
	"PlaystatsCollectible": {
		"body": [
			"PlaystatsCollectible(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCollectible"
	},
	"PlaystatsCopyRankIntoNewSlot": {
		"body": [
			"PlaystatsCopyRankIntoNewSlot(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCopyRankIntoNewSlot"
	},
	"PlaystatsCrateCreatedMissionDone": {
		"body": [
			"PlaystatsCrateCreatedMissionDone(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCrateCreatedMissionDone"
	},
	"PlaystatsCrateDropMissionDone": {
		"body": [
			"PlaystatsCrateDropMissionDone(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "PlaystatsCrateDropMissionDone"
	},
	"PlaystatsDarMissionEnd": {
		"body": [
			"PlaystatsDarMissionEnd(${1:data})"
		],
		"scope": "lua",
		"prefix": "PlaystatsDarMissionEnd"
	},
	"PlaystatsDefendContraband": {
		"body": [
			"PlaystatsDefendContraband(${1:data})"
		],
		"scope": "lua",
		"prefix": "PlaystatsDefendContraband"
	},
	"PlaystatsDirectorMode": {
		"body": [
			"PlaystatsDirectorMode(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsDirectorMode"
	},
	"PlaystatsDroneUsage": {
		"body": [
			"PlaystatsDroneUsage(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "PlaystatsDroneUsage"
	},
	"PlaystatsDupeDetection": {
		"body": [
			"PlaystatsDupeDetection(${1:data})"
		],
		"scope": "lua",
		"prefix": "PlaystatsDupeDetection"
	},
	"PlaystatsEarnedMcPoints": {
		"body": [
			"PlaystatsEarnedMcPoints(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "PlaystatsEarnedMcPoints"
	},
	"PlaystatsEnterSessionPack": {
		"body": [
			"PlaystatsEnterSessionPack(${1:data})"
		],
		"scope": "lua",
		"prefix": "PlaystatsEnterSessionPack"
	},
	"PlaystatsFriendActivity": {
		"body": [
			"PlaystatsFriendActivity(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "PlaystatsFriendActivity"
	},
	"PlaystatsGunrunMissionEnded": {
		"body": [
			"PlaystatsGunrunMissionEnded(${1:data})"
		],
		"scope": "lua",
		"prefix": "PlaystatsGunrunMissionEnded"
	},
	"PlaystatsH2FmprepEnd": {
		"body": [
			"PlaystatsH2FmprepEnd(${1:data})"
		],
		"scope": "lua",
		"prefix": "PlaystatsH2FmprepEnd"
	},
	"PlaystatsH2InstanceEnd": {
		"body": [
			"PlaystatsH2InstanceEnd(${1:p1}, ${2:p2}, ${3:p3})"
		],
		"scope": "lua",
		"prefix": "PlaystatsH2InstanceEnd"
	},
	"PlaystatsHeistSaveCheat": {
		"body": [
			"PlaystatsHeistSaveCheat(${1:hash}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "PlaystatsHeistSaveCheat"
	},
	"PlaystatsHoldUpMissionDone": {
		"body": [
			"PlaystatsHoldUpMissionDone(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "PlaystatsHoldUpMissionDone"
	},
	"PlaystatsIdleKick": {
		"body": [
			"PlaystatsIdleKick(${1:time})"
		],
		"scope": "lua",
		"prefix": "PlaystatsIdleKick"
	},
	"PlaystatsImportExportMissionDone": {
		"body": [
			"PlaystatsImportExportMissionDone(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "PlaystatsImportExportMissionDone"
	},
	"PlaystatsLeaveJobChain": {
		"body": [
			"PlaystatsLeaveJobChain(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "PlaystatsLeaveJobChain"
	},
	"PlaystatsMatchStarted": {
		"body": [
			"PlaystatsMatchStarted(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "PlaystatsMatchStarted"
	},
	"PlaystatsMissionCheckpoint": {
		"body": [
			"PlaystatsMissionCheckpoint(${1:p1}, ${2:p2}, ${3:p3})"
		],
		"scope": "lua",
		"prefix": "PlaystatsMissionCheckpoint"
	},
	"PlaystatsMissionOver": {
		"body": [
			"PlaystatsMissionOver(${1:p1}, ${2:p2}, ${3:p3}, ${4:p4}, ${5:p5})"
		],
		"scope": "lua",
		"prefix": "PlaystatsMissionOver"
	},
	"PlaystatsMissionStarted": {
		"body": [
			"PlaystatsMissionStarted(${1:p1}, ${2:p2}, ${3:p3})"
		],
		"scope": "lua",
		"prefix": "PlaystatsMissionStarted"
	},
	"PlaystatsNpcInvite": {
		"body": [
			"PlaystatsNpcInvite(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaystatsNpcInvite"
	},
	"PlaystatsOddjobDone": {
		"body": [
			"PlaystatsOddjobDone(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "PlaystatsOddjobDone"
	},
	"PlaystatsPassiveMode": {
		"body": [
			"PlaystatsPassiveMode(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "PlaystatsPassiveMode"
	},
	"PlaystatsPegasaircraft": {
		"body": [
			"PlaystatsPegasaircraft(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "PlaystatsPegasaircraft"
	},
	"PlaystatsPiMenuHideSettings": {
		"body": [
			"PlaystatsPiMenuHideSettings(${1:data})"
		],
		"scope": "lua",
		"prefix": "PlaystatsPiMenuHideSettings"
	},
	"PlaystatsPropChange": {
		"body": [
			"PlaystatsPropChange(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "PlaystatsPropChange"
	},
	"PlaystatsQuickfixTool": {
		"body": [
			"PlaystatsQuickfixTool(${1:element}, ${2:item})"
		],
		"scope": "lua",
		"prefix": "PlaystatsQuickfixTool"
	},
	"PlaystatsRaceCheckpoint": {
		"body": [
			"PlaystatsRaceCheckpoint(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "PlaystatsRaceCheckpoint"
	},
	"PlaystatsRaceToPointMissionDone": {
		"body": [
			"PlaystatsRaceToPointMissionDone(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "PlaystatsRaceToPointMissionDone"
	},
	"PlaystatsRandomMissionDone": {
		"body": [
			"PlaystatsRandomMissionDone(${1:name}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "PlaystatsRandomMissionDone"
	},
	"PlaystatsRankUp": {
		"body": [
			"PlaystatsRankUp(${1:rank})"
		],
		"scope": "lua",
		"prefix": "PlaystatsRankUp"
	},
	"PlaystatsRecoverContraband": {
		"body": [
			"PlaystatsRecoverContraband(${1:data})"
		],
		"scope": "lua",
		"prefix": "PlaystatsRecoverContraband"
	},
	"PlaystatsRosBet": {
		"body": [
			"PlaystatsRosBet(${1:amount}, ${2:act}, ${3:player}, ${4:cm})"
		],
		"scope": "lua",
		"prefix": "PlaystatsRosBet"
	},
	"PlaystatsSellContraband": {
		"body": [
			"PlaystatsSellContraband(${1:data})"
		],
		"scope": "lua",
		"prefix": "PlaystatsSellContraband"
	},
	"PlaystatsShopItem": {
		"body": [
			"PlaystatsShopItem(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "PlaystatsShopItem"
	},
	"PlaystatsSmugMissionEnded": {
		"body": [
			"PlaystatsSmugMissionEnded(${1:data})"
		],
		"scope": "lua",
		"prefix": "PlaystatsSmugMissionEnded"
	},
	"PlaystatsSpectatorWheelSpin": {
		"body": [
			"PlaystatsSpectatorWheelSpin(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "PlaystatsSpectatorWheelSpin"
	},
	"PlaystatsSpentPiCustomLoadout": {
		"body": [
			"PlaystatsSpentPiCustomLoadout(${1:amount})"
		],
		"scope": "lua",
		"prefix": "PlaystatsSpentPiCustomLoadout"
	},
	"PlaystatsStartOfflineMode": {
		"body": [
			"PlaystatsStartOfflineMode()"
		],
		"scope": "lua",
		"prefix": "PlaystatsStartOfflineMode"
	},
	"PlaystatsStoneHatchetEnd": {
		"body": [
			"PlaystatsStoneHatchetEnd(${1:data})"
		],
		"scope": "lua",
		"prefix": "PlaystatsStoneHatchetEnd"
	},
	"PlaystatsStuntPerformedEventAllowTrigger": {
		"body": [
			"PlaystatsStuntPerformedEventAllowTrigger()"
		],
		"scope": "lua",
		"prefix": "PlaystatsStuntPerformedEventAllowTrigger"
	},
	"PlaystatsStuntPerformedEventDisallowTrigger": {
		"body": [
			"PlaystatsStuntPerformedEventDisallowTrigger()"
		],
		"scope": "lua",
		"prefix": "PlaystatsStuntPerformedEventDisallowTrigger"
	},
	"PlaystatsWeaponModeChange": {
		"body": [
			"PlaystatsWeaponModeChange(${1:weaponHash}, ${2:componentHashTo}, ${3:componentHashFrom})"
		],
		"scope": "lua",
		"prefix": "PlaystatsWeaponModeChange"
	},
	"PlaystatsWebsiteVisited": {
		"body": [
			"PlaystatsWebsiteVisited(${1:scaleformHash}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "PlaystatsWebsiteVisited"
	},
	"PlayStreamFromObject": {
		"body": [
			"PlayStreamFromObject(${1:object})"
		],
		"scope": "lua",
		"prefix": "PlayStreamFromObject"
	},
	"PlayStreamFromPed": {
		"body": [
			"PlayStreamFromPed(${1:ped})"
		],
		"scope": "lua",
		"prefix": "PlayStreamFromPed"
	},
	"PlayStreamFromPosition": {
		"body": [
			"PlayStreamFromPosition(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "PlayStreamFromPosition"
	},
	"PlayStreamFromVehicle": {
		"body": [
			"PlayStreamFromVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "PlayStreamFromVehicle"
	},
	"PlayStreamFrontend": {
		"body": [
			"PlayStreamFrontend()"
		],
		"scope": "lua",
		"prefix": "PlayStreamFrontend"
	},
	"PlaySynchronizedAudioEvent": {
		"body": [
			"PlaySynchronizedAudioEvent(${1:p0})"
		],
		"scope": "lua",
		"prefix": "PlaySynchronizedAudioEvent"
	},
	"PlaySynchronizedCamAnim": {
		"body": [
			"PlaySynchronizedCamAnim(${1:p0}, ${2:p1}, ${3:animName}, ${4:animDictionary})"
		],
		"scope": "lua",
		"prefix": "PlaySynchronizedCamAnim"
	},
	"PlaySynchronizedEntityAnim": {
		"body": [
			"PlaySynchronizedEntityAnim(${1:entity}, ${2:syncedScene}, ${3:animation}, ${4:propName}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "PlaySynchronizedEntityAnim"
	},
	"PlaySynchronizedMapEntityAnim": {
		"body": [
			"PlaySynchronizedMapEntityAnim(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p8}, ${8:p9}, ${9:p10}, ${10:p11})"
		],
		"scope": "lua",
		"prefix": "PlaySynchronizedMapEntityAnim"
	},
	"PlayTennisDiveAnim": {
		"body": [
			"PlayTennisDiveAnim(${1:ped}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "PlayTennisDiveAnim"
	},
	"PlayTennisSwingAnim": {
		"body": [
			"PlayTennisSwingAnim(${1:ped}, ${2:animDict}, ${3:animName}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "PlayTennisSwingAnim"
	},
	"PlayVehicleDoorCloseSound": {
		"body": [
			"PlayVehicleDoorCloseSound(${1:vehicle}, ${2:doorIndex})"
		],
		"scope": "lua",
		"prefix": "PlayVehicleDoorCloseSound"
	},
	"PlayVehicleDoorOpenSound": {
		"body": [
			"PlayVehicleDoorOpenSound(${1:vehicle}, ${2:doorIndex})"
		],
		"scope": "lua",
		"prefix": "PlayVehicleDoorOpenSound"
	},
	"PointCamAtCoord": {
		"body": [
			"PointCamAtCoord(${1:cam}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "PointCamAtCoord"
	},
	"PointCamAtEntity": {
		"body": [
			"PointCamAtEntity(${1:cam}, ${2:entity}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "PointCamAtEntity"
	},
	"PointCamAtPedBone": {
		"body": [
			"PointCamAtPedBone(${1:cam}, ${2:ped}, ${3:boneIndex}, ${4:x}, ${5:y}, ${6:z}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "PointCamAtPedBone"
	},
	"PopOutVehicleWindscreen": {
		"body": [
			"PopOutVehicleWindscreen(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "PopOutVehicleWindscreen"
	},
	"PopTimecycleModifier": {
		"body": [
			"PopTimecycleModifier()"
		],
		"scope": "lua",
		"prefix": "PopTimecycleModifier"
	},
	"PopulateNow": {
		"body": [
			"PopulateNow()"
		],
		"scope": "lua",
		"prefix": "PopulateNow"
	},
	"Pow": {
		"body": [
			"Pow(${1:base}, ${2:exponent})"
		],
		"scope": "lua",
		"prefix": "Pow"
	},
	"PrefetchSrl": {
		"body": [
			"PrefetchSrl(${1:srl})"
		],
		"scope": "lua",
		"prefix": "PrefetchSrl"
	},
	"PreloadBusyspinner": {
		"body": [
			"PreloadBusyspinner()"
		],
		"scope": "lua",
		"prefix": "PreloadBusyspinner"
	},
	"PreloadCloudHat": {
		"body": [
			"PreloadCloudHat(${1:name})"
		],
		"scope": "lua",
		"prefix": "PreloadCloudHat"
	},
	"PreloadScriptConversation": {
		"body": [
			"PreloadScriptConversation(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "PreloadScriptConversation"
	},
	"PreloadScriptPhoneConversation": {
		"body": [
			"PreloadScriptPhoneConversation(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "PreloadScriptPhoneConversation"
	},
	"PreloadVehicleAudio": {
		"body": [
			"PreloadVehicleAudio(${1:model})"
		],
		"scope": "lua",
		"prefix": "PreloadVehicleAudio"
	},
	"PreloadVehicleMod": {
		"body": [
			"PreloadVehicleMod(${1:p0}, ${2:modType}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "PreloadVehicleMod"
	},
	"PrepareAlarm": {
		"body": [
			"PrepareAlarm(${1:alarmName})"
		],
		"scope": "lua",
		"prefix": "PrepareAlarm"
	},
	"PrepareMusicEvent": {
		"body": [
			"PrepareMusicEvent(${1:eventName})"
		],
		"scope": "lua",
		"prefix": "PrepareMusicEvent"
	},
	"PrepareSynchronizedAudioEvent": {
		"body": [
			"PrepareSynchronizedAudioEvent(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "PrepareSynchronizedAudioEvent"
	},
	"PrepareSynchronizedAudioEventForScene": {
		"body": [
			"PrepareSynchronizedAudioEventForScene(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "PrepareSynchronizedAudioEventForScene"
	},
	"PresetInteriorAmbientCache": {
		"body": [
			"PresetInteriorAmbientCache(${1:timecycleModifierName})"
		],
		"scope": "lua",
		"prefix": "PresetInteriorAmbientCache"
	},
	"PreventCollectionOfPortablePickup": {
		"body": [
			"PreventCollectionOfPortablePickup(${1:object}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "PreventCollectionOfPortablePickup"
	},
	"ProcessCashGift": {
		"body": [
			"ProcessCashGift(${1:p2})"
		],
		"scope": "lua",
		"prefix": "ProcessCashGift"
	},
	"ProcessEntityAttachments": {
		"body": [
			"ProcessEntityAttachments(${1:entity})"
		],
		"scope": "lua",
		"prefix": "ProcessEntityAttachments"
	},
	"ProfilerEnterScope": {
		"body": [
			"ProfilerEnterScope(${1:scopeName})"
		],
		"scope": "lua",
		"prefix": "ProfilerEnterScope"
	},
	"ProfilerExitScope": {
		"body": [
			"ProfilerExitScope()"
		],
		"scope": "lua",
		"prefix": "ProfilerExitScope"
	},
	"ProfilerIsRecording": {
		"body": [
			"ProfilerIsRecording()"
		],
		"scope": "lua",
		"prefix": "ProfilerIsRecording"
	},
	"PulseBlip": {
		"body": [
			"PulseBlip(${1:blip})"
		],
		"scope": "lua",
		"prefix": "PulseBlip"
	},
	"PushTimecycleModifier": {
		"body": [
			"PushTimecycleModifier()"
		],
		"scope": "lua",
		"prefix": "PushTimecycleModifier"
	},
	"QueryMovieMeshSetState": {
		"body": [
			"QueryMovieMeshSetState(${1:p0})"
		],
		"scope": "lua",
		"prefix": "QueryMovieMeshSetState"
	},
	"QueueMissionRepeatLoad": {
		"body": [
			"QueueMissionRepeatLoad()"
		],
		"scope": "lua",
		"prefix": "QueueMissionRepeatLoad"
	},
	"QueueMissionRepeatSave": {
		"body": [
			"QueueMissionRepeatSave()"
		],
		"scope": "lua",
		"prefix": "QueueMissionRepeatSave"
	},
	"RaceGalleryAddBlip": {
		"body": [
			"RaceGalleryAddBlip(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "RaceGalleryAddBlip"
	},
	"RaceGalleryFullscreen": {
		"body": [
			"RaceGalleryFullscreen(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "RaceGalleryFullscreen"
	},
	"RaceGalleryNextBlipSprite": {
		"body": [
			"RaceGalleryNextBlipSprite(${1:spriteId})"
		],
		"scope": "lua",
		"prefix": "RaceGalleryNextBlipSprite"
	},
	"RaiseConvertibleRoof": {
		"body": [
			"RaiseConvertibleRoof(${1:vehicle}, ${2:instantlyRaise})"
		],
		"scope": "lua",
		"prefix": "RaiseConvertibleRoof"
	},
	"RaiseRetractableWheels": {
		"body": [
			"RaiseRetractableWheels(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "RaiseRetractableWheels"
	},
	"RecordBrokenGlass": {
		"body": [
			"RecordBrokenGlass(${1:x}, ${2:y}, ${3:z}, ${4:radius})"
		],
		"scope": "lua",
		"prefix": "RecordBrokenGlass"
	},
	"RefillAmmoInstantly": {
		"body": [
			"RefillAmmoInstantly(${1:ped})"
		],
		"scope": "lua",
		"prefix": "RefillAmmoInstantly"
	},
	"RefreshInterior": {
		"body": [
			"RefreshInterior(${1:interiorID})"
		],
		"scope": "lua",
		"prefix": "RefreshInterior"
	},
	"RefreshPlayerListStats": {
		"body": [
			"RefreshPlayerListStats(${1:p0})"
		],
		"scope": "lua",
		"prefix": "RefreshPlayerListStats"
	},
	"RefreshWaypoint": {
		"body": [
			"RefreshWaypoint()"
		],
		"scope": "lua",
		"prefix": "RefreshWaypoint"
	},
	"RegisterArchetypes": {
		"body": [
			"RegisterArchetypes(${1:factory})"
		],
		"scope": "lua",
		"prefix": "RegisterArchetypes"
	},
	"RegisterBoolToSave": {
		"body": [
			"RegisterBoolToSave(${1:name})"
		],
		"scope": "lua",
		"prefix": "RegisterBoolToSave"
	},
	"RegisterCommand": {
		"body": [
			"RegisterCommand(${1:commandName}, ${2:handler}, ${3:restricted})"
		],
		"scope": "lua",
		"prefix": "RegisterCommand"
	},
	"RegisterConsoleListener": {
		"body": [
			"RegisterConsoleListener(${1:listener})"
		],
		"scope": "lua",
		"prefix": "RegisterConsoleListener"
	},
	"RegisterEntities": {
		"body": [
			"RegisterEntities(${1:factory})"
		],
		"scope": "lua",
		"prefix": "RegisterEntities"
	},
	"RegisterEntityForCutscene": {
		"body": [
			"RegisterEntityForCutscene(${1:cutscenePed}, ${2:cutsceneEntName}, ${3:p2}, ${4:modelHash}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "RegisterEntityForCutscene"
	},
	"RegisterEnumToSave": {
		"body": [
			"RegisterEnumToSave(${1:name})"
		],
		"scope": "lua",
		"prefix": "RegisterEnumToSave"
	},
	"RegisterFloatToSave": {
		"body": [
			"RegisterFloatToSave(${1:name})"
		],
		"scope": "lua",
		"prefix": "RegisterFloatToSave"
	},
	"RegisterFontFile": {
		"body": [
			"RegisterFontFile(${1:fileName})"
		],
		"scope": "lua",
		"prefix": "RegisterFontFile"
	},
	"RegisterFontId": {
		"body": [
			"RegisterFontId(${1:fontName})"
		],
		"scope": "lua",
		"prefix": "RegisterFontId"
	},
	"RegisterHatedTargetsAroundPed": {
		"body": [
			"RegisterHatedTargetsAroundPed(${1:ped}, ${2:radius})"
		],
		"scope": "lua",
		"prefix": "RegisterHatedTargetsAroundPed"
	},
	"RegisterInt64ToSave": {
		"body": [
			"RegisterInt64ToSave(${1:name})"
		],
		"scope": "lua",
		"prefix": "RegisterInt64ToSave"
	},
	"RegisterIntToSave": {
		"body": [
			"RegisterIntToSave(${1:name})"
		],
		"scope": "lua",
		"prefix": "RegisterIntToSave"
	},
	"RegisterKeyMapping": {
		"body": [
			"RegisterKeyMapping(${1:commandString}, ${2:description}, ${3:defaultMapper}, ${4:defaultParameter})"
		],
		"scope": "lua",
		"prefix": "RegisterKeyMapping"
	},
	"RegisterNamedRendertarget": {
		"body": [
			"RegisterNamedRendertarget(${1:name}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RegisterNamedRendertarget"
	},
	"RegisterNoirScreenEffectThisFrame": {
		"body": [
			"RegisterNoirScreenEffectThisFrame()"
		],
		"scope": "lua",
		"prefix": "RegisterNoirScreenEffectThisFrame"
	},
	"RegisterNuiCallbackType": {
		"body": [
			"RegisterNuiCallbackType(${1:callbackType})"
		],
		"scope": "lua",
		"prefix": "RegisterNuiCallbackType"
	},
	"RegisterObjectScriptBrain": {
		"body": [
			"RegisterObjectScriptBrain(${1:scriptName}, ${2:modelHash}, ${3:p2}, ${4:activationRange}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "RegisterObjectScriptBrain"
	},
	"RegisterPedheadshot": {
		"body": [
			"RegisterPedheadshot(${1:ped})"
		],
		"scope": "lua",
		"prefix": "RegisterPedheadshot"
	},
	"RegisterPedheadshot_3": {
		"body": [
			"RegisterPedheadshot_3(${1:ped})"
		],
		"scope": "lua",
		"prefix": "RegisterPedheadshot_3"
	},
	"RegisterPedheadshotTransparent": {
		"body": [
			"RegisterPedheadshotTransparent(${1:ped})"
		],
		"scope": "lua",
		"prefix": "RegisterPedheadshotTransparent"
	},
	"RegisterRawNuiCallback": {
		"body": [
			"RegisterRawNuiCallback(${1:callbackType}, ${2:callback})"
		],
		"scope": "lua",
		"prefix": "RegisterRawNuiCallback"
	},
	"RegisterResourceAsEventHandler": {
		"body": [
			"RegisterResourceAsEventHandler(${1:eventName})"
		],
		"scope": "lua",
		"prefix": "RegisterResourceAsEventHandler"
	},
	"RegisterResourceAsset": {
		"body": [
			"RegisterResourceAsset(${1:resourceName}, ${2:fileName})"
		],
		"scope": "lua",
		"prefix": "RegisterResourceAsset"
	},
	"RegisterResourceBuildTaskFactory": {
		"body": [
			"RegisterResourceBuildTaskFactory(${1:factoryId}, ${2:factoryFn})"
		],
		"scope": "lua",
		"prefix": "RegisterResourceBuildTaskFactory"
	},
	"RegisterSaveHouse": {
		"body": [
			"RegisterSaveHouse(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p5}, ${6:p6})"
		],
		"scope": "lua",
		"prefix": "RegisterSaveHouse"
	},
	"RegisterScriptWithAudio": {
		"body": [
			"RegisterScriptWithAudio(${1:p0})"
		],
		"scope": "lua",
		"prefix": "RegisterScriptWithAudio"
	},
	"RegisterStreamingFileFromCache": {
		"body": [
			"RegisterStreamingFileFromCache(${1:resourceName}, ${2:fileName}, ${3:cacheString})"
		],
		"scope": "lua",
		"prefix": "RegisterStreamingFileFromCache"
	},
	"RegisterStreamingFileFromKvs": {
		"body": [
			"RegisterStreamingFileFromKvs(${1:kvsKey})"
		],
		"scope": "lua",
		"prefix": "RegisterStreamingFileFromKvs"
	},
	"RegisterStreamingFileFromUrl": {
		"body": [
			"RegisterStreamingFileFromUrl(${1:registerAs}, ${2:url})"
		],
		"scope": "lua",
		"prefix": "RegisterStreamingFileFromUrl"
	},
	"RegisterSynchronisedScriptSpeech": {
		"body": [
			"RegisterSynchronisedScriptSpeech()"
		],
		"scope": "lua",
		"prefix": "RegisterSynchronisedScriptSpeech"
	},
	"RegisterTarget": {
		"body": [
			"RegisterTarget(${1:ped}, ${2:target})"
		],
		"scope": "lua",
		"prefix": "RegisterTarget"
	},
	"RegisterTextLabelToSave": {
		"body": [
			"RegisterTextLabelToSave(${1:name})"
		],
		"scope": "lua",
		"prefix": "RegisterTextLabelToSave"
	},
	"RegisterTextLabelToSave_2": {
		"body": [
			"RegisterTextLabelToSave_2(${1:name})"
		],
		"scope": "lua",
		"prefix": "RegisterTextLabelToSave_2"
	},
	"RegisterWorldPointScriptBrain": {
		"body": [
			"RegisterWorldPointScriptBrain(${1:activationRange}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "RegisterWorldPointScriptBrain"
	},
	"ReleaseAllCommerceItemImages": {
		"body": [
			"ReleaseAllCommerceItemImages()"
		],
		"scope": "lua",
		"prefix": "ReleaseAllCommerceItemImages"
	},
	"ReleaseAmbientAudioBank": {
		"body": [
			"ReleaseAmbientAudioBank()"
		],
		"scope": "lua",
		"prefix": "ReleaseAmbientAudioBank"
	},
	"ReleaseBinkMovie": {
		"body": [
			"ReleaseBinkMovie(${1:binkMovie})"
		],
		"scope": "lua",
		"prefix": "ReleaseBinkMovie"
	},
	"ReleaseControlOfFrontend": {
		"body": [
			"ReleaseControlOfFrontend()"
		],
		"scope": "lua",
		"prefix": "ReleaseControlOfFrontend"
	},
	"ReleaseMissionAudioBank": {
		"body": [
			"ReleaseMissionAudioBank()"
		],
		"scope": "lua",
		"prefix": "ReleaseMissionAudioBank"
	},
	"ReleaseMovieMeshSet": {
		"body": [
			"ReleaseMovieMeshSet(${1:movieMeshSet})"
		],
		"scope": "lua",
		"prefix": "ReleaseMovieMeshSet"
	},
	"ReleaseNamedRendertarget": {
		"body": [
			"ReleaseNamedRendertarget(${1:name})"
		],
		"scope": "lua",
		"prefix": "ReleaseNamedRendertarget"
	},
	"ReleaseNamedScriptAudioBank": {
		"body": [
			"ReleaseNamedScriptAudioBank(${1:audioBank})"
		],
		"scope": "lua",
		"prefix": "ReleaseNamedScriptAudioBank"
	},
	"ReleasePedheadshotImgUpload": {
		"body": [
			"ReleasePedheadshotImgUpload(${1:id})"
		],
		"scope": "lua",
		"prefix": "ReleasePedheadshotImgUpload"
	},
	"ReleasePedPreloadPropData": {
		"body": [
			"ReleasePedPreloadPropData(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ReleasePedPreloadPropData"
	},
	"ReleasePedPreloadVariationData": {
		"body": [
			"ReleasePedPreloadVariationData(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ReleasePedPreloadVariationData"
	},
	"ReleasePreloadMods": {
		"body": [
			"ReleasePreloadMods(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "ReleasePreloadMods"
	},
	"ReleaseScriptAudioBank": {
		"body": [
			"ReleaseScriptAudioBank()"
		],
		"scope": "lua",
		"prefix": "ReleaseScriptAudioBank"
	},
	"ReleaseScriptGuidFromEntity": {
		"body": [
			"ReleaseScriptGuidFromEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "ReleaseScriptGuidFromEntity"
	},
	"ReleaseSoundId": {
		"body": [
			"ReleaseSoundId(${1:soundId})"
		],
		"scope": "lua",
		"prefix": "ReleaseSoundId"
	},
	"ReleaseWeaponAudio": {
		"body": [
			"ReleaseWeaponAudio()"
		],
		"scope": "lua",
		"prefix": "ReleaseWeaponAudio"
	},
	"RemoteCheatDetected": {
		"body": [
			"RemoteCheatDetected()"
		],
		"scope": "lua",
		"prefix": "RemoteCheatDetected"
	},
	"RemoveActionModeAsset": {
		"body": [
			"RemoveActionModeAsset(${1:asset})"
		],
		"scope": "lua",
		"prefix": "RemoveActionModeAsset"
	},
	"RemoveAirDefenseZone": {
		"body": [
			"RemoveAirDefenseZone(${1:zoneId})"
		],
		"scope": "lua",
		"prefix": "RemoveAirDefenseZone"
	},
	"RemoveAllAirDefenseZones": {
		"body": [
			"RemoveAllAirDefenseZones()"
		],
		"scope": "lua",
		"prefix": "RemoveAllAirDefenseZones"
	},
	"RemoveAllCoverBlockingAreas": {
		"body": [
			"RemoveAllCoverBlockingAreas()"
		],
		"scope": "lua",
		"prefix": "RemoveAllCoverBlockingAreas"
	},
	"RemoveAllPedWeapons": {
		"body": [
			"RemoveAllPedWeapons(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RemoveAllPedWeapons"
	},
	"RemoveAllPickupsOfType": {
		"body": [
			"RemoveAllPickupsOfType(${1:pickupHash})"
		],
		"scope": "lua",
		"prefix": "RemoveAllPickupsOfType"
	},
	"RemoveAllProjectilesOfType": {
		"body": [
			"RemoveAllProjectilesOfType(${1:weaponHash}, ${2:explode})"
		],
		"scope": "lua",
		"prefix": "RemoveAllProjectilesOfType"
	},
	"RemoveAllShockingEvents": {
		"body": [
			"RemoveAllShockingEvents(${1:p0})"
		],
		"scope": "lua",
		"prefix": "RemoveAllShockingEvents"
	},
	"RemoveAllStickyBombsFromEntity": {
		"body": [
			"RemoveAllStickyBombsFromEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "RemoveAllStickyBombsFromEntity"
	},
	"RemoveAnimDict": {
		"body": [
			"RemoveAnimDict(${1:animDict})"
		],
		"scope": "lua",
		"prefix": "RemoveAnimDict"
	},
	"RemoveAnimSet": {
		"body": [
			"RemoveAnimSet(${1:animSet})"
		],
		"scope": "lua",
		"prefix": "RemoveAnimSet"
	},
	"RemoveBlip": {
		"body": [
			"RemoveBlip(${1:blip})"
		],
		"scope": "lua",
		"prefix": "RemoveBlip"
	},
	"RemoveClipSet": {
		"body": [
			"RemoveClipSet(${1:clipSet})"
		],
		"scope": "lua",
		"prefix": "RemoveClipSet"
	},
	"RemoveCoverPoint": {
		"body": [
			"RemoveCoverPoint(${1:coverpoint})"
		],
		"scope": "lua",
		"prefix": "RemoveCoverPoint"
	},
	"RemoveCurrentRise": {
		"body": [
			"RemoveCurrentRise(${1:p0})"
		],
		"scope": "lua",
		"prefix": "RemoveCurrentRise"
	},
	"RemoveCutFile": {
		"body": [
			"RemoveCutFile(${1:cutsceneName})"
		],
		"scope": "lua",
		"prefix": "RemoveCutFile"
	},
	"RemoveCutscene": {
		"body": [
			"RemoveCutscene()"
		],
		"scope": "lua",
		"prefix": "RemoveCutscene"
	},
	"RemoveDecal": {
		"body": [
			"RemoveDecal(${1:decal})"
		],
		"scope": "lua",
		"prefix": "RemoveDecal"
	},
	"RemoveDecalsFromObject": {
		"body": [
			"RemoveDecalsFromObject(${1:obj})"
		],
		"scope": "lua",
		"prefix": "RemoveDecalsFromObject"
	},
	"RemoveDecalsFromObjectFacing": {
		"body": [
			"RemoveDecalsFromObjectFacing(${1:obj}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "RemoveDecalsFromObjectFacing"
	},
	"RemoveDecalsFromVehicle": {
		"body": [
			"RemoveDecalsFromVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "RemoveDecalsFromVehicle"
	},
	"RemoveDecalsInRange": {
		"body": [
			"RemoveDecalsInRange(${1:x}, ${2:y}, ${3:z}, ${4:range})"
		],
		"scope": "lua",
		"prefix": "RemoveDecalsInRange"
	},
	"RemoveDispatchSpawnBlockingArea": {
		"body": [
			"RemoveDispatchSpawnBlockingArea(${1:p0})"
		],
		"scope": "lua",
		"prefix": "RemoveDispatchSpawnBlockingArea"
	},
	"RemoveDoorFromSystem": {
		"body": [
			"RemoveDoorFromSystem(${1:doorHash})"
		],
		"scope": "lua",
		"prefix": "RemoveDoorFromSystem"
	},
	"RemoveEntityFromAudioMixGroup": {
		"body": [
			"RemoveEntityFromAudioMixGroup(${1:entity}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RemoveEntityFromAudioMixGroup"
	},
	"RemoveForcedObject": {
		"body": [
			"RemoveForcedObject(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "RemoveForcedObject"
	},
	"RemoveFromItemset": {
		"body": [
			"RemoveFromItemset(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RemoveFromItemset"
	},
	"RemoveGroup": {
		"body": [
			"RemoveGroup(${1:groupId})"
		],
		"scope": "lua",
		"prefix": "RemoveGroup"
	},
	"RemoveIpl": {
		"body": [
			"RemoveIpl(${1:iplName})"
		],
		"scope": "lua",
		"prefix": "RemoveIpl"
	},
	"RemoveModelFromCreatorBudget": {
		"body": [
			"RemoveModelFromCreatorBudget(${1:modelHash})"
		],
		"scope": "lua",
		"prefix": "RemoveModelFromCreatorBudget"
	},
	"RemoveModelHide": {
		"body": [
			"RemoveModelHide(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:model}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "RemoveModelHide"
	},
	"RemoveModelSwap": {
		"body": [
			"RemoveModelSwap(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:originalModel}, ${6:newModel}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "RemoveModelSwap"
	},
	"RemoveMpGamerTag": {
		"body": [
			"RemoveMpGamerTag(${1:gamerTagId})"
		],
		"scope": "lua",
		"prefix": "RemoveMpGamerTag"
	},
	"RemoveMultiplayerBankCash": {
		"body": [
			"RemoveMultiplayerBankCash()"
		],
		"scope": "lua",
		"prefix": "RemoveMultiplayerBankCash"
	},
	"RemoveMultiplayerHudCash": {
		"body": [
			"RemoveMultiplayerHudCash()"
		],
		"scope": "lua",
		"prefix": "RemoveMultiplayerHudCash"
	},
	"RemoveMultiplayerWalletCash": {
		"body": [
			"RemoveMultiplayerWalletCash()"
		],
		"scope": "lua",
		"prefix": "RemoveMultiplayerWalletCash"
	},
	"RemoveNamedPtfxAsset": {
		"body": [
			"RemoveNamedPtfxAsset(${1:fxName})"
		],
		"scope": "lua",
		"prefix": "RemoveNamedPtfxAsset"
	},
	"RemoveNavmeshBlockingObject": {
		"body": [
			"RemoveNavmeshBlockingObject(${1:p0})"
		],
		"scope": "lua",
		"prefix": "RemoveNavmeshBlockingObject"
	},
	"RemoveNavmeshRequiredRegions": {
		"body": [
			"RemoveNavmeshRequiredRegions()"
		],
		"scope": "lua",
		"prefix": "RemoveNavmeshRequiredRegions"
	},
	"RemoveObjectHighDetailModel": {
		"body": [
			"RemoveObjectHighDetailModel(${1:p0})"
		],
		"scope": "lua",
		"prefix": "RemoveObjectHighDetailModel"
	},
	"RemoveParticleFx": {
		"body": [
			"RemoveParticleFx(${1:ptfxHandle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RemoveParticleFx"
	},
	"RemoveParticleFxFromEntity": {
		"body": [
			"RemoveParticleFxFromEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "RemoveParticleFxFromEntity"
	},
	"RemoveParticleFxInRange": {
		"body": [
			"RemoveParticleFxInRange(${1:X}, ${2:Y}, ${3:Z}, ${4:radius})"
		],
		"scope": "lua",
		"prefix": "RemoveParticleFxInRange"
	},
	"RemovePedDefensiveArea": {
		"body": [
			"RemovePedDefensiveArea(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "RemovePedDefensiveArea"
	},
	"RemovePedElegantly": {
		"body": [
			"RemovePedElegantly(${1:ped})"
		],
		"scope": "lua",
		"prefix": "RemovePedElegantly"
	},
	"RemovePedFromGroup": {
		"body": [
			"RemovePedFromGroup(${1:ped})"
		],
		"scope": "lua",
		"prefix": "RemovePedFromGroup"
	},
	"RemovePedHelmet": {
		"body": [
			"RemovePedHelmet(${1:ped}, ${2:instantly})"
		],
		"scope": "lua",
		"prefix": "RemovePedHelmet"
	},
	"RemovePedPreferredCoverSet": {
		"body": [
			"RemovePedPreferredCoverSet(${1:ped})"
		],
		"scope": "lua",
		"prefix": "RemovePedPreferredCoverSet"
	},
	"RemovePickup": {
		"body": [
			"RemovePickup(${1:pickup})"
		],
		"scope": "lua",
		"prefix": "RemovePickup"
	},
	"RemovePickUpRopeForCargobob": {
		"body": [
			"RemovePickUpRopeForCargobob(${1:cargobob})"
		],
		"scope": "lua",
		"prefix": "RemovePickUpRopeForCargobob"
	},
	"RemovePlayerHelmet": {
		"body": [
			"RemovePlayerHelmet(${1:player}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "RemovePlayerHelmet"
	},
	"RemovePopMultiplierArea": {
		"body": [
			"RemovePopMultiplierArea(${1:id}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RemovePopMultiplierArea"
	},
	"RemovePopMultiplierSphere": {
		"body": [
			"RemovePopMultiplierSphere(${1:id}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RemovePopMultiplierSphere"
	},
	"RemovePortalSettingsOverride": {
		"body": [
			"RemovePortalSettingsOverride(${1:p0})"
		],
		"scope": "lua",
		"prefix": "RemovePortalSettingsOverride"
	},
	"RemovePtfxAsset": {
		"body": [
			"RemovePtfxAsset()"
		],
		"scope": "lua",
		"prefix": "RemovePtfxAsset"
	},
	"RemoveRelationshipGroup": {
		"body": [
			"RemoveRelationshipGroup(${1:groupHash})"
		],
		"scope": "lua",
		"prefix": "RemoveRelationshipGroup"
	},
	"RemoveReplaceTexture": {
		"body": [
			"RemoveReplaceTexture(${1:origTxd}, ${2:origTxn})"
		],
		"scope": "lua",
		"prefix": "RemoveReplaceTexture"
	},
	"RemoveRoadNodeSpeedZone": {
		"body": [
			"RemoveRoadNodeSpeedZone(${1:speedzone})"
		],
		"scope": "lua",
		"prefix": "RemoveRoadNodeSpeedZone"
	},
	"RemoveScaleformScriptHudMovie": {
		"body": [
			"RemoveScaleformScriptHudMovie(${1:hudComponent})"
		],
		"scope": "lua",
		"prefix": "RemoveScaleformScriptHudMovie"
	},
	"RemoveScenarioBlockingArea": {
		"body": [
			"RemoveScenarioBlockingArea(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RemoveScenarioBlockingArea"
	},
	"RemoveScenarioBlockingAreas": {
		"body": [
			"RemoveScenarioBlockingAreas()"
		],
		"scope": "lua",
		"prefix": "RemoveScenarioBlockingAreas"
	},
	"RemoveScriptFire": {
		"body": [
			"RemoveScriptFire(${1:fireHandle})"
		],
		"scope": "lua",
		"prefix": "RemoveScriptFire"
	},
	"RemoveShockingEvent": {
		"body": [
			"RemoveShockingEvent(${1:event})"
		],
		"scope": "lua",
		"prefix": "RemoveShockingEvent"
	},
	"RemoveShockingEventSpawnBlockingAreas": {
		"body": [
			"RemoveShockingEventSpawnBlockingAreas()"
		],
		"scope": "lua",
		"prefix": "RemoveShockingEventSpawnBlockingAreas"
	},
	"RemoveStealthKill": {
		"body": [
			"RemoveStealthKill(${1:hash}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RemoveStealthKill"
	},
	"RemoveStealthModeAsset": {
		"body": [
			"RemoveStealthModeAsset(${1:asset})"
		],
		"scope": "lua",
		"prefix": "RemoveStealthModeAsset"
	},
	"RemoveTcmodifierOverride": {
		"body": [
			"RemoveTcmodifierOverride(${1:p0})"
		],
		"scope": "lua",
		"prefix": "RemoveTcmodifierOverride"
	},
	"RemoveVehicleAsset": {
		"body": [
			"RemoveVehicleAsset(${1:vehicleAsset})"
		],
		"scope": "lua",
		"prefix": "RemoveVehicleAsset"
	},
	"RemoveVehicleCombatAvoidanceArea": {
		"body": [
			"RemoveVehicleCombatAvoidanceArea(${1:p0})"
		],
		"scope": "lua",
		"prefix": "RemoveVehicleCombatAvoidanceArea"
	},
	"RemoveVehicleCrewEmblem": {
		"body": [
			"RemoveVehicleCrewEmblem(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RemoveVehicleCrewEmblem"
	},
	"RemoveVehicleHighDetailModel": {
		"body": [
			"RemoveVehicleHighDetailModel(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "RemoveVehicleHighDetailModel"
	},
	"RemoveVehicleMod": {
		"body": [
			"RemoveVehicleMod(${1:vehicle}, ${2:modType})"
		],
		"scope": "lua",
		"prefix": "RemoveVehicleMod"
	},
	"RemoveVehicleRecording": {
		"body": [
			"RemoveVehicleRecording(${1:recording}, ${2:script})"
		],
		"scope": "lua",
		"prefix": "RemoveVehicleRecording"
	},
	"RemoveVehiclesFromGeneratorsInArea": {
		"body": [
			"RemoveVehiclesFromGeneratorsInArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:unk})"
		],
		"scope": "lua",
		"prefix": "RemoveVehiclesFromGeneratorsInArea"
	},
	"RemoveVehicleShadowEffect": {
		"body": [
			"RemoveVehicleShadowEffect(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "RemoveVehicleShadowEffect"
	},
	"RemoveVehicleStuckCheck": {
		"body": [
			"RemoveVehicleStuckCheck(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "RemoveVehicleStuckCheck"
	},
	"RemoveVehicleUpsidedownCheck": {
		"body": [
			"RemoveVehicleUpsidedownCheck(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "RemoveVehicleUpsidedownCheck"
	},
	"RemoveVehicleWindow": {
		"body": [
			"RemoveVehicleWindow(${1:vehicle}, ${2:windowIndex})"
		],
		"scope": "lua",
		"prefix": "RemoveVehicleWindow"
	},
	"RemoveWarningMessageListItems": {
		"body": [
			"RemoveWarningMessageListItems()"
		],
		"scope": "lua",
		"prefix": "RemoveWarningMessageListItems"
	},
	"RemoveWaypointRecording": {
		"body": [
			"RemoveWaypointRecording(${1:name})"
		],
		"scope": "lua",
		"prefix": "RemoveWaypointRecording"
	},
	"RemoveWeaponAsset": {
		"body": [
			"RemoveWeaponAsset(${1:weaponHash})"
		],
		"scope": "lua",
		"prefix": "RemoveWeaponAsset"
	},
	"RemoveWeaponComponentFromPed": {
		"body": [
			"RemoveWeaponComponentFromPed(${1:ped}, ${2:weaponHash}, ${3:componentHash})"
		],
		"scope": "lua",
		"prefix": "RemoveWeaponComponentFromPed"
	},
	"RemoveWeaponComponentFromWeaponObject": {
		"body": [
			"RemoveWeaponComponentFromWeaponObject(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RemoveWeaponComponentFromWeaponObject"
	},
	"RemoveWeaponFromPed": {
		"body": [
			"RemoveWeaponFromPed(${1:ped}, ${2:weaponHash})"
		],
		"scope": "lua",
		"prefix": "RemoveWeaponFromPed"
	},
	"RenderFakePickupGlow": {
		"body": [
			"RenderFakePickupGlow(${1:x}, ${2:y}, ${3:z}, ${4:colorIndex})"
		],
		"scope": "lua",
		"prefix": "RenderFakePickupGlow"
	},
	"RenderScriptCams": {
		"body": [
			"RenderScriptCams(${1:render}, ${2:ease}, ${3:easeTime}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "RenderScriptCams"
	},
	"ReplaceHudColour": {
		"body": [
			"ReplaceHudColour(${1:hudColorIndex}, ${2:hudColorIndex2})"
		],
		"scope": "lua",
		"prefix": "ReplaceHudColour"
	},
	"ReplaceHudColourWithRgba": {
		"body": [
			"ReplaceHudColourWithRgba(${1:hudColorIndex}, ${2:r}, ${3:g}, ${4:b}, ${5:a})"
		],
		"scope": "lua",
		"prefix": "ReplaceHudColourWithRgba"
	},
	"ReplayFreeCamGetMaxRange": {
		"body": [
			"ReplayFreeCamGetMaxRange()"
		],
		"scope": "lua",
		"prefix": "ReplayFreeCamGetMaxRange"
	},
	"ReportCrime": {
		"body": [
			"ReportCrime(${1:player}, ${2:crimeType}, ${3:wantedLvlThresh})"
		],
		"scope": "lua",
		"prefix": "ReportCrime"
	},
	"ReportPoliceSpottedPlayer": {
		"body": [
			"ReportPoliceSpottedPlayer(${1:player})"
		],
		"scope": "lua",
		"prefix": "ReportPoliceSpottedPlayer"
	},
	"RequestActionModeAsset": {
		"body": [
			"RequestActionModeAsset(${1:asset})"
		],
		"scope": "lua",
		"prefix": "RequestActionModeAsset"
	},
	"RequestAdditionalCollisionAtCoord": {
		"body": [
			"RequestAdditionalCollisionAtCoord(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "RequestAdditionalCollisionAtCoord"
	},
	"RequestAdditionalText": {
		"body": [
			"RequestAdditionalText(${1:gxt}, ${2:slot})"
		],
		"scope": "lua",
		"prefix": "RequestAdditionalText"
	},
	"RequestAdditionalTextForDlc": {
		"body": [
			"RequestAdditionalTextForDlc(${1:gxt}, ${2:slot})"
		],
		"scope": "lua",
		"prefix": "RequestAdditionalTextForDlc"
	},
	"RequestAmbientAudioBank": {
		"body": [
			"RequestAmbientAudioBank(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RequestAmbientAudioBank"
	},
	"RequestAnimDict": {
		"body": [
			"RequestAnimDict(${1:animDict})"
		],
		"scope": "lua",
		"prefix": "RequestAnimDict"
	},
	"RequestAnimSet": {
		"body": [
			"RequestAnimSet(${1:animSet})"
		],
		"scope": "lua",
		"prefix": "RequestAnimSet"
	},
	"RequestClipSet": {
		"body": [
			"RequestClipSet(${1:clipSet})"
		],
		"scope": "lua",
		"prefix": "RequestClipSet"
	},
	"RequestCollisionAtCoord": {
		"body": [
			"RequestCollisionAtCoord(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "RequestCollisionAtCoord"
	},
	"RequestCollisionForModel": {
		"body": [
			"RequestCollisionForModel(${1:model})"
		],
		"scope": "lua",
		"prefix": "RequestCollisionForModel"
	},
	"RequestCommerceItemImage": {
		"body": [
			"RequestCommerceItemImage(${1:index})"
		],
		"scope": "lua",
		"prefix": "RequestCommerceItemImage"
	},
	"RequestCutFile": {
		"body": [
			"RequestCutFile(${1:cutsceneName})"
		],
		"scope": "lua",
		"prefix": "RequestCutFile"
	},
	"RequestCutscene": {
		"body": [
			"RequestCutscene(${1:cutsceneName}, ${2:flags})"
		],
		"scope": "lua",
		"prefix": "RequestCutscene"
	},
	"RequestCutsceneWithPlaybackList": {
		"body": [
			"RequestCutsceneWithPlaybackList(${1:cutsceneName}, ${2:playbackFlags}, ${3:flags})"
		],
		"scope": "lua",
		"prefix": "RequestCutsceneWithPlaybackList"
	},
	"RequestIpl": {
		"body": [
			"RequestIpl(${1:iplName})"
		],
		"scope": "lua",
		"prefix": "RequestIpl"
	},
	"RequestMenuPedModel": {
		"body": [
			"RequestMenuPedModel(${1:model})"
		],
		"scope": "lua",
		"prefix": "RequestMenuPedModel"
	},
	"RequestMissionAudioBank": {
		"body": [
			"RequestMissionAudioBank(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RequestMissionAudioBank"
	},
	"RequestModel": {
		"body": [
			"RequestModel(${1:model})"
		],
		"scope": "lua",
		"prefix": "RequestModel"
	},
	"RequestModelsInRoom": {
		"body": [
			"RequestModelsInRoom(${1:interior}, ${2:roomName})"
		],
		"scope": "lua",
		"prefix": "RequestModelsInRoom"
	},
	"RequestNamedPtfxAsset": {
		"body": [
			"RequestNamedPtfxAsset(${1:fxName})"
		],
		"scope": "lua",
		"prefix": "RequestNamedPtfxAsset"
	},
	"RequestPathsPreferAccurateBoundingstruct": {
		"body": [
			"RequestPathsPreferAccurateBoundingstruct(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2})"
		],
		"scope": "lua",
		"prefix": "RequestPathsPreferAccurateBoundingstruct"
	},
	"RequestPedheadshotImgUpload": {
		"body": [
			"RequestPedheadshotImgUpload(${1:id})"
		],
		"scope": "lua",
		"prefix": "RequestPedheadshotImgUpload"
	},
	"RequestPedVehicleVisibilityTracking": {
		"body": [
			"RequestPedVehicleVisibilityTracking(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RequestPedVehicleVisibilityTracking"
	},
	"RequestPedVisibilityTracking": {
		"body": [
			"RequestPedVisibilityTracking(${1:ped})"
		],
		"scope": "lua",
		"prefix": "RequestPedVisibilityTracking"
	},
	"RequestPlayerCommerceSession": {
		"body": [
			"RequestPlayerCommerceSession(${1:playerSrc}, ${2:skuId})"
		],
		"scope": "lua",
		"prefix": "RequestPlayerCommerceSession"
	},
	"RequestPtfxAsset": {
		"body": [
			"RequestPtfxAsset()"
		],
		"scope": "lua",
		"prefix": "RequestPtfxAsset"
	},
	"RequestScaleformMovie": {
		"body": [
			"RequestScaleformMovie(${1:scaleformName})"
		],
		"scope": "lua",
		"prefix": "RequestScaleformMovie"
	},
	"RequestScaleformMovie_2": {
		"body": [
			"RequestScaleformMovie_2(${1:scaleformName})"
		],
		"scope": "lua",
		"prefix": "RequestScaleformMovie_2"
	},
	"RequestScaleformMovieInstance": {
		"body": [
			"RequestScaleformMovieInstance(${1:scaleformName})"
		],
		"scope": "lua",
		"prefix": "RequestScaleformMovieInstance"
	},
	"RequestScaleformMovieInteractive": {
		"body": [
			"RequestScaleformMovieInteractive(${1:scaleformName})"
		],
		"scope": "lua",
		"prefix": "RequestScaleformMovieInteractive"
	},
	"RequestScaleformScriptHudMovie": {
		"body": [
			"RequestScaleformScriptHudMovie(${1:hudComponent})"
		],
		"scope": "lua",
		"prefix": "RequestScaleformScriptHudMovie"
	},
	"RequestScript": {
		"body": [
			"RequestScript(${1:scriptName})"
		],
		"scope": "lua",
		"prefix": "RequestScript"
	},
	"RequestScriptAudioBank": {
		"body": [
			"RequestScriptAudioBank(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RequestScriptAudioBank"
	},
	"RequestScriptWithNameHash": {
		"body": [
			"RequestScriptWithNameHash(${1:scriptHash})"
		],
		"scope": "lua",
		"prefix": "RequestScriptWithNameHash"
	},
	"RequestStealthModeAsset": {
		"body": [
			"RequestStealthModeAsset(${1:asset})"
		],
		"scope": "lua",
		"prefix": "RequestStealthModeAsset"
	},
	"RequestStreamedTextureDict": {
		"body": [
			"RequestStreamedTextureDict(${1:textureDict}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RequestStreamedTextureDict"
	},
	"RequestTaskMoveNetworkStateTransition": {
		"body": [
			"RequestTaskMoveNetworkStateTransition(${1:ped}, ${2:name})"
		],
		"scope": "lua",
		"prefix": "RequestTaskMoveNetworkStateTransition"
	},
	"RequestVehicleAsset": {
		"body": [
			"RequestVehicleAsset(${1:vehicleHash}, ${2:vehicleAsset})"
		],
		"scope": "lua",
		"prefix": "RequestVehicleAsset"
	},
	"RequestVehicleDashboardScaleformMovie": {
		"body": [
			"RequestVehicleDashboardScaleformMovie(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "RequestVehicleDashboardScaleformMovie"
	},
	"RequestVehicleHighDetailModel": {
		"body": [
			"RequestVehicleHighDetailModel(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "RequestVehicleHighDetailModel"
	},
	"RequestVehicleRecording": {
		"body": [
			"RequestVehicleRecording(${1:recording}, ${2:script})"
		],
		"scope": "lua",
		"prefix": "RequestVehicleRecording"
	},
	"RequestWaypointRecording": {
		"body": [
			"RequestWaypointRecording(${1:name})"
		],
		"scope": "lua",
		"prefix": "RequestWaypointRecording"
	},
	"RequestWeaponAsset": {
		"body": [
			"RequestWeaponAsset(${1:weaponHash}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "RequestWeaponAsset"
	},
	"RequestWeaponHighDetailModel": {
		"body": [
			"RequestWeaponHighDetailModel(${1:weaponObject})"
		],
		"scope": "lua",
		"prefix": "RequestWeaponHighDetailModel"
	},
	"ReserveNetworkLocalObjects": {
		"body": [
			"ReserveNetworkLocalObjects(${1:amount})"
		],
		"scope": "lua",
		"prefix": "ReserveNetworkLocalObjects"
	},
	"ReserveNetworkLocalPeds": {
		"body": [
			"ReserveNetworkLocalPeds(${1:amount})"
		],
		"scope": "lua",
		"prefix": "ReserveNetworkLocalPeds"
	},
	"ReserveNetworkLocalVehicles": {
		"body": [
			"ReserveNetworkLocalVehicles(${1:amount})"
		],
		"scope": "lua",
		"prefix": "ReserveNetworkLocalVehicles"
	},
	"ReserveNetworkMissionObjects": {
		"body": [
			"ReserveNetworkMissionObjects(${1:amount})"
		],
		"scope": "lua",
		"prefix": "ReserveNetworkMissionObjects"
	},
	"ReserveNetworkMissionPeds": {
		"body": [
			"ReserveNetworkMissionPeds(${1:amount})"
		],
		"scope": "lua",
		"prefix": "ReserveNetworkMissionPeds"
	},
	"ReserveNetworkMissionVehicles": {
		"body": [
			"ReserveNetworkMissionVehicles(${1:amount})"
		],
		"scope": "lua",
		"prefix": "ReserveNetworkMissionVehicles"
	},
	"ResetAiMeleeWeaponDamageModifier": {
		"body": [
			"ResetAiMeleeWeaponDamageModifier()"
		],
		"scope": "lua",
		"prefix": "ResetAiMeleeWeaponDamageModifier"
	},
	"ResetAiWeaponDamageModifier": {
		"body": [
			"ResetAiWeaponDamageModifier()"
		],
		"scope": "lua",
		"prefix": "ResetAiWeaponDamageModifier"
	},
	"ResetBenchmarkRecording": {
		"body": [
			"ResetBenchmarkRecording()"
		],
		"scope": "lua",
		"prefix": "ResetBenchmarkRecording"
	},
	"ResetDeepOceanScaler": {
		"body": [
			"ResetDeepOceanScaler()"
		],
		"scope": "lua",
		"prefix": "ResetDeepOceanScaler"
	},
	"ResetDispatchIdealSpawnDistance": {
		"body": [
			"ResetDispatchIdealSpawnDistance()"
		],
		"scope": "lua",
		"prefix": "ResetDispatchIdealSpawnDistance"
	},
	"ResetDispatchSpawnBlockingAreas": {
		"body": [
			"ResetDispatchSpawnBlockingAreas()"
		],
		"scope": "lua",
		"prefix": "ResetDispatchSpawnBlockingAreas"
	},
	"ResetDispatchSpawnLocation": {
		"body": [
			"ResetDispatchSpawnLocation()"
		],
		"scope": "lua",
		"prefix": "ResetDispatchSpawnLocation"
	},
	"ResetDispatchTimeBetweenSpawnAttempts": {
		"body": [
			"ResetDispatchTimeBetweenSpawnAttempts(${1:p0})"
		],
		"scope": "lua",
		"prefix": "ResetDispatchTimeBetweenSpawnAttempts"
	},
	"ResetEditorValues": {
		"body": [
			"ResetEditorValues()"
		],
		"scope": "lua",
		"prefix": "ResetEditorValues"
	},
	"ResetEntityAlpha": {
		"body": [
			"ResetEntityAlpha(${1:entity})"
		],
		"scope": "lua",
		"prefix": "ResetEntityAlpha"
	},
	"ResetExclusiveScenarioGroup": {
		"body": [
			"ResetExclusiveScenarioGroup()"
		],
		"scope": "lua",
		"prefix": "ResetExclusiveScenarioGroup"
	},
	"ResetExtraTimecycleModifierStrength": {
		"body": [
			"ResetExtraTimecycleModifierStrength()"
		],
		"scope": "lua",
		"prefix": "ResetExtraTimecycleModifierStrength"
	},
	"ResetFlyThroughWindscreenParams": {
		"body": [
			"ResetFlyThroughWindscreenParams()"
		],
		"scope": "lua",
		"prefix": "ResetFlyThroughWindscreenParams"
	},
	"ResetGhostedEntityAlpha": {
		"body": [
			"ResetGhostedEntityAlpha()"
		],
		"scope": "lua",
		"prefix": "ResetGhostedEntityAlpha"
	},
	"ResetGlobalActionscriptFlag": {
		"body": [
			"ResetGlobalActionscriptFlag(${1:flagIndex})"
		],
		"scope": "lua",
		"prefix": "ResetGlobalActionscriptFlag"
	},
	"ResetGroupFormationDefaultSpacing": {
		"body": [
			"ResetGroupFormationDefaultSpacing(${1:groupHandle})"
		],
		"scope": "lua",
		"prefix": "ResetGroupFormationDefaultSpacing"
	},
	"ResetHudComponentValues": {
		"body": [
			"ResetHudComponentValues(${1:id})"
		],
		"scope": "lua",
		"prefix": "ResetHudComponentValues"
	},
	"ResetInputMappingScheme": {
		"body": [
			"ResetInputMappingScheme()"
		],
		"scope": "lua",
		"prefix": "ResetInputMappingScheme"
	},
	"ResetMapZoomDataLevel": {
		"body": [
			"ResetMapZoomDataLevel(${1:index})"
		],
		"scope": "lua",
		"prefix": "ResetMapZoomDataLevel"
	},
	"ResetParticleFxOverride": {
		"body": [
			"ResetParticleFxOverride(${1:name})"
		],
		"scope": "lua",
		"prefix": "ResetParticleFxOverride"
	},
	"ResetPausedRenderphases": {
		"body": [
			"ResetPausedRenderphases()"
		],
		"scope": "lua",
		"prefix": "ResetPausedRenderphases"
	},
	"ResetPedAudioFlags": {
		"body": [
			"ResetPedAudioFlags(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ResetPedAudioFlags"
	},
	"ResetPedInVehicleContext": {
		"body": [
			"ResetPedInVehicleContext(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ResetPedInVehicleContext"
	},
	"ResetPedLastVehicle": {
		"body": [
			"ResetPedLastVehicle(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ResetPedLastVehicle"
	},
	"ResetPedMovementClipset": {
		"body": [
			"ResetPedMovementClipset(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "ResetPedMovementClipset"
	},
	"ResetPedRagdollTimer": {
		"body": [
			"ResetPedRagdollTimer(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ResetPedRagdollTimer"
	},
	"ResetPedStrafeClipset": {
		"body": [
			"ResetPedStrafeClipset(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ResetPedStrafeClipset"
	},
	"ResetPedVisibleDamage": {
		"body": [
			"ResetPedVisibleDamage(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ResetPedVisibleDamage"
	},
	"ResetPedWeaponMovementClipset": {
		"body": [
			"ResetPedWeaponMovementClipset(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ResetPedWeaponMovementClipset"
	},
	"ResetPlayerArrestState": {
		"body": [
			"ResetPlayerArrestState(${1:player})"
		],
		"scope": "lua",
		"prefix": "ResetPlayerArrestState"
	},
	"ResetPlayerInputGait": {
		"body": [
			"ResetPlayerInputGait(${1:player})"
		],
		"scope": "lua",
		"prefix": "ResetPlayerInputGait"
	},
	"ResetPlayerStamina": {
		"body": [
			"ResetPlayerStamina(${1:player})"
		],
		"scope": "lua",
		"prefix": "ResetPlayerStamina"
	},
	"ResetReticuleValues": {
		"body": [
			"ResetReticuleValues()"
		],
		"scope": "lua",
		"prefix": "ResetReticuleValues"
	},
	"ResetScenarioGroupsEnabled": {
		"body": [
			"ResetScenarioGroupsEnabled()"
		],
		"scope": "lua",
		"prefix": "ResetScenarioGroupsEnabled"
	},
	"ResetScenarioTypesEnabled": {
		"body": [
			"ResetScenarioTypesEnabled()"
		],
		"scope": "lua",
		"prefix": "ResetScenarioTypesEnabled"
	},
	"ResetScriptGfxAlign": {
		"body": [
			"ResetScriptGfxAlign()"
		],
		"scope": "lua",
		"prefix": "ResetScriptGfxAlign"
	},
	"ResetTrevorRage": {
		"body": [
			"ResetTrevorRage()"
		],
		"scope": "lua",
		"prefix": "ResetTrevorRage"
	},
	"ResetVehiclePedsCanStandOnTopFlag": {
		"body": [
			"ResetVehiclePedsCanStandOnTopFlag(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "ResetVehiclePedsCanStandOnTopFlag"
	},
	"ResetVehicleStuckTimer": {
		"body": [
			"ResetVehicleStuckTimer(${1:vehicle}, ${2:nullAttributes})"
		],
		"scope": "lua",
		"prefix": "ResetVehicleStuckTimer"
	},
	"ResetVehicleWheels": {
		"body": [
			"ResetVehicleWheels(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "ResetVehicleWheels"
	},
	"ResetWantedLevelDifficulty": {
		"body": [
			"ResetWantedLevelDifficulty(${1:player})"
		],
		"scope": "lua",
		"prefix": "ResetWantedLevelDifficulty"
	},
	"ResetWorldBoundaryForPlayer": {
		"body": [
			"ResetWorldBoundaryForPlayer()"
		],
		"scope": "lua",
		"prefix": "ResetWorldBoundaryForPlayer"
	},
	"RestartFrontendMenu": {
		"body": [
			"RestartFrontendMenu(${1:menuHash}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RestartFrontendMenu"
	},
	"RestartGame": {
		"body": [
			"RestartGame()"
		],
		"scope": "lua",
		"prefix": "RestartGame"
	},
	"RestartScriptedConversation": {
		"body": [
			"RestartScriptedConversation()"
		],
		"scope": "lua",
		"prefix": "RestartScriptedConversation"
	},
	"RestorePlayerStamina": {
		"body": [
			"RestorePlayerStamina(${1:player}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RestorePlayerStamina"
	},
	"ResurrectPed": {
		"body": [
			"ResurrectPed(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ResurrectPed"
	},
	"ReturnTwo": {
		"body": [
			"ReturnTwo(${1:p0})"
		],
		"scope": "lua",
		"prefix": "ReturnTwo"
	},
	"ReviveInjuredPed": {
		"body": [
			"ReviveInjuredPed(${1:ped})"
		],
		"scope": "lua",
		"prefix": "ReviveInjuredPed"
	},
	"RockstarMessageGetString": {
		"body": [
			"RockstarMessageGetString()"
		],
		"scope": "lua",
		"prefix": "RockstarMessageGetString"
	},
	"RollDownWindow": {
		"body": [
			"RollDownWindow(${1:vehicle}, ${2:windowIndex})"
		],
		"scope": "lua",
		"prefix": "RollDownWindow"
	},
	"RollDownWindows": {
		"body": [
			"RollDownWindows(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "RollDownWindows"
	},
	"RollUpWindow": {
		"body": [
			"RollUpWindow(${1:vehicle}, ${2:windowIndex})"
		],
		"scope": "lua",
		"prefix": "RollUpWindow"
	},
	"RopeAreTexturesLoaded": {
		"body": [
			"RopeAreTexturesLoaded()"
		],
		"scope": "lua",
		"prefix": "RopeAreTexturesLoaded"
	},
	"RopeConvertToSimple": {
		"body": [
			"RopeConvertToSimple(${1:ropeId})"
		],
		"scope": "lua",
		"prefix": "RopeConvertToSimple"
	},
	"RopeDrawShadowEnabled": {
		"body": [
			"RopeDrawShadowEnabled(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "RopeDrawShadowEnabled"
	},
	"RopeForceLength": {
		"body": [
			"RopeForceLength(${1:ropeId}, ${2:length})"
		],
		"scope": "lua",
		"prefix": "RopeForceLength"
	},
	"RopeGetDistanceBetweenEnds": {
		"body": [
			"RopeGetDistanceBetweenEnds(${1:ropeId})"
		],
		"scope": "lua",
		"prefix": "RopeGetDistanceBetweenEnds"
	},
	"RopeLoadTextures": {
		"body": [
			"RopeLoadTextures()"
		],
		"scope": "lua",
		"prefix": "RopeLoadTextures"
	},
	"RopeResetLength": {
		"body": [
			"RopeResetLength(${1:ropeId}, ${2:length})"
		],
		"scope": "lua",
		"prefix": "RopeResetLength"
	},
	"RopeSetUpdateOrder": {
		"body": [
			"RopeSetUpdateOrder(${1:ropeId}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "RopeSetUpdateOrder"
	},
	"RopeSetUpdatePinverts": {
		"body": [
			"RopeSetUpdatePinverts(${1:ropeId})"
		],
		"scope": "lua",
		"prefix": "RopeSetUpdatePinverts"
	},
	"RopeUnloadTextures": {
		"body": [
			"RopeUnloadTextures()"
		],
		"scope": "lua",
		"prefix": "RopeUnloadTextures"
	},
	"Round": {
		"body": [
			"Round(${1:value})"
		],
		"scope": "lua",
		"prefix": "Round"
	},
	"SaveBenchmarkRecording": {
		"body": [
			"SaveBenchmarkRecording()"
		],
		"scope": "lua",
		"prefix": "SaveBenchmarkRecording"
	},
	"SaveHighQualityPhoto": {
		"body": [
			"SaveHighQualityPhoto(${1:unused})"
		],
		"scope": "lua",
		"prefix": "SaveHighQualityPhoto"
	},
	"SaveRecordingClip": {
		"body": [
			"SaveRecordingClip()"
		],
		"scope": "lua",
		"prefix": "SaveRecordingClip"
	},
	"SaveResourceFile": {
		"body": [
			"SaveResourceFile(${1:resourceName}, ${2:fileName}, ${3:data}, ${4:dataLength})"
		],
		"scope": "lua",
		"prefix": "SaveResourceFile"
	},
	"ScaleformMovieMethodAddParamBool": {
		"body": [
			"ScaleformMovieMethodAddParamBool(${1:value})"
		],
		"scope": "lua",
		"prefix": "ScaleformMovieMethodAddParamBool"
	},
	"ScaleformMovieMethodAddParamFloat": {
		"body": [
			"ScaleformMovieMethodAddParamFloat(${1:value})"
		],
		"scope": "lua",
		"prefix": "ScaleformMovieMethodAddParamFloat"
	},
	"ScaleformMovieMethodAddParamInt": {
		"body": [
			"ScaleformMovieMethodAddParamInt(${1:value})"
		],
		"scope": "lua",
		"prefix": "ScaleformMovieMethodAddParamInt"
	},
	"ScaleformMovieMethodAddParamLatestBriefString": {
		"body": [
			"ScaleformMovieMethodAddParamLatestBriefString(${1:value})"
		],
		"scope": "lua",
		"prefix": "ScaleformMovieMethodAddParamLatestBriefString"
	},
	"ScaleformMovieMethodAddParamPlayerNameString": {
		"body": [
			"ScaleformMovieMethodAddParamPlayerNameString(${1:string})"
		],
		"scope": "lua",
		"prefix": "ScaleformMovieMethodAddParamPlayerNameString"
	},
	"ScaleformMovieMethodAddParamTextureNameString": {
		"body": [
			"ScaleformMovieMethodAddParamTextureNameString(${1:string})"
		],
		"scope": "lua",
		"prefix": "ScaleformMovieMethodAddParamTextureNameString"
	},
	"ScaleformMovieMethodAddParamTextureNameString_2": {
		"body": [
			"ScaleformMovieMethodAddParamTextureNameString_2(${1:string})"
		],
		"scope": "lua",
		"prefix": "ScaleformMovieMethodAddParamTextureNameString_2"
	},
	"ScEmailMessageClearRecipList": {
		"body": [
			"ScEmailMessageClearRecipList()"
		],
		"scope": "lua",
		"prefix": "ScEmailMessageClearRecipList"
	},
	"ScEmailMessagePushGamerToRecipList": {
		"body": [
			"ScEmailMessagePushGamerToRecipList(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "ScEmailMessagePushGamerToRecipList"
	},
	"ScGetHasAchievementBeenPassed": {
		"body": [
			"ScGetHasAchievementBeenPassed(${1:achievement})"
		],
		"scope": "lua",
		"prefix": "ScGetHasAchievementBeenPassed"
	},
	"ScGetIsProfileAttributeSet": {
		"body": [
			"ScGetIsProfileAttributeSet(${1:name})"
		],
		"scope": "lua",
		"prefix": "ScGetIsProfileAttributeSet"
	},
	"ScGetNickname": {
		"body": [
			"ScGetNickname()"
		],
		"scope": "lua",
		"prefix": "ScGetNickname"
	},
	"ScheduleResourceTick": {
		"body": [
			"ScheduleResourceTick(${1:resourceName})"
		],
		"scope": "lua",
		"prefix": "ScheduleResourceTick"
	},
	"ScInboxGetEmails": {
		"body": [
			"ScInboxGetEmails(${1:offset}, ${2:limit})"
		],
		"scope": "lua",
		"prefix": "ScInboxGetEmails"
	},
	"ScInboxGetTotalNumMessages": {
		"body": [
			"ScInboxGetTotalNumMessages()"
		],
		"scope": "lua",
		"prefix": "ScInboxGetTotalNumMessages"
	},
	"ScInboxMessageDoApply": {
		"body": [
			"ScInboxMessageDoApply(${1:p0})"
		],
		"scope": "lua",
		"prefix": "ScInboxMessageDoApply"
	},
	"ScInboxMessageGetBountyData": {
		"body": [
			"ScInboxMessageGetBountyData(${1:index}, ${2:outData})"
		],
		"scope": "lua",
		"prefix": "ScInboxMessageGetBountyData"
	},
	"ScInboxMessageGetDataBool": {
		"body": [
			"ScInboxMessageGetDataBool(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "ScInboxMessageGetDataBool"
	},
	"ScInboxMessageGetDataInt": {
		"body": [
			"ScInboxMessageGetDataInt(${1:p0}, ${2:context}, ${3:out})"
		],
		"scope": "lua",
		"prefix": "ScInboxMessageGetDataInt"
	},
	"ScInboxMessageGetDataString": {
		"body": [
			"ScInboxMessageGetDataString(${1:p0}, ${2:context}, ${3:out})"
		],
		"scope": "lua",
		"prefix": "ScInboxMessageGetDataString"
	},
	"ScInboxMessageGetString": {
		"body": [
			"ScInboxMessageGetString(${1:p0})"
		],
		"scope": "lua",
		"prefix": "ScInboxMessageGetString"
	},
	"ScInboxMessageGetUgcdata": {
		"body": [
			"ScInboxMessageGetUgcdata(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "ScInboxMessageGetUgcdata"
	},
	"ScInboxMessageInit": {
		"body": [
			"ScInboxMessageInit(${1:p0})"
		],
		"scope": "lua",
		"prefix": "ScInboxMessageInit"
	},
	"ScInboxMessagePop": {
		"body": [
			"ScInboxMessagePop(${1:p0})"
		],
		"scope": "lua",
		"prefix": "ScInboxMessagePop"
	},
	"ScInboxMessagePushGamerToEventRecipList": {
		"body": [
			"ScInboxMessagePushGamerToEventRecipList(${1:networkHandle})"
		],
		"scope": "lua",
		"prefix": "ScInboxMessagePushGamerToEventRecipList"
	},
	"ScInboxMessageSendBountyPresenceEvent": {
		"body": [
			"ScInboxMessageSendBountyPresenceEvent(${1:data})"
		],
		"scope": "lua",
		"prefix": "ScInboxMessageSendBountyPresenceEvent"
	},
	"ScInboxMessageSendUgcStatUpdateEvent": {
		"body": [
			"ScInboxMessageSendUgcStatUpdateEvent(${1:data})"
		],
		"scope": "lua",
		"prefix": "ScInboxMessageSendUgcStatUpdateEvent"
	},
	"ScPresenceAttrSetFloat": {
		"body": [
			"ScPresenceAttrSetFloat()"
		],
		"scope": "lua",
		"prefix": "ScPresenceAttrSetFloat"
	},
	"ScPresenceAttrSetInt": {
		"body": [
			"ScPresenceAttrSetInt(${1:attrHash}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "ScPresenceAttrSetInt"
	},
	"ScPresenceAttrSetString": {
		"body": [
			"ScPresenceAttrSetString(${1:attrHash}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "ScPresenceAttrSetString"
	},
	"ScProfanityCheckString": {
		"body": [
			"ScProfanityCheckString(${1:string}, ${2:token})"
		],
		"scope": "lua",
		"prefix": "ScProfanityCheckString"
	},
	"ScProfanityCheckUgcString": {
		"body": [
			"ScProfanityCheckUgcString(${1:string}, ${2:token})"
		],
		"scope": "lua",
		"prefix": "ScProfanityCheckUgcString"
	},
	"ScProfanityGetCheckIsPending": {
		"body": [
			"ScProfanityGetCheckIsPending(${1:token})"
		],
		"scope": "lua",
		"prefix": "ScProfanityGetCheckIsPending"
	},
	"ScProfanityGetCheckIsValid": {
		"body": [
			"ScProfanityGetCheckIsValid(${1:token})"
		],
		"scope": "lua",
		"prefix": "ScProfanityGetCheckIsValid"
	},
	"ScProfanityGetStringPassed": {
		"body": [
			"ScProfanityGetStringPassed(${1:token})"
		],
		"scope": "lua",
		"prefix": "ScProfanityGetStringPassed"
	},
	"ScProfanityGetStringStatus": {
		"body": [
			"ScProfanityGetStringStatus(${1:token})"
		],
		"scope": "lua",
		"prefix": "ScProfanityGetStringStatus"
	},
	"ScriptIsMovingMobilePhoneOffscreen": {
		"body": [
			"ScriptIsMovingMobilePhoneOffscreen(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "ScriptIsMovingMobilePhoneOffscreen"
	},
	"ScriptRaceGetPlayerSplitTime": {
		"body": [
			"ScriptRaceGetPlayerSplitTime(${1:player})"
		],
		"scope": "lua",
		"prefix": "ScriptRaceGetPlayerSplitTime"
	},
	"ScriptRaceInit": {
		"body": [
			"ScriptRaceInit(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "ScriptRaceInit"
	},
	"ScriptRaceShutdown": {
		"body": [
			"ScriptRaceShutdown()"
		],
		"scope": "lua",
		"prefix": "ScriptRaceShutdown"
	},
	"ScriptThreadIteratorGetNextThreadId": {
		"body": [
			"ScriptThreadIteratorGetNextThreadId()"
		],
		"scope": "lua",
		"prefix": "ScriptThreadIteratorGetNextThreadId"
	},
	"ScriptThreadIteratorReset": {
		"body": [
			"ScriptThreadIteratorReset()"
		],
		"scope": "lua",
		"prefix": "ScriptThreadIteratorReset"
	},
	"SeethroughGetMaxThickness": {
		"body": [
			"SeethroughGetMaxThickness()"
		],
		"scope": "lua",
		"prefix": "SeethroughGetMaxThickness"
	},
	"SeethroughReset": {
		"body": [
			"SeethroughReset()"
		],
		"scope": "lua",
		"prefix": "SeethroughReset"
	},
	"SeethroughSetColorNear": {
		"body": [
			"SeethroughSetColorNear(${1:red}, ${2:green}, ${3:blue})"
		],
		"scope": "lua",
		"prefix": "SeethroughSetColorNear"
	},
	"SeethroughSetFadeEndDistance": {
		"body": [
			"SeethroughSetFadeEndDistance(${1:distance})"
		],
		"scope": "lua",
		"prefix": "SeethroughSetFadeEndDistance"
	},
	"SeethroughSetFadeStartDistance": {
		"body": [
			"SeethroughSetFadeStartDistance(${1:distance})"
		],
		"scope": "lua",
		"prefix": "SeethroughSetFadeStartDistance"
	},
	"SeethroughSetHeatscale": {
		"body": [
			"SeethroughSetHeatscale(${1:index}, ${2:heatScale})"
		],
		"scope": "lua",
		"prefix": "SeethroughSetHeatscale"
	},
	"SeethroughSetHiLightIntensity": {
		"body": [
			"SeethroughSetHiLightIntensity(${1:intensity})"
		],
		"scope": "lua",
		"prefix": "SeethroughSetHiLightIntensity"
	},
	"SeethroughSetHiLightNoise": {
		"body": [
			"SeethroughSetHiLightNoise(${1:noise})"
		],
		"scope": "lua",
		"prefix": "SeethroughSetHiLightNoise"
	},
	"SeethroughSetMaxThickness": {
		"body": [
			"SeethroughSetMaxThickness(${1:thickness})"
		],
		"scope": "lua",
		"prefix": "SeethroughSetMaxThickness"
	},
	"SeethroughSetNoiseAmountMax": {
		"body": [
			"SeethroughSetNoiseAmountMax(${1:amount})"
		],
		"scope": "lua",
		"prefix": "SeethroughSetNoiseAmountMax"
	},
	"SeethroughSetNoiseAmountMin": {
		"body": [
			"SeethroughSetNoiseAmountMin(${1:amount})"
		],
		"scope": "lua",
		"prefix": "SeethroughSetNoiseAmountMin"
	},
	"SelectEntityAtCursor": {
		"body": [
			"SelectEntityAtCursor(${1:hitFlags}, ${2:precise})"
		],
		"scope": "lua",
		"prefix": "SelectEntityAtCursor"
	},
	"SelectEntityAtPos": {
		"body": [
			"SelectEntityAtPos(${1:fracX}, ${2:fracY}, ${3:hitFlags}, ${4:precise})"
		],
		"scope": "lua",
		"prefix": "SelectEntityAtPos"
	},
	"SendDuiMessage": {
		"body": [
			"SendDuiMessage(${1:duiObject}, ${2:jsonString})"
		],
		"scope": "lua",
		"prefix": "SendDuiMessage"
	},
	"SendDuiMouseDown": {
		"body": [
			"SendDuiMouseDown(${1:duiObject}, ${2:button})"
		],
		"scope": "lua",
		"prefix": "SendDuiMouseDown"
	},
	"SendDuiMouseMove": {
		"body": [
			"SendDuiMouseMove(${1:duiObject}, ${2:x}, ${3:y})"
		],
		"scope": "lua",
		"prefix": "SendDuiMouseMove"
	},
	"SendDuiMouseUp": {
		"body": [
			"SendDuiMouseUp(${1:duiObject}, ${2:button})"
		],
		"scope": "lua",
		"prefix": "SendDuiMouseUp"
	},
	"SendDuiMouseWheel": {
		"body": [
			"SendDuiMouseWheel(${1:duiObject}, ${2:deltaY}, ${3:deltaX})"
		],
		"scope": "lua",
		"prefix": "SendDuiMouseWheel"
	},
	"SendLoadingScreenMessage": {
		"body": [
			"SendLoadingScreenMessage(${1:jsonString})"
		],
		"scope": "lua",
		"prefix": "SendLoadingScreenMessage"
	},
	"SendNuiMessage": {
		"body": [
			"SendNuiMessage(${1:jsonString})"
		],
		"scope": "lua",
		"prefix": "SendNuiMessage"
	},
	"SetAbilityBarValue": {
		"body": [
			"SetAbilityBarValue(${1:value}, ${2:maxValue})"
		],
		"scope": "lua",
		"prefix": "SetAbilityBarValue"
	},
	"SetAbilityBarVisibilityInMultiplayer": {
		"body": [
			"SetAbilityBarVisibilityInMultiplayer(${1:visible})"
		],
		"scope": "lua",
		"prefix": "SetAbilityBarVisibilityInMultiplayer"
	},
	"SetAchievementProgress": {
		"body": [
			"SetAchievementProgress(${1:achievement}, ${2:progress})"
		],
		"scope": "lua",
		"prefix": "SetAchievementProgress"
	},
	"SetActivateObjectPhysicsAsSoonAsItIsUnfrozen": {
		"body": [
			"SetActivateObjectPhysicsAsSoonAsItIsUnfrozen(${1:object}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetActivateObjectPhysicsAsSoonAsItIsUnfrozen"
	},
	"SetAggressiveHorns": {
		"body": [
			"SetAggressiveHorns(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetAggressiveHorns"
	},
	"SetAiGlobalPathNodesType": {
		"body": [
			"SetAiGlobalPathNodesType(${1:type})"
		],
		"scope": "lua",
		"prefix": "SetAiGlobalPathNodesType"
	},
	"SetAiMeleeWeaponDamageModifier": {
		"body": [
			"SetAiMeleeWeaponDamageModifier(${1:modifier})"
		],
		"scope": "lua",
		"prefix": "SetAiMeleeWeaponDamageModifier"
	},
	"SetAirDragMultiplierForPlayersVehicle": {
		"body": [
			"SetAirDragMultiplierForPlayersVehicle(${1:player}, ${2:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetAirDragMultiplierForPlayersVehicle"
	},
	"SetAiWeaponDamageModifier": {
		"body": [
			"SetAiWeaponDamageModifier(${1:value})"
		],
		"scope": "lua",
		"prefix": "SetAiWeaponDamageModifier"
	},
	"SetAllLowPriorityVehicleGeneratorsActive": {
		"body": [
			"SetAllLowPriorityVehicleGeneratorsActive(${1:active})"
		],
		"scope": "lua",
		"prefix": "SetAllLowPriorityVehicleGeneratorsActive"
	},
	"SetAllowAbilityBarInMultiplayer": {
		"body": [
			"SetAllowAbilityBarInMultiplayer(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetAllowAbilityBarInMultiplayer"
	},
	"SetAllPathsCacheBoundingstruct": {
		"body": [
			"SetAllPathsCacheBoundingstruct(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetAllPathsCacheBoundingstruct"
	},
	"SetAllRandomPedsFlee": {
		"body": [
			"SetAllRandomPedsFlee(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetAllRandomPedsFlee"
	},
	"SetAllRandomPedsFleeThisFrame": {
		"body": [
			"SetAllRandomPedsFleeThisFrame(${1:player})"
		],
		"scope": "lua",
		"prefix": "SetAllRandomPedsFleeThisFrame"
	},
	"SetAllVehicleGeneratorsActive": {
		"body": [
			"SetAllVehicleGeneratorsActive()"
		],
		"scope": "lua",
		"prefix": "SetAllVehicleGeneratorsActive"
	},
	"SetAllVehicleGeneratorsActiveInArea": {
		"body": [
			"SetAllVehicleGeneratorsActiveInArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "SetAllVehicleGeneratorsActiveInArea"
	},
	"SetAmbientPedRangeMultiplierThisFrame": {
		"body": [
			"SetAmbientPedRangeMultiplierThisFrame(${1:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetAmbientPedRangeMultiplierThisFrame"
	},
	"SetAmbientPedsDropMoney": {
		"body": [
			"SetAmbientPedsDropMoney(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetAmbientPedsDropMoney"
	},
	"SetAmbientVehicleRangeMultiplierThisFrame": {
		"body": [
			"SetAmbientVehicleRangeMultiplierThisFrame(${1:range})"
		],
		"scope": "lua",
		"prefix": "SetAmbientVehicleRangeMultiplierThisFrame"
	},
	"SetAmbientVoiceName": {
		"body": [
			"SetAmbientVoiceName(${1:ped}, ${2:name})"
		],
		"scope": "lua",
		"prefix": "SetAmbientVoiceName"
	},
	"SetAmbientVoiceNameHash": {
		"body": [
			"SetAmbientVoiceNameHash(${1:ped}, ${2:hash})"
		],
		"scope": "lua",
		"prefix": "SetAmbientVoiceNameHash"
	},
	"SetAmbientZoneListState": {
		"body": [
			"SetAmbientZoneListState(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetAmbientZoneListState"
	},
	"SetAmbientZoneListStatePersistent": {
		"body": [
			"SetAmbientZoneListStatePersistent(${1:ambientZone}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetAmbientZoneListStatePersistent"
	},
	"SetAmbientZoneState": {
		"body": [
			"SetAmbientZoneState(${1:p1}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "SetAmbientZoneState"
	},
	"SetAmbientZoneStatePersistent": {
		"body": [
			"SetAmbientZoneStatePersistent(${1:ambientZone}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetAmbientZoneStatePersistent"
	},
	"SetAmmoInClip": {
		"body": [
			"SetAmmoInClip(${1:ped}, ${2:weaponHash}, ${3:ammo})"
		],
		"scope": "lua",
		"prefix": "SetAmmoInClip"
	},
	"SetAnimalMood": {
		"body": [
			"SetAnimalMood(${1:animal}, ${2:mood})"
		],
		"scope": "lua",
		"prefix": "SetAnimalMood"
	},
	"SetAnimLooped": {
		"body": [
			"SetAnimLooped(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetAnimLooped"
	},
	"SetAnimRate": {
		"body": [
			"SetAnimRate(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetAnimRate"
	},
	"SetAnimWeight": {
		"body": [
			"SetAnimWeight(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "SetAnimWeight"
	},
	"SetArtificialLightsState": {
		"body": [
			"SetArtificialLightsState(${1:state})"
		],
		"scope": "lua",
		"prefix": "SetArtificialLightsState"
	},
	"SetArtificialLightsStateAffectsVehicles": {
		"body": [
			"SetArtificialLightsStateAffectsVehicles(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetArtificialLightsStateAffectsVehicles"
	},
	"SetAudioFlag": {
		"body": [
			"SetAudioFlag(${1:flagName}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetAudioFlag"
	},
	"SetAudioSceneVariable": {
		"body": [
			"SetAudioSceneVariable(${1:scene}, ${2:variable}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "SetAudioSceneVariable"
	},
	"SetAudioScriptCleanupTime": {
		"body": [
			"SetAudioScriptCleanupTime(${1:time})"
		],
		"scope": "lua",
		"prefix": "SetAudioScriptCleanupTime"
	},
	"SetAudioSpecialEffectMode": {
		"body": [
			"SetAudioSpecialEffectMode(${1:mode})"
		],
		"scope": "lua",
		"prefix": "SetAudioSpecialEffectMode"
	},
	"SetAudioSubmixEffectParamFloat": {
		"body": [
			"SetAudioSubmixEffectParamFloat(${1:submixId}, ${2:effectSlot}, ${3:paramIndex}, ${4:paramValue})"
		],
		"scope": "lua",
		"prefix": "SetAudioSubmixEffectParamFloat"
	},
	"SetAudioSubmixEffectParamInt": {
		"body": [
			"SetAudioSubmixEffectParamInt(${1:submixId}, ${2:effectSlot}, ${3:paramIndex}, ${4:paramValue})"
		],
		"scope": "lua",
		"prefix": "SetAudioSubmixEffectParamInt"
	},
	"SetAudioSubmixEffectRadioFx": {
		"body": [
			"SetAudioSubmixEffectRadioFx(${1:submixId}, ${2:effectSlot})"
		],
		"scope": "lua",
		"prefix": "SetAudioSubmixEffectRadioFx"
	},
	"SetAudioVehiclePriority": {
		"body": [
			"SetAudioVehiclePriority(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetAudioVehiclePriority"
	},
	"SetAutoGiveParachuteWhenEnterPlane": {
		"body": [
			"SetAutoGiveParachuteWhenEnterPlane(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetAutoGiveParachuteWhenEnterPlane"
	},
	"SetAutoGiveScubaGearWhenExitVehicle": {
		"body": [
			"SetAutoGiveScubaGearWhenExitVehicle(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetAutoGiveScubaGearWhenExitVehicle"
	},
	"SetBackfaceculling": {
		"body": [
			"SetBackfaceculling(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBackfaceculling"
	},
	"SetBalanceAddMachine": {
		"body": [
			"SetBalanceAddMachine()"
		],
		"scope": "lua",
		"prefix": "SetBalanceAddMachine"
	},
	"SetBalanceAddMachines": {
		"body": [
			"SetBalanceAddMachines(${1:dataCount})"
		],
		"scope": "lua",
		"prefix": "SetBalanceAddMachines"
	},
	"SetBeastModeActive": {
		"body": [
			"SetBeastModeActive(${1:player})"
		],
		"scope": "lua",
		"prefix": "SetBeastModeActive"
	},
	"SetBigmapActive": {
		"body": [
			"SetBigmapActive(${1:toggleBigMap}, ${2:showFullMap})"
		],
		"scope": "lua",
		"prefix": "SetBigmapActive"
	},
	"SetBikeOnStand": {
		"body": [
			"SetBikeOnStand(${1:vehicle}, ${2:x}, ${3:y})"
		],
		"scope": "lua",
		"prefix": "SetBikeOnStand"
	},
	"SetBinkMovie": {
		"body": [
			"SetBinkMovie(${1:name})"
		],
		"scope": "lua",
		"prefix": "SetBinkMovie"
	},
	"SetBinkMovieTime": {
		"body": [
			"SetBinkMovieTime(${1:binkMovie}, ${2:progress})"
		],
		"scope": "lua",
		"prefix": "SetBinkMovieTime"
	},
	"SetBinkMovieUnk_2": {
		"body": [
			"SetBinkMovieUnk_2(${1:binkMovie}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetBinkMovieUnk_2"
	},
	"SetBinkMovieVolume": {
		"body": [
			"SetBinkMovieVolume(${1:binkMovie}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetBinkMovieVolume"
	},
	"SetBinkShouldSkip": {
		"body": [
			"SetBinkShouldSkip(${1:binkMovie}, ${2:shouldSkip})"
		],
		"scope": "lua",
		"prefix": "SetBinkShouldSkip"
	},
	"SetBit": {
		"body": [
			"SetBit(${1:offset})"
		],
		"scope": "lua",
		"prefix": "SetBit"
	},
	"SetBitsInRange": {
		"body": [
			"SetBitsInRange(${1:rangeStart}, ${2:rangeEnd}, ${3:p3})"
		],
		"scope": "lua",
		"prefix": "SetBitsInRange"
	},
	"SetBlipAlpha": {
		"body": [
			"SetBlipAlpha(${1:blip}, ${2:alpha})"
		],
		"scope": "lua",
		"prefix": "SetBlipAlpha"
	},
	"SetBlipAsFriendly": {
		"body": [
			"SetBlipAsFriendly(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBlipAsFriendly"
	},
	"SetBlipAsMissionCreatorBlip": {
		"body": [
			"SetBlipAsMissionCreatorBlip(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBlipAsMissionCreatorBlip"
	},
	"SetBlipAsShortRange": {
		"body": [
			"SetBlipAsShortRange(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBlipAsShortRange"
	},
	"SetBlipBright": {
		"body": [
			"SetBlipBright(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBlipBright"
	},
	"SetBlipCategory": {
		"body": [
			"SetBlipCategory(${1:blip}, ${2:index})"
		],
		"scope": "lua",
		"prefix": "SetBlipCategory"
	},
	"SetBlipColour": {
		"body": [
			"SetBlipColour(${1:blip}, ${2:color})"
		],
		"scope": "lua",
		"prefix": "SetBlipColour"
	},
	"SetBlipCoords": {
		"body": [
			"SetBlipCoords(${1:blip}, ${2:posX}, ${3:posY}, ${4:posZ})"
		],
		"scope": "lua",
		"prefix": "SetBlipCoords"
	},
	"SetBlipDisplay": {
		"body": [
			"SetBlipDisplay(${1:blip}, ${2:displayId})"
		],
		"scope": "lua",
		"prefix": "SetBlipDisplay"
	},
	"SetBlipDisplayIndicatorOnBlip": {
		"body": [
			"SetBlipDisplayIndicatorOnBlip(${1:blip}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetBlipDisplayIndicatorOnBlip"
	},
	"SetBlipFade": {
		"body": [
			"SetBlipFade(${1:blip}, ${2:opacity}, ${3:duration})"
		],
		"scope": "lua",
		"prefix": "SetBlipFade"
	},
	"SetBlipFlashes": {
		"body": [
			"SetBlipFlashes(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBlipFlashes"
	},
	"SetBlipFlashesAlternate": {
		"body": [
			"SetBlipFlashesAlternate(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBlipFlashesAlternate"
	},
	"SetBlipFlashInterval": {
		"body": [
			"SetBlipFlashInterval(${1:blip}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetBlipFlashInterval"
	},
	"SetBlipFlashTimer": {
		"body": [
			"SetBlipFlashTimer(${1:blip}, ${2:duration})"
		],
		"scope": "lua",
		"prefix": "SetBlipFlashTimer"
	},
	"SetBlipHiddenOnLegend": {
		"body": [
			"SetBlipHiddenOnLegend(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBlipHiddenOnLegend"
	},
	"SetBlipHighDetail": {
		"body": [
			"SetBlipHighDetail(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBlipHighDetail"
	},
	"SetBlipNameFromTextFile": {
		"body": [
			"SetBlipNameFromTextFile(${1:blip}, ${2:gxtEntry})"
		],
		"scope": "lua",
		"prefix": "SetBlipNameFromTextFile"
	},
	"SetBlipNameToPlayerName": {
		"body": [
			"SetBlipNameToPlayerName(${1:blip}, ${2:player})"
		],
		"scope": "lua",
		"prefix": "SetBlipNameToPlayerName"
	},
	"SetBlipPriority": {
		"body": [
			"SetBlipPriority(${1:blip}, ${2:priority})"
		],
		"scope": "lua",
		"prefix": "SetBlipPriority"
	},
	"SetBlipRotation": {
		"body": [
			"SetBlipRotation(${1:blip}, ${2:rotation})"
		],
		"scope": "lua",
		"prefix": "SetBlipRotation"
	},
	"SetBlipRoute": {
		"body": [
			"SetBlipRoute(${1:blip}, ${2:enabled})"
		],
		"scope": "lua",
		"prefix": "SetBlipRoute"
	},
	"SetBlipRouteColour": {
		"body": [
			"SetBlipRouteColour(${1:blip}, ${2:colour})"
		],
		"scope": "lua",
		"prefix": "SetBlipRouteColour"
	},
	"SetBlipScale": {
		"body": [
			"SetBlipScale(${1:blip}, ${2:scale})"
		],
		"scope": "lua",
		"prefix": "SetBlipScale"
	},
	"SetBlipScaleTransformation": {
		"body": [
			"SetBlipScaleTransformation(${1:blip}, ${2:xScale}, ${3:yScale})"
		],
		"scope": "lua",
		"prefix": "SetBlipScaleTransformation"
	},
	"SetBlipSecondaryColour": {
		"body": [
			"SetBlipSecondaryColour(${1:blip}, ${2:r}, ${3:g}, ${4:b})"
		],
		"scope": "lua",
		"prefix": "SetBlipSecondaryColour"
	},
	"SetBlipShowCone": {
		"body": [
			"SetBlipShowCone(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBlipShowCone"
	},
	"SetBlipShrink": {
		"body": [
			"SetBlipShrink(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBlipShrink"
	},
	"SetBlipSprite": {
		"body": [
			"SetBlipSprite(${1:blip}, ${2:spriteId})"
		],
		"scope": "lua",
		"prefix": "SetBlipSprite"
	},
	"SetBlipSquaredRotation": {
		"body": [
			"SetBlipSquaredRotation(${1:blip}, ${2:heading})"
		],
		"scope": "lua",
		"prefix": "SetBlipSquaredRotation"
	},
	"SetBlockingOfNonTemporaryEvents": {
		"body": [
			"SetBlockingOfNonTemporaryEvents(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBlockingOfNonTemporaryEvents"
	},
	"SetBoatAnchor": {
		"body": [
			"SetBoatAnchor(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBoatAnchor"
	},
	"SetBoatBoomPositionRatio": {
		"body": [
			"SetBoatBoomPositionRatio(${1:vehicle}, ${2:ratio})"
		],
		"scope": "lua",
		"prefix": "SetBoatBoomPositionRatio"
	},
	"SetBoatDisableAvoidance": {
		"body": [
			"SetBoatDisableAvoidance(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetBoatDisableAvoidance"
	},
	"SetBoatFrozenWhenAnchored": {
		"body": [
			"SetBoatFrozenWhenAnchored(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBoatFrozenWhenAnchored"
	},
	"SetBoatIsSinking": {
		"body": [
			"SetBoatIsSinking(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "SetBoatIsSinking"
	},
	"SetBoatMovementResistance": {
		"body": [
			"SetBoatMovementResistance(${1:vehicle}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetBoatMovementResistance"
	},
	"SetBoatSinksWhenWrecked": {
		"body": [
			"SetBoatSinksWhenWrecked(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetBoatSinksWhenWrecked"
	},
	"SetCamActive": {
		"body": [
			"SetCamActive(${1:cam}, ${2:active})"
		],
		"scope": "lua",
		"prefix": "SetCamActive"
	},
	"SetCamActiveWithInterp": {
		"body": [
			"SetCamActiveWithInterp(${1:camTo}, ${2:camFrom}, ${3:duration}, ${4:easeLocation}, ${5:easeRotation})"
		],
		"scope": "lua",
		"prefix": "SetCamActiveWithInterp"
	},
	"SetCamAffectsAiming": {
		"body": [
			"SetCamAffectsAiming(${1:cam}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCamAffectsAiming"
	},
	"SetCamAnimCurrentPhase": {
		"body": [
			"SetCamAnimCurrentPhase(${1:cam}, ${2:phase})"
		],
		"scope": "lua",
		"prefix": "SetCamAnimCurrentPhase"
	},
	"SetCamberedWheelsDisabled": {
		"body": [
			"SetCamberedWheelsDisabled(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCamberedWheelsDisabled"
	},
	"SetCamCoord": {
		"body": [
			"SetCamCoord(${1:cam}, ${2:posX}, ${3:posY}, ${4:posZ})"
		],
		"scope": "lua",
		"prefix": "SetCamCoord"
	},
	"SetCamDebugName": {
		"body": [
			"SetCamDebugName(${1:camera}, ${2:name})"
		],
		"scope": "lua",
		"prefix": "SetCamDebugName"
	},
	"SetCamDofFnumberOfLens": {
		"body": [
			"SetCamDofFnumberOfLens(${1:camera}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetCamDofFnumberOfLens"
	},
	"SetCamDofFocalLengthMultiplier": {
		"body": [
			"SetCamDofFocalLengthMultiplier(${1:camera}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetCamDofFocalLengthMultiplier"
	},
	"SetCamDofFocusDistanceBias": {
		"body": [
			"SetCamDofFocusDistanceBias(${1:camera}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetCamDofFocusDistanceBias"
	},
	"SetCamDofMaxNearInFocusDistance": {
		"body": [
			"SetCamDofMaxNearInFocusDistance(${1:camera}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetCamDofMaxNearInFocusDistance"
	},
	"SetCamDofMaxNearInFocusDistanceBlendLevel": {
		"body": [
			"SetCamDofMaxNearInFocusDistanceBlendLevel(${1:camera}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetCamDofMaxNearInFocusDistanceBlendLevel"
	},
	"SetCamDofPlanes": {
		"body": [
			"SetCamDofPlanes(${1:cam}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "SetCamDofPlanes"
	},
	"SetCamDofStrength": {
		"body": [
			"SetCamDofStrength(${1:cam}, ${2:dofStrength})"
		],
		"scope": "lua",
		"prefix": "SetCamDofStrength"
	},
	"SetCamEffect": {
		"body": [
			"SetCamEffect(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetCamEffect"
	},
	"SetCamFarClip": {
		"body": [
			"SetCamFarClip(${1:cam}, ${2:farClip})"
		],
		"scope": "lua",
		"prefix": "SetCamFarClip"
	},
	"SetCamFarDof": {
		"body": [
			"SetCamFarDof(${1:cam}, ${2:farDOF})"
		],
		"scope": "lua",
		"prefix": "SetCamFarDof"
	},
	"SetCamFov": {
		"body": [
			"SetCamFov(${1:cam}, ${2:fieldOfView})"
		],
		"scope": "lua",
		"prefix": "SetCamFov"
	},
	"SetCamInheritRollVehicle": {
		"body": [
			"SetCamInheritRollVehicle(${1:cam}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetCamInheritRollVehicle"
	},
	"SetCamMotionBlurStrength": {
		"body": [
			"SetCamMotionBlurStrength(${1:cam}, ${2:strength})"
		],
		"scope": "lua",
		"prefix": "SetCamMotionBlurStrength"
	},
	"SetCamNearClip": {
		"body": [
			"SetCamNearClip(${1:cam}, ${2:nearClip})"
		],
		"scope": "lua",
		"prefix": "SetCamNearClip"
	},
	"SetCamNearDof": {
		"body": [
			"SetCamNearDof(${1:cam}, ${2:nearDOF})"
		],
		"scope": "lua",
		"prefix": "SetCamNearDof"
	},
	"SetCamParams": {
		"body": [
			"SetCamParams(${1:cam}, ${2:posX}, ${3:posY}, ${4:posZ}, ${5:rotX}, ${6:rotY}, ${7:rotZ}, ${8:fieldOfView}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11})"
		],
		"scope": "lua",
		"prefix": "SetCamParams"
	},
	"SetCamRot": {
		"body": [
			"SetCamRot(${1:cam}, ${2:rotX}, ${3:rotY}, ${4:rotZ}, ${5:rotationOrder})"
		],
		"scope": "lua",
		"prefix": "SetCamRot"
	},
	"SetCamShakeAmplitude": {
		"body": [
			"SetCamShakeAmplitude(${1:cam}, ${2:amplitude})"
		],
		"scope": "lua",
		"prefix": "SetCamShakeAmplitude"
	},
	"SetCamSplineDuration": {
		"body": [
			"SetCamSplineDuration(${1:cam}, ${2:timeDuration})"
		],
		"scope": "lua",
		"prefix": "SetCamSplineDuration"
	},
	"SetCamSplineNodeEase": {
		"body": [
			"SetCamSplineNodeEase(${1:cam}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetCamSplineNodeEase"
	},
	"SetCamSplineNodeExtraFlags": {
		"body": [
			"SetCamSplineNodeExtraFlags(${1:cam}, ${2:p1}, ${3:flags})"
		],
		"scope": "lua",
		"prefix": "SetCamSplineNodeExtraFlags"
	},
	"SetCamSplineNodeVelocityScale": {
		"body": [
			"SetCamSplineNodeVelocityScale(${1:cam}, ${2:p1}, ${3:scale})"
		],
		"scope": "lua",
		"prefix": "SetCamSplineNodeVelocityScale"
	},
	"SetCamSplinePhase": {
		"body": [
			"SetCamSplinePhase(${1:cam}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetCamSplinePhase"
	},
	"SetCamSplineSmoothingStyle": {
		"body": [
			"SetCamSplineSmoothingStyle(${1:cam}, ${2:smoothingStyle})"
		],
		"scope": "lua",
		"prefix": "SetCamSplineSmoothingStyle"
	},
	"SetCamUseShallowDofMode": {
		"body": [
			"SetCamUseShallowDofMode(${1:cam}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCamUseShallowDofMode"
	},
	"SetCanAttackFriendly": {
		"body": [
			"SetCanAttackFriendly(${1:ped}, ${2:toggle}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetCanAttackFriendly"
	},
	"SetCanAutoVaultOnEntity": {
		"body": [
			"SetCanAutoVaultOnEntity(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCanAutoVaultOnEntity"
	},
	"SetCanClimbOnEntity": {
		"body": [
			"SetCanClimbOnEntity(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCanClimbOnEntity"
	},
	"SetCanPedEquipAllWeapons": {
		"body": [
			"SetCanPedEquipAllWeapons(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCanPedEquipAllWeapons"
	},
	"SetCanPedEquipWeapon": {
		"body": [
			"SetCanPedEquipWeapon(${1:ped}, ${2:weaponHash}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCanPedEquipWeapon"
	},
	"SetCanResprayVehicle": {
		"body": [
			"SetCanResprayVehicle(${1:vehicle}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetCanResprayVehicle"
	},
	"SetCarBootOpen": {
		"body": [
			"SetCarBootOpen(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "SetCarBootOpen"
	},
	"SetCargobobHookCanAttach": {
		"body": [
			"SetCargobobHookCanAttach(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCargobobHookCanAttach"
	},
	"SetCargobobHookCanDetach": {
		"body": [
			"SetCargobobHookCanDetach(${1:cargobob}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCargobobHookCanDetach"
	},
	"SetCargobobPickupMagnetActive": {
		"body": [
			"SetCargobobPickupMagnetActive(${1:cargobob}, ${2:isActive})"
		],
		"scope": "lua",
		"prefix": "SetCargobobPickupMagnetActive"
	},
	"SetCargobobPickupMagnetEffectRadius": {
		"body": [
			"SetCargobobPickupMagnetEffectRadius(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetCargobobPickupMagnetEffectRadius"
	},
	"SetCargobobPickupMagnetFalloff": {
		"body": [
			"SetCargobobPickupMagnetFalloff(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetCargobobPickupMagnetFalloff"
	},
	"SetCargobobPickupMagnetPullRopeLength": {
		"body": [
			"SetCargobobPickupMagnetPullRopeLength(${1:cargobob}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetCargobobPickupMagnetPullRopeLength"
	},
	"SetCargobobPickupMagnetPullStrength": {
		"body": [
			"SetCargobobPickupMagnetPullStrength(${1:cargobob}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetCargobobPickupMagnetPullStrength"
	},
	"SetCargobobPickupMagnetReducedFalloff": {
		"body": [
			"SetCargobobPickupMagnetReducedFalloff(${1:cargobob}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetCargobobPickupMagnetReducedFalloff"
	},
	"SetCargobobPickupMagnetReducedStrength": {
		"body": [
			"SetCargobobPickupMagnetReducedStrength(${1:cargobob}, ${2:vehicle})"
		],
		"scope": "lua",
		"prefix": "SetCargobobPickupMagnetReducedStrength"
	},
	"SetCargobobPickupMagnetStrength": {
		"body": [
			"SetCargobobPickupMagnetStrength(${1:cargobob}, ${2:strength})"
		],
		"scope": "lua",
		"prefix": "SetCargobobPickupMagnetStrength"
	},
	"SetCargobobPickupRopeDampingMultiplier": {
		"body": [
			"SetCargobobPickupRopeDampingMultiplier(${1:cargobob}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetCargobobPickupRopeDampingMultiplier"
	},
	"SetCargobobPickupRopeType": {
		"body": [
			"SetCargobobPickupRopeType(${1:vehicle}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetCargobobPickupRopeType"
	},
	"SetCarHighSpeedBumpSeverityMultiplier": {
		"body": [
			"SetCarHighSpeedBumpSeverityMultiplier(${1:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetCarHighSpeedBumpSeverityMultiplier"
	},
	"SetCgAtBoundcenter": {
		"body": [
			"SetCgAtBoundcenter(${1:entity})"
		],
		"scope": "lua",
		"prefix": "SetCgAtBoundcenter"
	},
	"SetCgoffset": {
		"body": [
			"SetCgoffset(${1:entity}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "SetCgoffset"
	},
	"SetCheckpointCylinderHeight": {
		"body": [
			"SetCheckpointCylinderHeight(${1:checkpoint}, ${2:nearHeight}, ${3:farHeight}, ${4:radius})"
		],
		"scope": "lua",
		"prefix": "SetCheckpointCylinderHeight"
	},
	"SetCheckpointIconScale": {
		"body": [
			"SetCheckpointIconScale(${1:checkpoint}, ${2:scale})"
		],
		"scope": "lua",
		"prefix": "SetCheckpointIconScale"
	},
	"SetCheckpointRgba": {
		"body": [
			"SetCheckpointRgba(${1:checkpoint}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})"
		],
		"scope": "lua",
		"prefix": "SetCheckpointRgba"
	},
	"SetCheckpointRgba2": {
		"body": [
			"SetCheckpointRgba2(${1:checkpoint}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})"
		],
		"scope": "lua",
		"prefix": "SetCheckpointRgba2"
	},
	"SetCheckpointScale": {
		"body": [
			"SetCheckpointScale(${1:checkpoint}, ${2:p0})"
		],
		"scope": "lua",
		"prefix": "SetCheckpointScale"
	},
	"SetCinematicButtonActive": {
		"body": [
			"SetCinematicButtonActive(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetCinematicButtonActive"
	},
	"SetCinematicCamShakeAmplitude": {
		"body": [
			"SetCinematicCamShakeAmplitude(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetCinematicCamShakeAmplitude"
	},
	"SetCinematicModeActive": {
		"body": [
			"SetCinematicModeActive(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCinematicModeActive"
	},
	"SetClockDate": {
		"body": [
			"SetClockDate(${1:day}, ${2:month}, ${3:year})"
		],
		"scope": "lua",
		"prefix": "SetClockDate"
	},
	"SetClockTime": {
		"body": [
			"SetClockTime(${1:hour}, ${2:minute}, ${3:second})"
		],
		"scope": "lua",
		"prefix": "SetClockTime"
	},
	"SetCloudHatOpacity": {
		"body": [
			"SetCloudHatOpacity(${1:opacity})"
		],
		"scope": "lua",
		"prefix": "SetCloudHatOpacity"
	},
	"SetColourOfNextTextComponent": {
		"body": [
			"SetColourOfNextTextComponent(${1:hudColor})"
		],
		"scope": "lua",
		"prefix": "SetColourOfNextTextComponent"
	},
	"SetCombatFloat": {
		"body": [
			"SetCombatFloat(${1:ped}, ${2:combatType}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetCombatFloat"
	},
	"SetControlLightEffectColor": {
		"body": [
			"SetControlLightEffectColor(${1:padIndex}, ${2:red}, ${3:green}, ${4:blue})"
		],
		"scope": "lua",
		"prefix": "SetControlLightEffectColor"
	},
	"SetControlNormal": {
		"body": [
			"SetControlNormal(${1:padIndex}, ${2:control}, ${3:amount})"
		],
		"scope": "lua",
		"prefix": "SetControlNormal"
	},
	"SetConvar": {
		"body": [
			"SetConvar(${1:varName}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetConvar"
	},
	"SetConvarReplicated": {
		"body": [
			"SetConvarReplicated(${1:varName}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetConvarReplicated"
	},
	"SetConvarServerInfo": {
		"body": [
			"SetConvarServerInfo(${1:varName}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetConvarServerInfo"
	},
	"SetConvertibleRoof": {
		"body": [
			"SetConvertibleRoof(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetConvertibleRoof"
	},
	"SetConvertibleRoofLatchState": {
		"body": [
			"SetConvertibleRoofLatchState(${1:vehicle}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetConvertibleRoofLatchState"
	},
	"SetCreateRandomCops": {
		"body": [
			"SetCreateRandomCops(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCreateRandomCops"
	},
	"SetCreateRandomCopsNotOnScenarios": {
		"body": [
			"SetCreateRandomCopsNotOnScenarios(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCreateRandomCopsNotOnScenarios"
	},
	"SetCreateRandomCopsOnScenarios": {
		"body": [
			"SetCreateRandomCopsOnScenarios(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCreateRandomCopsOnScenarios"
	},
	"SetCreateWeaponObjectLightSource": {
		"body": [
			"SetCreateWeaponObjectLightSource(${1:object}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCreateWeaponObjectLightSource"
	},
	"SetCreditsActive": {
		"body": [
			"SetCreditsActive(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetCreditsActive"
	},
	"SetCurrentPedVehicleWeapon": {
		"body": [
			"SetCurrentPedVehicleWeapon(${1:ped}, ${2:weaponHash})"
		],
		"scope": "lua",
		"prefix": "SetCurrentPedVehicleWeapon"
	},
	"SetCurrentPedWeapon": {
		"body": [
			"SetCurrentPedWeapon(${1:ped}, ${2:weaponHash}, ${3:equipNow})"
		],
		"scope": "lua",
		"prefix": "SetCurrentPedWeapon"
	},
	"SetCurrentPlayerTcmodifier": {
		"body": [
			"SetCurrentPlayerTcmodifier(${1:modifierName})"
		],
		"scope": "lua",
		"prefix": "SetCurrentPlayerTcmodifier"
	},
	"SetCursorLocation": {
		"body": [
			"SetCursorLocation(${1:x}, ${2:y})"
		],
		"scope": "lua",
		"prefix": "SetCursorLocation"
	},
	"SetCustomRadioTrackList": {
		"body": [
			"SetCustomRadioTrackList(${1:radioStation}, ${2:trackListName}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetCustomRadioTrackList"
	},
	"SetCutsceneAudioOverride": {
		"body": [
			"SetCutsceneAudioOverride(${1:name})"
		],
		"scope": "lua",
		"prefix": "SetCutsceneAudioOverride"
	},
	"SetCutsceneCanBeSkipped": {
		"body": [
			"SetCutsceneCanBeSkipped(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetCutsceneCanBeSkipped"
	},
	"SetCutsceneEntityStreamingFlags": {
		"body": [
			"SetCutsceneEntityStreamingFlags(${1:cutsceneEntName}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetCutsceneEntityStreamingFlags"
	},
	"SetCutsceneFadeValues": {
		"body": [
			"SetCutsceneFadeValues(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetCutsceneFadeValues"
	},
	"SetCutsceneOrigin": {
		"body": [
			"SetCutsceneOrigin(${1:x}, ${2:y}, ${3:z}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "SetCutsceneOrigin"
	},
	"SetCutscenePedComponentVariation": {
		"body": [
			"SetCutscenePedComponentVariation(${1:cutsceneEntName}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:modelHash})"
		],
		"scope": "lua",
		"prefix": "SetCutscenePedComponentVariation"
	},
	"SetCutscenePedComponentVariationFromPed": {
		"body": [
			"SetCutscenePedComponentVariationFromPed(${1:cutsceneEntName}, ${2:ped}, ${3:modelHash})"
		],
		"scope": "lua",
		"prefix": "SetCutscenePedComponentVariationFromPed"
	},
	"SetCutscenePedPropVariation": {
		"body": [
			"SetCutscenePedPropVariation(${1:cutsceneEntName}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:modelHash})"
		],
		"scope": "lua",
		"prefix": "SetCutscenePedPropVariation"
	},
	"SetCutsceneTriggerArea": {
		"body": [
			"SetCutsceneTriggerArea(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "SetCutsceneTriggerArea"
	},
	"SetDamping": {
		"body": [
			"SetDamping(${1:entity}, ${2:vertex}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "SetDamping"
	},
	"SetDebugLinesAndSpheresDrawingActive": {
		"body": [
			"SetDebugLinesAndSpheresDrawingActive(${1:enabled})"
		],
		"scope": "lua",
		"prefix": "SetDebugLinesAndSpheresDrawingActive"
	},
	"SetDecisionMaker": {
		"body": [
			"SetDecisionMaker(${1:ped}, ${2:name})"
		],
		"scope": "lua",
		"prefix": "SetDecisionMaker"
	},
	"SetDeepOceanScaler": {
		"body": [
			"SetDeepOceanScaler(${1:intensity})"
		],
		"scope": "lua",
		"prefix": "SetDeepOceanScaler"
	},
	"SetDeployHeliStubWings": {
		"body": [
			"SetDeployHeliStubWings(${1:vehicle}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetDeployHeliStubWings"
	},
	"SetDirectorModeClearTriggeredFlag": {
		"body": [
			"SetDirectorModeClearTriggeredFlag()"
		],
		"scope": "lua",
		"prefix": "SetDirectorModeClearTriggeredFlag"
	},
	"SetDisableAmbientMeleeMove": {
		"body": [
			"SetDisableAmbientMeleeMove(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetDisableAmbientMeleeMove"
	},
	"SetDisableBreaking": {
		"body": [
			"SetDisableBreaking(${1:object}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetDisableBreaking"
	},
	"SetDisableDecalRenderingThisFrame": {
		"body": [
			"SetDisableDecalRenderingThisFrame()"
		],
		"scope": "lua",
		"prefix": "SetDisableDecalRenderingThisFrame"
	},
	"SetDisableFragDamage": {
		"body": [
			"SetDisableFragDamage(${1:object}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetDisableFragDamage"
	},
	"SetDisablePretendOccupants": {
		"body": [
			"SetDisablePretendOccupants(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetDisablePretendOccupants"
	},
	"SetDisableRandomTrainsThisFrame": {
		"body": [
			"SetDisableRandomTrainsThisFrame(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetDisableRandomTrainsThisFrame"
	},
	"SetDisableSuperdummyMode": {
		"body": [
			"SetDisableSuperdummyMode(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetDisableSuperdummyMode"
	},
	"SetDisableTurretMovementThisFrame": {
		"body": [
			"SetDisableTurretMovementThisFrame(${1:vehicle}, ${2:turretIdx})"
		],
		"scope": "lua",
		"prefix": "SetDisableTurretMovementThisFrame"
	},
	"SetDisableVehicleEngineFires": {
		"body": [
			"SetDisableVehicleEngineFires(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetDisableVehicleEngineFires"
	},
	"SetDisableVehicleFlightNozzlePosition": {
		"body": [
			"SetDisableVehicleFlightNozzlePosition(${1:vehicle}, ${2:direction})"
		],
		"scope": "lua",
		"prefix": "SetDisableVehicleFlightNozzlePosition"
	},
	"SetDisableVehiclePetrolTankDamage": {
		"body": [
			"SetDisableVehiclePetrolTankDamage(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetDisableVehiclePetrolTankDamage"
	},
	"SetDisableVehiclePetrolTankFires": {
		"body": [
			"SetDisableVehiclePetrolTankFires(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetDisableVehiclePetrolTankFires"
	},
	"SetDisableVehicleUnk": {
		"body": [
			"SetDisableVehicleUnk(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetDisableVehicleUnk"
	},
	"SetDisableVehicleUnk_2": {
		"body": [
			"SetDisableVehicleUnk_2(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetDisableVehicleUnk_2"
	},
	"SetDisableVehicleWindowCollisions": {
		"body": [
			"SetDisableVehicleWindowCollisions(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetDisableVehicleWindowCollisions"
	},
	"SetDiscordAppId": {
		"body": [
			"SetDiscordAppId(${1:appId})"
		],
		"scope": "lua",
		"prefix": "SetDiscordAppId"
	},
	"SetDiscordRichPresenceAction": {
		"body": [
			"SetDiscordRichPresenceAction(${1:index}, ${2:label}, ${3:url})"
		],
		"scope": "lua",
		"prefix": "SetDiscordRichPresenceAction"
	},
	"SetDiscordRichPresenceAsset": {
		"body": [
			"SetDiscordRichPresenceAsset(${1:assetName})"
		],
		"scope": "lua",
		"prefix": "SetDiscordRichPresenceAsset"
	},
	"SetDiscordRichPresenceAssetSmall": {
		"body": [
			"SetDiscordRichPresenceAssetSmall(${1:assetName})"
		],
		"scope": "lua",
		"prefix": "SetDiscordRichPresenceAssetSmall"
	},
	"SetDiscordRichPresenceAssetSmallText": {
		"body": [
			"SetDiscordRichPresenceAssetSmallText(${1:text})"
		],
		"scope": "lua",
		"prefix": "SetDiscordRichPresenceAssetSmallText"
	},
	"SetDiscordRichPresenceAssetText": {
		"body": [
			"SetDiscordRichPresenceAssetText(${1:text})"
		],
		"scope": "lua",
		"prefix": "SetDiscordRichPresenceAssetText"
	},
	"SetDispatchCopsForPlayer": {
		"body": [
			"SetDispatchCopsForPlayer(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetDispatchCopsForPlayer"
	},
	"SetDispatchIdealSpawnDistance": {
		"body": [
			"SetDispatchIdealSpawnDistance(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetDispatchIdealSpawnDistance"
	},
	"SetDispatchSpawnLocation": {
		"body": [
			"SetDispatchSpawnLocation(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "SetDispatchSpawnLocation"
	},
	"SetDispatchTimeBetweenSpawnAttempts": {
		"body": [
			"SetDispatchTimeBetweenSpawnAttempts(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetDispatchTimeBetweenSpawnAttempts"
	},
	"SetDispatchTimeBetweenSpawnAttemptsMultiplier": {
		"body": [
			"SetDispatchTimeBetweenSpawnAttemptsMultiplier(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetDispatchTimeBetweenSpawnAttemptsMultiplier"
	},
	"SetDistantCarsEnabled": {
		"body": [
			"SetDistantCarsEnabled(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetDistantCarsEnabled"
	},
	"SetDitchPoliceModels": {
		"body": [
			"SetDitchPoliceModels(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetDitchPoliceModels"
	},
	"SetDrawOrigin": {
		"body": [
			"SetDrawOrigin(${1:x}, ${2:y}, ${3:z}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetDrawOrigin"
	},
	"SetDrivebyTaskTarget": {
		"body": [
			"SetDrivebyTaskTarget(${1:shootingPed}, ${2:targetPed}, ${3:targetVehicle}, ${4:x}, ${5:y}, ${6:z})"
		],
		"scope": "lua",
		"prefix": "SetDrivebyTaskTarget"
	},
	"SetDriverAbility": {
		"body": [
			"SetDriverAbility(${1:driver}, ${2:ability})"
		],
		"scope": "lua",
		"prefix": "SetDriverAbility"
	},
	"SetDriverAggressiveness": {
		"body": [
			"SetDriverAggressiveness(${1:driver}, ${2:aggressiveness})"
		],
		"scope": "lua",
		"prefix": "SetDriverAggressiveness"
	},
	"SetDriverRacingModifier": {
		"body": [
			"SetDriverRacingModifier(${1:driver}, ${2:modifier})"
		],
		"scope": "lua",
		"prefix": "SetDriverRacingModifier"
	},
	"SetDriveTaskCruiseSpeed": {
		"body": [
			"SetDriveTaskCruiseSpeed(${1:driver}, ${2:cruiseSpeed})"
		],
		"scope": "lua",
		"prefix": "SetDriveTaskCruiseSpeed"
	},
	"SetDriveTaskDrivingStyle": {
		"body": [
			"SetDriveTaskDrivingStyle(${1:ped}, ${2:drivingStyle})"
		],
		"scope": "lua",
		"prefix": "SetDriveTaskDrivingStyle"
	},
	"SetDriveTaskMaxCruiseSpeed": {
		"body": [
			"SetDriveTaskMaxCruiseSpeed(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetDriveTaskMaxCruiseSpeed"
	},
	"SetDuiUrl": {
		"body": [
			"SetDuiUrl(${1:duiObject}, ${2:url})"
		],
		"scope": "lua",
		"prefix": "SetDuiUrl"
	},
	"SetEmitterRadioStation": {
		"body": [
			"SetEmitterRadioStation(${1:emitterName}, ${2:radioStation})"
		],
		"scope": "lua",
		"prefix": "SetEmitterRadioStation"
	},
	"SetEnableArenaPropPhysics": {
		"body": [
			"SetEnableArenaPropPhysics(${1:entity}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetEnableArenaPropPhysics"
	},
	"SetEnableArenaPropPhysicsOnPed": {
		"body": [
			"SetEnableArenaPropPhysicsOnPed(${1:entity}, ${2:p1}, ${3:p2}, ${4:ped})"
		],
		"scope": "lua",
		"prefix": "SetEnableArenaPropPhysicsOnPed"
	},
	"SetEnableBoundAnkles": {
		"body": [
			"SetEnableBoundAnkles(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEnableBoundAnkles"
	},
	"SetEnableHandcuffs": {
		"body": [
			"SetEnableHandcuffs(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEnableHandcuffs"
	},
	"SetEnablePedEnveffScale": {
		"body": [
			"SetEnablePedEnveffScale(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEnablePedEnveffScale"
	},
	"SetEnableScuba": {
		"body": [
			"SetEnableScuba(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEnableScuba"
	},
	"SetEnableScubaGearLight": {
		"body": [
			"SetEnableScubaGearLight(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEnableScubaGearLight"
	},
	"SetEnableVehicleSlipstreaming": {
		"body": [
			"SetEnableVehicleSlipstreaming(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEnableVehicleSlipstreaming"
	},
	"SetEntityAlpha": {
		"body": [
			"SetEntityAlpha(${1:entity}, ${2:alphaLevel}, ${3:skin})"
		],
		"scope": "lua",
		"prefix": "SetEntityAlpha"
	},
	"SetEntityAlwaysPrerender": {
		"body": [
			"SetEntityAlwaysPrerender(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityAlwaysPrerender"
	},
	"SetEntityAnimCurrentTime": {
		"body": [
			"SetEntityAnimCurrentTime(${1:entity}, ${2:animDictionary}, ${3:animName}, ${4:time})"
		],
		"scope": "lua",
		"prefix": "SetEntityAnimCurrentTime"
	},
	"SetEntityAnimSpeed": {
		"body": [
			"SetEntityAnimSpeed(${1:entity}, ${2:animDictionary}, ${3:animName}, ${4:speedMultiplier})"
		],
		"scope": "lua",
		"prefix": "SetEntityAnimSpeed"
	},
	"SetEntityAsMissionEntity": {
		"body": [
			"SetEntityAsMissionEntity(${1:entity}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetEntityAsMissionEntity"
	},
	"SetEntityAsNoLongerNeeded": {
		"body": [
			"SetEntityAsNoLongerNeeded(${1:entity})"
		],
		"scope": "lua",
		"prefix": "SetEntityAsNoLongerNeeded"
	},
	"SetEntityCanBeDamaged": {
		"body": [
			"SetEntityCanBeDamaged(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityCanBeDamaged"
	},
	"SetEntityCanBeDamagedByRelationshipGroup": {
		"body": [
			"SetEntityCanBeDamagedByRelationshipGroup(${1:entity}, ${2:bCanBeDamaged}, ${3:relGroup})"
		],
		"scope": "lua",
		"prefix": "SetEntityCanBeDamagedByRelationshipGroup"
	},
	"SetEntityCanBeTargetedWithoutLos": {
		"body": [
			"SetEntityCanBeTargetedWithoutLos(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityCanBeTargetedWithoutLos"
	},
	"SetEntityCleanupByEngine": {
		"body": [
			"SetEntityCleanupByEngine(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityCleanupByEngine"
	},
	"SetEntityCollision": {
		"body": [
			"SetEntityCollision(${1:entity}, ${2:toggle}, ${3:keepPhysics})"
		],
		"scope": "lua",
		"prefix": "SetEntityCollision"
	},
	"SetEntityCompletelyDisableCollision": {
		"body": [
			"SetEntityCompletelyDisableCollision(${1:entity}, ${2:toggle}, ${3:keepPhysics})"
		],
		"scope": "lua",
		"prefix": "SetEntityCompletelyDisableCollision"
	},
	"SetEntityCoords": {
		"body": [
			"SetEntityCoords(${1:entity}, ${2:xPos}, ${3:yPos}, ${4:zPos}, ${5:alive}, ${6:deadFlag}, ${7:ragdollFlag}, ${8:clearArea})"
		],
		"scope": "lua",
		"prefix": "SetEntityCoords"
	},
	"SetEntityCoordsNoOffset": {
		"body": [
			"SetEntityCoordsNoOffset(${1:entity}, ${2:xPos}, ${3:yPos}, ${4:zPos}, ${5:alive}, ${6:deadFlag}, ${7:ragdollFlag})"
		],
		"scope": "lua",
		"prefix": "SetEntityCoordsNoOffset"
	},
	"SetEntityCoordsWithoutPlantsReset": {
		"body": [
			"SetEntityCoordsWithoutPlantsReset(${1:entity}, ${2:xPos}, ${3:yPos}, ${4:zPos}, ${5:xAxis}, ${6:yAxis}, ${7:zAxis}, ${8:clearArea})"
		],
		"scope": "lua",
		"prefix": "SetEntityCoordsWithoutPlantsReset"
	},
	"SetEntityDecalsDisabled": {
		"body": [
			"SetEntityDecalsDisabled(${1:entity}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetEntityDecalsDisabled"
	},
	"SetEntityDistanceCullingRadius": {
		"body": [
			"SetEntityDistanceCullingRadius(${1:entity}, ${2:radius})"
		],
		"scope": "lua",
		"prefix": "SetEntityDistanceCullingRadius"
	},
	"SetEntityDrawOutline": {
		"body": [
			"SetEntityDrawOutline(${1:entity}, ${2:enabled})"
		],
		"scope": "lua",
		"prefix": "SetEntityDrawOutline"
	},
	"SetEntityDynamic": {
		"body": [
			"SetEntityDynamic(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityDynamic"
	},
	"SetEntityHasGravity": {
		"body": [
			"SetEntityHasGravity(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityHasGravity"
	},
	"SetEntityHeading": {
		"body": [
			"SetEntityHeading(${1:entity}, ${2:heading})"
		],
		"scope": "lua",
		"prefix": "SetEntityHeading"
	},
	"SetEntityHealth": {
		"body": [
			"SetEntityHealth(${1:entity}, ${2:health})"
		],
		"scope": "lua",
		"prefix": "SetEntityHealth"
	},
	"SetEntityIconColor": {
		"body": [
			"SetEntityIconColor(${1:entity}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})"
		],
		"scope": "lua",
		"prefix": "SetEntityIconColor"
	},
	"SetEntityIconVisibility": {
		"body": [
			"SetEntityIconVisibility(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityIconVisibility"
	},
	"SetEntityInvincible": {
		"body": [
			"SetEntityInvincible(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityInvincible"
	},
	"SetEntityIsTargetPriority": {
		"body": [
			"SetEntityIsTargetPriority(${1:entity}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetEntityIsTargetPriority"
	},
	"SetEntityLights": {
		"body": [
			"SetEntityLights(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityLights"
	},
	"SetEntityLoadCollisionFlag": {
		"body": [
			"SetEntityLoadCollisionFlag(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityLoadCollisionFlag"
	},
	"SetEntityLocallyInvisible": {
		"body": [
			"SetEntityLocallyInvisible(${1:entity})"
		],
		"scope": "lua",
		"prefix": "SetEntityLocallyInvisible"
	},
	"SetEntityLocallyVisible": {
		"body": [
			"SetEntityLocallyVisible(${1:entity})"
		],
		"scope": "lua",
		"prefix": "SetEntityLocallyVisible"
	},
	"SetEntityLodDist": {
		"body": [
			"SetEntityLodDist(${1:entity}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetEntityLodDist"
	},
	"SetEntityMatrix": {
		"body": [
			"SetEntityMatrix(${1:entity}, ${2:forwardX}, ${3:forwardY}, ${4:forwardZ}, ${5:rightX}, ${6:rightY}, ${7:rightZ}, ${8:upX}, ${9:upY}, ${10:upZ}, ${11:atX}, ${12:atY}, ${13:atZ})"
		],
		"scope": "lua",
		"prefix": "SetEntityMatrix"
	},
	"SetEntityMaxHealth": {
		"body": [
			"SetEntityMaxHealth(${1:entity}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetEntityMaxHealth"
	},
	"SetEntityMaxSpeed": {
		"body": [
			"SetEntityMaxSpeed(${1:entity}, ${2:speed})"
		],
		"scope": "lua",
		"prefix": "SetEntityMaxSpeed"
	},
	"SetEntityMotionBlur": {
		"body": [
			"SetEntityMotionBlur(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityMotionBlur"
	},
	"SetEntityNoCollisionEntity": {
		"body": [
			"SetEntityNoCollisionEntity(${1:entity1}, ${2:entity2}, ${3:thisFrameOnly})"
		],
		"scope": "lua",
		"prefix": "SetEntityNoCollisionEntity"
	},
	"SetEntityOnlyDamagedByPlayer": {
		"body": [
			"SetEntityOnlyDamagedByPlayer(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityOnlyDamagedByPlayer"
	},
	"SetEntityOnlyDamagedByRelationshipGroup": {
		"body": [
			"SetEntityOnlyDamagedByRelationshipGroup(${1:entity}, ${2:p1}, ${3:relationshipHash})"
		],
		"scope": "lua",
		"prefix": "SetEntityOnlyDamagedByRelationshipGroup"
	},
	"SetEntityProofs": {
		"body": [
			"SetEntityProofs(${1:entity}, ${2:bulletProof}, ${3:fireProof}, ${4:explosionProof}, ${5:collisionProof}, ${6:meleeProof}, ${7:steamProof}, ${8:p7}, ${9:drownProof})"
		],
		"scope": "lua",
		"prefix": "SetEntityProofs"
	},
	"SetEntityProofUnk": {
		"body": [
			"SetEntityProofUnk(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityProofUnk"
	},
	"SetEntityQuaternion": {
		"body": [
			"SetEntityQuaternion(${1:entity}, ${2:x}, ${3:y}, ${4:z}, ${5:w})"
		],
		"scope": "lua",
		"prefix": "SetEntityQuaternion"
	},
	"SetEntityRecordsCollisions": {
		"body": [
			"SetEntityRecordsCollisions(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityRecordsCollisions"
	},
	"SetEntityRenderScorched": {
		"body": [
			"SetEntityRenderScorched(${1:entity}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEntityRenderScorched"
	},
	"SetEntityRotation": {
		"body": [
			"SetEntityRotation(${1:entity}, ${2:pitch}, ${3:roll}, ${4:yaw}, ${5:rotationOrder}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "SetEntityRotation"
	},
	"SetEntityRoutingBucket": {
		"body": [
			"SetEntityRoutingBucket(${1:entity}, ${2:bucket})"
		],
		"scope": "lua",
		"prefix": "SetEntityRoutingBucket"
	},
	"SetEntityTrafficlightOverride": {
		"body": [
			"SetEntityTrafficlightOverride(${1:entity}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetEntityTrafficlightOverride"
	},
	"SetEntityVelocity": {
		"body": [
			"SetEntityVelocity(${1:entity}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "SetEntityVelocity"
	},
	"SetEntityVisible": {
		"body": [
			"SetEntityVisible(${1:entity}, ${2:toggle}, ${3:unk})"
		],
		"scope": "lua",
		"prefix": "SetEntityVisible"
	},
	"SetEntityVisibleInCutscene": {
		"body": [
			"SetEntityVisibleInCutscene(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetEntityVisibleInCutscene"
	},
	"SetEveryoneIgnorePlayer": {
		"body": [
			"SetEveryoneIgnorePlayer(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetEveryoneIgnorePlayer"
	},
	"SetExclusiveScenarioGroup": {
		"body": [
			"SetExclusiveScenarioGroup(${1:scenarioGroup})"
		],
		"scope": "lua",
		"prefix": "SetExclusiveScenarioGroup"
	},
	"SetExplosiveAmmoThisFrame": {
		"body": [
			"SetExplosiveAmmoThisFrame(${1:player})"
		],
		"scope": "lua",
		"prefix": "SetExplosiveAmmoThisFrame"
	},
	"SetExplosiveMeleeThisFrame": {
		"body": [
			"SetExplosiveMeleeThisFrame(${1:player})"
		],
		"scope": "lua",
		"prefix": "SetExplosiveMeleeThisFrame"
	},
	"SetExtraTimecycleModifier": {
		"body": [
			"SetExtraTimecycleModifier(${1:modifierName})"
		],
		"scope": "lua",
		"prefix": "SetExtraTimecycleModifier"
	},
	"SetExtraTimecycleModifierStrength": {
		"body": [
			"SetExtraTimecycleModifierStrength(${1:strength})"
		],
		"scope": "lua",
		"prefix": "SetExtraTimecycleModifierStrength"
	},
	"SetFacialClipsetOverride": {
		"body": [
			"SetFacialClipsetOverride(${1:ped}, ${2:animDict})"
		],
		"scope": "lua",
		"prefix": "SetFacialClipsetOverride"
	},
	"SetFacialIdleAnimOverride": {
		"body": [
			"SetFacialIdleAnimOverride(${1:ped}, ${2:animName}, ${3:animDict})"
		],
		"scope": "lua",
		"prefix": "SetFacialIdleAnimOverride"
	},
	"SetFadeInAfterDeathArrest": {
		"body": [
			"SetFadeInAfterDeathArrest(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetFadeInAfterDeathArrest"
	},
	"SetFadeInAfterLoad": {
		"body": [
			"SetFadeInAfterLoad(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetFadeInAfterLoad"
	},
	"SetFadeOutAfterArrest": {
		"body": [
			"SetFadeOutAfterArrest(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetFadeOutAfterArrest"
	},
	"SetFadeOutAfterDeath": {
		"body": [
			"SetFadeOutAfterDeath(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetFadeOutAfterDeath"
	},
	"SetFakeWantedLevel": {
		"body": [
			"SetFakeWantedLevel(${1:fakeWantedLevel})"
		],
		"scope": "lua",
		"prefix": "SetFakeWantedLevel"
	},
	"SetFarDrawVehicles": {
		"body": [
			"SetFarDrawVehicles(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetFarDrawVehicles"
	},
	"SetFireAmmoThisFrame": {
		"body": [
			"SetFireAmmoThisFrame(${1:player})"
		],
		"scope": "lua",
		"prefix": "SetFireAmmoThisFrame"
	},
	"SetFireSpreadRate": {
		"body": [
			"SetFireSpreadRate(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetFireSpreadRate"
	},
	"SetFirstPersonAimCamNearClipThisUpdate": {
		"body": [
			"SetFirstPersonAimCamNearClipThisUpdate(${1:distance})"
		],
		"scope": "lua",
		"prefix": "SetFirstPersonAimCamNearClipThisUpdate"
	},
	"SetFirstPersonAimCamZoomFactor": {
		"body": [
			"SetFirstPersonAimCamZoomFactor(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetFirstPersonAimCamZoomFactor"
	},
	"SetFirstPersonCamPitchRange": {
		"body": [
			"SetFirstPersonCamPitchRange(${1:minAngle}, ${2:maxAngle})"
		],
		"scope": "lua",
		"prefix": "SetFirstPersonCamPitchRange"
	},
	"SetFlash": {
		"body": [
			"SetFlash(${1:p0}, ${2:p1}, ${3:fadeIn}, ${4:duration}, ${5:fadeOut})"
		],
		"scope": "lua",
		"prefix": "SetFlash"
	},
	"SetFlashLightEnabled": {
		"body": [
			"SetFlashLightEnabled(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetFlashLightEnabled"
	},
	"SetFlashLightFadeDistance": {
		"body": [
			"SetFlashLightFadeDistance(${1:distance})"
		],
		"scope": "lua",
		"prefix": "SetFlashLightFadeDistance"
	},
	"SetFlashLightKeepOnWhileMoving": {
		"body": [
			"SetFlashLightKeepOnWhileMoving(${1:state})"
		],
		"scope": "lua",
		"prefix": "SetFlashLightKeepOnWhileMoving"
	},
	"SetFloatingHelpTextScreenPosition": {
		"body": [
			"SetFloatingHelpTextScreenPosition(${1:hudIndex}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetFloatingHelpTextScreenPosition"
	},
	"SetFloatingHelpTextStyle": {
		"body": [
			"SetFloatingHelpTextStyle(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "SetFloatingHelpTextStyle"
	},
	"SetFloatingHelpTextToEntity": {
		"body": [
			"SetFloatingHelpTextToEntity(${1:hudIndex}, ${2:entity}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetFloatingHelpTextToEntity"
	},
	"SetFloatingHelpTextWorldPosition": {
		"body": [
			"SetFloatingHelpTextWorldPosition(${1:hudIndex}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "SetFloatingHelpTextWorldPosition"
	},
	"SetFlyCamCoordAndConstrain": {
		"body": [
			"SetFlyCamCoordAndConstrain(${1:cam}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "SetFlyCamCoordAndConstrain"
	},
	"SetFlyCamHorizontalResponse": {
		"body": [
			"SetFlyCamHorizontalResponse(${1:cam}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetFlyCamHorizontalResponse"
	},
	"SetFlyCamMaxHeight": {
		"body": [
			"SetFlyCamMaxHeight(${1:cam}, ${2:height})"
		],
		"scope": "lua",
		"prefix": "SetFlyCamMaxHeight"
	},
	"SetFlyCamVerticalSpeedMultiplier": {
		"body": [
			"SetFlyCamVerticalSpeedMultiplier(${1:cam}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetFlyCamVerticalSpeedMultiplier"
	},
	"SetFlyThroughWindscreenParams": {
		"body": [
			"SetFlyThroughWindscreenParams(${1:vehMinSpeed}, ${2:unkMinSpeed}, ${3:unkModifier}, ${4:minDamage})"
		],
		"scope": "lua",
		"prefix": "SetFlyThroughWindscreenParams"
	},
	"SetFocusEntity": {
		"body": [
			"SetFocusEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "SetFocusEntity"
	},
	"SetFocusPosAndVel": {
		"body": [
			"SetFocusPosAndVel(${1:x}, ${2:y}, ${3:z}, ${4:offsetX}, ${5:offsetY}, ${6:offsetZ})"
		],
		"scope": "lua",
		"prefix": "SetFocusPosAndVel"
	},
	"SetFollowPedCamThisUpdate": {
		"body": [
			"SetFollowPedCamThisUpdate(${1:camName}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetFollowPedCamThisUpdate"
	},
	"SetFollowPedCamViewMode": {
		"body": [
			"SetFollowPedCamViewMode(${1:viewMode})"
		],
		"scope": "lua",
		"prefix": "SetFollowPedCamViewMode"
	},
	"SetFollowTurretSeatCam": {
		"body": [
			"SetFollowTurretSeatCam(${1:seatIndex})"
		],
		"scope": "lua",
		"prefix": "SetFollowTurretSeatCam"
	},
	"SetFollowVehicleCamViewMode": {
		"body": [
			"SetFollowVehicleCamViewMode(${1:viewMode})"
		],
		"scope": "lua",
		"prefix": "SetFollowVehicleCamViewMode"
	},
	"SetFollowVehicleCamZoomLevel": {
		"body": [
			"SetFollowVehicleCamZoomLevel(${1:zoomLevel})"
		],
		"scope": "lua",
		"prefix": "SetFollowVehicleCamZoomLevel"
	},
	"SetForcedBoatLocationWhenAnchored": {
		"body": [
			"SetForcedBoatLocationWhenAnchored(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetForcedBoatLocationWhenAnchored"
	},
	"SetForceFootstepUpdate": {
		"body": [
			"SetForceFootstepUpdate(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetForceFootstepUpdate"
	},
	"SetForceHdVehicle": {
		"body": [
			"SetForceHdVehicle(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetForceHdVehicle"
	},
	"SetForceObjectThisFrame": {
		"body": [
			"SetForceObjectThisFrame(${1:x}, ${2:y}, ${3:z}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetForceObjectThisFrame"
	},
	"SetForcePedFootstepsTracks": {
		"body": [
			"SetForcePedFootstepsTracks(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetForcePedFootstepsTracks"
	},
	"SetForcePlayerToJump": {
		"body": [
			"SetForcePlayerToJump(${1:player})"
		],
		"scope": "lua",
		"prefix": "SetForcePlayerToJump"
	},
	"SetForceStepType": {
		"body": [
			"SetForceStepType(${1:ped}, ${2:p1}, ${3:type}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetForceStepType"
	},
	"SetForceVehicleTrails": {
		"body": [
			"SetForceVehicleTrails(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetForceVehicleTrails"
	},
	"SetForkliftForkHeight": {
		"body": [
			"SetForkliftForkHeight(${1:vehicle}, ${2:height})"
		],
		"scope": "lua",
		"prefix": "SetForkliftForkHeight"
	},
	"SetFrontendActive": {
		"body": [
			"SetFrontendActive(${1:active})"
		],
		"scope": "lua",
		"prefix": "SetFrontendActive"
	},
	"SetFrontendRadioActive": {
		"body": [
			"SetFrontendRadioActive(${1:active})"
		],
		"scope": "lua",
		"prefix": "SetFrontendRadioActive"
	},
	"SetGamePaused": {
		"body": [
			"SetGamePaused(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetGamePaused"
	},
	"SetGamePausesForStreaming": {
		"body": [
			"SetGamePausesForStreaming(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetGamePausesForStreaming"
	},
	"SetGameplayCamFollowPedThisUpdate": {
		"body": [
			"SetGameplayCamFollowPedThisUpdate(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SetGameplayCamFollowPedThisUpdate"
	},
	"SetGameplayCamHash": {
		"body": [
			"SetGameplayCamHash(${1:camName})"
		],
		"scope": "lua",
		"prefix": "SetGameplayCamHash"
	},
	"SetGameplayCamRawPitch": {
		"body": [
			"SetGameplayCamRawPitch(${1:pitch})"
		],
		"scope": "lua",
		"prefix": "SetGameplayCamRawPitch"
	},
	"SetGameplayCamRawYaw": {
		"body": [
			"SetGameplayCamRawYaw(${1:yaw})"
		],
		"scope": "lua",
		"prefix": "SetGameplayCamRawYaw"
	},
	"SetGameplayCamRelativeHeading": {
		"body": [
			"SetGameplayCamRelativeHeading(${1:heading})"
		],
		"scope": "lua",
		"prefix": "SetGameplayCamRelativeHeading"
	},
	"SetGameplayCamRelativePitch": {
		"body": [
			"SetGameplayCamRelativePitch(${1:angle}, ${2:scalingFactor})"
		],
		"scope": "lua",
		"prefix": "SetGameplayCamRelativePitch"
	},
	"SetGameplayCamRelativeRotation": {
		"body": [
			"SetGameplayCamRelativeRotation(${1:roll}, ${2:pitch}, ${3:yaw})"
		],
		"scope": "lua",
		"prefix": "SetGameplayCamRelativeRotation"
	},
	"SetGameplayCamShakeAmplitude": {
		"body": [
			"SetGameplayCamShakeAmplitude(${1:amplitude})"
		],
		"scope": "lua",
		"prefix": "SetGameplayCamShakeAmplitude"
	},
	"SetGameplayCamVehicleCamera": {
		"body": [
			"SetGameplayCamVehicleCamera(${1:vehicleName})"
		],
		"scope": "lua",
		"prefix": "SetGameplayCamVehicleCamera"
	},
	"SetGameplayCamVehicleCameraName": {
		"body": [
			"SetGameplayCamVehicleCameraName(${1:vehicleModel})"
		],
		"scope": "lua",
		"prefix": "SetGameplayCamVehicleCameraName"
	},
	"SetGameplayCoordHint": {
		"body": [
			"SetGameplayCoordHint(${1:x}, ${2:y}, ${3:z}, ${4:duration}, ${5:blendOutDuration}, ${6:blendInDuration}, ${7:unk})"
		],
		"scope": "lua",
		"prefix": "SetGameplayCoordHint"
	},
	"SetGameplayEntityHint": {
		"body": [
			"SetGameplayEntityHint(${1:entity}, ${2:xOffset}, ${3:yOffset}, ${4:zOffset}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "SetGameplayEntityHint"
	},
	"SetGameplayHintAnimCloseup": {
		"body": [
			"SetGameplayHintAnimCloseup(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetGameplayHintAnimCloseup"
	},
	"SetGameplayHintAnimOffsetx": {
		"body": [
			"SetGameplayHintAnimOffsetx(${1:xoffset})"
		],
		"scope": "lua",
		"prefix": "SetGameplayHintAnimOffsetx"
	},
	"SetGameplayHintAnimOffsety": {
		"body": [
			"SetGameplayHintAnimOffsety(${1:yoffset})"
		],
		"scope": "lua",
		"prefix": "SetGameplayHintAnimOffsety"
	},
	"SetGameplayHintBaseOrbitPitchOffset": {
		"body": [
			"SetGameplayHintBaseOrbitPitchOffset(${1:value})"
		],
		"scope": "lua",
		"prefix": "SetGameplayHintBaseOrbitPitchOffset"
	},
	"SetGameplayHintFollowDistanceScalar": {
		"body": [
			"SetGameplayHintFollowDistanceScalar(${1:value})"
		],
		"scope": "lua",
		"prefix": "SetGameplayHintFollowDistanceScalar"
	},
	"SetGameplayHintFov": {
		"body": [
			"SetGameplayHintFov(${1:FOV})"
		],
		"scope": "lua",
		"prefix": "SetGameplayHintFov"
	},
	"SetGameplayObjectHint": {
		"body": [
			"SetGameplayObjectHint(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "SetGameplayObjectHint"
	},
	"SetGameplayPedHint": {
		"body": [
			"SetGameplayPedHint(${1:p0}, ${2:x1}, ${3:y1}, ${4:z1}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "SetGameplayPedHint"
	},
	"SetGameplayVehicleHint": {
		"body": [
			"SetGameplayVehicleHint(${1:vehicle}, ${2:offsetX}, ${3:offsetY}, ${4:offsetZ}, ${5:p4}, ${6:time}, ${7:easeInTime}, ${8:easeOutTime})"
		],
		"scope": "lua",
		"prefix": "SetGameplayVehicleHint"
	},
	"SetGameType": {
		"body": [
			"SetGameType(${1:gametypeName})"
		],
		"scope": "lua",
		"prefix": "SetGameType"
	},
	"SetGarbageTrucks": {
		"body": [
			"SetGarbageTrucks(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetGarbageTrucks"
	},
	"SetGhostedEntityAlpha": {
		"body": [
			"SetGhostedEntityAlpha(${1:alpha})"
		],
		"scope": "lua",
		"prefix": "SetGhostedEntityAlpha"
	},
	"SetGlobalMinBirdFlightHeight": {
		"body": [
			"SetGlobalMinBirdFlightHeight(${1:height})"
		],
		"scope": "lua",
		"prefix": "SetGlobalMinBirdFlightHeight"
	},
	"SetGpsActive": {
		"body": [
			"SetGpsActive(${1:active})"
		],
		"scope": "lua",
		"prefix": "SetGpsActive"
	},
	"SetGpsCustomRouteRender": {
		"body": [
			"SetGpsCustomRouteRender(${1:toggle}, ${2:radarThickness}, ${3:mapThickness})"
		],
		"scope": "lua",
		"prefix": "SetGpsCustomRouteRender"
	},
	"SetGpsDisabledZone": {
		"body": [
			"SetGpsDisabledZone(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z3})"
		],
		"scope": "lua",
		"prefix": "SetGpsDisabledZone"
	},
	"SetGpsDisabledZoneAtIndex": {
		"body": [
			"SetGpsDisabledZoneAtIndex(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:index})"
		],
		"scope": "lua",
		"prefix": "SetGpsDisabledZoneAtIndex"
	},
	"SetGpsFlags": {
		"body": [
			"SetGpsFlags(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetGpsFlags"
	},
	"SetGpsFlashes": {
		"body": [
			"SetGpsFlashes(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetGpsFlashes"
	},
	"SetGpsMultiRouteRender": {
		"body": [
			"SetGpsMultiRouteRender(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetGpsMultiRouteRender"
	},
	"SetGravityLevel": {
		"body": [
			"SetGravityLevel(${1:level})"
		],
		"scope": "lua",
		"prefix": "SetGravityLevel"
	},
	"SetGroupFormation": {
		"body": [
			"SetGroupFormation(${1:groupId}, ${2:formationType})"
		],
		"scope": "lua",
		"prefix": "SetGroupFormation"
	},
	"SetGroupFormationSpacing": {
		"body": [
			"SetGroupFormationSpacing(${1:groupId}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetGroupFormationSpacing"
	},
	"SetGroupSeparationRange": {
		"body": [
			"SetGroupSeparationRange(${1:groupHandle}, ${2:separationRange})"
		],
		"scope": "lua",
		"prefix": "SetGroupSeparationRange"
	},
	"SetHandleRockstarMessageViaScript": {
		"body": [
			"SetHandleRockstarMessageViaScript(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetHandleRockstarMessageViaScript"
	},
	"SetHandlingField": {
		"body": [
			"SetHandlingField(${1:vehicle}, ${2:class_}, ${3:fieldName}, ${4:value})"
		],
		"scope": "lua",
		"prefix": "SetHandlingField"
	},
	"SetHandlingFloat": {
		"body": [
			"SetHandlingFloat(${1:vehicle}, ${2:class_}, ${3:fieldName}, ${4:value})"
		],
		"scope": "lua",
		"prefix": "SetHandlingFloat"
	},
	"SetHandlingInt": {
		"body": [
			"SetHandlingInt(${1:vehicle}, ${2:class_}, ${3:fieldName}, ${4:value})"
		],
		"scope": "lua",
		"prefix": "SetHandlingInt"
	},
	"SetHandlingVector": {
		"body": [
			"SetHandlingVector(${1:vehicle}, ${2:class_}, ${3:fieldName}, ${4:value})"
		],
		"scope": "lua",
		"prefix": "SetHandlingVector"
	},
	"SetHasContentUnlocksFlags": {
		"body": [
			"SetHasContentUnlocksFlags(${1:value})"
		],
		"scope": "lua",
		"prefix": "SetHasContentUnlocksFlags"
	},
	"SetHdArea": {
		"body": [
			"SetHdArea(${1:x}, ${2:y}, ${3:z}, ${4:radius})"
		],
		"scope": "lua",
		"prefix": "SetHdArea"
	},
	"SetHeadBlendPaletteColor": {
		"body": [
			"SetHeadBlendPaletteColor(${1:ped}, ${2:r}, ${3:g}, ${4:b}, ${5:id})"
		],
		"scope": "lua",
		"prefix": "SetHeadBlendPaletteColor"
	},
	"SetHealthHudDisplayValues": {
		"body": [
			"SetHealthHudDisplayValues(${1:health}, ${2:capacity}, ${3:wasAdded})"
		],
		"scope": "lua",
		"prefix": "SetHealthHudDisplayValues"
	},
	"SetHeliBladesFullSpeed": {
		"body": [
			"SetHeliBladesFullSpeed(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "SetHeliBladesFullSpeed"
	},
	"SetHeliBladesSpeed": {
		"body": [
			"SetHeliBladesSpeed(${1:vehicle}, ${2:speed})"
		],
		"scope": "lua",
		"prefix": "SetHeliBladesSpeed"
	},
	"SetHelicopterRollPitchYawMult": {
		"body": [
			"SetHelicopterRollPitchYawMult(${1:helicopter}, ${2:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetHelicopterRollPitchYawMult"
	},
	"SetHeliMainRotorHealth": {
		"body": [
			"SetHeliMainRotorHealth(${1:vehicle}, ${2:health})"
		],
		"scope": "lua",
		"prefix": "SetHeliMainRotorHealth"
	},
	"SetHeliTailExplodeThrowDashboard": {
		"body": [
			"SetHeliTailExplodeThrowDashboard(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetHeliTailExplodeThrowDashboard"
	},
	"SetHeliTailRotorHealth": {
		"body": [
			"SetHeliTailRotorHealth(${1:vehicle}, ${2:health})"
		],
		"scope": "lua",
		"prefix": "SetHeliTailRotorHealth"
	},
	"SetHeliTurbulenceScalar": {
		"body": [
			"SetHeliTurbulenceScalar(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetHeliTurbulenceScalar"
	},
	"SetHelpMessageTextStyle": {
		"body": [
			"SetHelpMessageTextStyle(${1:style}, ${2:hudColor}, ${3:alpha}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "SetHelpMessageTextStyle"
	},
	"SetHidofOverride": {
		"body": [
			"SetHidofOverride(${1:p0}, ${2:p1}, ${3:nearplaneOut}, ${4:nearplaneIn}, ${5:farplaneOut}, ${6:farplaneIn})"
		],
		"scope": "lua",
		"prefix": "SetHidofOverride"
	},
	"SetHighFallTask": {
		"body": [
			"SetHighFallTask(${1:ped}, ${2:duration}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetHighFallTask"
	},
	"SetHornEnabled": {
		"body": [
			"SetHornEnabled(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetHornEnabled"
	},
	"SetHttpHandler": {
		"body": [
			"SetHttpHandler(${1:handler})"
		],
		"scope": "lua",
		"prefix": "SetHttpHandler"
	},
	"SetHudComponentPosition": {
		"body": [
			"SetHudComponentPosition(${1:id}, ${2:x}, ${3:y})"
		],
		"scope": "lua",
		"prefix": "SetHudComponentPosition"
	},
	"SetHydraulicRaised": {
		"body": [
			"SetHydraulicRaised(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetHydraulicRaised"
	},
	"SetHydraulicWheelState": {
		"body": [
			"SetHydraulicWheelState(${1:vehicle}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetHydraulicWheelState"
	},
	"SetHydraulicWheelStateTransition": {
		"body": [
			"SetHydraulicWheelStateTransition(${1:vehicle}, ${2:wheelId}, ${3:state}, ${4:value}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "SetHydraulicWheelStateTransition"
	},
	"SetHydraulicWheelValue": {
		"body": [
			"SetHydraulicWheelValue(${1:vehicle}, ${2:wheelId}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "SetHydraulicWheelValue"
	},
	"SetIgnoreLowPriorityShockingEvents": {
		"body": [
			"SetIgnoreLowPriorityShockingEvents(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetIgnoreLowPriorityShockingEvents"
	},
	"SetIgnoreNoGpsFlag": {
		"body": [
			"SetIgnoreNoGpsFlag(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetIgnoreNoGpsFlag"
	},
	"SetIgnoreSecondaryRouteNodes": {
		"body": [
			"SetIgnoreSecondaryRouteNodes(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetIgnoreSecondaryRouteNodes"
	},
	"SetIkTarget": {
		"body": [
			"SetIkTarget(${1:ped}, ${2:ikIndex}, ${3:entityLookAt}, ${4:boneLookAt}, ${5:offsetX}, ${6:offsetY}, ${7:offsetZ}, ${8:p7}, ${9:blendInDuration}, ${10:blendOutDuration})"
		],
		"scope": "lua",
		"prefix": "SetIkTarget"
	},
	"SetIncidentRequestedUnits": {
		"body": [
			"SetIncidentRequestedUnits(${1:incidentId}, ${2:dispatchService}, ${3:numUnits})"
		],
		"scope": "lua",
		"prefix": "SetIncidentRequestedUnits"
	},
	"SetIncidentUnk": {
		"body": [
			"SetIncidentUnk(${1:incidentId}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetIncidentUnk"
	},
	"SetInitialPlayerStation": {
		"body": [
			"SetInitialPlayerStation(${1:radioStation})"
		],
		"scope": "lua",
		"prefix": "SetInitialPlayerStation"
	},
	"SetInputExclusive": {
		"body": [
			"SetInputExclusive(${1:padIndex}, ${2:control})"
		],
		"scope": "lua",
		"prefix": "SetInputExclusive"
	},
	"SetInstancePriorityHint": {
		"body": [
			"SetInstancePriorityHint(${1:flag})"
		],
		"scope": "lua",
		"prefix": "SetInstancePriorityHint"
	},
	"SetInstancePriorityMode": {
		"body": [
			"SetInstancePriorityMode(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetInstancePriorityMode"
	},
	"SetInteriorActive": {
		"body": [
			"SetInteriorActive(${1:interiorID}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetInteriorActive"
	},
	"SetInteriorEntitySetColor": {
		"body": [
			"SetInteriorEntitySetColor(${1:interior}, ${2:entitySetName}, ${3:color})"
		],
		"scope": "lua",
		"prefix": "SetInteriorEntitySetColor"
	},
	"SetInteriorPortalCornerPosition": {
		"body": [
			"SetInteriorPortalCornerPosition(${1:interiorId}, ${2:portalIndex}, ${3:cornerIndex}, ${4:posX}, ${5:posY}, ${6:posZ})"
		],
		"scope": "lua",
		"prefix": "SetInteriorPortalCornerPosition"
	},
	"SetInteriorPortalFlag": {
		"body": [
			"SetInteriorPortalFlag(${1:interiorId}, ${2:portalIndex}, ${3:flag})"
		],
		"scope": "lua",
		"prefix": "SetInteriorPortalFlag"
	},
	"SetInteriorPortalRoomFrom": {
		"body": [
			"SetInteriorPortalRoomFrom(${1:interiorId}, ${2:portalIndex}, ${3:roomFrom})"
		],
		"scope": "lua",
		"prefix": "SetInteriorPortalRoomFrom"
	},
	"SetInteriorPortalRoomTo": {
		"body": [
			"SetInteriorPortalRoomTo(${1:interiorId}, ${2:portalIndex}, ${3:roomTo})"
		],
		"scope": "lua",
		"prefix": "SetInteriorPortalRoomTo"
	},
	"SetInteriorRoomExtents": {
		"body": [
			"SetInteriorRoomExtents(${1:interiorId}, ${2:roomIndex}, ${3:bbMinX}, ${4:bbMinY}, ${5:bbMinZ}, ${6:bbMaxX}, ${7:bbMaxY}, ${8:bbMaxZ})"
		],
		"scope": "lua",
		"prefix": "SetInteriorRoomExtents"
	},
	"SetInteriorRoomFlag": {
		"body": [
			"SetInteriorRoomFlag(${1:interiorId}, ${2:roomIndex}, ${3:flag})"
		],
		"scope": "lua",
		"prefix": "SetInteriorRoomFlag"
	},
	"SetInteriorRoomTimecycle": {
		"body": [
			"SetInteriorRoomTimecycle(${1:interiorId}, ${2:roomIndex}, ${3:timecycleHash})"
		],
		"scope": "lua",
		"prefix": "SetInteriorRoomTimecycle"
	},
	"SetInVehicleCamStateThisUpdate": {
		"body": [
			"SetInVehicleCamStateThisUpdate(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetInVehicleCamStateThisUpdate"
	},
	"SetIslandHopperEnabled": {
		"body": [
			"SetIslandHopperEnabled(${1:name}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetIslandHopperEnabled"
	},
	"SetLastDrivenVehicle": {
		"body": [
			"SetLastDrivenVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "SetLastDrivenVehicle"
	},
	"SetLaunchControlEnabled": {
		"body": [
			"SetLaunchControlEnabled(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetLaunchControlEnabled"
	},
	"SetLightsCutoffDistanceTweak": {
		"body": [
			"SetLightsCutoffDistanceTweak(${1:distance})"
		],
		"scope": "lua",
		"prefix": "SetLightsCutoffDistanceTweak"
	},
	"SetLocalPlayerAsGhost": {
		"body": [
			"SetLocalPlayerAsGhost(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetLocalPlayerAsGhost"
	},
	"SetLocalPlayerCanCollectPortablePickups": {
		"body": [
			"SetLocalPlayerCanCollectPortablePickups(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetLocalPlayerCanCollectPortablePickups"
	},
	"SetLocalPlayerCanUsePickupsWithThisModel": {
		"body": [
			"SetLocalPlayerCanUsePickupsWithThisModel(${1:modelHash}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetLocalPlayerCanUsePickupsWithThisModel"
	},
	"SetLocalPlayerInvisibleLocally": {
		"body": [
			"SetLocalPlayerInvisibleLocally(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetLocalPlayerInvisibleLocally"
	},
	"SetLocalPlayerVisibleInCutscene": {
		"body": [
			"SetLocalPlayerVisibleInCutscene(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetLocalPlayerVisibleInCutscene"
	},
	"SetLocalPlayerVisibleLocally": {
		"body": [
			"SetLocalPlayerVisibleLocally(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetLocalPlayerVisibleLocally"
	},
	"SetManualShutdownLoadingScreenNui": {
		"body": [
			"SetManualShutdownLoadingScreenNui(${1:manualShutdown})"
		],
		"scope": "lua",
		"prefix": "SetManualShutdownLoadingScreenNui"
	},
	"SetMapdatacullboxEnabled": {
		"body": [
			"SetMapdatacullboxEnabled(${1:name}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetMapdatacullboxEnabled"
	},
	"SetMapName": {
		"body": [
			"SetMapName(${1:mapName})"
		],
		"scope": "lua",
		"prefix": "SetMapName"
	},
	"SetMapZoomDataLevel": {
		"body": [
			"SetMapZoomDataLevel(${1:index}, ${2:zoomScale}, ${3:zoomSpeed}, ${4:scrollSpeed}, ${5:tilesX}, ${6:tilesY})"
		],
		"scope": "lua",
		"prefix": "SetMapZoomDataLevel"
	},
	"SetMaxArmourHudDisplay": {
		"body": [
			"SetMaxArmourHudDisplay(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetMaxArmourHudDisplay"
	},
	"SetMaxHealthHudDisplay": {
		"body": [
			"SetMaxHealthHudDisplay(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetMaxHealthHudDisplay"
	},
	"SetMaxNumPortablePickupsCarriedByPlayer": {
		"body": [
			"SetMaxNumPortablePickupsCarriedByPlayer(${1:modelHash}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetMaxNumPortablePickupsCarriedByPlayer"
	},
	"SetMaxWantedLevel": {
		"body": [
			"SetMaxWantedLevel(${1:maxWantedLevel})"
		],
		"scope": "lua",
		"prefix": "SetMaxWantedLevel"
	},
	"SetMicrophonePosition": {
		"body": [
			"SetMicrophonePosition(${1:p0}, ${2:x1}, ${3:y1}, ${4:z1}, ${5:x2}, ${6:y2}, ${7:z2}, ${8:x3}, ${9:y3}, ${10:z3})"
		],
		"scope": "lua",
		"prefix": "SetMicrophonePosition"
	},
	"SetMillisecondsPerGameMinute": {
		"body": [
			"SetMillisecondsPerGameMinute(${1:value})"
		],
		"scope": "lua",
		"prefix": "SetMillisecondsPerGameMinute"
	},
	"SetMinigameInProgress": {
		"body": [
			"SetMinigameInProgress(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetMinigameInProgress"
	},
	"SetMinimapAltitudeIndicatorLevel": {
		"body": [
			"SetMinimapAltitudeIndicatorLevel(${1:altitude}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetMinimapAltitudeIndicatorLevel"
	},
	"SetMinimapBlockWaypoint": {
		"body": [
			"SetMinimapBlockWaypoint(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetMinimapBlockWaypoint"
	},
	"SetMinimapClipType": {
		"body": [
			"SetMinimapClipType(${1:type})"
		],
		"scope": "lua",
		"prefix": "SetMinimapClipType"
	},
	"SetMinimapComponent": {
		"body": [
			"SetMinimapComponent(${1:componentID}, ${2:toggle}, ${3:hudColor})"
		],
		"scope": "lua",
		"prefix": "SetMinimapComponent"
	},
	"SetMinimapComponentPosition": {
		"body": [
			"SetMinimapComponentPosition(${1:name}, ${2:alignX}, ${3:alignY}, ${4:posX}, ${5:posY}, ${6:sizeX}, ${7:sizeY})"
		],
		"scope": "lua",
		"prefix": "SetMinimapComponentPosition"
	},
	"SetMinimapFowRevealCoordinate": {
		"body": [
			"SetMinimapFowRevealCoordinate(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "SetMinimapFowRevealCoordinate"
	},
	"SetMinimapGolfCourse": {
		"body": [
			"SetMinimapGolfCourse(${1:hole})"
		],
		"scope": "lua",
		"prefix": "SetMinimapGolfCourse"
	},
	"SetMinimapGolfCourseOff": {
		"body": [
			"SetMinimapGolfCourseOff()"
		],
		"scope": "lua",
		"prefix": "SetMinimapGolfCourseOff"
	},
	"SetMinimapHideFow": {
		"body": [
			"SetMinimapHideFow(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetMinimapHideFow"
	},
	"SetMinimapInPrologue": {
		"body": [
			"SetMinimapInPrologue(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetMinimapInPrologue"
	},
	"SetMinimapInSpectatorMode": {
		"body": [
			"SetMinimapInSpectatorMode(${1:toggle}, ${2:ped})"
		],
		"scope": "lua",
		"prefix": "SetMinimapInSpectatorMode"
	},
	"SetMinimapOverlayDisplay": {
		"body": [
			"SetMinimapOverlayDisplay(${1:miniMap}, ${2:x}, ${3:y}, ${4:xScale}, ${5:yScale}, ${6:alpha})"
		],
		"scope": "lua",
		"prefix": "SetMinimapOverlayDisplay"
	},
	"SetMinimapSonarEnabled": {
		"body": [
			"SetMinimapSonarEnabled(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetMinimapSonarEnabled"
	},
	"SetMissionFlag": {
		"body": [
			"SetMissionFlag(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetMissionFlag"
	},
	"SetMissionName": {
		"body": [
			"SetMissionName(${1:p0}, ${2:name})"
		],
		"scope": "lua",
		"prefix": "SetMissionName"
	},
	"SetMissionName_2": {
		"body": [
			"SetMissionName_2(${1:p0}, ${2:name})"
		],
		"scope": "lua",
		"prefix": "SetMissionName_2"
	},
	"SetMissionTrainAsNoLongerNeeded": {
		"body": [
			"SetMissionTrainAsNoLongerNeeded(${1:p1})"
		],
		"scope": "lua",
		"prefix": "SetMissionTrainAsNoLongerNeeded"
	},
	"SetMissionTrainCoords": {
		"body": [
			"SetMissionTrainCoords(${1:train}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "SetMissionTrainCoords"
	},
	"SetMobilePhonePosition": {
		"body": [
			"SetMobilePhonePosition(${1:posX}, ${2:posY}, ${3:posZ})"
		],
		"scope": "lua",
		"prefix": "SetMobilePhonePosition"
	},
	"SetMobilePhoneRadioState": {
		"body": [
			"SetMobilePhoneRadioState(${1:state})"
		],
		"scope": "lua",
		"prefix": "SetMobilePhoneRadioState"
	},
	"SetMobilePhoneRotation": {
		"body": [
			"SetMobilePhoneRotation(${1:rotX}, ${2:rotY}, ${3:rotZ}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetMobilePhoneRotation"
	},
	"SetMobilePhoneScale": {
		"body": [
			"SetMobilePhoneScale(${1:scale})"
		],
		"scope": "lua",
		"prefix": "SetMobilePhoneScale"
	},
	"SetMobilePhoneUnk": {
		"body": [
			"SetMobilePhoneUnk(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetMobilePhoneUnk"
	},
	"SetMobileRadioEnabledDuringGameplay": {
		"body": [
			"SetMobileRadioEnabledDuringGameplay(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetMobileRadioEnabledDuringGameplay"
	},
	"SetModelAsNoLongerNeeded": {
		"body": [
			"SetModelAsNoLongerNeeded(${1:model})"
		],
		"scope": "lua",
		"prefix": "SetModelAsNoLongerNeeded"
	},
	"SetModelHeadlightConfiguration": {
		"body": [
			"SetModelHeadlightConfiguration(${1:modelHash}, ${2:ratePerSecond}, ${3:headlightRotation}, ${4:invertRotation})"
		],
		"scope": "lua",
		"prefix": "SetModelHeadlightConfiguration"
	},
	"SetMountedWeaponTarget": {
		"body": [
			"SetMountedWeaponTarget(${1:shootingPed}, ${2:targetPed}, ${3:targetVehicle}, ${4:x}, ${5:y}, ${6:z})"
		],
		"scope": "lua",
		"prefix": "SetMountedWeaponTarget"
	},
	"SetMouseCursorActiveThisFrame": {
		"body": [
			"SetMouseCursorActiveThisFrame()"
		],
		"scope": "lua",
		"prefix": "SetMouseCursorActiveThisFrame"
	},
	"SetMouseCursorSprite": {
		"body": [
			"SetMouseCursorSprite(${1:spriteId})"
		],
		"scope": "lua",
		"prefix": "SetMouseCursorSprite"
	},
	"SetMouseCursorVisibleInMenus": {
		"body": [
			"SetMouseCursorVisibleInMenus(${1:enable})"
		],
		"scope": "lua",
		"prefix": "SetMouseCursorVisibleInMenus"
	},
	"SetMovementModeOverride": {
		"body": [
			"SetMovementModeOverride(${1:ped}, ${2:name})"
		],
		"scope": "lua",
		"prefix": "SetMovementModeOverride"
	},
	"SetMpGamerHealthBarDisplay": {
		"body": [
			"SetMpGamerHealthBarDisplay(${1:gamerTagId}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetMpGamerHealthBarDisplay"
	},
	"SetMpGamerHealthBarMax": {
		"body": [
			"SetMpGamerHealthBarMax(${1:gamerTagId}, ${2:value}, ${3:maximumValue})"
		],
		"scope": "lua",
		"prefix": "SetMpGamerHealthBarMax"
	},
	"SetMpGamerTagAlpha": {
		"body": [
			"SetMpGamerTagAlpha(${1:gamerTagId}, ${2:component}, ${3:alpha})"
		],
		"scope": "lua",
		"prefix": "SetMpGamerTagAlpha"
	},
	"SetMpGamerTagBigText": {
		"body": [
			"SetMpGamerTagBigText(${1:gamerTagId}, ${2:string})"
		],
		"scope": "lua",
		"prefix": "SetMpGamerTagBigText"
	},
	"SetMpGamerTagColour": {
		"body": [
			"SetMpGamerTagColour(${1:gamerTagId}, ${2:component}, ${3:hudColorIndex})"
		],
		"scope": "lua",
		"prefix": "SetMpGamerTagColour"
	},
	"SetMpGamerTagEnabled": {
		"body": [
			"SetMpGamerTagEnabled(${1:gamerTagId}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetMpGamerTagEnabled"
	},
	"SetMpGamerTagHealthBarColour": {
		"body": [
			"SetMpGamerTagHealthBarColour(${1:gamerTagId}, ${2:hudColorIndex})"
		],
		"scope": "lua",
		"prefix": "SetMpGamerTagHealthBarColour"
	},
	"SetMpGamerTagIcons": {
		"body": [
			"SetMpGamerTagIcons(${1:gamerTagId}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetMpGamerTagIcons"
	},
	"SetMpGamerTagMpBagLargeCount": {
		"body": [
			"SetMpGamerTagMpBagLargeCount(${1:gamerTagId}, ${2:count})"
		],
		"scope": "lua",
		"prefix": "SetMpGamerTagMpBagLargeCount"
	},
	"SetMpGamerTagName": {
		"body": [
			"SetMpGamerTagName(${1:gamerTagId}, ${2:string})"
		],
		"scope": "lua",
		"prefix": "SetMpGamerTagName"
	},
	"SetMpGamerTagVisibility": {
		"body": [
			"SetMpGamerTagVisibility(${1:gamerTagId}, ${2:component}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "SetMpGamerTagVisibility"
	},
	"SetMpGamerTagWantedLevel": {
		"body": [
			"SetMpGamerTagWantedLevel(${1:gamerTagId}, ${2:wantedlvl})"
		],
		"scope": "lua",
		"prefix": "SetMpGamerTagWantedLevel"
	},
	"SetMultiplayerBankCash": {
		"body": [
			"SetMultiplayerBankCash()"
		],
		"scope": "lua",
		"prefix": "SetMultiplayerBankCash"
	},
	"SetMultiplayerHudCash": {
		"body": [
			"SetMultiplayerHudCash(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetMultiplayerHudCash"
	},
	"SetMultiplayerWalletCash": {
		"body": [
			"SetMultiplayerWalletCash()"
		],
		"scope": "lua",
		"prefix": "SetMultiplayerWalletCash"
	},
	"SetNetworkCutsceneEntities": {
		"body": [
			"SetNetworkCutsceneEntities(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetNetworkCutsceneEntities"
	},
	"SetNetworkIdAlwaysExistsForPlayer": {
		"body": [
			"SetNetworkIdAlwaysExistsForPlayer(${1:netId}, ${2:player}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "SetNetworkIdAlwaysExistsForPlayer"
	},
	"SetNetworkIdCanMigrate": {
		"body": [
			"SetNetworkIdCanMigrate(${1:netId}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetNetworkIdCanMigrate"
	},
	"SetNetworkIdExistsOnAllMachines": {
		"body": [
			"SetNetworkIdExistsOnAllMachines(${1:netId}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetNetworkIdExistsOnAllMachines"
	},
	"SetNetworkIdVisibleInCutscene": {
		"body": [
			"SetNetworkIdVisibleInCutscene(${1:netId}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetNetworkIdVisibleInCutscene"
	},
	"SetNetworkVehicleAsGhost": {
		"body": [
			"SetNetworkVehicleAsGhost(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetNetworkVehicleAsGhost"
	},
	"SetNetworkVehicleRespotTimer": {
		"body": [
			"SetNetworkVehicleRespotTimer(${1:netId}, ${2:time})"
		],
		"scope": "lua",
		"prefix": "SetNetworkVehicleRespotTimer"
	},
	"SetNewWaypoint": {
		"body": [
			"SetNewWaypoint(${1:x}, ${2:y})"
		],
		"scope": "lua",
		"prefix": "SetNewWaypoint"
	},
	"SetNextDesiredMoveState": {
		"body": [
			"SetNextDesiredMoveState(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetNextDesiredMoveState"
	},
	"SetNextPlayerTcmodifier": {
		"body": [
			"SetNextPlayerTcmodifier(${1:modifierName})"
		],
		"scope": "lua",
		"prefix": "SetNextPlayerTcmodifier"
	},
	"SetNightvision": {
		"body": [
			"SetNightvision(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetNightvision"
	},
	"SetNoiseoveride": {
		"body": [
			"SetNoiseoveride(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetNoiseoveride"
	},
	"SetNoisinessoveride": {
		"body": [
			"SetNoisinessoveride(${1:value})"
		],
		"scope": "lua",
		"prefix": "SetNoisinessoveride"
	},
	"SetNoLoadingScreen": {
		"body": [
			"SetNoLoadingScreen(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetNoLoadingScreen"
	},
	"SetNuiFocus": {
		"body": [
			"SetNuiFocus(${1:hasFocus}, ${2:hasCursor})"
		],
		"scope": "lua",
		"prefix": "SetNuiFocus"
	},
	"SetNuiFocusKeepInput": {
		"body": [
			"SetNuiFocusKeepInput(${1:keepInput})"
		],
		"scope": "lua",
		"prefix": "SetNuiFocusKeepInput"
	},
	"SetNumberOfParkedVehicles": {
		"body": [
			"SetNumberOfParkedVehicles(${1:value})"
		],
		"scope": "lua",
		"prefix": "SetNumberOfParkedVehicles"
	},
	"SetObjectAllowLowLodBuoyancy": {
		"body": [
			"SetObjectAllowLowLodBuoyancy(${1:object}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetObjectAllowLowLodBuoyancy"
	},
	"SetObjectAsNoLongerNeeded": {
		"body": [
			"SetObjectAsNoLongerNeeded(${1:object})"
		],
		"scope": "lua",
		"prefix": "SetObjectAsNoLongerNeeded"
	},
	"SetObjectLightColor": {
		"body": [
			"SetObjectLightColor(${1:object}, ${2:p1}, ${3:r}, ${4:g}, ${5:b})"
		],
		"scope": "lua",
		"prefix": "SetObjectLightColor"
	},
	"SetObjectPhysicsParams": {
		"body": [
			"SetObjectPhysicsParams(${1:object}, ${2:weight}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:gravity}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:buoyancy})"
		],
		"scope": "lua",
		"prefix": "SetObjectPhysicsParams"
	},
	"SetObjectSomething": {
		"body": [
			"SetObjectSomething(${1:object}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetObjectSomething"
	},
	"SetObjectStuntPropDuration": {
		"body": [
			"SetObjectStuntPropDuration(${1:object}, ${2:duration})"
		],
		"scope": "lua",
		"prefix": "SetObjectStuntPropDuration"
	},
	"SetObjectStuntPropSpeedup": {
		"body": [
			"SetObjectStuntPropSpeedup(${1:object}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetObjectStuntPropSpeedup"
	},
	"SetObjectTargettable": {
		"body": [
			"SetObjectTargettable(${1:object}, ${2:targettable})"
		],
		"scope": "lua",
		"prefix": "SetObjectTargettable"
	},
	"SetObjectTextureVariation": {
		"body": [
			"SetObjectTextureVariation(${1:object}, ${2:textureVariation})"
		],
		"scope": "lua",
		"prefix": "SetObjectTextureVariation"
	},
	"SetOppressorTransformState": {
		"body": [
			"SetOppressorTransformState(${1:vehicle}, ${2:extend})"
		],
		"scope": "lua",
		"prefix": "SetOppressorTransformState"
	},
	"SetOverrideWeather": {
		"body": [
			"SetOverrideWeather(${1:weatherType})"
		],
		"scope": "lua",
		"prefix": "SetOverrideWeather"
	},
	"SetPadShake": {
		"body": [
			"SetPadShake(${1:padIndex}, ${2:duration}, ${3:frequency})"
		],
		"scope": "lua",
		"prefix": "SetPadShake"
	},
	"SetParachuteTaskTarget": {
		"body": [
			"SetParachuteTaskTarget(${1:ped}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "SetParachuteTaskTarget"
	},
	"SetParachuteTaskThrust": {
		"body": [
			"SetParachuteTaskThrust(${1:ped}, ${2:thrust})"
		],
		"scope": "lua",
		"prefix": "SetParachuteTaskThrust"
	},
	"SetParkedVehicleDensityMultiplierThisFrame": {
		"body": [
			"SetParkedVehicleDensityMultiplierThisFrame(${1:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetParkedVehicleDensityMultiplierThisFrame"
	},
	"SetParticleFxBulletImpactScale": {
		"body": [
			"SetParticleFxBulletImpactScale(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetParticleFxBulletImpactScale"
	},
	"SetParticleFxCamInsideNonplayerVehicle": {
		"body": [
			"SetParticleFxCamInsideNonplayerVehicle(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetParticleFxCamInsideNonplayerVehicle"
	},
	"SetParticleFxCamInsideVehicle": {
		"body": [
			"SetParticleFxCamInsideVehicle(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetParticleFxCamInsideVehicle"
	},
	"SetParticleFxLoopedAlpha": {
		"body": [
			"SetParticleFxLoopedAlpha(${1:ptfxHandle}, ${2:alpha})"
		],
		"scope": "lua",
		"prefix": "SetParticleFxLoopedAlpha"
	},
	"SetParticleFxLoopedColour": {
		"body": [
			"SetParticleFxLoopedColour(${1:ptfxHandle}, ${2:r}, ${3:g}, ${4:b}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "SetParticleFxLoopedColour"
	},
	"SetParticleFxLoopedEvolution": {
		"body": [
			"SetParticleFxLoopedEvolution(${1:ptfxHandle}, ${2:propertyName}, ${3:amount}, ${4:noNetwork})"
		],
		"scope": "lua",
		"prefix": "SetParticleFxLoopedEvolution"
	},
	"SetParticleFxLoopedFarClipDist": {
		"body": [
			"SetParticleFxLoopedFarClipDist(${1:ptfxHandle}, ${2:range})"
		],
		"scope": "lua",
		"prefix": "SetParticleFxLoopedFarClipDist"
	},
	"SetParticleFxLoopedOffsets": {
		"body": [
			"SetParticleFxLoopedOffsets(${1:ptfxHandle}, ${2:x}, ${3:y}, ${4:z}, ${5:rotX}, ${6:rotY}, ${7:rotZ})"
		],
		"scope": "lua",
		"prefix": "SetParticleFxLoopedOffsets"
	},
	"SetParticleFxLoopedScale": {
		"body": [
			"SetParticleFxLoopedScale(${1:ptfxHandle}, ${2:scale})"
		],
		"scope": "lua",
		"prefix": "SetParticleFxLoopedScale"
	},
	"SetParticleFxNonLoopedAlpha": {
		"body": [
			"SetParticleFxNonLoopedAlpha(${1:alpha})"
		],
		"scope": "lua",
		"prefix": "SetParticleFxNonLoopedAlpha"
	},
	"SetParticleFxNonLoopedColour": {
		"body": [
			"SetParticleFxNonLoopedColour(${1:r}, ${2:g}, ${3:b})"
		],
		"scope": "lua",
		"prefix": "SetParticleFxNonLoopedColour"
	},
	"SetParticleFxOverride": {
		"body": [
			"SetParticleFxOverride(${1:oldAsset}, ${2:newAsset})"
		],
		"scope": "lua",
		"prefix": "SetParticleFxOverride"
	},
	"SetParticleFxShootoutBoat": {
		"body": [
			"SetParticleFxShootoutBoat(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetParticleFxShootoutBoat"
	},
	"SetPauseMenuActive": {
		"body": [
			"SetPauseMenuActive(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPauseMenuActive"
	},
	"SetPauseMenuPedLighting": {
		"body": [
			"SetPauseMenuPedLighting(${1:state})"
		],
		"scope": "lua",
		"prefix": "SetPauseMenuPedLighting"
	},
	"SetPauseMenuPedSleepState": {
		"body": [
			"SetPauseMenuPedSleepState(${1:state})"
		],
		"scope": "lua",
		"prefix": "SetPauseMenuPedSleepState"
	},
	"SetPedAccuracy": {
		"body": [
			"SetPedAccuracy(${1:ped}, ${2:accuracy})"
		],
		"scope": "lua",
		"prefix": "SetPedAccuracy"
	},
	"SetPedAiBlipForcedOn": {
		"body": [
			"SetPedAiBlipForcedOn(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedAiBlipForcedOn"
	},
	"SetPedAiBlipGangId": {
		"body": [
			"SetPedAiBlipGangId(${1:ped}, ${2:gangId})"
		],
		"scope": "lua",
		"prefix": "SetPedAiBlipGangId"
	},
	"SetPedAiBlipHasCone": {
		"body": [
			"SetPedAiBlipHasCone(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedAiBlipHasCone"
	},
	"SetPedAiBlipNoticeRange": {
		"body": [
			"SetPedAiBlipNoticeRange(${1:ped}, ${2:range})"
		],
		"scope": "lua",
		"prefix": "SetPedAiBlipNoticeRange"
	},
	"SetPedAiBlipSprite": {
		"body": [
			"SetPedAiBlipSprite(${1:ped}, ${2:spriteId})"
		],
		"scope": "lua",
		"prefix": "SetPedAiBlipSprite"
	},
	"SetPedAlertness": {
		"body": [
			"SetPedAlertness(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPedAlertness"
	},
	"SetPedAllowedToDuck": {
		"body": [
			"SetPedAllowedToDuck(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedAllowedToDuck"
	},
	"SetPedAllowVehiclesOverride": {
		"body": [
			"SetPedAllowVehiclesOverride(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedAllowVehiclesOverride"
	},
	"SetPedAlternateMovementAnim": {
		"body": [
			"SetPedAlternateMovementAnim(${1:ped}, ${2:stance}, ${3:animDictionary}, ${4:animationName}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "SetPedAlternateMovementAnim"
	},
	"SetPedAlternateWalkAnim": {
		"body": [
			"SetPedAlternateWalkAnim(${1:ped}, ${2:animDict}, ${3:animName}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "SetPedAlternateWalkAnim"
	},
	"SetPedAmmo": {
		"body": [
			"SetPedAmmo(${1:ped}, ${2:weaponHash}, ${3:ammo})"
		],
		"scope": "lua",
		"prefix": "SetPedAmmo"
	},
	"SetPedAmmoByType": {
		"body": [
			"SetPedAmmoByType(${1:ped}, ${2:ammoType}, ${3:ammo})"
		],
		"scope": "lua",
		"prefix": "SetPedAmmoByType"
	},
	"SetPedAmmoToDrop": {
		"body": [
			"SetPedAmmoToDrop(${1:ped}, ${2:ammo})"
		],
		"scope": "lua",
		"prefix": "SetPedAmmoToDrop"
	},
	"SetPedAngledDefensiveArea": {
		"body": [
			"SetPedAngledDefensiveArea(${1:ped}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "SetPedAngledDefensiveArea"
	},
	"SetPedAoBlobRendering": {
		"body": [
			"SetPedAoBlobRendering(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedAoBlobRendering"
	},
	"SetPedArmour": {
		"body": [
			"SetPedArmour(${1:ped}, ${2:amount})"
		],
		"scope": "lua",
		"prefix": "SetPedArmour"
	},
	"SetPedAsCop": {
		"body": [
			"SetPedAsCop(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedAsCop"
	},
	"SetPedAsEnemy": {
		"body": [
			"SetPedAsEnemy(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedAsEnemy"
	},
	"SetPedAsGroupLeader": {
		"body": [
			"SetPedAsGroupLeader(${1:ped}, ${2:groupId})"
		],
		"scope": "lua",
		"prefix": "SetPedAsGroupLeader"
	},
	"SetPedAsGroupMember": {
		"body": [
			"SetPedAsGroupMember(${1:ped}, ${2:groupId})"
		],
		"scope": "lua",
		"prefix": "SetPedAsGroupMember"
	},
	"SetPedAsNoLongerNeeded": {
		"body": [
			"SetPedAsNoLongerNeeded(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SetPedAsNoLongerNeeded"
	},
	"SetPedAudioFootstepLoud": {
		"body": [
			"SetPedAudioFootstepLoud(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedAudioFootstepLoud"
	},
	"SetPedAudioFootstepQuiet": {
		"body": [
			"SetPedAudioFootstepQuiet(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedAudioFootstepQuiet"
	},
	"SetPedAudioGender": {
		"body": [
			"SetPedAudioGender(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedAudioGender"
	},
	"SetPedBlendFromParents": {
		"body": [
			"SetPedBlendFromParents(${1:ped}, ${2:father}, ${3:mother}, ${4:fathersSide}, ${5:mothersSide})"
		],
		"scope": "lua",
		"prefix": "SetPedBlendFromParents"
	},
	"SetPedBlocksPathingWhenDead": {
		"body": [
			"SetPedBlocksPathingWhenDead(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedBlocksPathingWhenDead"
	},
	"SetPedBoundsOrientation": {
		"body": [
			"SetPedBoundsOrientation(${1:ped}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "SetPedBoundsOrientation"
	},
	"SetPedCanArmIk": {
		"body": [
			"SetPedCanArmIk(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanArmIk"
	},
	"SetPedCanBeDraggedOut": {
		"body": [
			"SetPedCanBeDraggedOut(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanBeDraggedOut"
	},
	"SetPedCanBeKnockedOffVehicle": {
		"body": [
			"SetPedCanBeKnockedOffVehicle(${1:ped}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetPedCanBeKnockedOffVehicle"
	},
	"SetPedCanBeShotInVehicle": {
		"body": [
			"SetPedCanBeShotInVehicle(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanBeShotInVehicle"
	},
	"SetPedCanBeTargetedWhenInjured": {
		"body": [
			"SetPedCanBeTargetedWhenInjured(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanBeTargetedWhenInjured"
	},
	"SetPedCanBeTargetedWithoutLos": {
		"body": [
			"SetPedCanBeTargetedWithoutLos(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanBeTargetedWithoutLos"
	},
	"SetPedCanBeTargetted": {
		"body": [
			"SetPedCanBeTargetted(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanBeTargetted"
	},
	"SetPedCanBeTargettedByPlayer": {
		"body": [
			"SetPedCanBeTargettedByPlayer(${1:ped}, ${2:player}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanBeTargettedByPlayer"
	},
	"SetPedCanBeTargettedByTeam": {
		"body": [
			"SetPedCanBeTargettedByTeam(${1:ped}, ${2:team}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanBeTargettedByTeam"
	},
	"SetPedCanCowerInCover": {
		"body": [
			"SetPedCanCowerInCover(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanCowerInCover"
	},
	"SetPedCanEvasiveDive": {
		"body": [
			"SetPedCanEvasiveDive(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanEvasiveDive"
	},
	"SetPedCanHeadIk": {
		"body": [
			"SetPedCanHeadIk(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanHeadIk"
	},
	"SetPedCanLegIk": {
		"body": [
			"SetPedCanLegIk(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanLegIk"
	},
	"SetPedCanPeekInCover": {
		"body": [
			"SetPedCanPeekInCover(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanPeekInCover"
	},
	"SetPedCanPlayAmbientAnims": {
		"body": [
			"SetPedCanPlayAmbientAnims(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanPlayAmbientAnims"
	},
	"SetPedCanPlayAmbientBaseAnims": {
		"body": [
			"SetPedCanPlayAmbientBaseAnims(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanPlayAmbientBaseAnims"
	},
	"SetPedCanPlayAmbientIdles": {
		"body": [
			"SetPedCanPlayAmbientIdles(${1:ped}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetPedCanPlayAmbientIdles"
	},
	"SetPedCanPlayGestureAnims": {
		"body": [
			"SetPedCanPlayGestureAnims(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanPlayGestureAnims"
	},
	"SetPedCanPlayInjuredAnims": {
		"body": [
			"SetPedCanPlayInjuredAnims(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedCanPlayInjuredAnims"
	},
	"SetPedCanPlayVisemeAnims": {
		"body": [
			"SetPedCanPlayVisemeAnims(${1:ped}, ${2:toggle}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetPedCanPlayVisemeAnims"
	},
	"SetPedCanRagdoll": {
		"body": [
			"SetPedCanRagdoll(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanRagdoll"
	},
	"SetPedCanRagdollFromPlayerImpact": {
		"body": [
			"SetPedCanRagdollFromPlayerImpact(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanRagdollFromPlayerImpact"
	},
	"SetPedCanSmashGlass": {
		"body": [
			"SetPedCanSmashGlass(${1:ped}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetPedCanSmashGlass"
	},
	"SetPedCanSwitchWeapon": {
		"body": [
			"SetPedCanSwitchWeapon(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanSwitchWeapon"
	},
	"SetPedCanTeleportToGroupLeader": {
		"body": [
			"SetPedCanTeleportToGroupLeader(${1:pedHandle}, ${2:groupHandle}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanTeleportToGroupLeader"
	},
	"SetPedCanTorsoIk": {
		"body": [
			"SetPedCanTorsoIk(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanTorsoIk"
	},
	"SetPedCanTorsoReactIk": {
		"body": [
			"SetPedCanTorsoReactIk(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedCanTorsoReactIk"
	},
	"SetPedCanTorsoVehicleIk": {
		"body": [
			"SetPedCanTorsoVehicleIk(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedCanTorsoVehicleIk"
	},
	"SetPedCanUseAutoConversationLookat": {
		"body": [
			"SetPedCanUseAutoConversationLookat(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedCanUseAutoConversationLookat"
	},
	"SetPedCapsule": {
		"body": [
			"SetPedCapsule(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPedCapsule"
	},
	"SetPedChanceOfFiringBlanks": {
		"body": [
			"SetPedChanceOfFiringBlanks(${1:ped}, ${2:xBias}, ${3:yBias})"
		],
		"scope": "lua",
		"prefix": "SetPedChanceOfFiringBlanks"
	},
	"SetPedClothPackageIndex": {
		"body": [
			"SetPedClothPackageIndex(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedClothPackageIndex"
	},
	"SetPedClothProne": {
		"body": [
			"SetPedClothProne(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedClothProne"
	},
	"SetPedCombatAbility": {
		"body": [
			"SetPedCombatAbility(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedCombatAbility"
	},
	"SetPedCombatAttributes": {
		"body": [
			"SetPedCombatAttributes(${1:ped}, ${2:attributeIndex}, ${3:enabled})"
		],
		"scope": "lua",
		"prefix": "SetPedCombatAttributes"
	},
	"SetPedCombatMovement": {
		"body": [
			"SetPedCombatMovement(${1:ped}, ${2:combatMovement})"
		],
		"scope": "lua",
		"prefix": "SetPedCombatMovement"
	},
	"SetPedCombatRange": {
		"body": [
			"SetPedCombatRange(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedCombatRange"
	},
	"SetPedComponentVariation": {
		"body": [
			"SetPedComponentVariation(${1:ped}, ${2:componentId}, ${3:drawableId}, ${4:textureId}, ${5:paletteId})"
		],
		"scope": "lua",
		"prefix": "SetPedComponentVariation"
	},
	"SetPedConfigFlag": {
		"body": [
			"SetPedConfigFlag(${1:ped}, ${2:flagId}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "SetPedConfigFlag"
	},
	"SetPedCoordsKeepVehicle": {
		"body": [
			"SetPedCoordsKeepVehicle(${1:ped}, ${2:posX}, ${3:posY}, ${4:posZ})"
		],
		"scope": "lua",
		"prefix": "SetPedCoordsKeepVehicle"
	},
	"SetPedCoordsNoGang": {
		"body": [
			"SetPedCoordsNoGang(${1:ped}, ${2:posX}, ${3:posY}, ${4:posZ})"
		],
		"scope": "lua",
		"prefix": "SetPedCoordsNoGang"
	},
	"SetPedCoverClipsetOverride": {
		"body": [
			"SetPedCoverClipsetOverride(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedCoverClipsetOverride"
	},
	"SetPedCowerHash": {
		"body": [
			"SetPedCowerHash(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedCowerHash"
	},
	"SetPedCurrentWeaponVisible": {
		"body": [
			"SetPedCurrentWeaponVisible(${1:ped}, ${2:visible}, ${3:deselectWeapon}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "SetPedCurrentWeaponVisible"
	},
	"SetPedDefaultComponentVariation": {
		"body": [
			"SetPedDefaultComponentVariation(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SetPedDefaultComponentVariation"
	},
	"SetPedDefensiveAreaAttachedToPed": {
		"body": [
			"SetPedDefensiveAreaAttachedToPed(${1:ped}, ${2:attachPed}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10})"
		],
		"scope": "lua",
		"prefix": "SetPedDefensiveAreaAttachedToPed"
	},
	"SetPedDefensiveAreaDirection": {
		"body": [
			"SetPedDefensiveAreaDirection(${1:ped}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "SetPedDefensiveAreaDirection"
	},
	"SetPedDefensiveSphereAttachedToPed": {
		"body": [
			"SetPedDefensiveSphereAttachedToPed(${1:ped}, ${2:target}, ${3:xOffset}, ${4:yOffset}, ${5:zOffset}, ${6:radius}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "SetPedDefensiveSphereAttachedToPed"
	},
	"SetPedDefensiveSphereAttachedToVehicle": {
		"body": [
			"SetPedDefensiveSphereAttachedToVehicle(${1:ped}, ${2:target}, ${3:xOffset}, ${4:yOffset}, ${5:zOffset}, ${6:radius}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "SetPedDefensiveSphereAttachedToVehicle"
	},
	"SetPedDensityMultiplierThisFrame": {
		"body": [
			"SetPedDensityMultiplierThisFrame(${1:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetPedDensityMultiplierThisFrame"
	},
	"SetPedDesiredHeading": {
		"body": [
			"SetPedDesiredHeading(${1:ped}, ${2:heading})"
		],
		"scope": "lua",
		"prefix": "SetPedDesiredHeading"
	},
	"SetPedDesiredMoveBlendRatio": {
		"body": [
			"SetPedDesiredMoveBlendRatio(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedDesiredMoveBlendRatio"
	},
	"SetPedDiesInSinkingVehicle": {
		"body": [
			"SetPedDiesInSinkingVehicle(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedDiesInSinkingVehicle"
	},
	"SetPedDiesInstantlyInWater": {
		"body": [
			"SetPedDiesInstantlyInWater(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedDiesInstantlyInWater"
	},
	"SetPedDiesInVehicle": {
		"body": [
			"SetPedDiesInVehicle(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedDiesInVehicle"
	},
	"SetPedDiesInWater": {
		"body": [
			"SetPedDiesInWater(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedDiesInWater"
	},
	"SetPedDiesWhenInjured": {
		"body": [
			"SetPedDiesWhenInjured(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedDiesWhenInjured"
	},
	"SetPedDriveByClipsetOverride": {
		"body": [
			"SetPedDriveByClipsetOverride(${1:ped}, ${2:clipset})"
		],
		"scope": "lua",
		"prefix": "SetPedDriveByClipsetOverride"
	},
	"SetPedDropsInventoryWeapon": {
		"body": [
			"SetPedDropsInventoryWeapon(${1:ped}, ${2:weaponHash}, ${3:xOffset}, ${4:yOffset}, ${5:zOffset}, ${6:ammoCount})"
		],
		"scope": "lua",
		"prefix": "SetPedDropsInventoryWeapon"
	},
	"SetPedDropsWeapon": {
		"body": [
			"SetPedDropsWeapon(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SetPedDropsWeapon"
	},
	"SetPedDropsWeaponsWhenDead": {
		"body": [
			"SetPedDropsWeaponsWhenDead(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedDropsWeaponsWhenDead"
	},
	"SetPedDucking": {
		"body": [
			"SetPedDucking(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedDucking"
	},
	"SetPedEmissiveIntensity": {
		"body": [
			"SetPedEmissiveIntensity(${1:ped}, ${2:intensity})"
		],
		"scope": "lua",
		"prefix": "SetPedEmissiveIntensity"
	},
	"SetPedEnableWeaponBlocking": {
		"body": [
			"SetPedEnableWeaponBlocking(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedEnableWeaponBlocking"
	},
	"SetPedEnveffColorModulator": {
		"body": [
			"SetPedEnveffColorModulator(${1:ped}, ${2:r}, ${3:g}, ${4:b})"
		],
		"scope": "lua",
		"prefix": "SetPedEnveffColorModulator"
	},
	"SetPedEnveffScale": {
		"body": [
			"SetPedEnveffScale(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPedEnveffScale"
	},
	"SetPedEyeColor": {
		"body": [
			"SetPedEyeColor(${1:ped}, ${2:index})"
		],
		"scope": "lua",
		"prefix": "SetPedEyeColor"
	},
	"SetPedFaceFeature": {
		"body": [
			"SetPedFaceFeature(${1:ped}, ${2:index}, ${3:scale})"
		],
		"scope": "lua",
		"prefix": "SetPedFaceFeature"
	},
	"SetPedFiringPattern": {
		"body": [
			"SetPedFiringPattern(${1:ped}, ${2:patternHash})"
		],
		"scope": "lua",
		"prefix": "SetPedFiringPattern"
	},
	"SetPedFleeAttributes": {
		"body": [
			"SetPedFleeAttributes(${1:ped}, ${2:attributeFlags}, ${3:enable})"
		],
		"scope": "lua",
		"prefix": "SetPedFleeAttributes"
	},
	"SetPedGadget": {
		"body": [
			"SetPedGadget(${1:ped}, ${2:gadgetHash}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetPedGadget"
	},
	"SetPedGeneratesDeadBodyEvents": {
		"body": [
			"SetPedGeneratesDeadBodyEvents(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedGeneratesDeadBodyEvents"
	},
	"SetPedGestureGroup": {
		"body": [
			"SetPedGestureGroup(${1:ped}, ${2:animGroupGesture})"
		],
		"scope": "lua",
		"prefix": "SetPedGestureGroup"
	},
	"SetPedGetOutUpsideDownVehicle": {
		"body": [
			"SetPedGetOutUpsideDownVehicle(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedGetOutUpsideDownVehicle"
	},
	"SetPedGravity": {
		"body": [
			"SetPedGravity(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedGravity"
	},
	"SetPedGroupMemberPassengerIndex": {
		"body": [
			"SetPedGroupMemberPassengerIndex(${1:ped}, ${2:index})"
		],
		"scope": "lua",
		"prefix": "SetPedGroupMemberPassengerIndex"
	},
	"SetPedHairColor": {
		"body": [
			"SetPedHairColor(${1:ped}, ${2:colorID}, ${3:highlightColorID})"
		],
		"scope": "lua",
		"prefix": "SetPedHairColor"
	},
	"SetPedHasAiBlip": {
		"body": [
			"SetPedHasAiBlip(${1:ped}, ${2:hasCone})"
		],
		"scope": "lua",
		"prefix": "SetPedHasAiBlip"
	},
	"SetPedHasAiBlipWithColor": {
		"body": [
			"SetPedHasAiBlipWithColor(${1:ped}, ${2:hasCone}, ${3:color})"
		],
		"scope": "lua",
		"prefix": "SetPedHasAiBlipWithColor"
	},
	"SetPedHeadBlendData": {
		"body": [
			"SetPedHeadBlendData(${1:ped}, ${2:shapeFirstID}, ${3:shapeSecondID}, ${4:shapeThirdID}, ${5:skinFirstID}, ${6:skinSecondID}, ${7:skinThirdID}, ${8:shapeMix}, ${9:skinMix}, ${10:thirdMix}, ${11:isParent})"
		],
		"scope": "lua",
		"prefix": "SetPedHeadBlendData"
	},
	"SetPedHeadOverlay": {
		"body": [
			"SetPedHeadOverlay(${1:ped}, ${2:overlayID}, ${3:index}, ${4:opacity})"
		],
		"scope": "lua",
		"prefix": "SetPedHeadOverlay"
	},
	"SetPedHeadOverlayColor": {
		"body": [
			"SetPedHeadOverlayColor(${1:ped}, ${2:overlayID}, ${3:colorType}, ${4:colorID}, ${5:secondColorID})"
		],
		"scope": "lua",
		"prefix": "SetPedHeadOverlayColor"
	},
	"SetPedHearingRange": {
		"body": [
			"SetPedHearingRange(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPedHearingRange"
	},
	"SetPedHeatscaleOverride": {
		"body": [
			"SetPedHeatscaleOverride(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedHeatscaleOverride"
	},
	"SetPedHelmet": {
		"body": [
			"SetPedHelmet(${1:ped}, ${2:canWearHelmet})"
		],
		"scope": "lua",
		"prefix": "SetPedHelmet"
	},
	"SetPedHelmetFlag": {
		"body": [
			"SetPedHelmetFlag(${1:ped}, ${2:helmetFlag})"
		],
		"scope": "lua",
		"prefix": "SetPedHelmetFlag"
	},
	"SetPedHelmetPropIndex": {
		"body": [
			"SetPedHelmetPropIndex(${1:ped}, ${2:propIndex})"
		],
		"scope": "lua",
		"prefix": "SetPedHelmetPropIndex"
	},
	"SetPedHelmetTextureIndex": {
		"body": [
			"SetPedHelmetTextureIndex(${1:ped}, ${2:textureIndex})"
		],
		"scope": "lua",
		"prefix": "SetPedHelmetTextureIndex"
	},
	"SetPedHelmetUnk": {
		"body": [
			"SetPedHelmetUnk(${1:ped}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetPedHelmetUnk"
	},
	"SetPedHighlyPerceptive": {
		"body": [
			"SetPedHighlyPerceptive(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedHighlyPerceptive"
	},
	"SetPedIdRange": {
		"body": [
			"SetPedIdRange(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPedIdRange"
	},
	"SetPedIncreasedAvoidanceRadius": {
		"body": [
			"SetPedIncreasedAvoidanceRadius(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SetPedIncreasedAvoidanceRadius"
	},
	"SetPedInfiniteAmmo": {
		"body": [
			"SetPedInfiniteAmmo(${1:ped}, ${2:toggle}, ${3:weaponHash})"
		],
		"scope": "lua",
		"prefix": "SetPedInfiniteAmmo"
	},
	"SetPedInfiniteAmmoClip": {
		"body": [
			"SetPedInfiniteAmmoClip(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedInfiniteAmmoClip"
	},
	"SetPedIntoVehicle": {
		"body": [
			"SetPedIntoVehicle(${1:ped}, ${2:vehicle}, ${3:seatIndex})"
		],
		"scope": "lua",
		"prefix": "SetPedIntoVehicle"
	},
	"SetPedInVehicleContext": {
		"body": [
			"SetPedInVehicleContext(${1:ped}, ${2:context})"
		],
		"scope": "lua",
		"prefix": "SetPedInVehicleContext"
	},
	"SetPedIsDrunk": {
		"body": [
			"SetPedIsDrunk(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedIsDrunk"
	},
	"SetPedKeepTask": {
		"body": [
			"SetPedKeepTask(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedKeepTask"
	},
	"SetPedLegIkMode": {
		"body": [
			"SetPedLegIkMode(${1:ped}, ${2:mode})"
		],
		"scope": "lua",
		"prefix": "SetPedLegIkMode"
	},
	"SetPedLodMultiplier": {
		"body": [
			"SetPedLodMultiplier(${1:ped}, ${2:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetPedLodMultiplier"
	},
	"SetPedMaxHealth": {
		"body": [
			"SetPedMaxHealth(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPedMaxHealth"
	},
	"SetPedMaxMoveBlendRatio": {
		"body": [
			"SetPedMaxMoveBlendRatio(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPedMaxMoveBlendRatio"
	},
	"SetPedMaxTimeInWater": {
		"body": [
			"SetPedMaxTimeInWater(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPedMaxTimeInWater"
	},
	"SetPedMaxTimeUnderwater": {
		"body": [
			"SetPedMaxTimeUnderwater(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPedMaxTimeUnderwater"
	},
	"SetPedMinGroundTimeForStungun": {
		"body": [
			"SetPedMinGroundTimeForStungun(${1:ped}, ${2:ms})"
		],
		"scope": "lua",
		"prefix": "SetPedMinGroundTimeForStungun"
	},
	"SetPedMinMoveBlendRatio": {
		"body": [
			"SetPedMinMoveBlendRatio(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPedMinMoveBlendRatio"
	},
	"SetPedModelIsSuppressed": {
		"body": [
			"SetPedModelIsSuppressed(${1:model}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedModelIsSuppressed"
	},
	"SetPedModelPersonality": {
		"body": [
			"SetPedModelPersonality(${1:modelHash}, ${2:personalityHash})"
		],
		"scope": "lua",
		"prefix": "SetPedModelPersonality"
	},
	"SetPedMoney": {
		"body": [
			"SetPedMoney(${1:ped}, ${2:amount})"
		],
		"scope": "lua",
		"prefix": "SetPedMoney"
	},
	"SetPedMotionBlur": {
		"body": [
			"SetPedMotionBlur(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedMotionBlur"
	},
	"SetPedMoveAnimsBlendOut": {
		"body": [
			"SetPedMoveAnimsBlendOut(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SetPedMoveAnimsBlendOut"
	},
	"SetPedMovementClipset": {
		"body": [
			"SetPedMovementClipset(${1:ped}, ${2:clipSet}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetPedMovementClipset"
	},
	"SetPedMoveRateOverride": {
		"body": [
			"SetPedMoveRateOverride(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPedMoveRateOverride"
	},
	"SetPedNameDebug": {
		"body": [
			"SetPedNameDebug(${1:ped}, ${2:name})"
		],
		"scope": "lua",
		"prefix": "SetPedNameDebug"
	},
	"SetPedNeverLeavesGroup": {
		"body": [
			"SetPedNeverLeavesGroup(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedNeverLeavesGroup"
	},
	"SetPedNonCreationArea": {
		"body": [
			"SetPedNonCreationArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2})"
		],
		"scope": "lua",
		"prefix": "SetPedNonCreationArea"
	},
	"SetPedPanicExitScenario": {
		"body": [
			"SetPedPanicExitScenario(${1:ped}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "SetPedPanicExitScenario"
	},
	"SetPedParachuteTintIndex": {
		"body": [
			"SetPedParachuteTintIndex(${1:ped}, ${2:tintIndex})"
		],
		"scope": "lua",
		"prefix": "SetPedParachuteTintIndex"
	},
	"SetPedPathAvoidFire": {
		"body": [
			"SetPedPathAvoidFire(${1:ped}, ${2:avoidFire})"
		],
		"scope": "lua",
		"prefix": "SetPedPathAvoidFire"
	},
	"SetPedPathCanDropFromHeight": {
		"body": [
			"SetPedPathCanDropFromHeight(${1:ped}, ${2:Toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedPathCanDropFromHeight"
	},
	"SetPedPathCanUseClimbovers": {
		"body": [
			"SetPedPathCanUseClimbovers(${1:ped}, ${2:Toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedPathCanUseClimbovers"
	},
	"SetPedPathCanUseLadders": {
		"body": [
			"SetPedPathCanUseLadders(${1:ped}, ${2:Toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedPathCanUseLadders"
	},
	"SetPedPathClimbCostModifier": {
		"body": [
			"SetPedPathClimbCostModifier(${1:ped}, ${2:modifier})"
		],
		"scope": "lua",
		"prefix": "SetPedPathClimbCostModifier"
	},
	"SetPedPathMayEnterWater": {
		"body": [
			"SetPedPathMayEnterWater(${1:ped}, ${2:mayEnterWater})"
		],
		"scope": "lua",
		"prefix": "SetPedPathMayEnterWater"
	},
	"SetPedPathPreferToAvoidWater": {
		"body": [
			"SetPedPathPreferToAvoidWater(${1:ped}, ${2:avoidWater})"
		],
		"scope": "lua",
		"prefix": "SetPedPathPreferToAvoidWater"
	},
	"SetPedPathsBackToOriginal": {
		"body": [
			"SetPedPathsBackToOriginal(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "SetPedPathsBackToOriginal"
	},
	"SetPedPathsInArea": {
		"body": [
			"SetPedPathsInArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:unknown})"
		],
		"scope": "lua",
		"prefix": "SetPedPathsInArea"
	},
	"SetPedPinnedDown": {
		"body": [
			"SetPedPinnedDown(${1:ped}, ${2:pinned}, ${3:i})"
		],
		"scope": "lua",
		"prefix": "SetPedPinnedDown"
	},
	"SetPedPlaysHeadOnHornAnimWhenDiesInVehicle": {
		"body": [
			"SetPedPlaysHeadOnHornAnimWhenDiesInVehicle(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedPlaysHeadOnHornAnimWhenDiesInVehicle"
	},
	"SetPedPopulationBudget": {
		"body": [
			"SetPedPopulationBudget(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetPedPopulationBudget"
	},
	"SetPedPreferredCoverSet": {
		"body": [
			"SetPedPreferredCoverSet(${1:ped}, ${2:itemSet})"
		],
		"scope": "lua",
		"prefix": "SetPedPreferredCoverSet"
	},
	"SetPedPreloadPropData": {
		"body": [
			"SetPedPreloadPropData(${1:ped}, ${2:componentId}, ${3:drawableId}, ${4:TextureId})"
		],
		"scope": "lua",
		"prefix": "SetPedPreloadPropData"
	},
	"SetPedPreloadVariationData": {
		"body": [
			"SetPedPreloadVariationData(${1:ped}, ${2:slot}, ${3:drawableId}, ${4:textureId})"
		],
		"scope": "lua",
		"prefix": "SetPedPreloadVariationData"
	},
	"SetPedPrimaryLookat": {
		"body": [
			"SetPedPrimaryLookat(${1:ped}, ${2:lookAt})"
		],
		"scope": "lua",
		"prefix": "SetPedPrimaryLookat"
	},
	"SetPedPropIndex": {
		"body": [
			"SetPedPropIndex(${1:ped}, ${2:componentId}, ${3:drawableId}, ${4:textureId}, ${5:attach})"
		],
		"scope": "lua",
		"prefix": "SetPedPropIndex"
	},
	"SetPedRagdollForceFall": {
		"body": [
			"SetPedRagdollForceFall(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SetPedRagdollForceFall"
	},
	"SetPedRagdollOnCollision": {
		"body": [
			"SetPedRagdollOnCollision(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedRagdollOnCollision"
	},
	"SetPedRandomComponentVariation": {
		"body": [
			"SetPedRandomComponentVariation(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedRandomComponentVariation"
	},
	"SetPedRandomProps": {
		"body": [
			"SetPedRandomProps(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SetPedRandomProps"
	},
	"SetPedRelationshipGroupDefaultHash": {
		"body": [
			"SetPedRelationshipGroupDefaultHash(${1:ped}, ${2:hash})"
		],
		"scope": "lua",
		"prefix": "SetPedRelationshipGroupDefaultHash"
	},
	"SetPedRelationshipGroupHash": {
		"body": [
			"SetPedRelationshipGroupHash(${1:ped}, ${2:hash})"
		],
		"scope": "lua",
		"prefix": "SetPedRelationshipGroupHash"
	},
	"SetPedReserveParachuteTintIndex": {
		"body": [
			"SetPedReserveParachuteTintIndex(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedReserveParachuteTintIndex"
	},
	"SetPedResetFlag": {
		"body": [
			"SetPedResetFlag(${1:ped}, ${2:flagId}, ${3:doReset})"
		],
		"scope": "lua",
		"prefix": "SetPedResetFlag"
	},
	"SetPedScream": {
		"body": [
			"SetPedScream(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SetPedScream"
	},
	"SetPedScubaGearVariation": {
		"body": [
			"SetPedScubaGearVariation(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SetPedScubaGearVariation"
	},
	"SetPedSeeingRange": {
		"body": [
			"SetPedSeeingRange(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPedSeeingRange"
	},
	"SetPedShootOrdnanceWeapon": {
		"body": [
			"SetPedShootOrdnanceWeapon(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPedShootOrdnanceWeapon"
	},
	"SetPedShootRate": {
		"body": [
			"SetPedShootRate(${1:ped}, ${2:shootRate})"
		],
		"scope": "lua",
		"prefix": "SetPedShootRate"
	},
	"SetPedShootsAtCoord": {
		"body": [
			"SetPedShootsAtCoord(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedShootsAtCoord"
	},
	"SetPedShouldPlayFleeScenarioExit": {
		"body": [
			"SetPedShouldPlayFleeScenarioExit(${1:ped}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetPedShouldPlayFleeScenarioExit"
	},
	"SetPedShouldPlayImmediateScenarioExit": {
		"body": [
			"SetPedShouldPlayImmediateScenarioExit(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SetPedShouldPlayImmediateScenarioExit"
	},
	"SetPedShouldPlayNormalScenarioExit": {
		"body": [
			"SetPedShouldPlayNormalScenarioExit(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SetPedShouldPlayNormalScenarioExit"
	},
	"SetPedSphereDefensiveArea": {
		"body": [
			"SetPedSphereDefensiveArea(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:radius}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "SetPedSphereDefensiveArea"
	},
	"SetPedStayInVehicleWhenJacked": {
		"body": [
			"SetPedStayInVehicleWhenJacked(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedStayInVehicleWhenJacked"
	},
	"SetPedStealthMovement": {
		"body": [
			"SetPedStealthMovement(${1:ped}, ${2:p1}, ${3:action})"
		],
		"scope": "lua",
		"prefix": "SetPedStealthMovement"
	},
	"SetPedSteersAroundObjects": {
		"body": [
			"SetPedSteersAroundObjects(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedSteersAroundObjects"
	},
	"SetPedSteersAroundPeds": {
		"body": [
			"SetPedSteersAroundPeds(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedSteersAroundPeds"
	},
	"SetPedSteersAroundVehicles": {
		"body": [
			"SetPedSteersAroundVehicles(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedSteersAroundVehicles"
	},
	"SetPedStrafeClipset": {
		"body": [
			"SetPedStrafeClipset(${1:ped}, ${2:clipSet})"
		],
		"scope": "lua",
		"prefix": "SetPedStrafeClipset"
	},
	"SetPedSuffersCriticalHits": {
		"body": [
			"SetPedSuffersCriticalHits(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedSuffersCriticalHits"
	},
	"SetPedSweat": {
		"body": [
			"SetPedSweat(${1:ped}, ${2:sweat})"
		],
		"scope": "lua",
		"prefix": "SetPedSweat"
	},
	"SetPedTalk": {
		"body": [
			"SetPedTalk(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SetPedTalk"
	},
	"SetPedTargetLossResponse": {
		"body": [
			"SetPedTargetLossResponse(${1:ped}, ${2:responseType})"
		],
		"scope": "lua",
		"prefix": "SetPedTargetLossResponse"
	},
	"SetPedToInformRespectedFriends": {
		"body": [
			"SetPedToInformRespectedFriends(${1:ped}, ${2:radius}, ${3:maxFriends})"
		],
		"scope": "lua",
		"prefix": "SetPedToInformRespectedFriends"
	},
	"SetPedToLoadCover": {
		"body": [
			"SetPedToLoadCover(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPedToLoadCover"
	},
	"SetPedToRagdoll": {
		"body": [
			"SetPedToRagdoll(${1:ped}, ${2:time1}, ${3:time2}, ${4:ragdollType}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "SetPedToRagdoll"
	},
	"SetPedToRagdollWithFall": {
		"body": [
			"SetPedToRagdollWithFall(${1:ped}, ${2:time}, ${3:p2}, ${4:ragdollType}, ${5:x}, ${6:y}, ${7:z}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11}, ${13:p12}, ${14:p13})"
		],
		"scope": "lua",
		"prefix": "SetPedToRagdollWithFall"
	},
	"SetPedUsingActionMode": {
		"body": [
			"SetPedUsingActionMode(${1:ped}, ${2:p1}, ${3:p2}, ${4:action})"
		],
		"scope": "lua",
		"prefix": "SetPedUsingActionMode"
	},
	"SetPedVehicleForcedSeatUsage": {
		"body": [
			"SetPedVehicleForcedSeatUsage(${1:ped}, ${2:vehicle}, ${3:seatIndex}, ${4:flags})"
		],
		"scope": "lua",
		"prefix": "SetPedVehicleForcedSeatUsage"
	},
	"SetPedVisualFieldCenterAngle": {
		"body": [
			"SetPedVisualFieldCenterAngle(${1:ped}, ${2:angle})"
		],
		"scope": "lua",
		"prefix": "SetPedVisualFieldCenterAngle"
	},
	"SetPedVisualFieldMaxAngle": {
		"body": [
			"SetPedVisualFieldMaxAngle(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPedVisualFieldMaxAngle"
	},
	"SetPedVisualFieldMaxElevationAngle": {
		"body": [
			"SetPedVisualFieldMaxElevationAngle(${1:ped}, ${2:angle})"
		],
		"scope": "lua",
		"prefix": "SetPedVisualFieldMaxElevationAngle"
	},
	"SetPedVisualFieldMinAngle": {
		"body": [
			"SetPedVisualFieldMinAngle(${1:ped}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPedVisualFieldMinAngle"
	},
	"SetPedVisualFieldMinElevationAngle": {
		"body": [
			"SetPedVisualFieldMinElevationAngle(${1:ped}, ${2:angle})"
		],
		"scope": "lua",
		"prefix": "SetPedVisualFieldMinElevationAngle"
	},
	"SetPedVisualFieldPeripheralRange": {
		"body": [
			"SetPedVisualFieldPeripheralRange(${1:ped}, ${2:range})"
		],
		"scope": "lua",
		"prefix": "SetPedVisualFieldPeripheralRange"
	},
	"SetPedVoiceGroup": {
		"body": [
			"SetPedVoiceGroup(${1:ped}, ${2:voiceGroupHash})"
		],
		"scope": "lua",
		"prefix": "SetPedVoiceGroup"
	},
	"SetPedWaypointRouteOffset": {
		"body": [
			"SetPedWaypointRouteOffset(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetPedWaypointRouteOffset"
	},
	"SetPedWeaponLiveryColor": {
		"body": [
			"SetPedWeaponLiveryColor(${1:ped}, ${2:weaponHash}, ${3:camoComponentHash}, ${4:colorIndex})"
		],
		"scope": "lua",
		"prefix": "SetPedWeaponLiveryColor"
	},
	"SetPedWeaponMovementClipset": {
		"body": [
			"SetPedWeaponMovementClipset(${1:ped}, ${2:clipSet})"
		],
		"scope": "lua",
		"prefix": "SetPedWeaponMovementClipset"
	},
	"SetPedWeaponTintIndex": {
		"body": [
			"SetPedWeaponTintIndex(${1:ped}, ${2:weaponHash}, ${3:tintIndex})"
		],
		"scope": "lua",
		"prefix": "SetPedWeaponTintIndex"
	},
	"SetPedWetnessEnabledThisFrame": {
		"body": [
			"SetPedWetnessEnabledThisFrame(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SetPedWetnessEnabledThisFrame"
	},
	"SetPedWetnessHeight": {
		"body": [
			"SetPedWetnessHeight(${1:ped}, ${2:height})"
		],
		"scope": "lua",
		"prefix": "SetPedWetnessHeight"
	},
	"SetPickupAmmoAmountScaler": {
		"body": [
			"SetPickupAmmoAmountScaler(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetPickupAmmoAmountScaler"
	},
	"SetPickupGenerationRangeMultiplier": {
		"body": [
			"SetPickupGenerationRangeMultiplier(${1:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetPickupGenerationRangeMultiplier"
	},
	"SetPickupHiddenWhenUncollectable": {
		"body": [
			"SetPickupHiddenWhenUncollectable(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPickupHiddenWhenUncollectable"
	},
	"SetPickupRegenerationTime": {
		"body": [
			"SetPickupRegenerationTime(${1:pickup}, ${2:duration})"
		],
		"scope": "lua",
		"prefix": "SetPickupRegenerationTime"
	},
	"SetPickupRopeLengthForCargobob": {
		"body": [
			"SetPickupRopeLengthForCargobob(${1:cargobob}, ${2:length1}, ${3:length2}, ${4:state})"
		],
		"scope": "lua",
		"prefix": "SetPickupRopeLengthForCargobob"
	},
	"SetPickupUncollectable": {
		"body": [
			"SetPickupUncollectable(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPickupUncollectable"
	},
	"SetPlaneEngineHealth": {
		"body": [
			"SetPlaneEngineHealth(${1:vehicle}, ${2:health})"
		],
		"scope": "lua",
		"prefix": "SetPlaneEngineHealth"
	},
	"SetPlanePropellersHealth": {
		"body": [
			"SetPlanePropellersHealth(${1:plane}, ${2:health})"
		],
		"scope": "lua",
		"prefix": "SetPlanePropellersHealth"
	},
	"SetPlaneTurbulenceMultiplier": {
		"body": [
			"SetPlaneTurbulenceMultiplier(${1:vehicle}, ${2:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetPlaneTurbulenceMultiplier"
	},
	"SetPlaybackSpeed": {
		"body": [
			"SetPlaybackSpeed(${1:vehicle}, ${2:speed})"
		],
		"scope": "lua",
		"prefix": "SetPlaybackSpeed"
	},
	"SetPlaybackToUseAi": {
		"body": [
			"SetPlaybackToUseAi(${1:vehicle}, ${2:drivingStyle})"
		],
		"scope": "lua",
		"prefix": "SetPlaybackToUseAi"
	},
	"SetPlaybackToUseAiTryToRevertBackLater": {
		"body": [
			"SetPlaybackToUseAiTryToRevertBackLater(${1:vehicle}, ${2:time}, ${3:drivingStyle}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetPlaybackToUseAiTryToRevertBackLater"
	},
	"SetPlayerAirDefenseZoneFlag": {
		"body": [
			"SetPlayerAirDefenseZoneFlag(${1:player}, ${2:zoneId}, ${3:enable})"
		],
		"scope": "lua",
		"prefix": "SetPlayerAirDefenseZoneFlag"
	},
	"SetPlayerAngry": {
		"body": [
			"SetPlayerAngry(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerAngry"
	},
	"SetPlayerBlipPositionThisFrame": {
		"body": [
			"SetPlayerBlipPositionThisFrame(${1:x}, ${2:y})"
		],
		"scope": "lua",
		"prefix": "SetPlayerBlipPositionThisFrame"
	},
	"SetPlayerBluetoothState": {
		"body": [
			"SetPlayerBluetoothState(${1:player}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetPlayerBluetoothState"
	},
	"SetPlayerCanBeHassledByGangs": {
		"body": [
			"SetPlayerCanBeHassledByGangs(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerCanBeHassledByGangs"
	},
	"SetPlayerCanDoDriveBy": {
		"body": [
			"SetPlayerCanDoDriveBy(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerCanDoDriveBy"
	},
	"SetPlayerCanLeaveParachuteSmokeTrail": {
		"body": [
			"SetPlayerCanLeaveParachuteSmokeTrail(${1:player}, ${2:enabled})"
		],
		"scope": "lua",
		"prefix": "SetPlayerCanLeaveParachuteSmokeTrail"
	},
	"SetPlayerCanUseCover": {
		"body": [
			"SetPlayerCanUseCover(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerCanUseCover"
	},
	"SetPlayerCashChange": {
		"body": [
			"SetPlayerCashChange(${1:cash}, ${2:bank})"
		],
		"scope": "lua",
		"prefix": "SetPlayerCashChange"
	},
	"SetPlayerClothLockCounter": {
		"body": [
			"SetPlayerClothLockCounter(${1:value})"
		],
		"scope": "lua",
		"prefix": "SetPlayerClothLockCounter"
	},
	"SetPlayerClothPackageIndex": {
		"body": [
			"SetPlayerClothPackageIndex(${1:index})"
		],
		"scope": "lua",
		"prefix": "SetPlayerClothPackageIndex"
	},
	"SetPlayerClothPinFrames": {
		"body": [
			"SetPlayerClothPinFrames(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerClothPinFrames"
	},
	"SetPlayerControl": {
		"body": [
			"SetPlayerControl(${1:player}, ${2:bHasControl}, ${3:flags})"
		],
		"scope": "lua",
		"prefix": "SetPlayerControl"
	},
	"SetPlayerCullingRadius": {
		"body": [
			"SetPlayerCullingRadius(${1:playerSrc}, ${2:radius})"
		],
		"scope": "lua",
		"prefix": "SetPlayerCullingRadius"
	},
	"SetPlayerFallDistance": {
		"body": [
			"SetPlayerFallDistance(${1:player}, ${2:distance})"
		],
		"scope": "lua",
		"prefix": "SetPlayerFallDistance"
	},
	"SetPlayerForcedAim": {
		"body": [
			"SetPlayerForcedAim(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerForcedAim"
	},
	"SetPlayerForcedZoom": {
		"body": [
			"SetPlayerForcedZoom(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerForcedZoom"
	},
	"SetPlayerForceSkipAimIntro": {
		"body": [
			"SetPlayerForceSkipAimIntro(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerForceSkipAimIntro"
	},
	"SetPlayerHasReserveParachute": {
		"body": [
			"SetPlayerHasReserveParachute(${1:player})"
		],
		"scope": "lua",
		"prefix": "SetPlayerHasReserveParachute"
	},
	"SetPlayerHealthRechargeLimit": {
		"body": [
			"SetPlayerHealthRechargeLimit(${1:player}, ${2:limit})"
		],
		"scope": "lua",
		"prefix": "SetPlayerHealthRechargeLimit"
	},
	"SetPlayerHealthRechargeMultiplier": {
		"body": [
			"SetPlayerHealthRechargeMultiplier(${1:player}, ${2:regenRate})"
		],
		"scope": "lua",
		"prefix": "SetPlayerHealthRechargeMultiplier"
	},
	"SetPlayerHomingRocketDisabled": {
		"body": [
			"SetPlayerHomingRocketDisabled(${1:player}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPlayerHomingRocketDisabled"
	},
	"SetPlayerInvincible": {
		"body": [
			"SetPlayerInvincible(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerInvincible"
	},
	"SetPlayerInvincibleKeepRagdollEnabled": {
		"body": [
			"SetPlayerInvincibleKeepRagdollEnabled(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerInvincibleKeepRagdollEnabled"
	},
	"SetPlayerInvisibleLocally": {
		"body": [
			"SetPlayerInvisibleLocally(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerInvisibleLocally"
	},
	"SetPlayerIsInAnimalForm": {
		"body": [
			"SetPlayerIsInAnimalForm(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerIsInAnimalForm"
	},
	"SetPlayerIsInDirectorMode": {
		"body": [
			"SetPlayerIsInDirectorMode(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerIsInDirectorMode"
	},
	"SetPlayerLeavePedBehind": {
		"body": [
			"SetPlayerLeavePedBehind(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerLeavePedBehind"
	},
	"SetPlayerLockon": {
		"body": [
			"SetPlayerLockon(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerLockon"
	},
	"SetPlayerLockonRangeOverride": {
		"body": [
			"SetPlayerLockonRangeOverride(${1:player}, ${2:range})"
		],
		"scope": "lua",
		"prefix": "SetPlayerLockonRangeOverride"
	},
	"SetPlayerMaxArmour": {
		"body": [
			"SetPlayerMaxArmour(${1:player}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPlayerMaxArmour"
	},
	"SetPlayerMayNotEnterAnyVehicle": {
		"body": [
			"SetPlayerMayNotEnterAnyVehicle(${1:player})"
		],
		"scope": "lua",
		"prefix": "SetPlayerMayNotEnterAnyVehicle"
	},
	"SetPlayerMayOnlyEnterThisVehicle": {
		"body": [
			"SetPlayerMayOnlyEnterThisVehicle(${1:player}, ${2:vehicle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerMayOnlyEnterThisVehicle"
	},
	"SetPlayerMeleeWeaponDamageModifier": {
		"body": [
			"SetPlayerMeleeWeaponDamageModifier(${1:player}, ${2:modifier})"
		],
		"scope": "lua",
		"prefix": "SetPlayerMeleeWeaponDamageModifier"
	},
	"SetPlayerMeleeWeaponDefenseModifier": {
		"body": [
			"SetPlayerMeleeWeaponDefenseModifier(${1:player}, ${2:modifier})"
		],
		"scope": "lua",
		"prefix": "SetPlayerMeleeWeaponDefenseModifier"
	},
	"SetPlayerModel": {
		"body": [
			"SetPlayerModel(${1:player}, ${2:model})"
		],
		"scope": "lua",
		"prefix": "SetPlayerModel"
	},
	"SetPlayerNoiseMultiplier": {
		"body": [
			"SetPlayerNoiseMultiplier(${1:player}, ${2:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetPlayerNoiseMultiplier"
	},
	"SetPlayerpadShakesWhenControllerDisabled": {
		"body": [
			"SetPlayerpadShakesWhenControllerDisabled(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerpadShakesWhenControllerDisabled"
	},
	"SetPlayerParachuteModelOverride": {
		"body": [
			"SetPlayerParachuteModelOverride(${1:player}, ${2:model})"
		],
		"scope": "lua",
		"prefix": "SetPlayerParachuteModelOverride"
	},
	"SetPlayerParachutePackModelOverride": {
		"body": [
			"SetPlayerParachutePackModelOverride(${1:player}, ${2:model})"
		],
		"scope": "lua",
		"prefix": "SetPlayerParachutePackModelOverride"
	},
	"SetPlayerParachutePackTintIndex": {
		"body": [
			"SetPlayerParachutePackTintIndex(${1:player}, ${2:tintIndex})"
		],
		"scope": "lua",
		"prefix": "SetPlayerParachutePackTintIndex"
	},
	"SetPlayerParachuteSmokeTrailColor": {
		"body": [
			"SetPlayerParachuteSmokeTrailColor(${1:player}, ${2:r}, ${3:g}, ${4:b})"
		],
		"scope": "lua",
		"prefix": "SetPlayerParachuteSmokeTrailColor"
	},
	"SetPlayerParachuteTintIndex": {
		"body": [
			"SetPlayerParachuteTintIndex(${1:player}, ${2:tintIndex})"
		],
		"scope": "lua",
		"prefix": "SetPlayerParachuteTintIndex"
	},
	"SetPlayerParachuteVariationOverride": {
		"body": [
			"SetPlayerParachuteVariationOverride(${1:player}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "SetPlayerParachuteVariationOverride"
	},
	"SetPlayerReserveParachuteTintIndex": {
		"body": [
			"SetPlayerReserveParachuteTintIndex(${1:player}, ${2:index})"
		],
		"scope": "lua",
		"prefix": "SetPlayerReserveParachuteTintIndex"
	},
	"SetPlayerResetFlagPreferRearSeats": {
		"body": [
			"SetPlayerResetFlagPreferRearSeats(${1:player}, ${2:flags})"
		],
		"scope": "lua",
		"prefix": "SetPlayerResetFlagPreferRearSeats"
	},
	"SetPlayerRockstarEditorDisabled": {
		"body": [
			"SetPlayerRockstarEditorDisabled(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerRockstarEditorDisabled"
	},
	"SetPlayerRoutingBucket": {
		"body": [
			"SetPlayerRoutingBucket(${1:playerSrc}, ${2:bucket})"
		],
		"scope": "lua",
		"prefix": "SetPlayerRoutingBucket"
	},
	"SetPlayerSimulateAiming": {
		"body": [
			"SetPlayerSimulateAiming(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerSimulateAiming"
	},
	"SetPlayersLastVehicle": {
		"body": [
			"SetPlayersLastVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "SetPlayersLastVehicle"
	},
	"SetPlayerSneakingNoiseMultiplier": {
		"body": [
			"SetPlayerSneakingNoiseMultiplier(${1:player}, ${2:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetPlayerSneakingNoiseMultiplier"
	},
	"SetPlayerSprint": {
		"body": [
			"SetPlayerSprint(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerSprint"
	},
	"SetPlayerStealthPerceptionModifier": {
		"body": [
			"SetPlayerStealthPerceptionModifier(${1:player}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetPlayerStealthPerceptionModifier"
	},
	"SetPlayerSwitchEstablishingShot": {
		"body": [
			"SetPlayerSwitchEstablishingShot(${1:name})"
		],
		"scope": "lua",
		"prefix": "SetPlayerSwitchEstablishingShot"
	},
	"SetPlayerSwitchOutro": {
		"body": [
			"SetPlayerSwitchOutro(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "SetPlayerSwitchOutro"
	},
	"SetPlayerTalkingOverride": {
		"body": [
			"SetPlayerTalkingOverride(${1:player}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetPlayerTalkingOverride"
	},
	"SetPlayerTargetingMode": {
		"body": [
			"SetPlayerTargetingMode(${1:targetMode})"
		],
		"scope": "lua",
		"prefix": "SetPlayerTargetingMode"
	},
	"SetPlayerTargetLevel": {
		"body": [
			"SetPlayerTargetLevel(${1:targetLevel})"
		],
		"scope": "lua",
		"prefix": "SetPlayerTargetLevel"
	},
	"SetPlayerTcmodifierTransition": {
		"body": [
			"SetPlayerTcmodifierTransition(${1:value})"
		],
		"scope": "lua",
		"prefix": "SetPlayerTcmodifierTransition"
	},
	"SetPlayerTeam": {
		"body": [
			"SetPlayerTeam(${1:player}, ${2:team})"
		],
		"scope": "lua",
		"prefix": "SetPlayerTeam"
	},
	"SetPlayerUnderwaterTimeRemaining": {
		"body": [
			"SetPlayerUnderwaterTimeRemaining(${1:player}, ${2:time})"
		],
		"scope": "lua",
		"prefix": "SetPlayerUnderwaterTimeRemaining"
	},
	"SetPlayerVehicleDamageModifier": {
		"body": [
			"SetPlayerVehicleDamageModifier(${1:player}, ${2:modifier})"
		],
		"scope": "lua",
		"prefix": "SetPlayerVehicleDamageModifier"
	},
	"SetPlayerVehicleDefenseModifier": {
		"body": [
			"SetPlayerVehicleDefenseModifier(${1:player}, ${2:modifier})"
		],
		"scope": "lua",
		"prefix": "SetPlayerVehicleDefenseModifier"
	},
	"SetPlayerVisibleLocally": {
		"body": [
			"SetPlayerVisibleLocally(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPlayerVisibleLocally"
	},
	"SetPlayerWantedCentrePosition": {
		"body": [
			"SetPlayerWantedCentrePosition(${1:player}, ${2:position}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "SetPlayerWantedCentrePosition"
	},
	"SetPlayerWantedLevel": {
		"body": [
			"SetPlayerWantedLevel(${1:player}, ${2:wantedLevel}, ${3:disableNoMission})"
		],
		"scope": "lua",
		"prefix": "SetPlayerWantedLevel"
	},
	"SetPlayerWantedLevelNoDrop": {
		"body": [
			"SetPlayerWantedLevelNoDrop(${1:player}, ${2:wantedLevel}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetPlayerWantedLevelNoDrop"
	},
	"SetPlayerWantedLevelNow": {
		"body": [
			"SetPlayerWantedLevelNow(${1:player}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPlayerWantedLevelNow"
	},
	"SetPlayerWeaponDamageModifier": {
		"body": [
			"SetPlayerWeaponDamageModifier(${1:player}, ${2:modifier})"
		],
		"scope": "lua",
		"prefix": "SetPlayerWeaponDamageModifier"
	},
	"SetPlayerWeaponDefenseModifier": {
		"body": [
			"SetPlayerWeaponDefenseModifier(${1:player}, ${2:modifier})"
		],
		"scope": "lua",
		"prefix": "SetPlayerWeaponDefenseModifier"
	},
	"SetPlayerWeaponDefenseModifier_2": {
		"body": [
			"SetPlayerWeaponDefenseModifier_2(${1:player}, ${2:modifier})"
		],
		"scope": "lua",
		"prefix": "SetPlayerWeaponDefenseModifier_2"
	},
	"SetPoliceIgnorePlayer": {
		"body": [
			"SetPoliceIgnorePlayer(${1:player}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPoliceIgnorePlayer"
	},
	"SetPoliceRadarBlips": {
		"body": [
			"SetPoliceRadarBlips(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetPoliceRadarBlips"
	},
	"SetPopControlSphereThisFrame": {
		"body": [
			"SetPopControlSphereThisFrame(${1:x}, ${2:y}, ${3:z}, ${4:min}, ${5:max})"
		],
		"scope": "lua",
		"prefix": "SetPopControlSphereThisFrame"
	},
	"SetPortalSettingsOverride": {
		"body": [
			"SetPortalSettingsOverride(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetPortalSettingsOverride"
	},
	"SetProfileSettingPrologueComplete": {
		"body": [
			"SetProfileSettingPrologueComplete()"
		],
		"scope": "lua",
		"prefix": "SetProfileSettingPrologueComplete"
	},
	"SetRaceTrackRender": {
		"body": [
			"SetRaceTrackRender(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetRaceTrackRender"
	},
	"SetRadarAsExteriorThisFrame": {
		"body": [
			"SetRadarAsExteriorThisFrame()"
		],
		"scope": "lua",
		"prefix": "SetRadarAsExteriorThisFrame"
	},
	"SetRadarAsInteriorThisFrame": {
		"body": [
			"SetRadarAsInteriorThisFrame(${1:interior}, ${2:x}, ${3:y}, ${4:heading}, ${5:zoom})"
		],
		"scope": "lua",
		"prefix": "SetRadarAsInteriorThisFrame"
	},
	"SetRadarZoom": {
		"body": [
			"SetRadarZoom(${1:zoomLevel})"
		],
		"scope": "lua",
		"prefix": "SetRadarZoom"
	},
	"SetRadarZoomPrecise": {
		"body": [
			"SetRadarZoomPrecise(${1:zoom})"
		],
		"scope": "lua",
		"prefix": "SetRadarZoomPrecise"
	},
	"SetRadarZoomToBlip": {
		"body": [
			"SetRadarZoomToBlip(${1:blip}, ${2:zoom})"
		],
		"scope": "lua",
		"prefix": "SetRadarZoomToBlip"
	},
	"SetRadarZoomToDistance": {
		"body": [
			"SetRadarZoomToDistance(${1:zoom})"
		],
		"scope": "lua",
		"prefix": "SetRadarZoomToDistance"
	},
	"SetRadioAutoUnfreeze": {
		"body": [
			"SetRadioAutoUnfreeze(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetRadioAutoUnfreeze"
	},
	"SetRadioFrontendFadeTime": {
		"body": [
			"SetRadioFrontendFadeTime(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetRadioFrontendFadeTime"
	},
	"SetRadioStationMusicOnly": {
		"body": [
			"SetRadioStationMusicOnly(${1:radioStation}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetRadioStationMusicOnly"
	},
	"SetRadioToStationIndex": {
		"body": [
			"SetRadioToStationIndex(${1:radioStation})"
		],
		"scope": "lua",
		"prefix": "SetRadioToStationIndex"
	},
	"SetRadioToStationName": {
		"body": [
			"SetRadioToStationName(${1:stationName})"
		],
		"scope": "lua",
		"prefix": "SetRadioToStationName"
	},
	"SetRadioTrack": {
		"body": [
			"SetRadioTrack(${1:radioStation}, ${2:radioTrack})"
		],
		"scope": "lua",
		"prefix": "SetRadioTrack"
	},
	"SetRadioTrackMix": {
		"body": [
			"SetRadioTrackMix(${1:radioStationName}, ${2:mixName}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetRadioTrackMix"
	},
	"SetRadiusBlipEdge": {
		"body": [
			"SetRadiusBlipEdge(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetRadiusBlipEdge"
	},
	"SetRagdollBlockingFlags": {
		"body": [
			"SetRagdollBlockingFlags(${1:ped}, ${2:flags})"
		],
		"scope": "lua",
		"prefix": "SetRagdollBlockingFlags"
	},
	"SetRainLevel": {
		"body": [
			"SetRainLevel(${1:level})"
		],
		"scope": "lua",
		"prefix": "SetRainLevel"
	},
	"SetRandomBoats": {
		"body": [
			"SetRandomBoats(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetRandomBoats"
	},
	"SetRandomEventFlag": {
		"body": [
			"SetRandomEventFlag(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetRandomEventFlag"
	},
	"SetRandomSeed": {
		"body": [
			"SetRandomSeed(${1:seed})"
		],
		"scope": "lua",
		"prefix": "SetRandomSeed"
	},
	"SetRandomTrains": {
		"body": [
			"SetRandomTrains(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetRandomTrains"
	},
	"SetRandomVehicleDensityMultiplierThisFrame": {
		"body": [
			"SetRandomVehicleDensityMultiplierThisFrame(${1:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetRandomVehicleDensityMultiplierThisFrame"
	},
	"SetRandomWeatherType": {
		"body": [
			"SetRandomWeatherType()"
		],
		"scope": "lua",
		"prefix": "SetRandomWeatherType"
	},
	"SetReducePedModelBudget": {
		"body": [
			"SetReducePedModelBudget(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetReducePedModelBudget"
	},
	"SetReduceVehicleModelBudget": {
		"body": [
			"SetReduceVehicleModelBudget(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetReduceVehicleModelBudget"
	},
	"SetRelationshipBetweenGroups": {
		"body": [
			"SetRelationshipBetweenGroups(${1:relationship}, ${2:group1}, ${3:group2})"
		],
		"scope": "lua",
		"prefix": "SetRelationshipBetweenGroups"
	},
	"SetRelationshipGroupDontAffectWantedLevel": {
		"body": [
			"SetRelationshipGroupDontAffectWantedLevel(${1:group}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetRelationshipGroupDontAffectWantedLevel"
	},
	"SetRelationshipToPlayer": {
		"body": [
			"SetRelationshipToPlayer(${1:player}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetRelationshipToPlayer"
	},
	"SetRenderHdOnly": {
		"body": [
			"SetRenderHdOnly(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetRenderHdOnly"
	},
	"SetRenderTrainAsDerailed": {
		"body": [
			"SetRenderTrainAsDerailed(${1:train}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetRenderTrainAsDerailed"
	},
	"SetResourceKvp": {
		"body": [
			"SetResourceKvp(${1:key}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetResourceKvp"
	},
	"SetResourceKvpFloat": {
		"body": [
			"SetResourceKvpFloat(${1:key}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetResourceKvpFloat"
	},
	"SetResourceKvpInt": {
		"body": [
			"SetResourceKvpInt(${1:key}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetResourceKvpInt"
	},
	"SetRestartCustomPosition": {
		"body": [
			"SetRestartCustomPosition(${1:x}, ${2:y}, ${3:z}, ${4:heading})"
		],
		"scope": "lua",
		"prefix": "SetRestartCustomPosition"
	},
	"SetRichPresence": {
		"body": [
			"SetRichPresence(${1:presenceState})"
		],
		"scope": "lua",
		"prefix": "SetRichPresence"
	},
	"SetRiotModeEnabled": {
		"body": [
			"SetRiotModeEnabled(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetRiotModeEnabled"
	},
	"SetRoadsBackToOriginal": {
		"body": [
			"SetRoadsBackToOriginal(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "SetRoadsBackToOriginal"
	},
	"SetRoadsBackToOriginalInAngledArea": {
		"body": [
			"SetRoadsBackToOriginalInAngledArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:width})"
		],
		"scope": "lua",
		"prefix": "SetRoadsBackToOriginalInAngledArea"
	},
	"SetRoadsInAngledArea": {
		"body": [
			"SetRoadsInAngledArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:width}, ${8:unknown1}, ${9:unknown2}, ${10:unknown3})"
		],
		"scope": "lua",
		"prefix": "SetRoadsInAngledArea"
	},
	"SetRoadsInArea": {
		"body": [
			"SetRoadsInArea(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:nodeEnabled}, ${8:unknown2})"
		],
		"scope": "lua",
		"prefix": "SetRoadsInArea"
	},
	"SetRoutingBucketEntityLockdownMode": {
		"body": [
			"SetRoutingBucketEntityLockdownMode(${1:bucketId}, ${2:mode})"
		],
		"scope": "lua",
		"prefix": "SetRoutingBucketEntityLockdownMode"
	},
	"SetRoutingBucketPopulationEnabled": {
		"body": [
			"SetRoutingBucketPopulationEnabled(${1:bucketId}, ${2:mode})"
		],
		"scope": "lua",
		"prefix": "SetRoutingBucketPopulationEnabled"
	},
	"SetRunSprintMultiplierForPlayer": {
		"body": [
			"SetRunSprintMultiplierForPlayer(${1:player}, ${2:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetRunSprintMultiplierForPlayer"
	},
	"SetRuntimeTextureArgbData": {
		"body": [
			"SetRuntimeTextureArgbData(${1:tex}, ${2:buffer}, ${3:length})"
		],
		"scope": "lua",
		"prefix": "SetRuntimeTextureArgbData"
	},
	"SetRuntimeTexturePixel": {
		"body": [
			"SetRuntimeTexturePixel(${1:tex}, ${2:x}, ${3:y}, ${4:r}, ${5:g}, ${6:b}, ${7:a})"
		],
		"scope": "lua",
		"prefix": "SetRuntimeTexturePixel"
	},
	"SetSaveHouse": {
		"body": [
			"SetSaveHouse(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetSaveHouse"
	},
	"SetSaveMenuActive": {
		"body": [
			"SetSaveMenuActive(${1:ignoreVehicle})"
		],
		"scope": "lua",
		"prefix": "SetSaveMenuActive"
	},
	"SetSaveMigrationTransactionId": {
		"body": [
			"SetSaveMigrationTransactionId(${1:transactionId})"
		],
		"scope": "lua",
		"prefix": "SetSaveMigrationTransactionId"
	},
	"SetScaleformFitRendertarget": {
		"body": [
			"SetScaleformFitRendertarget(${1:scaleformHandle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetScaleformFitRendertarget"
	},
	"SetScaleformMovieAsNoLongerNeeded": {
		"body": [
			"SetScaleformMovieAsNoLongerNeeded(${1:scaleformHandle})"
		],
		"scope": "lua",
		"prefix": "SetScaleformMovieAsNoLongerNeeded"
	},
	"SetScaleformMovieToUseSystemTime": {
		"body": [
			"SetScaleformMovieToUseSystemTime(${1:scaleform}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetScaleformMovieToUseSystemTime"
	},
	"SetScenarioGroupEnabled": {
		"body": [
			"SetScenarioGroupEnabled(${1:scenarioGroup}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetScenarioGroupEnabled"
	},
	"SetScenarioPedDensityMultiplierThisFrame": {
		"body": [
			"SetScenarioPedDensityMultiplierThisFrame(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetScenarioPedDensityMultiplierThisFrame"
	},
	"SetScenarioPedsSpawnInSphereArea": {
		"body": [
			"SetScenarioPedsSpawnInSphereArea(${1:x}, ${2:y}, ${3:z}, ${4:range}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "SetScenarioPedsSpawnInSphereArea"
	},
	"SetScenarioPedsToBeReturnedByNextCommand": {
		"body": [
			"SetScenarioPedsToBeReturnedByNextCommand(${1:value})"
		],
		"scope": "lua",
		"prefix": "SetScenarioPedsToBeReturnedByNextCommand"
	},
	"SetScenarioTypeEnabled": {
		"body": [
			"SetScenarioTypeEnabled(${1:scenarioType}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetScenarioTypeEnabled"
	},
	"SetScriptAsNoLongerNeeded": {
		"body": [
			"SetScriptAsNoLongerNeeded(${1:scriptName})"
		],
		"scope": "lua",
		"prefix": "SetScriptAsNoLongerNeeded"
	},
	"SetScriptedAnimSeatOffset": {
		"body": [
			"SetScriptedAnimSeatOffset(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetScriptedAnimSeatOffset"
	},
	"SetScriptedConversionCoordThisFrame": {
		"body": [
			"SetScriptedConversionCoordThisFrame(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "SetScriptedConversionCoordThisFrame"
	},
	"SetScriptGfxAlign": {
		"body": [
			"SetScriptGfxAlign(${1:horizontalAlign}, ${2:verticalAlign})"
		],
		"scope": "lua",
		"prefix": "SetScriptGfxAlign"
	},
	"SetScriptGfxAlignParams": {
		"body": [
			"SetScriptGfxAlignParams(${1:x}, ${2:y}, ${3:w}, ${4:h})"
		],
		"scope": "lua",
		"prefix": "SetScriptGfxAlignParams"
	},
	"SetScriptGfxDrawBehindPausemenu": {
		"body": [
			"SetScriptGfxDrawBehindPausemenu(${1:flag})"
		],
		"scope": "lua",
		"prefix": "SetScriptGfxDrawBehindPausemenu"
	},
	"SetScriptGfxDrawOrder": {
		"body": [
			"SetScriptGfxDrawOrder(${1:order})"
		],
		"scope": "lua",
		"prefix": "SetScriptGfxDrawOrder"
	},
	"SetScriptUpdateDoorAudio": {
		"body": [
			"SetScriptUpdateDoorAudio(${1:doorHash}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetScriptUpdateDoorAudio"
	},
	"SetScriptVariable_2HudColour": {
		"body": [
			"SetScriptVariable_2HudColour(${1:r}, ${2:g}, ${3:b}, ${4:a})"
		],
		"scope": "lua",
		"prefix": "SetScriptVariable_2HudColour"
	},
	"SetScriptVariableHudColour": {
		"body": [
			"SetScriptVariableHudColour(${1:r}, ${2:g}, ${3:b}, ${4:a})"
		],
		"scope": "lua",
		"prefix": "SetScriptVariableHudColour"
	},
	"SetScriptVehicleGenerator": {
		"body": [
			"SetScriptVehicleGenerator(${1:vehicleGenerator}, ${2:enabled})"
		],
		"scope": "lua",
		"prefix": "SetScriptVehicleGenerator"
	},
	"SetScriptWithNameHashAsNoLongerNeeded": {
		"body": [
			"SetScriptWithNameHashAsNoLongerNeeded(${1:scriptHash})"
		],
		"scope": "lua",
		"prefix": "SetScriptWithNameHashAsNoLongerNeeded"
	},
	"SetSeethrough": {
		"body": [
			"SetSeethrough(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetSeethrough"
	},
	"SetSequenceToRepeat": {
		"body": [
			"SetSequenceToRepeat(${1:taskSequenceId}, ${2:repeat_})"
		],
		"scope": "lua",
		"prefix": "SetSequenceToRepeat"
	},
	"SetSirenWithNoDriver": {
		"body": [
			"SetSirenWithNoDriver(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetSirenWithNoDriver"
	},
	"SetSnakeoilForEntry": {
		"body": [
			"SetSnakeoilForEntry(${1:name}, ${2:path}, ${3:data})"
		],
		"scope": "lua",
		"prefix": "SetSnakeoilForEntry"
	},
	"SetSnowLevel": {
		"body": [
			"SetSnowLevel(${1:level})"
		],
		"scope": "lua",
		"prefix": "SetSnowLevel"
	},
	"SetSocialClubTour": {
		"body": [
			"SetSocialClubTour(${1:name})"
		],
		"scope": "lua",
		"prefix": "SetSocialClubTour"
	},
	"SetSpecialAbility": {
		"body": [
			"SetSpecialAbility(${1:player}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetSpecialAbility"
	},
	"SetSpecialAbilityMultiplier": {
		"body": [
			"SetSpecialAbilityMultiplier(${1:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetSpecialAbilityMultiplier"
	},
	"SetSpecialflightWingRatio": {
		"body": [
			"SetSpecialflightWingRatio(${1:vehicle}, ${2:ratio})"
		],
		"scope": "lua",
		"prefix": "SetSpecialflightWingRatio"
	},
	"SetSrlTime": {
		"body": [
			"SetSrlTime(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetSrlTime"
	},
	"SetStateBagValue": {
		"body": [
			"SetStateBagValue(${1:bagName}, ${2:keyName}, ${3:valueData}, ${4:valueLength}, ${5:replicated})"
		],
		"scope": "lua",
		"prefix": "SetStateBagValue"
	},
	"SetStateOfClosestDoorOfType": {
		"body": [
			"SetStateOfClosestDoorOfType(${1:type}, ${2:x}, ${3:y}, ${4:z}, ${5:locked}, ${6:heading}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "SetStateOfClosestDoorOfType"
	},
	"SetStateOfRayfireMapObject": {
		"body": [
			"SetStateOfRayfireMapObject(${1:object}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetStateOfRayfireMapObject"
	},
	"SetStaticEmitterEnabled": {
		"body": [
			"SetStaticEmitterEnabled(${1:emitterName}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetStaticEmitterEnabled"
	},
	"SetStoreEnabled": {
		"body": [
			"SetStoreEnabled(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetStoreEnabled"
	},
	"SetStreamedTextureDictAsNoLongerNeeded": {
		"body": [
			"SetStreamedTextureDictAsNoLongerNeeded(${1:textureDict})"
		],
		"scope": "lua",
		"prefix": "SetStreamedTextureDictAsNoLongerNeeded"
	},
	"SetStreaming": {
		"body": [
			"SetStreaming(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetStreaming"
	},
	"SetStuntJumpsCanTrigger": {
		"body": [
			"SetStuntJumpsCanTrigger(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetStuntJumpsCanTrigger"
	},
	"SetSubmarineCrushDepths": {
		"body": [
			"SetSubmarineCrushDepths(${1:vehicle}, ${2:toggle}, ${3:depth1}, ${4:depth2}, ${5:depth3})"
		],
		"scope": "lua",
		"prefix": "SetSubmarineCrushDepths"
	},
	"SetSuperJumpThisFrame": {
		"body": [
			"SetSuperJumpThisFrame(${1:player})"
		],
		"scope": "lua",
		"prefix": "SetSuperJumpThisFrame"
	},
	"SetSwimMultiplierForPlayer": {
		"body": [
			"SetSwimMultiplierForPlayer(${1:player}, ${2:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetSwimMultiplierForPlayer"
	},
	"SetSynchronizedAudioEventPositionThisFrame": {
		"body": [
			"SetSynchronizedAudioEventPositionThisFrame(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetSynchronizedAudioEventPositionThisFrame"
	},
	"SetSynchronizedSceneHoldLastFrame": {
		"body": [
			"SetSynchronizedSceneHoldLastFrame(${1:sceneID}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetSynchronizedSceneHoldLastFrame"
	},
	"SetSynchronizedSceneLooped": {
		"body": [
			"SetSynchronizedSceneLooped(${1:sceneID}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetSynchronizedSceneLooped"
	},
	"SetSynchronizedSceneOrigin": {
		"body": [
			"SetSynchronizedSceneOrigin(${1:sceneID}, ${2:x}, ${3:y}, ${4:z}, ${5:roll}, ${6:pitch}, ${7:yaw}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "SetSynchronizedSceneOrigin"
	},
	"SetSynchronizedScenePhase": {
		"body": [
			"SetSynchronizedScenePhase(${1:sceneID}, ${2:phase})"
		],
		"scope": "lua",
		"prefix": "SetSynchronizedScenePhase"
	},
	"SetSynchronizedSceneRate": {
		"body": [
			"SetSynchronizedSceneRate(${1:sceneID}, ${2:rate})"
		],
		"scope": "lua",
		"prefix": "SetSynchronizedSceneRate"
	},
	"SetTaskMoveNetworkSignalBool": {
		"body": [
			"SetTaskMoveNetworkSignalBool(${1:ped}, ${2:signalName}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "SetTaskMoveNetworkSignalBool"
	},
	"SetTaskMoveNetworkSignalFloat": {
		"body": [
			"SetTaskMoveNetworkSignalFloat(${1:ped}, ${2:signalName}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "SetTaskMoveNetworkSignalFloat"
	},
	"SetTaskMoveNetworkSignalFloat_2": {
		"body": [
			"SetTaskMoveNetworkSignalFloat_2(${1:ped}, ${2:signalName}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "SetTaskMoveNetworkSignalFloat_2"
	},
	"SetTaskVehicleChaseBehaviorFlag": {
		"body": [
			"SetTaskVehicleChaseBehaviorFlag(${1:ped}, ${2:flag}, ${3:set})"
		],
		"scope": "lua",
		"prefix": "SetTaskVehicleChaseBehaviorFlag"
	},
	"SetTaskVehicleChaseIdealPursuitDistance": {
		"body": [
			"SetTaskVehicleChaseIdealPursuitDistance(${1:ped}, ${2:distance})"
		],
		"scope": "lua",
		"prefix": "SetTaskVehicleChaseIdealPursuitDistance"
	},
	"SetTaskVehicleGotoPlaneMinHeightAboveTerrain": {
		"body": [
			"SetTaskVehicleGotoPlaneMinHeightAboveTerrain(${1:plane}, ${2:height})"
		],
		"scope": "lua",
		"prefix": "SetTaskVehicleGotoPlaneMinHeightAboveTerrain"
	},
	"SetTaxiLights": {
		"body": [
			"SetTaxiLights(${1:vehicle}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetTaxiLights"
	},
	"SetTeamPickupObject": {
		"body": [
			"SetTeamPickupObject(${1:object}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetTeamPickupObject"
	},
	"SetTextCentre": {
		"body": [
			"SetTextCentre(${1:align})"
		],
		"scope": "lua",
		"prefix": "SetTextCentre"
	},
	"SetTextChatEnabled": {
		"body": [
			"SetTextChatEnabled(${1:enabled})"
		],
		"scope": "lua",
		"prefix": "SetTextChatEnabled"
	},
	"SetTextChatUnk": {
		"body": [
			"SetTextChatUnk(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetTextChatUnk"
	},
	"SetTextColour": {
		"body": [
			"SetTextColour(${1:red}, ${2:green}, ${3:blue}, ${4:alpha})"
		],
		"scope": "lua",
		"prefix": "SetTextColour"
	},
	"SetTextDropShadow": {
		"body": [
			"SetTextDropShadow()"
		],
		"scope": "lua",
		"prefix": "SetTextDropShadow"
	},
	"SetTextDropshadow": {
		"body": [
			"SetTextDropshadow(${1:distance}, ${2:r}, ${3:g}, ${4:b}, ${5:a})"
		],
		"scope": "lua",
		"prefix": "SetTextDropshadow"
	},
	"SetTextEdge": {
		"body": [
			"SetTextEdge(${1:p0}, ${2:r}, ${3:g}, ${4:b}, ${5:a})"
		],
		"scope": "lua",
		"prefix": "SetTextEdge"
	},
	"SetTextFont": {
		"body": [
			"SetTextFont(${1:fontType})"
		],
		"scope": "lua",
		"prefix": "SetTextFont"
	},
	"SetTextJustification": {
		"body": [
			"SetTextJustification(${1:justifyType})"
		],
		"scope": "lua",
		"prefix": "SetTextJustification"
	},
	"SetTextLeading": {
		"body": [
			"SetTextLeading(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetTextLeading"
	},
	"SetTextOutline": {
		"body": [
			"SetTextOutline()"
		],
		"scope": "lua",
		"prefix": "SetTextOutline"
	},
	"SetTextProportional": {
		"body": [
			"SetTextProportional(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetTextProportional"
	},
	"SetTextRenderId": {
		"body": [
			"SetTextRenderId(${1:renderId})"
		],
		"scope": "lua",
		"prefix": "SetTextRenderId"
	},
	"SetTextRightJustify": {
		"body": [
			"SetTextRightJustify(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetTextRightJustify"
	},
	"SetTextScale": {
		"body": [
			"SetTextScale(${1:scale}, ${2:size})"
		],
		"scope": "lua",
		"prefix": "SetTextScale"
	},
	"SetTextureVariationOfClosestObjectOfType": {
		"body": [
			"SetTextureVariationOfClosestObjectOfType(${1:x}, ${2:y}, ${3:z}, ${4:radius}, ${5:modelHash}, ${6:textureVariation})"
		],
		"scope": "lua",
		"prefix": "SetTextureVariationOfClosestObjectOfType"
	},
	"SetTextWrap": {
		"body": [
			"SetTextWrap(${1:start}, ${2:end_})"
		],
		"scope": "lua",
		"prefix": "SetTextWrap"
	},
	"SetThirdPersonAimCamNearClipThisUpdate": {
		"body": [
			"SetThirdPersonAimCamNearClipThisUpdate(${1:distance})"
		],
		"scope": "lua",
		"prefix": "SetThirdPersonAimCamNearClipThisUpdate"
	},
	"SetThisScriptCanBePaused": {
		"body": [
			"SetThisScriptCanBePaused(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetThisScriptCanBePaused"
	},
	"SetThisScriptCanRemoveBlipsCreatedByAnyScript": {
		"body": [
			"SetThisScriptCanRemoveBlipsCreatedByAnyScript(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetThisScriptCanRemoveBlipsCreatedByAnyScript"
	},
	"SetThreadPriority": {
		"body": [
			"SetThreadPriority(${1:priority})"
		],
		"scope": "lua",
		"prefix": "SetThreadPriority"
	},
	"SetTimecycleModifier": {
		"body": [
			"SetTimecycleModifier(${1:modifierName})"
		],
		"scope": "lua",
		"prefix": "SetTimecycleModifier"
	},
	"SetTimecycleModifierStrength": {
		"body": [
			"SetTimecycleModifierStrength(${1:strength})"
		],
		"scope": "lua",
		"prefix": "SetTimecycleModifierStrength"
	},
	"Settimera": {
		"body": [
			"Settimera(${1:value})"
		],
		"scope": "lua",
		"prefix": "Settimera"
	},
	"Settimerb": {
		"body": [
			"Settimerb(${1:value})"
		],
		"scope": "lua",
		"prefix": "Settimerb"
	},
	"SetTimeScale": {
		"body": [
			"SetTimeScale(${1:timeScale})"
		],
		"scope": "lua",
		"prefix": "SetTimeScale"
	},
	"SetToggleMinimapHeistIsland": {
		"body": [
			"SetToggleMinimapHeistIsland(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetToggleMinimapHeistIsland"
	},
	"SetTrackedPointInfo": {
		"body": [
			"SetTrackedPointInfo(${1:point}, ${2:x}, ${3:y}, ${4:z}, ${5:radius})"
		],
		"scope": "lua",
		"prefix": "SetTrackedPointInfo"
	},
	"SetTrailerInverseMassScale": {
		"body": [
			"SetTrailerInverseMassScale(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetTrailerInverseMassScale"
	},
	"SetTrailerLegsLowered": {
		"body": [
			"SetTrailerLegsLowered()"
		],
		"scope": "lua",
		"prefix": "SetTrailerLegsLowered"
	},
	"SetTrailerLegsRaised": {
		"body": [
			"SetTrailerLegsRaised(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "SetTrailerLegsRaised"
	},
	"SetTrainCruiseSpeed": {
		"body": [
			"SetTrainCruiseSpeed(${1:train}, ${2:speed})"
		],
		"scope": "lua",
		"prefix": "SetTrainCruiseSpeed"
	},
	"SetTrainDoorOpenRatio": {
		"body": [
			"SetTrainDoorOpenRatio(${1:train}, ${2:doorIndex}, ${3:ratio})"
		],
		"scope": "lua",
		"prefix": "SetTrainDoorOpenRatio"
	},
	"SetTrainsForceDoorsOpen": {
		"body": [
			"SetTrainsForceDoorsOpen(${1:forceOpen})"
		],
		"scope": "lua",
		"prefix": "SetTrainsForceDoorsOpen"
	},
	"SetTrainSpeed": {
		"body": [
			"SetTrainSpeed(${1:train}, ${2:speed})"
		],
		"scope": "lua",
		"prefix": "SetTrainSpeed"
	},
	"SetTrainTrackSpawnFrequency": {
		"body": [
			"SetTrainTrackSpawnFrequency(${1:trackIndex}, ${2:frequency})"
		],
		"scope": "lua",
		"prefix": "SetTrainTrackSpawnFrequency"
	},
	"SetTransitionTimecycleModifier": {
		"body": [
			"SetTransitionTimecycleModifier(${1:modifierName}, ${2:transition})"
		],
		"scope": "lua",
		"prefix": "SetTransitionTimecycleModifier"
	},
	"SetTvAudioFrontend": {
		"body": [
			"SetTvAudioFrontend(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetTvAudioFrontend"
	},
	"SetTvChannel": {
		"body": [
			"SetTvChannel(${1:channel})"
		],
		"scope": "lua",
		"prefix": "SetTvChannel"
	},
	"SetTvChannelPlaylist": {
		"body": [
			"SetTvChannelPlaylist(${1:tvChannel}, ${2:playlistName}, ${3:restart})"
		],
		"scope": "lua",
		"prefix": "SetTvChannelPlaylist"
	},
	"SetTvChannelPlaylistAtHour": {
		"body": [
			"SetTvChannelPlaylistAtHour(${1:tvChannel}, ${2:playlistName}, ${3:hour})"
		],
		"scope": "lua",
		"prefix": "SetTvChannelPlaylistAtHour"
	},
	"SetTvVolume": {
		"body": [
			"SetTvVolume(${1:volume})"
		],
		"scope": "lua",
		"prefix": "SetTvVolume"
	},
	"SetTyreHealth": {
		"body": [
			"SetTyreHealth(${1:vehicle}, ${2:wheelIndex}, ${3:health})"
		],
		"scope": "lua",
		"prefix": "SetTyreHealth"
	},
	"SetTyreSoftnessMultiplier": {
		"body": [
			"SetTyreSoftnessMultiplier(${1:vehicle}, ${2:wheelIndex}, ${3:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetTyreSoftnessMultiplier"
	},
	"SetTyreTractionLossMultiplier": {
		"body": [
			"SetTyreTractionLossMultiplier(${1:vehicle}, ${2:wheelIndex}, ${3:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetTyreTractionLossMultiplier"
	},
	"SetTyreWearMultiplier": {
		"body": [
			"SetTyreWearMultiplier(${1:vehicle}, ${2:wheelIndex}, ${3:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetTyreWearMultiplier"
	},
	"SetUnkBoolN_0x102ForSubmarineVehicleTask": {
		"body": [
			"SetUnkBoolN_0x102ForSubmarineVehicleTask(${1:vehicle}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetUnkBoolN_0x102ForSubmarineVehicleTask"
	},
	"SetUnkFloatN_0x104ForSubmarineVehicleTask": {
		"body": [
			"SetUnkFloatN_0x104ForSubmarineVehicleTask(${1:vehicle}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetUnkFloatN_0x104ForSubmarineVehicleTask"
	},
	"SetUnkGlobalBoolRelatedToDamage": {
		"body": [
			"SetUnkGlobalBoolRelatedToDamage(${1:value})"
		],
		"scope": "lua",
		"prefix": "SetUnkGlobalBoolRelatedToDamage"
	},
	"SetupShopPedApparelQuery": {
		"body": [
			"SetupShopPedApparelQuery(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetupShopPedApparelQuery"
	},
	"SetupShopPedApparelQueryTu": {
		"body": [
			"SetupShopPedApparelQueryTu(${1:character}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:componentId})"
		],
		"scope": "lua",
		"prefix": "SetupShopPedApparelQueryTu"
	},
	"SetupShopPedOutfitQuery": {
		"body": [
			"SetupShopPedOutfitQuery(${1:character}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetupShopPedOutfitQuery"
	},
	"SetUseHiDof": {
		"body": [
			"SetUseHiDof()"
		],
		"scope": "lua",
		"prefix": "SetUseHiDof"
	},
	"SetUseHigherVehicleJumpForce": {
		"body": [
			"SetUseHigherVehicleJumpForce(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetUseHigherVehicleJumpForce"
	},
	"SetUserRadioControlEnabled": {
		"body": [
			"SetUserRadioControlEnabled(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "SetUserRadioControlEnabled"
	},
	"SetVariableOnCutsceneAudio": {
		"body": [
			"SetVariableOnCutsceneAudio(${1:variableName}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetVariableOnCutsceneAudio"
	},
	"SetVariableOnSound": {
		"body": [
			"SetVariableOnSound(${1:soundId}, ${2:variableName}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "SetVariableOnSound"
	},
	"SetVariableOnStream": {
		"body": [
			"SetVariableOnStream(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetVariableOnStream"
	},
	"SetVariableOnUnderWaterStream": {
		"body": [
			"SetVariableOnUnderWaterStream(${1:variableName}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetVariableOnUnderWaterStream"
	},
	"SetVehicleActiveDuringPlayback": {
		"body": [
			"SetVehicleActiveDuringPlayback(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleActiveDuringPlayback"
	},
	"SetVehicleActiveForPedNavigation": {
		"body": [
			"SetVehicleActiveForPedNavigation(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleActiveForPedNavigation"
	},
	"SetVehicleAlarm": {
		"body": [
			"SetVehicleAlarm(${1:vehicle}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetVehicleAlarm"
	},
	"SetVehicleAlarmTimeLeft": {
		"body": [
			"SetVehicleAlarmTimeLeft(${1:vehicle}, ${2:time})"
		],
		"scope": "lua",
		"prefix": "SetVehicleAlarmTimeLeft"
	},
	"SetVehicleAllowNoPassengersLockon": {
		"body": [
			"SetVehicleAllowNoPassengersLockon(${1:veh}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleAllowNoPassengersLockon"
	},
	"SetVehicleAsNoLongerNeeded": {
		"body": [
			"SetVehicleAsNoLongerNeeded(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleAsNoLongerNeeded"
	},
	"SetVehicleAudioBodyDamageFactor": {
		"body": [
			"SetVehicleAudioBodyDamageFactor(${1:vehicle}, ${2:intensity})"
		],
		"scope": "lua",
		"prefix": "SetVehicleAudioBodyDamageFactor"
	},
	"SetVehicleAudioEngineDamageFactor": {
		"body": [
			"SetVehicleAudioEngineDamageFactor(${1:vehicle}, ${2:damageFactor})"
		],
		"scope": "lua",
		"prefix": "SetVehicleAudioEngineDamageFactor"
	},
	"SetVehicleAutomaticallyAttaches": {
		"body": [
			"SetVehicleAutomaticallyAttaches(${1:vehicle}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetVehicleAutomaticallyAttaches"
	},
	"SetVehicleAutoRepairDisabled": {
		"body": [
			"SetVehicleAutoRepairDisabled(${1:vehicle}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetVehicleAutoRepairDisabled"
	},
	"SetVehicleBodyHealth": {
		"body": [
			"SetVehicleBodyHealth(${1:vehicle}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetVehicleBodyHealth"
	},
	"SetVehicleBombCount": {
		"body": [
			"SetVehicleBombCount(${1:aircraft}, ${2:bombCount})"
		],
		"scope": "lua",
		"prefix": "SetVehicleBombCount"
	},
	"SetVehicleBoostActive": {
		"body": [
			"SetVehicleBoostActive(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleBoostActive"
	},
	"SetVehicleBrake": {
		"body": [
			"SetVehicleBrake(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleBrake"
	},
	"SetVehicleBrakeLights": {
		"body": [
			"SetVehicleBrakeLights(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleBrakeLights"
	},
	"SetVehicleBulldozerArmPosition": {
		"body": [
			"SetVehicleBulldozerArmPosition(${1:vehicle}, ${2:position}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetVehicleBulldozerArmPosition"
	},
	"SetVehicleBurnout": {
		"body": [
			"SetVehicleBurnout(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleBurnout"
	},
	"SetVehicleCanBeLockedOn": {
		"body": [
			"SetVehicleCanBeLockedOn(${1:vehicle}, ${2:canBeLockedOn}, ${3:unk})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCanBeLockedOn"
	},
	"SetVehicleCanBeTargetted": {
		"body": [
			"SetVehicleCanBeTargetted(${1:vehicle}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCanBeTargetted"
	},
	"SetVehicleCanBeUsedByFleeingPeds": {
		"body": [
			"SetVehicleCanBeUsedByFleeingPeds(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCanBeUsedByFleeingPeds"
	},
	"SetVehicleCanBeVisiblyDamaged": {
		"body": [
			"SetVehicleCanBeVisiblyDamaged(${1:vehicle}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCanBeVisiblyDamaged"
	},
	"SetVehicleCanBreak": {
		"body": [
			"SetVehicleCanBreak(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCanBreak"
	},
	"SetVehicleCanDeformWheels": {
		"body": [
			"SetVehicleCanDeformWheels(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCanDeformWheels"
	},
	"SetVehicleCanEngineOperateOnFire": {
		"body": [
			"SetVehicleCanEngineOperateOnFire(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCanEngineOperateOnFire"
	},
	"SetVehicleCanLeakOil": {
		"body": [
			"SetVehicleCanLeakOil(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCanLeakOil"
	},
	"SetVehicleCanLeakPetrol": {
		"body": [
			"SetVehicleCanLeakPetrol(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCanLeakPetrol"
	},
	"SetVehicleCanSaveInGarage": {
		"body": [
			"SetVehicleCanSaveInGarage(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCanSaveInGarage"
	},
	"SetVehicleCeilingHeight": {
		"body": [
			"SetVehicleCeilingHeight(${1:vehicle}, ${2:height})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCeilingHeight"
	},
	"SetVehicleCheatPowerIncrease": {
		"body": [
			"SetVehicleCheatPowerIncrease(${1:vehicle}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCheatPowerIncrease"
	},
	"SetVehicleClutch": {
		"body": [
			"SetVehicleClutch(${1:vehicle}, ${2:clutch})"
		],
		"scope": "lua",
		"prefix": "SetVehicleClutch"
	},
	"SetVehicleColourCombination": {
		"body": [
			"SetVehicleColourCombination(${1:vehicle}, ${2:colorCombination})"
		],
		"scope": "lua",
		"prefix": "SetVehicleColourCombination"
	},
	"SetVehicleColours": {
		"body": [
			"SetVehicleColours(${1:vehicle}, ${2:colorPrimary}, ${3:colorSecondary})"
		],
		"scope": "lua",
		"prefix": "SetVehicleColours"
	},
	"SetVehicleControlsInverted": {
		"body": [
			"SetVehicleControlsInverted(${1:vehicle}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetVehicleControlsInverted"
	},
	"SetVehicleCountermeasureCount": {
		"body": [
			"SetVehicleCountermeasureCount(${1:aircraft}, ${2:count})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCountermeasureCount"
	},
	"SetVehicleCurrentRpm": {
		"body": [
			"SetVehicleCurrentRpm(${1:vehicle}, ${2:rpm})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCurrentRpm"
	},
	"SetVehicleCustomPrimaryColour": {
		"body": [
			"SetVehicleCustomPrimaryColour(${1:vehicle}, ${2:r}, ${3:g}, ${4:b})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCustomPrimaryColour"
	},
	"SetVehicleCustomSecondaryColour": {
		"body": [
			"SetVehicleCustomSecondaryColour(${1:vehicle}, ${2:r}, ${3:g}, ${4:b})"
		],
		"scope": "lua",
		"prefix": "SetVehicleCustomSecondaryColour"
	},
	"SetVehicleDamage": {
		"body": [
			"SetVehicleDamage(${1:vehicle}, ${2:xOffset}, ${3:yOffset}, ${4:zOffset}, ${5:damage}, ${6:radius}, ${7:focusOnModel})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDamage"
	},
	"SetVehicleDamageModifier": {
		"body": [
			"SetVehicleDamageModifier(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDamageModifier"
	},
	"SetVehicleDashboardColor": {
		"body": [
			"SetVehicleDashboardColor(${1:vehicle}, ${2:color})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDashboardColor"
	},
	"SetVehicleDeformationFixed": {
		"body": [
			"SetVehicleDeformationFixed(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDeformationFixed"
	},
	"SetVehicleDensityMultiplierThisFrame": {
		"body": [
			"SetVehicleDensityMultiplierThisFrame(${1:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDensityMultiplierThisFrame"
	},
	"SetVehicleDirtLevel": {
		"body": [
			"SetVehicleDirtLevel(${1:vehicle}, ${2:dirtLevel})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDirtLevel"
	},
	"SetVehicleDisableTowing": {
		"body": [
			"SetVehicleDisableTowing(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDisableTowing"
	},
	"SetVehicleDoorBroken": {
		"body": [
			"SetVehicleDoorBroken(${1:vehicle}, ${2:doorIndex}, ${3:deleteDoor})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDoorBroken"
	},
	"SetVehicleDoorCanBreak": {
		"body": [
			"SetVehicleDoorCanBreak(${1:vehicle}, ${2:doorIndex}, ${3:isBreakable})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDoorCanBreak"
	},
	"SetVehicleDoorControl": {
		"body": [
			"SetVehicleDoorControl(${1:vehicle}, ${2:doorIndex}, ${3:speed}, ${4:angle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDoorControl"
	},
	"SetVehicleDoorLatched": {
		"body": [
			"SetVehicleDoorLatched(${1:vehicle}, ${2:doorIndex}, ${3:forceClose}, ${4:lock}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDoorLatched"
	},
	"SetVehicleDoorOpen": {
		"body": [
			"SetVehicleDoorOpen(${1:vehicle}, ${2:doorIndex}, ${3:loose}, ${4:openInstantly})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDoorOpen"
	},
	"SetVehicleDoorShut": {
		"body": [
			"SetVehicleDoorShut(${1:vehicle}, ${2:doorIndex}, ${3:closeInstantly})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDoorShut"
	},
	"SetVehicleDoorsLocked": {
		"body": [
			"SetVehicleDoorsLocked(${1:vehicle}, ${2:doorLockStatus})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDoorsLocked"
	},
	"SetVehicleDoorsLockedForAllPlayers": {
		"body": [
			"SetVehicleDoorsLockedForAllPlayers(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDoorsLockedForAllPlayers"
	},
	"SetVehicleDoorsLockedForNonScriptPlayers": {
		"body": [
			"SetVehicleDoorsLockedForNonScriptPlayers(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDoorsLockedForNonScriptPlayers"
	},
	"SetVehicleDoorsLockedForPlayer": {
		"body": [
			"SetVehicleDoorsLockedForPlayer(${1:vehicle}, ${2:player}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDoorsLockedForPlayer"
	},
	"SetVehicleDoorsLockedForTeam": {
		"body": [
			"SetVehicleDoorsLockedForTeam(${1:vehicle}, ${2:team}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDoorsLockedForTeam"
	},
	"SetVehicleDoorsLockedForUnk": {
		"body": [
			"SetVehicleDoorsLockedForUnk(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDoorsLockedForUnk"
	},
	"SetVehicleDoorsShut": {
		"body": [
			"SetVehicleDoorsShut(${1:vehicle}, ${2:closeInstantly})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDoorsShut"
	},
	"SetVehicleDropsMoneyWhenBlownUp": {
		"body": [
			"SetVehicleDropsMoneyWhenBlownUp(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleDropsMoneyWhenBlownUp"
	},
	"SetVehicleEngineCanDegrade": {
		"body": [
			"SetVehicleEngineCanDegrade(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleEngineCanDegrade"
	},
	"SetVehicleEngineHealth": {
		"body": [
			"SetVehicleEngineHealth(${1:vehicle}, ${2:health})"
		],
		"scope": "lua",
		"prefix": "SetVehicleEngineHealth"
	},
	"SetVehicleEngineOn": {
		"body": [
			"SetVehicleEngineOn(${1:vehicle}, ${2:value}, ${3:instantly}, ${4:disableAutoStart})"
		],
		"scope": "lua",
		"prefix": "SetVehicleEngineOn"
	},
	"SetVehicleEngineTemperature": {
		"body": [
			"SetVehicleEngineTemperature(${1:vehicle}, ${2:temperature})"
		],
		"scope": "lua",
		"prefix": "SetVehicleEngineTemperature"
	},
	"SetVehicleEnveffScale": {
		"body": [
			"SetVehicleEnveffScale(${1:vehicle}, ${2:fade})"
		],
		"scope": "lua",
		"prefix": "SetVehicleEnveffScale"
	},
	"SetVehicleExclusiveDriver": {
		"body": [
			"SetVehicleExclusiveDriver(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleExclusiveDriver"
	},
	"SetVehicleExclusiveDriver_2": {
		"body": [
			"SetVehicleExclusiveDriver_2(${1:vehicle}, ${2:ped}, ${3:index})"
		],
		"scope": "lua",
		"prefix": "SetVehicleExclusiveDriver_2"
	},
	"SetVehicleExplodesOnHighExplosionDamage": {
		"body": [
			"SetVehicleExplodesOnHighExplosionDamage(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleExplodesOnHighExplosionDamage"
	},
	"SetVehicleExtendedRemovalRange": {
		"body": [
			"SetVehicleExtendedRemovalRange(${1:vehicle}, ${2:range})"
		],
		"scope": "lua",
		"prefix": "SetVehicleExtendedRemovalRange"
	},
	"SetVehicleExtra": {
		"body": [
			"SetVehicleExtra(${1:vehicle}, ${2:extraId}, ${3:disable})"
		],
		"scope": "lua",
		"prefix": "SetVehicleExtra"
	},
	"SetVehicleExtraColours": {
		"body": [
			"SetVehicleExtraColours(${1:vehicle}, ${2:pearlescentColor}, ${3:wheelColor})"
		],
		"scope": "lua",
		"prefix": "SetVehicleExtraColours"
	},
	"SetVehicleFixed": {
		"body": [
			"SetVehicleFixed(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleFixed"
	},
	"SetVehicleFlightNozzlePosition": {
		"body": [
			"SetVehicleFlightNozzlePosition(${1:vehicle}, ${2:direction})"
		],
		"scope": "lua",
		"prefix": "SetVehicleFlightNozzlePosition"
	},
	"SetVehicleFlightNozzlePositionImmediate": {
		"body": [
			"SetVehicleFlightNozzlePositionImmediate(${1:vehicle}, ${2:direction})"
		],
		"scope": "lua",
		"prefix": "SetVehicleFlightNozzlePositionImmediate"
	},
	"SetVehicleForceAfterburner": {
		"body": [
			"SetVehicleForceAfterburner(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetVehicleForceAfterburner"
	},
	"SetVehicleForwardSpeed": {
		"body": [
			"SetVehicleForwardSpeed(${1:vehicle}, ${2:speed})"
		],
		"scope": "lua",
		"prefix": "SetVehicleForwardSpeed"
	},
	"SetVehicleFrictionOverride": {
		"body": [
			"SetVehicleFrictionOverride(${1:vehicle}, ${2:friction})"
		],
		"scope": "lua",
		"prefix": "SetVehicleFrictionOverride"
	},
	"SetVehicleFuelLevel": {
		"body": [
			"SetVehicleFuelLevel(${1:vehicle}, ${2:level})"
		],
		"scope": "lua",
		"prefix": "SetVehicleFuelLevel"
	},
	"SetVehicleFullbeam": {
		"body": [
			"SetVehicleFullbeam(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleFullbeam"
	},
	"SetVehicleGeneratesEngineShockingEvents": {
		"body": [
			"SetVehicleGeneratesEngineShockingEvents(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleGeneratesEngineShockingEvents"
	},
	"SetVehicleGravity": {
		"body": [
			"SetVehicleGravity(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleGravity"
	},
	"SetVehicleGravityAmount": {
		"body": [
			"SetVehicleGravityAmount(${1:vehicle}, ${2:gravity})"
		],
		"scope": "lua",
		"prefix": "SetVehicleGravityAmount"
	},
	"SetVehicleHandbrake": {
		"body": [
			"SetVehicleHandbrake(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHandbrake"
	},
	"SetVehicleHandlingField": {
		"body": [
			"SetVehicleHandlingField(${1:vehicle}, ${2:class_}, ${3:fieldName}, ${4:value})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHandlingField"
	},
	"SetVehicleHandlingFloat": {
		"body": [
			"SetVehicleHandlingFloat(${1:vehicle}, ${2:class_}, ${3:fieldName}, ${4:value})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHandlingFloat"
	},
	"SetVehicleHandlingHashForAi": {
		"body": [
			"SetVehicleHandlingHashForAi(${1:vehicle}, ${2:hash})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHandlingHashForAi"
	},
	"SetVehicleHandlingInt": {
		"body": [
			"SetVehicleHandlingInt(${1:vehicle}, ${2:class_}, ${3:fieldName}, ${4:value})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHandlingInt"
	},
	"SetVehicleHandlingVector": {
		"body": [
			"SetVehicleHandlingVector(${1:vehicle}, ${2:class_}, ${3:fieldName}, ${4:value})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHandlingVector"
	},
	"SetVehicleHasBeenDrivenFlag": {
		"body": [
			"SetVehicleHasBeenDrivenFlag(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHasBeenDrivenFlag"
	},
	"SetVehicleHasBeenOwnedByPlayer": {
		"body": [
			"SetVehicleHasBeenOwnedByPlayer(${1:vehicle}, ${2:owned})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHasBeenOwnedByPlayer"
	},
	"SetVehicleHasMutedSirens": {
		"body": [
			"SetVehicleHasMutedSirens(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHasMutedSirens"
	},
	"SetVehicleHasStrongAxles": {
		"body": [
			"SetVehicleHasStrongAxles(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHasStrongAxles"
	},
	"SetVehicleHasUnbreakableLights": {
		"body": [
			"SetVehicleHasUnbreakableLights(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHasUnbreakableLights"
	},
	"SetVehicleHighGear": {
		"body": [
			"SetVehicleHighGear(${1:vehicle}, ${2:gear})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHighGear"
	},
	"SetVehicleHornVariation": {
		"body": [
			"SetVehicleHornVariation(${1:vehicle}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHornVariation"
	},
	"SetVehicleHoverTransformActive": {
		"body": [
			"SetVehicleHoverTransformActive(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHoverTransformActive"
	},
	"SetVehicleHoverTransformEnabled": {
		"body": [
			"SetVehicleHoverTransformEnabled(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHoverTransformEnabled"
	},
	"SetVehicleHoverTransformPercentage": {
		"body": [
			"SetVehicleHoverTransformPercentage(${1:vehicle}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHoverTransformPercentage"
	},
	"SetVehicleHoverTransformRatio": {
		"body": [
			"SetVehicleHoverTransformRatio(${1:vehicle}, ${2:ratio})"
		],
		"scope": "lua",
		"prefix": "SetVehicleHoverTransformRatio"
	},
	"SetVehicleInactiveDuringPlayback": {
		"body": [
			"SetVehicleInactiveDuringPlayback(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleInactiveDuringPlayback"
	},
	"SetVehicleIndicatorLights": {
		"body": [
			"SetVehicleIndicatorLights(${1:vehicle}, ${2:turnSignal}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleIndicatorLights"
	},
	"SetVehicleIndividualDoorsLocked": {
		"body": [
			"SetVehicleIndividualDoorsLocked(${1:vehicle}, ${2:doorIndex}, ${3:destroyType})"
		],
		"scope": "lua",
		"prefix": "SetVehicleIndividualDoorsLocked"
	},
	"SetVehicleInteriorColor": {
		"body": [
			"SetVehicleInteriorColor(${1:vehicle}, ${2:color})"
		],
		"scope": "lua",
		"prefix": "SetVehicleInteriorColor"
	},
	"SetVehicleInteriorlight": {
		"body": [
			"SetVehicleInteriorlight(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleInteriorlight"
	},
	"SetVehicleIsConsideredByPlayer": {
		"body": [
			"SetVehicleIsConsideredByPlayer(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleIsConsideredByPlayer"
	},
	"SetVehicleIsRacing": {
		"body": [
			"SetVehicleIsRacing(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleIsRacing"
	},
	"SetVehicleIsStolen": {
		"body": [
			"SetVehicleIsStolen(${1:vehicle}, ${2:isStolen})"
		],
		"scope": "lua",
		"prefix": "SetVehicleIsStolen"
	},
	"SetVehicleIsWanted": {
		"body": [
			"SetVehicleIsWanted(${1:vehicle}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetVehicleIsWanted"
	},
	"SetVehicleJetEngineOn": {
		"body": [
			"SetVehicleJetEngineOn(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleJetEngineOn"
	},
	"SetVehicleKersAllowed": {
		"body": [
			"SetVehicleKersAllowed(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleKersAllowed"
	},
	"SetVehicleLightMultiplier": {
		"body": [
			"SetVehicleLightMultiplier(${1:vehicle}, ${2:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetVehicleLightMultiplier"
	},
	"SetVehicleLights": {
		"body": [
			"SetVehicleLights(${1:vehicle}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetVehicleLights"
	},
	"SetVehicleLightsMode": {
		"body": [
			"SetVehicleLightsMode(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetVehicleLightsMode"
	},
	"SetVehicleLivery": {
		"body": [
			"SetVehicleLivery(${1:vehicle}, ${2:livery})"
		],
		"scope": "lua",
		"prefix": "SetVehicleLivery"
	},
	"SetVehicleLodMultiplier": {
		"body": [
			"SetVehicleLodMultiplier(${1:vehicle}, ${2:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetVehicleLodMultiplier"
	},
	"SetVehicleMaxSpeed": {
		"body": [
			"SetVehicleMaxSpeed(${1:vehicle}, ${2:speed})"
		],
		"scope": "lua",
		"prefix": "SetVehicleMaxSpeed"
	},
	"SetVehicleMod": {
		"body": [
			"SetVehicleMod(${1:vehicle}, ${2:modType}, ${3:modIndex}, ${4:customTires})"
		],
		"scope": "lua",
		"prefix": "SetVehicleMod"
	},
	"SetVehicleModColor_1": {
		"body": [
			"SetVehicleModColor_1(${1:vehicle}, ${2:paintType}, ${3:color}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetVehicleModColor_1"
	},
	"SetVehicleModColor_2": {
		"body": [
			"SetVehicleModColor_2(${1:vehicle}, ${2:paintType}, ${3:color})"
		],
		"scope": "lua",
		"prefix": "SetVehicleModColor_2"
	},
	"SetVehicleModelIsSuppressed": {
		"body": [
			"SetVehicleModelIsSuppressed(${1:model}, ${2:suppressed})"
		],
		"scope": "lua",
		"prefix": "SetVehicleModelIsSuppressed"
	},
	"SetVehicleModKit": {
		"body": [
			"SetVehicleModKit(${1:vehicle}, ${2:modKit})"
		],
		"scope": "lua",
		"prefix": "SetVehicleModKit"
	},
	"SetVehicleNameDebug": {
		"body": [
			"SetVehicleNameDebug(${1:vehicle}, ${2:name})"
		],
		"scope": "lua",
		"prefix": "SetVehicleNameDebug"
	},
	"SetVehicleNeedsToBeHotwired": {
		"body": [
			"SetVehicleNeedsToBeHotwired(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleNeedsToBeHotwired"
	},
	"SetVehicleNeonLightEnabled": {
		"body": [
			"SetVehicleNeonLightEnabled(${1:vehicle}, ${2:index}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleNeonLightEnabled"
	},
	"SetVehicleNeonLightsColor_2": {
		"body": [
			"SetVehicleNeonLightsColor_2(${1:vehicle}, ${2:color})"
		],
		"scope": "lua",
		"prefix": "SetVehicleNeonLightsColor_2"
	},
	"SetVehicleNeonLightsColour": {
		"body": [
			"SetVehicleNeonLightsColour(${1:vehicle}, ${2:r}, ${3:g}, ${4:b})"
		],
		"scope": "lua",
		"prefix": "SetVehicleNeonLightsColour"
	},
	"SetVehicleNitroEnabled": {
		"body": [
			"SetVehicleNitroEnabled(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleNitroEnabled"
	},
	"SetVehicleNumberPlateText": {
		"body": [
			"SetVehicleNumberPlateText(${1:vehicle}, ${2:plateText})"
		],
		"scope": "lua",
		"prefix": "SetVehicleNumberPlateText"
	},
	"SetVehicleNumberPlateTextIndex": {
		"body": [
			"SetVehicleNumberPlateTextIndex(${1:vehicle}, ${2:plateIndex})"
		],
		"scope": "lua",
		"prefix": "SetVehicleNumberPlateTextIndex"
	},
	"SetVehicleOilLevel": {
		"body": [
			"SetVehicleOilLevel(${1:vehicle}, ${2:level})"
		],
		"scope": "lua",
		"prefix": "SetVehicleOilLevel"
	},
	"SetVehicleOnGroundProperly": {
		"body": [
			"SetVehicleOnGroundProperly(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleOnGroundProperly"
	},
	"SetVehicleOutOfControl": {
		"body": [
			"SetVehicleOutOfControl(${1:vehicle}, ${2:killDriver}, ${3:explodeOnImpact})"
		],
		"scope": "lua",
		"prefix": "SetVehicleOutOfControl"
	},
	"SetVehicleParachuteActive": {
		"body": [
			"SetVehicleParachuteActive(${1:vehicle}, ${2:active})"
		],
		"scope": "lua",
		"prefix": "SetVehicleParachuteActive"
	},
	"SetVehicleParachuteModel": {
		"body": [
			"SetVehicleParachuteModel(${1:vehicle}, ${2:modelHash})"
		],
		"scope": "lua",
		"prefix": "SetVehicleParachuteModel"
	},
	"SetVehicleParachuteTextureVariatiion": {
		"body": [
			"SetVehicleParachuteTextureVariatiion(${1:vehicle}, ${2:textureVariation})"
		],
		"scope": "lua",
		"prefix": "SetVehicleParachuteTextureVariatiion"
	},
	"SetVehiclePetrolTankHealth": {
		"body": [
			"SetVehiclePetrolTankHealth(${1:vehicle}, ${2:health})"
		],
		"scope": "lua",
		"prefix": "SetVehiclePetrolTankHealth"
	},
	"SetVehiclePopulationBudget": {
		"body": [
			"SetVehiclePopulationBudget(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetVehiclePopulationBudget"
	},
	"SetVehicleProvidesCover": {
		"body": [
			"SetVehicleProvidesCover(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleProvidesCover"
	},
	"SetVehicleRadioEnabled": {
		"body": [
			"SetVehicleRadioEnabled(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleRadioEnabled"
	},
	"SetVehicleRadioLoud": {
		"body": [
			"SetVehicleRadioLoud(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleRadioLoud"
	},
	"SetVehicleRampLaunchModifier": {
		"body": [
			"SetVehicleRampLaunchModifier(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetVehicleRampLaunchModifier"
	},
	"SetVehicleRampSidewaysLaunchMotion": {
		"body": [
			"SetVehicleRampSidewaysLaunchMotion(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleRampSidewaysLaunchMotion"
	},
	"SetVehicleRampUpwardsLaunchMotion": {
		"body": [
			"SetVehicleRampUpwardsLaunchMotion(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleRampUpwardsLaunchMotion"
	},
	"SetVehicleReceivesRampDamage": {
		"body": [
			"SetVehicleReceivesRampDamage(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleReceivesRampDamage"
	},
	"SetVehicleReduceGrip": {
		"body": [
			"SetVehicleReduceGrip(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleReduceGrip"
	},
	"SetVehicleReduceTraction": {
		"body": [
			"SetVehicleReduceTraction(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleReduceTraction"
	},
	"SetVehicleRocketBoostActive": {
		"body": [
			"SetVehicleRocketBoostActive(${1:vehicle}, ${2:active})"
		],
		"scope": "lua",
		"prefix": "SetVehicleRocketBoostActive"
	},
	"SetVehicleRocketBoostPercentage": {
		"body": [
			"SetVehicleRocketBoostPercentage(${1:vehicle}, ${2:percentage})"
		],
		"scope": "lua",
		"prefix": "SetVehicleRocketBoostPercentage"
	},
	"SetVehicleRocketBoostRefillTime": {
		"body": [
			"SetVehicleRocketBoostRefillTime(${1:vehicle}, ${2:time})"
		],
		"scope": "lua",
		"prefix": "SetVehicleRocketBoostRefillTime"
	},
	"SetVehicleRoofLivery": {
		"body": [
			"SetVehicleRoofLivery(${1:vehicle}, ${2:livery})"
		],
		"scope": "lua",
		"prefix": "SetVehicleRoofLivery"
	},
	"SetVehicleRudderBroken": {
		"body": [
			"SetVehicleRudderBroken(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleRudderBroken"
	},
	"SetVehicleSearchlight": {
		"body": [
			"SetVehicleSearchlight(${1:heli}, ${2:toggle}, ${3:canBeUsedByAI})"
		],
		"scope": "lua",
		"prefix": "SetVehicleSearchlight"
	},
	"SetVehicleShadowEffect": {
		"body": [
			"SetVehicleShadowEffect(${1:vehicle}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetVehicleShadowEffect"
	},
	"SetVehicleShootAtTarget": {
		"body": [
			"SetVehicleShootAtTarget(${1:driver}, ${2:entity}, ${3:xTarget}, ${4:yTarget}, ${5:zTarget})"
		],
		"scope": "lua",
		"prefix": "SetVehicleShootAtTarget"
	},
	"SetVehicleSilent": {
		"body": [
			"SetVehicleSilent(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleSilent"
	},
	"SetVehicleSiren": {
		"body": [
			"SetVehicleSiren(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleSiren"
	},
	"SetVehicleSt": {
		"body": [
			"SetVehicleSt(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleSt"
	},
	"SetVehicleSteerBias": {
		"body": [
			"SetVehicleSteerBias(${1:vehicle}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetVehicleSteerBias"
	},
	"SetVehicleSteeringAngle": {
		"body": [
			"SetVehicleSteeringAngle(${1:vehicle}, ${2:angle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleSteeringAngle"
	},
	"SetVehicleSteeringBiasScalar": {
		"body": [
			"SetVehicleSteeringBiasScalar(${1:vehicle}, ${2:scalar})"
		],
		"scope": "lua",
		"prefix": "SetVehicleSteeringBiasScalar"
	},
	"SetVehicleSteeringScale": {
		"body": [
			"SetVehicleSteeringScale(${1:vehicle}, ${2:scale})"
		],
		"scope": "lua",
		"prefix": "SetVehicleSteeringScale"
	},
	"SetVehicleStrong": {
		"body": [
			"SetVehicleStrong(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleStrong"
	},
	"SetVehicleSuspensionHeight": {
		"body": [
			"SetVehicleSuspensionHeight(${1:vehicle}, ${2:newHeight})"
		],
		"scope": "lua",
		"prefix": "SetVehicleSuspensionHeight"
	},
	"SetVehicleTankTurretPosition": {
		"body": [
			"SetVehicleTankTurretPosition(${1:vehicle}, ${2:position}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SetVehicleTankTurretPosition"
	},
	"SetVehicleTimedExplosion": {
		"body": [
			"SetVehicleTimedExplosion(${1:vehicle}, ${2:ped}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleTimedExplosion"
	},
	"SetVehicleTowTruckArmPosition": {
		"body": [
			"SetVehicleTowTruckArmPosition(${1:vehicle}, ${2:position})"
		],
		"scope": "lua",
		"prefix": "SetVehicleTowTruckArmPosition"
	},
	"SetVehicleTurboPressure": {
		"body": [
			"SetVehicleTurboPressure(${1:vehicle}, ${2:pressure})"
		],
		"scope": "lua",
		"prefix": "SetVehicleTurboPressure"
	},
	"SetVehicleTurretSpeedThisFrame": {
		"body": [
			"SetVehicleTurretSpeedThisFrame(${1:vehicle}, ${2:speed})"
		],
		"scope": "lua",
		"prefix": "SetVehicleTurretSpeedThisFrame"
	},
	"SetVehicleTurretUnk": {
		"body": [
			"SetVehicleTurretUnk(${1:vehicle}, ${2:index}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleTurretUnk"
	},
	"SetVehicleTyreBurst": {
		"body": [
			"SetVehicleTyreBurst(${1:vehicle}, ${2:index}, ${3:onRim}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetVehicleTyreBurst"
	},
	"SetVehicleTyreFixed": {
		"body": [
			"SetVehicleTyreFixed(${1:vehicle}, ${2:tyreIndex})"
		],
		"scope": "lua",
		"prefix": "SetVehicleTyreFixed"
	},
	"SetVehicleTyresCanBurst": {
		"body": [
			"SetVehicleTyresCanBurst(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleTyresCanBurst"
	},
	"SetVehicleTyreSmokeColor": {
		"body": [
			"SetVehicleTyreSmokeColor(${1:vehicle}, ${2:r}, ${3:g}, ${4:b})"
		],
		"scope": "lua",
		"prefix": "SetVehicleTyreSmokeColor"
	},
	"SetVehicleUndriveable": {
		"body": [
			"SetVehicleUndriveable(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleUndriveable"
	},
	"SetVehicleUnkDamageMultiplier": {
		"body": [
			"SetVehicleUnkDamageMultiplier(${1:vehicle}, ${2:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetVehicleUnkDamageMultiplier"
	},
	"SetVehicleUseAlternateHandling": {
		"body": [
			"SetVehicleUseAlternateHandling(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleUseAlternateHandling"
	},
	"SetVehicleUseCutsceneWheelCompression": {
		"body": [
			"SetVehicleUseCutsceneWheelCompression(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "SetVehicleUseCutsceneWheelCompression"
	},
	"SetVehicleUsePlayerLightSettings": {
		"body": [
			"SetVehicleUsePlayerLightSettings(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleUsePlayerLightSettings"
	},
	"SetVehicleUsesLargeRearRamp": {
		"body": [
			"SetVehicleUsesLargeRearRamp(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleUsesLargeRearRamp"
	},
	"SetVehicleWeaponCapacity": {
		"body": [
			"SetVehicleWeaponCapacity(${1:vehicle}, ${2:weaponIndex}, ${3:capacity})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWeaponCapacity"
	},
	"SetVehicleWeaponsDisabled": {
		"body": [
			"SetVehicleWeaponsDisabled(${1:vehicle}, ${2:weaponSlot})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWeaponsDisabled"
	},
	"SetVehicleWheelBrakePressure": {
		"body": [
			"SetVehicleWheelBrakePressure(${1:vehicle}, ${2:wheelIndex}, ${3:pressure})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelBrakePressure"
	},
	"SetVehicleWheelFlags": {
		"body": [
			"SetVehicleWheelFlags(${1:vehicle}, ${2:wheelIndex}, ${3:flags})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelFlags"
	},
	"SetVehicleWheelHealth": {
		"body": [
			"SetVehicleWheelHealth(${1:vehicle}, ${2:wheelIndex}, ${3:health})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelHealth"
	},
	"SetVehicleWheelieState": {
		"body": [
			"SetVehicleWheelieState(${1:vehicle}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelieState"
	},
	"SetVehicleWheelIsPowered": {
		"body": [
			"SetVehicleWheelIsPowered(${1:vehicle}, ${2:wheelIndex}, ${3:powered})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelIsPowered"
	},
	"SetVehicleWheelPower": {
		"body": [
			"SetVehicleWheelPower(${1:vehicle}, ${2:wheelIndex}, ${3:power})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelPower"
	},
	"SetVehicleWheelRimColliderSize": {
		"body": [
			"SetVehicleWheelRimColliderSize(${1:vehicle}, ${2:wheelIndex}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelRimColliderSize"
	},
	"SetVehicleWheelRotationSpeed": {
		"body": [
			"SetVehicleWheelRotationSpeed(${1:vehicle}, ${2:wheelIndex}, ${3:speed})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelRotationSpeed"
	},
	"SetVehicleWheelsCanBreak": {
		"body": [
			"SetVehicleWheelsCanBreak(${1:vehicle}, ${2:enabled})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelsCanBreak"
	},
	"SetVehicleWheelsCanBreakOffWhenBlowUp": {
		"body": [
			"SetVehicleWheelsCanBreakOffWhenBlowUp(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelsCanBreakOffWhenBlowUp"
	},
	"SetVehicleWheelsDealDamage": {
		"body": [
			"SetVehicleWheelsDealDamage(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelsDealDamage"
	},
	"SetVehicleWheelSize": {
		"body": [
			"SetVehicleWheelSize(${1:vehicle}, ${2:size})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelSize"
	},
	"SetVehicleWheelTireColliderSize": {
		"body": [
			"SetVehicleWheelTireColliderSize(${1:vehicle}, ${2:wheelIndex}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelTireColliderSize"
	},
	"SetVehicleWheelTireColliderWidth": {
		"body": [
			"SetVehicleWheelTireColliderWidth(${1:vehicle}, ${2:wheelIndex}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelTireColliderWidth"
	},
	"SetVehicleWheelTractionVectorLength": {
		"body": [
			"SetVehicleWheelTractionVectorLength(${1:vehicle}, ${2:wheelIndex}, ${3:length})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelTractionVectorLength"
	},
	"SetVehicleWheelType": {
		"body": [
			"SetVehicleWheelType(${1:vehicle}, ${2:WheelType})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelType"
	},
	"SetVehicleWheelWidth": {
		"body": [
			"SetVehicleWheelWidth(${1:vehicle}, ${2:width})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelWidth"
	},
	"SetVehicleWheelXOffset": {
		"body": [
			"SetVehicleWheelXOffset(${1:vehicle}, ${2:wheelIndex}, ${3:offset})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelXOffset"
	},
	"SetVehicleWheelYRotation": {
		"body": [
			"SetVehicleWheelYRotation(${1:vehicle}, ${2:wheelIndex}, ${3:value})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWheelYRotation"
	},
	"SetVehicleWindowTint": {
		"body": [
			"SetVehicleWindowTint(${1:vehicle}, ${2:tint})"
		],
		"scope": "lua",
		"prefix": "SetVehicleWindowTint"
	},
	"SetVehicleXenonLightsColor": {
		"body": [
			"SetVehicleXenonLightsColor(${1:vehicle}, ${2:color})"
		],
		"scope": "lua",
		"prefix": "SetVehicleXenonLightsColor"
	},
	"SetVehRadioStation": {
		"body": [
			"SetVehRadioStation(${1:vehicle}, ${2:radioStation})"
		],
		"scope": "lua",
		"prefix": "SetVehRadioStation"
	},
	"SetVisualSettingFloat": {
		"body": [
			"SetVisualSettingFloat(${1:name}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "SetVisualSettingFloat"
	},
	"SetWantedLevelDifficulty": {
		"body": [
			"SetWantedLevelDifficulty(${1:player}, ${2:difficulty})"
		],
		"scope": "lua",
		"prefix": "SetWantedLevelDifficulty"
	},
	"SetWantedLevelMultiplier": {
		"body": [
			"SetWantedLevelMultiplier(${1:multiplier})"
		],
		"scope": "lua",
		"prefix": "SetWantedLevelMultiplier"
	},
	"SetWarningMessage": {
		"body": [
			"SetWarningMessage(${1:entryLine1}, ${2:instructionalKey}, ${3:entryLine2}, ${4:p3}, ${5:p4}, ${6:showBg}, ${7:p8})"
		],
		"scope": "lua",
		"prefix": "SetWarningMessage"
	},
	"SetWarningMessageListRow": {
		"body": [
			"SetWarningMessageListRow(${1:index}, ${2:name}, ${3:cash}, ${4:rp}, ${5:lvl}, ${6:colour})"
		],
		"scope": "lua",
		"prefix": "SetWarningMessageListRow"
	},
	"SetWarningMessageWithAlert": {
		"body": [
			"SetWarningMessageWithAlert(${1:labelTitle}, ${2:labelMsg}, ${3:p2}, ${4:p3}, ${5:labelMsg2}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:background}, ${12:errorCode})"
		],
		"scope": "lua",
		"prefix": "SetWarningMessageWithAlert"
	},
	"SetWarningMessageWithHeader": {
		"body": [
			"SetWarningMessageWithHeader(${1:titleMsg}, ${2:entryLine1}, ${3:flags}, ${4:promptMsg}, ${5:p4}, ${6:p5}, ${7:background}, ${8:showBg})"
		],
		"scope": "lua",
		"prefix": "SetWarningMessageWithHeader"
	},
	"SetWarningMessageWithHeaderAndSubstringFlags": {
		"body": [
			"SetWarningMessageWithHeaderAndSubstringFlags(${1:entryHeader}, ${2:entryLine1}, ${3:instructionalKey}, ${4:entryLine2}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p9})"
		],
		"scope": "lua",
		"prefix": "SetWarningMessageWithHeaderAndSubstringFlags"
	},
	"SetWarningMessageWithHeaderUnk": {
		"body": [
			"SetWarningMessageWithHeaderUnk(${1:entryHeader}, ${2:entryLine1}, ${3:flags}, ${4:entryLine2}, ${5:p4}, ${6:p5}, ${7:showBg}, ${8:p9}, ${9:p10})"
		],
		"scope": "lua",
		"prefix": "SetWarningMessageWithHeaderUnk"
	},
	"SetWaypointOff": {
		"body": [
			"SetWaypointOff()"
		],
		"scope": "lua",
		"prefix": "SetWaypointOff"
	},
	"SetWeaponAnimationOverride": {
		"body": [
			"SetWeaponAnimationOverride(${1:ped}, ${2:animStyle})"
		],
		"scope": "lua",
		"prefix": "SetWeaponAnimationOverride"
	},
	"SetWeaponDamageModifierThisFrame": {
		"body": [
			"SetWeaponDamageModifierThisFrame(${1:weaponHash}, ${2:damageMultiplier})"
		],
		"scope": "lua",
		"prefix": "SetWeaponDamageModifierThisFrame"
	},
	"SetWeaponObjectLiveryColor": {
		"body": [
			"SetWeaponObjectLiveryColor(${1:weaponObject}, ${2:camoComponentHash}, ${3:colorIndex})"
		],
		"scope": "lua",
		"prefix": "SetWeaponObjectLiveryColor"
	},
	"SetWeaponObjectTintIndex": {
		"body": [
			"SetWeaponObjectTintIndex(${1:weapon}, ${2:tintIndex})"
		],
		"scope": "lua",
		"prefix": "SetWeaponObjectTintIndex"
	},
	"SetWeatherOwnedByNetwork": {
		"body": [
			"SetWeatherOwnedByNetwork(${1:network})"
		],
		"scope": "lua",
		"prefix": "SetWeatherOwnedByNetwork"
	},
	"SetWeatherTypeNow": {
		"body": [
			"SetWeatherTypeNow(${1:weatherType})"
		],
		"scope": "lua",
		"prefix": "SetWeatherTypeNow"
	},
	"SetWeatherTypeNowPersist": {
		"body": [
			"SetWeatherTypeNowPersist(${1:weatherType})"
		],
		"scope": "lua",
		"prefix": "SetWeatherTypeNowPersist"
	},
	"SetWeatherTypeOvertimePersist": {
		"body": [
			"SetWeatherTypeOvertimePersist(${1:weatherType}, ${2:time})"
		],
		"scope": "lua",
		"prefix": "SetWeatherTypeOvertimePersist"
	},
	"SetWeatherTypePersist": {
		"body": [
			"SetWeatherTypePersist(${1:weatherType})"
		],
		"scope": "lua",
		"prefix": "SetWeatherTypePersist"
	},
	"SetWeatherTypeTransition": {
		"body": [
			"SetWeatherTypeTransition(${1:weatherType1}, ${2:weatherType2}, ${3:percentWeather2})"
		],
		"scope": "lua",
		"prefix": "SetWeatherTypeTransition"
	},
	"SetWidescreenBorders": {
		"body": [
			"SetWidescreenBorders(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SetWidescreenBorders"
	},
	"SetWidescreenFormat": {
		"body": [
			"SetWidescreenFormat(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SetWidescreenFormat"
	},
	"SetWind": {
		"body": [
			"SetWind(${1:speed})"
		],
		"scope": "lua",
		"prefix": "SetWind"
	},
	"SetWindDirection": {
		"body": [
			"SetWindDirection(${1:direction})"
		],
		"scope": "lua",
		"prefix": "SetWindDirection"
	},
	"SetWindSpeed": {
		"body": [
			"SetWindSpeed(${1:speed})"
		],
		"scope": "lua",
		"prefix": "SetWindSpeed"
	},
	"SetZoneEnabled": {
		"body": [
			"SetZoneEnabled(${1:zoneId}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "SetZoneEnabled"
	},
	"ShakeCam": {
		"body": [
			"ShakeCam(${1:cam}, ${2:type}, ${3:amplitude})"
		],
		"scope": "lua",
		"prefix": "ShakeCam"
	},
	"ShakeCinematicCam": {
		"body": [
			"ShakeCinematicCam(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "ShakeCinematicCam"
	},
	"ShakeGameplayCam": {
		"body": [
			"ShakeGameplayCam(${1:shakeName}, ${2:intensity})"
		],
		"scope": "lua",
		"prefix": "ShakeGameplayCam"
	},
	"ShakeScriptGlobal": {
		"body": [
			"ShakeScriptGlobal(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "ShakeScriptGlobal"
	},
	"ShiftLeft": {
		"body": [
			"ShiftLeft(${1:value}, ${2:bitShift})"
		],
		"scope": "lua",
		"prefix": "ShiftLeft"
	},
	"ShiftRight": {
		"body": [
			"ShiftRight(${1:value}, ${2:bitShift})"
		],
		"scope": "lua",
		"prefix": "ShiftRight"
	},
	"ShootSingleBulletBetweenCoords": {
		"body": [
			"ShootSingleBulletBetweenCoords(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:damage}, ${8:p7}, ${9:weaponHash}, ${10:ownerPed}, ${11:isAudible}, ${12:isInvisible}, ${13:speed})"
		],
		"scope": "lua",
		"prefix": "ShootSingleBulletBetweenCoords"
	},
	"ShootSingleBulletBetweenCoordsIgnoreEntity": {
		"body": [
			"ShootSingleBulletBetweenCoordsIgnoreEntity(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:damage}, ${8:p7}, ${9:weaponHash}, ${10:ownerPed}, ${11:isAudible}, ${12:isInvisible}, ${13:speed}, ${14:entity})"
		],
		"scope": "lua",
		"prefix": "ShootSingleBulletBetweenCoordsIgnoreEntity"
	},
	"ShootSingleBulletBetweenCoordsIgnoreEntityNew": {
		"body": [
			"ShootSingleBulletBetweenCoordsIgnoreEntityNew(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:damage}, ${8:p7}, ${9:weaponHash}, ${10:ownerPed}, ${11:isAudible}, ${12:isInvisible}, ${13:speed}, ${14:entity}, ${15:p14}, ${16:p15}, ${17:p16}, ${18:p17})"
		],
		"scope": "lua",
		"prefix": "ShootSingleBulletBetweenCoordsIgnoreEntityNew"
	},
	"ShouldUseMetricMeasurements": {
		"body": [
			"ShouldUseMetricMeasurements()"
		],
		"scope": "lua",
		"prefix": "ShouldUseMetricMeasurements"
	},
	"ShowCrewIndicatorOnBlip": {
		"body": [
			"ShowCrewIndicatorOnBlip(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "ShowCrewIndicatorOnBlip"
	},
	"ShowFriendIndicatorOnBlip": {
		"body": [
			"ShowFriendIndicatorOnBlip(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "ShowFriendIndicatorOnBlip"
	},
	"ShowHeadingIndicatorOnBlip": {
		"body": [
			"ShowHeadingIndicatorOnBlip(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "ShowHeadingIndicatorOnBlip"
	},
	"ShowHeightOnBlip": {
		"body": [
			"ShowHeightOnBlip(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "ShowHeightOnBlip"
	},
	"ShowHudComponentThisFrame": {
		"body": [
			"ShowHudComponentThisFrame(${1:id})"
		],
		"scope": "lua",
		"prefix": "ShowHudComponentThisFrame"
	},
	"ShowNumberOnBlip": {
		"body": [
			"ShowNumberOnBlip(${1:blip}, ${2:number})"
		],
		"scope": "lua",
		"prefix": "ShowNumberOnBlip"
	},
	"ShowOutlineIndicatorOnBlip": {
		"body": [
			"ShowOutlineIndicatorOnBlip(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "ShowOutlineIndicatorOnBlip"
	},
	"ShowScriptedHudComponentThisFrame": {
		"body": [
			"ShowScriptedHudComponentThisFrame(${1:id})"
		],
		"scope": "lua",
		"prefix": "ShowScriptedHudComponentThisFrame"
	},
	"ShowSigninUi": {
		"body": [
			"ShowSigninUi()"
		],
		"scope": "lua",
		"prefix": "ShowSigninUi"
	},
	"ShowStartMissionInstructionalButton": {
		"body": [
			"ShowStartMissionInstructionalButton(${1:p0})"
		],
		"scope": "lua",
		"prefix": "ShowStartMissionInstructionalButton"
	},
	"ShowTickOnBlip": {
		"body": [
			"ShowTickOnBlip(${1:blip}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "ShowTickOnBlip"
	},
	"ShutdownAndLaunchSinglePlayerGame": {
		"body": [
			"ShutdownAndLaunchSinglePlayerGame()"
		],
		"scope": "lua",
		"prefix": "ShutdownAndLaunchSinglePlayerGame"
	},
	"ShutdownAndLoadMostRecentSave": {
		"body": [
			"ShutdownAndLoadMostRecentSave()"
		],
		"scope": "lua",
		"prefix": "ShutdownAndLoadMostRecentSave"
	},
	"ShutdownCreatorBudget": {
		"body": [
			"ShutdownCreatorBudget()"
		],
		"scope": "lua",
		"prefix": "ShutdownCreatorBudget"
	},
	"ShutdownLoadingScreen": {
		"body": [
			"ShutdownLoadingScreen()"
		],
		"scope": "lua",
		"prefix": "ShutdownLoadingScreen"
	},
	"ShutdownLoadingScreenNui": {
		"body": [
			"ShutdownLoadingScreenNui()"
		],
		"scope": "lua",
		"prefix": "ShutdownLoadingScreenNui"
	},
	"SimulatePlayerInputGait": {
		"body": [
			"SimulatePlayerInputGait(${1:player}, ${2:amount}, ${3:gaitType}, ${4:speed}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "SimulatePlayerInputGait"
	},
	"Sin": {
		"body": [
			"Sin(${1:value})"
		],
		"scope": "lua",
		"prefix": "Sin"
	},
	"SkipRadioForward": {
		"body": [
			"SkipRadioForward()"
		],
		"scope": "lua",
		"prefix": "SkipRadioForward"
	},
	"SkipTimeInPlaybackRecordedVehicle": {
		"body": [
			"SkipTimeInPlaybackRecordedVehicle(${1:vehicle}, ${2:time})"
		],
		"scope": "lua",
		"prefix": "SkipTimeInPlaybackRecordedVehicle"
	},
	"SkipToEndAndStopPlaybackRecordedVehicle": {
		"body": [
			"SkipToEndAndStopPlaybackRecordedVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "SkipToEndAndStopPlaybackRecordedVehicle"
	},
	"SkipToNextScriptedConversationLine": {
		"body": [
			"SkipToNextScriptedConversationLine()"
		],
		"scope": "lua",
		"prefix": "SkipToNextScriptedConversationLine"
	},
	"SlerpNearQuaternion": {
		"body": [
			"SlerpNearQuaternion(${1:t}, ${2:x}, ${3:y}, ${4:z}, ${5:w}, ${6:x1}, ${7:y1}, ${8:z1}, ${9:w1})"
		],
		"scope": "lua",
		"prefix": "SlerpNearQuaternion"
	},
	"SlideObject": {
		"body": [
			"SlideObject(${1:object}, ${2:toX}, ${3:toY}, ${4:toZ}, ${5:speedX}, ${6:speedY}, ${7:speedZ}, ${8:collision})"
		],
		"scope": "lua",
		"prefix": "SlideObject"
	},
	"SmashVehicleWindow": {
		"body": [
			"SmashVehicleWindow(${1:vehicle}, ${2:windowIndex})"
		],
		"scope": "lua",
		"prefix": "SmashVehicleWindow"
	},
	"SoundVehicleHornThisFrame": {
		"body": [
			"SoundVehicleHornThisFrame(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "SoundVehicleHornThisFrame"
	},
	"SpawnpointsCancelSearch": {
		"body": [
			"SpawnpointsCancelSearch()"
		],
		"scope": "lua",
		"prefix": "SpawnpointsCancelSearch"
	},
	"SpawnpointsGetNumSearchResults": {
		"body": [
			"SpawnpointsGetNumSearchResults()"
		],
		"scope": "lua",
		"prefix": "SpawnpointsGetNumSearchResults"
	},
	"SpawnpointsGetSearchResult": {
		"body": [
			"SpawnpointsGetSearchResult(${1:randomInt})"
		],
		"scope": "lua",
		"prefix": "SpawnpointsGetSearchResult"
	},
	"SpawnpointsGetSearchResultFlags": {
		"body": [
			"SpawnpointsGetSearchResultFlags(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SpawnpointsGetSearchResultFlags"
	},
	"SpawnpointsIsSearchActive": {
		"body": [
			"SpawnpointsIsSearchActive()"
		],
		"scope": "lua",
		"prefix": "SpawnpointsIsSearchActive"
	},
	"SpawnpointsIsSearchComplete": {
		"body": [
			"SpawnpointsIsSearchComplete()"
		],
		"scope": "lua",
		"prefix": "SpawnpointsIsSearchComplete"
	},
	"SpawnpointsIsSearchFailed": {
		"body": [
			"SpawnpointsIsSearchFailed()"
		],
		"scope": "lua",
		"prefix": "SpawnpointsIsSearchFailed"
	},
	"SpawnpointsStartSearch": {
		"body": [
			"SpawnpointsStartSearch(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:interiorFlags}, ${7:scale}, ${8:duration})"
		],
		"scope": "lua",
		"prefix": "SpawnpointsStartSearch"
	},
	"SpawnpointsStartSearchInAngledArea": {
		"body": [
			"SpawnpointsStartSearchInAngledArea(${1:x}, ${2:y}, ${3:z}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:interiorFlags}, ${9:scale}, ${10:duration})"
		],
		"scope": "lua",
		"prefix": "SpawnpointsStartSearchInAngledArea"
	},
	"SpecialAbilityActivate": {
		"body": [
			"SpecialAbilityActivate(${1:player})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityActivate"
	},
	"SpecialAbilityChargeAbsolute": {
		"body": [
			"SpecialAbilityChargeAbsolute(${1:player}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityChargeAbsolute"
	},
	"SpecialAbilityChargeContinuous": {
		"body": [
			"SpecialAbilityChargeContinuous(${1:player}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityChargeContinuous"
	},
	"SpecialAbilityChargeLarge": {
		"body": [
			"SpecialAbilityChargeLarge(${1:player}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityChargeLarge"
	},
	"SpecialAbilityChargeMedium": {
		"body": [
			"SpecialAbilityChargeMedium(${1:player}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityChargeMedium"
	},
	"SpecialAbilityChargeNormalized": {
		"body": [
			"SpecialAbilityChargeNormalized(${1:player}, ${2:normalizedValue}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityChargeNormalized"
	},
	"SpecialAbilityChargeOnMissionFailed": {
		"body": [
			"SpecialAbilityChargeOnMissionFailed(${1:player})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityChargeOnMissionFailed"
	},
	"SpecialAbilityChargeSmall": {
		"body": [
			"SpecialAbilityChargeSmall(${1:player}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityChargeSmall"
	},
	"SpecialAbilityDeactivate": {
		"body": [
			"SpecialAbilityDeactivate(${1:player})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityDeactivate"
	},
	"SpecialAbilityDeactivateFast": {
		"body": [
			"SpecialAbilityDeactivateFast(${1:player})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityDeactivateFast"
	},
	"SpecialAbilityDeplete": {
		"body": [
			"SpecialAbilityDeplete(${1:p0})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityDeplete"
	},
	"SpecialAbilityDepleteMeter": {
		"body": [
			"SpecialAbilityDepleteMeter(${1:player}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityDepleteMeter"
	},
	"SpecialAbilityFillMeter": {
		"body": [
			"SpecialAbilityFillMeter(${1:player}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityFillMeter"
	},
	"SpecialAbilityLock": {
		"body": [
			"SpecialAbilityLock(${1:playerModel})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityLock"
	},
	"SpecialAbilityReset": {
		"body": [
			"SpecialAbilityReset(${1:player})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityReset"
	},
	"SpecialAbilityUnlock": {
		"body": [
			"SpecialAbilityUnlock(${1:playerModel})"
		],
		"scope": "lua",
		"prefix": "SpecialAbilityUnlock"
	},
	"Sqrt": {
		"body": [
			"Sqrt(${1:value})"
		],
		"scope": "lua",
		"prefix": "Sqrt"
	},
	"StabiliseEntityAttachedToHeli": {
		"body": [
			"StabiliseEntityAttachedToHeli(${1:vehicle}, ${2:entity}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "StabiliseEntityAttachedToHeli"
	},
	"StartAlarm": {
		"body": [
			"StartAlarm(${1:alarmName}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "StartAlarm"
	},
	"StartAudioScene": {
		"body": [
			"StartAudioScene(${1:scene})"
		],
		"scope": "lua",
		"prefix": "StartAudioScene"
	},
	"StartBenchmarkRecording": {
		"body": [
			"StartBenchmarkRecording()"
		],
		"scope": "lua",
		"prefix": "StartBenchmarkRecording"
	},
	"StartCutscene": {
		"body": [
			"StartCutscene(${1:flags})"
		],
		"scope": "lua",
		"prefix": "StartCutscene"
	},
	"StartCutsceneAtCoords": {
		"body": [
			"StartCutsceneAtCoords(${1:x}, ${2:y}, ${3:z}, ${4:flags})"
		],
		"scope": "lua",
		"prefix": "StartCutsceneAtCoords"
	},
	"StartEntityFire": {
		"body": [
			"StartEntityFire(${1:entity})"
		],
		"scope": "lua",
		"prefix": "StartEntityFire"
	},
	"StartExpensiveSynchronousShapeTestLosProbe": {
		"body": [
			"StartExpensiveSynchronousShapeTestLosProbe(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:flags}, ${8:entity}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "StartExpensiveSynchronousShapeTestLosProbe"
	},
	"StartFindKvp": {
		"body": [
			"StartFindKvp(${1:prefix})"
		],
		"scope": "lua",
		"prefix": "StartFindKvp"
	},
	"StartFiringAmnesty": {
		"body": [
			"StartFiringAmnesty(${1:duration})"
		],
		"scope": "lua",
		"prefix": "StartFiringAmnesty"
	},
	"StartGpsCustomRoute": {
		"body": [
			"StartGpsCustomRoute(${1:hudColor}, ${2:displayOnFoot}, ${3:followPlayer})"
		],
		"scope": "lua",
		"prefix": "StartGpsCustomRoute"
	},
	"StartGpsMultiRoute": {
		"body": [
			"StartGpsMultiRoute(${1:hudColor}, ${2:routeFromPlayer}, ${3:displayOnFoot})"
		],
		"scope": "lua",
		"prefix": "StartGpsMultiRoute"
	},
	"StartNetworkedParticleFxLoopedOnEntity": {
		"body": [
			"StartNetworkedParticleFxLoopedOnEntity(${1:effectName}, ${2:entity}, ${3:xOffset}, ${4:yOffset}, ${5:zOffset}, ${6:xRot}, ${7:yRot}, ${8:zRot}, ${9:scale}, ${10:xAxis}, ${11:yAxis}, ${12:zAxis})"
		],
		"scope": "lua",
		"prefix": "StartNetworkedParticleFxLoopedOnEntity"
	},
	"StartNetworkedParticleFxLoopedOnEntityBone": {
		"body": [
			"StartNetworkedParticleFxLoopedOnEntityBone(${1:effectName}, ${2:entity}, ${3:xOffset}, ${4:yOffset}, ${5:zOffset}, ${6:xRot}, ${7:yRot}, ${8:zRot}, ${9:boneIndex}, ${10:scale}, ${11:xAxis}, ${12:yAxis}, ${13:zAxis})"
		],
		"scope": "lua",
		"prefix": "StartNetworkedParticleFxLoopedOnEntityBone"
	},
	"StartNetworkedParticleFxNonLoopedAtCoord": {
		"body": [
			"StartNetworkedParticleFxNonLoopedAtCoord(${1:effectName}, ${2:xPos}, ${3:yPos}, ${4:zPos}, ${5:xRot}, ${6:yRot}, ${7:zRot}, ${8:scale}, ${9:xAxis}, ${10:yAxis}, ${11:zAxis})"
		],
		"scope": "lua",
		"prefix": "StartNetworkedParticleFxNonLoopedAtCoord"
	},
	"StartNetworkedParticleFxNonLoopedOnEntity": {
		"body": [
			"StartNetworkedParticleFxNonLoopedOnEntity(${1:effectName}, ${2:entity}, ${3:offsetX}, ${4:offsetY}, ${5:offsetZ}, ${6:rotX}, ${7:rotY}, ${8:rotZ}, ${9:scale}, ${10:axisX}, ${11:axisY}, ${12:axisZ})"
		],
		"scope": "lua",
		"prefix": "StartNetworkedParticleFxNonLoopedOnEntity"
	},
	"StartNetworkedParticleFxNonLoopedOnEntityBone": {
		"body": [
			"StartNetworkedParticleFxNonLoopedOnEntityBone(${1:effectName}, ${2:entity}, ${3:offsetX}, ${4:offsetY}, ${5:offsetZ}, ${6:rotX}, ${7:rotY}, ${8:rotZ}, ${9:boneIndex}, ${10:scale}, ${11:axisX}, ${12:axisY}, ${13:axisZ})"
		],
		"scope": "lua",
		"prefix": "StartNetworkedParticleFxNonLoopedOnEntityBone"
	},
	"StartNetworkedParticleFxNonLoopedOnPedBone": {
		"body": [
			"StartNetworkedParticleFxNonLoopedOnPedBone(${1:effectName}, ${2:ped}, ${3:offsetX}, ${4:offsetY}, ${5:offsetZ}, ${6:rotX}, ${7:rotY}, ${8:rotZ}, ${9:boneIndex}, ${10:scale}, ${11:axisX}, ${12:axisY}, ${13:axisZ})"
		],
		"scope": "lua",
		"prefix": "StartNetworkedParticleFxNonLoopedOnPedBone"
	},
	"StartNewScript": {
		"body": [
			"StartNewScript(${1:scriptName}, ${2:stackSize})"
		],
		"scope": "lua",
		"prefix": "StartNewScript"
	},
	"StartNewScriptWithArgs": {
		"body": [
			"StartNewScriptWithArgs(${1:scriptName}, ${2:argCount}, ${3:stackSize})"
		],
		"scope": "lua",
		"prefix": "StartNewScriptWithArgs"
	},
	"StartNewScriptWithNameHash": {
		"body": [
			"StartNewScriptWithNameHash(${1:scriptHash}, ${2:stackSize})"
		],
		"scope": "lua",
		"prefix": "StartNewScriptWithNameHash"
	},
	"StartNewScriptWithNameHashAndArgs": {
		"body": [
			"StartNewScriptWithNameHashAndArgs(${1:scriptHash}, ${2:argCount}, ${3:stackSize})"
		],
		"scope": "lua",
		"prefix": "StartNewScriptWithNameHashAndArgs"
	},
	"StartParticleFxLoopedAtCoord": {
		"body": [
			"StartParticleFxLoopedAtCoord(${1:effectName}, ${2:x}, ${3:y}, ${4:z}, ${5:xRot}, ${6:yRot}, ${7:zRot}, ${8:scale}, ${9:xAxis}, ${10:yAxis}, ${11:zAxis}, ${12:p11})"
		],
		"scope": "lua",
		"prefix": "StartParticleFxLoopedAtCoord"
	},
	"StartParticleFxLoopedOnEntity": {
		"body": [
			"StartParticleFxLoopedOnEntity(${1:effectName}, ${2:entity}, ${3:xOffset}, ${4:yOffset}, ${5:zOffset}, ${6:xRot}, ${7:yRot}, ${8:zRot}, ${9:scale}, ${10:xAxis}, ${11:yAxis}, ${12:zAxis})"
		],
		"scope": "lua",
		"prefix": "StartParticleFxLoopedOnEntity"
	},
	"StartParticleFxLoopedOnEntityBone": {
		"body": [
			"StartParticleFxLoopedOnEntityBone(${1:effectName}, ${2:entity}, ${3:xOffset}, ${4:yOffset}, ${5:zOffset}, ${6:xRot}, ${7:yRot}, ${8:zRot}, ${9:boneIndex}, ${10:scale}, ${11:xAxis}, ${12:yAxis}, ${13:zAxis})"
		],
		"scope": "lua",
		"prefix": "StartParticleFxLoopedOnEntityBone"
	},
	"StartParticleFxLoopedOnPedBone": {
		"body": [
			"StartParticleFxLoopedOnPedBone(${1:effectName}, ${2:ped}, ${3:xOffset}, ${4:yOffset}, ${5:zOffset}, ${6:xRot}, ${7:yRot}, ${8:zRot}, ${9:boneIndex}, ${10:scale}, ${11:xAxis}, ${12:yAxis}, ${13:zAxis})"
		],
		"scope": "lua",
		"prefix": "StartParticleFxLoopedOnPedBone"
	},
	"StartParticleFxNonLoopedAtCoord": {
		"body": [
			"StartParticleFxNonLoopedAtCoord(${1:effectName}, ${2:xPos}, ${3:yPos}, ${4:zPos}, ${5:xRot}, ${6:yRot}, ${7:zRot}, ${8:scale}, ${9:xAxis}, ${10:yAxis}, ${11:zAxis})"
		],
		"scope": "lua",
		"prefix": "StartParticleFxNonLoopedAtCoord"
	},
	"StartParticleFxNonLoopedOnEntity": {
		"body": [
			"StartParticleFxNonLoopedOnEntity(${1:effectName}, ${2:entity}, ${3:offsetX}, ${4:offsetY}, ${5:offsetZ}, ${6:rotX}, ${7:rotY}, ${8:rotZ}, ${9:scale}, ${10:axisX}, ${11:axisY}, ${12:axisZ})"
		],
		"scope": "lua",
		"prefix": "StartParticleFxNonLoopedOnEntity"
	},
	"StartParticleFxNonLoopedOnPedBone": {
		"body": [
			"StartParticleFxNonLoopedOnPedBone(${1:effectName}, ${2:ped}, ${3:offsetX}, ${4:offsetY}, ${5:offsetZ}, ${6:rotX}, ${7:rotY}, ${8:rotZ}, ${9:boneIndex}, ${10:scale}, ${11:axisX}, ${12:axisY}, ${13:axisZ})"
		],
		"scope": "lua",
		"prefix": "StartParticleFxNonLoopedOnPedBone"
	},
	"StartPetrolTrailDecals": {
		"body": [
			"StartPetrolTrailDecals(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StartPetrolTrailDecals"
	},
	"StartPlaybackRecordedVehicle": {
		"body": [
			"StartPlaybackRecordedVehicle(${1:vehicle}, ${2:recording}, ${3:script}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "StartPlaybackRecordedVehicle"
	},
	"StartPlaybackRecordedVehicleUsingAi": {
		"body": [
			"StartPlaybackRecordedVehicleUsingAi(${1:p0}, ${2:p1}, ${3:p3}, ${4:p4})"
		],
		"scope": "lua",
		"prefix": "StartPlaybackRecordedVehicleUsingAi"
	},
	"StartPlaybackRecordedVehicleWithFlags": {
		"body": [
			"StartPlaybackRecordedVehicleWithFlags(${1:vehicle}, ${2:recording}, ${3:script}, ${4:flags}, ${5:time}, ${6:drivingStyle})"
		],
		"scope": "lua",
		"prefix": "StartPlaybackRecordedVehicleWithFlags"
	},
	"StartPlayerSwitch": {
		"body": [
			"StartPlayerSwitch(${1:from}, ${2:to}, ${3:flags}, ${4:switchType})"
		],
		"scope": "lua",
		"prefix": "StartPlayerSwitch"
	},
	"StartPlayerTeleport": {
		"body": [
			"StartPlayerTeleport(${1:player}, ${2:x}, ${3:y}, ${4:z}, ${5:heading}, ${6:p5}, ${7:findCollisionLand}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "StartPlayerTeleport"
	},
	"StartPreloadedConversation": {
		"body": [
			"StartPreloadedConversation()"
		],
		"scope": "lua",
		"prefix": "StartPreloadedConversation"
	},
	"StartRecording": {
		"body": [
			"StartRecording(${1:mode})"
		],
		"scope": "lua",
		"prefix": "StartRecording"
	},
	"StartResource": {
		"body": [
			"StartResource(${1:resourceName})"
		],
		"scope": "lua",
		"prefix": "StartResource"
	},
	"StartRopeUnwindingFront": {
		"body": [
			"StartRopeUnwindingFront(${1:ropeId})"
		],
		"scope": "lua",
		"prefix": "StartRopeUnwindingFront"
	},
	"StartRopeWinding": {
		"body": [
			"StartRopeWinding(${1:ropeId})"
		],
		"scope": "lua",
		"prefix": "StartRopeWinding"
	},
	"StartSaveArrayWithSize": {
		"body": [
			"StartSaveArrayWithSize(${1:size}, ${2:arrayName})"
		],
		"scope": "lua",
		"prefix": "StartSaveArrayWithSize"
	},
	"StartSaveData": {
		"body": [
			"StartSaveData(${1:p1}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "StartSaveData"
	},
	"StartSaveStructWithSize": {
		"body": [
			"StartSaveStructWithSize(${1:size}, ${2:structName})"
		],
		"scope": "lua",
		"prefix": "StartSaveStructWithSize"
	},
	"StartScriptConversation": {
		"body": [
			"StartScriptConversation(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "StartScriptConversation"
	},
	"StartScriptFire": {
		"body": [
			"StartScriptFire(${1:X}, ${2:Y}, ${3:Z}, ${4:maxChildren}, ${5:isGasFire})"
		],
		"scope": "lua",
		"prefix": "StartScriptFire"
	},
	"StartScriptPhoneConversation": {
		"body": [
			"StartScriptPhoneConversation(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "StartScriptPhoneConversation"
	},
	"StartShapeTestBound": {
		"body": [
			"StartShapeTestBound(${1:entity}, ${2:flags1}, ${3:flags2})"
		],
		"scope": "lua",
		"prefix": "StartShapeTestBound"
	},
	"StartShapeTestBoundingBox": {
		"body": [
			"StartShapeTestBoundingBox(${1:entity}, ${2:flags1}, ${3:flags2})"
		],
		"scope": "lua",
		"prefix": "StartShapeTestBoundingBox"
	},
	"StartShapeTestBox": {
		"body": [
			"StartShapeTestBox(${1:x}, ${2:y}, ${3:z}, ${4:x1}, ${5:y2}, ${6:z2}, ${7:rotX}, ${8:rotY}, ${9:rotZ}, ${10:p9}, ${11:flags}, ${12:entity}, ${13:p12})"
		],
		"scope": "lua",
		"prefix": "StartShapeTestBox"
	},
	"StartShapeTestCapsule": {
		"body": [
			"StartShapeTestCapsule(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:radius}, ${8:flags}, ${9:entity}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "StartShapeTestCapsule"
	},
	"StartShapeTestLosProbe": {
		"body": [
			"StartShapeTestLosProbe(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:flags}, ${8:entity}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "StartShapeTestLosProbe"
	},
	"StartShapeTestSurroundingCoords": {
		"body": [
			"StartShapeTestSurroundingCoords(${1:flag}, ${2:entity}, ${3:flag2})"
		],
		"scope": "lua",
		"prefix": "StartShapeTestSurroundingCoords"
	},
	"StartShapeTestSweptSphere": {
		"body": [
			"StartShapeTestSweptSphere(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:radius}, ${8:flags}, ${9:entity}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "StartShapeTestSweptSphere"
	},
	"StartVehicleAlarm": {
		"body": [
			"StartVehicleAlarm(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "StartVehicleAlarm"
	},
	"StartVehicleHorn": {
		"body": [
			"StartVehicleHorn(${1:vehicle}, ${2:duration}, ${3:mode}, ${4:forever})"
		],
		"scope": "lua",
		"prefix": "StartVehicleHorn"
	},
	"StatClearSlotForReload": {
		"body": [
			"StatClearSlotForReload(${1:statSlot})"
		],
		"scope": "lua",
		"prefix": "StatClearSlotForReload"
	},
	"StatDeleteSlot": {
		"body": [
			"StatDeleteSlot(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StatDeleteSlot"
	},
	"StatGetBool": {
		"body": [
			"StatGetBool(${1:statHash}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "StatGetBool"
	},
	"StatGetBoolMasked": {
		"body": [
			"StatGetBoolMasked(${1:statName}, ${2:mask}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "StatGetBoolMasked"
	},
	"StatGetCancelSaveMigrationStatus": {
		"body": [
			"StatGetCancelSaveMigrationStatus()"
		],
		"scope": "lua",
		"prefix": "StatGetCancelSaveMigrationStatus"
	},
	"StatGetDate": {
		"body": [
			"StatGetDate(${1:statHash}, ${2:p2}, ${3:p3})"
		],
		"scope": "lua",
		"prefix": "StatGetDate"
	},
	"StatGetFloat": {
		"body": [
			"StatGetFloat(${1:statHash}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "StatGetFloat"
	},
	"StatGetInt": {
		"body": [
			"StatGetInt(${1:statHash}, ${2:p2})"
		],
		"scope": "lua",
		"prefix": "StatGetInt"
	},
	"StatGetLicensePlate": {
		"body": [
			"StatGetLicensePlate(${1:statName})"
		],
		"scope": "lua",
		"prefix": "StatGetLicensePlate"
	},
	"StatGetMaskedInt": {
		"body": [
			"StatGetMaskedInt(${1:p0}, ${2:p2}, ${3:p3}, ${4:p4})"
		],
		"scope": "lua",
		"prefix": "StatGetMaskedInt"
	},
	"StatGetNumberOfDays": {
		"body": [
			"StatGetNumberOfDays(${1:statName})"
		],
		"scope": "lua",
		"prefix": "StatGetNumberOfDays"
	},
	"StatGetNumberOfHours": {
		"body": [
			"StatGetNumberOfHours(${1:statName})"
		],
		"scope": "lua",
		"prefix": "StatGetNumberOfHours"
	},
	"StatGetNumberOfMinutes": {
		"body": [
			"StatGetNumberOfMinutes(${1:statName})"
		],
		"scope": "lua",
		"prefix": "StatGetNumberOfMinutes"
	},
	"StatGetNumberOfSeconds": {
		"body": [
			"StatGetNumberOfSeconds(${1:statName})"
		],
		"scope": "lua",
		"prefix": "StatGetNumberOfSeconds"
	},
	"StatGetPackedBoolMask": {
		"body": [
			"StatGetPackedBoolMask(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StatGetPackedBoolMask"
	},
	"StatGetPackedIntMask": {
		"body": [
			"StatGetPackedIntMask(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StatGetPackedIntMask"
	},
	"StatGetPos": {
		"body": [
			"StatGetPos(${1:p0}, ${2:p4})"
		],
		"scope": "lua",
		"prefix": "StatGetPos"
	},
	"StatGetSaveMigrationConsumeContentUnlockStatus": {
		"body": [
			"StatGetSaveMigrationConsumeContentUnlockStatus(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StatGetSaveMigrationConsumeContentUnlockStatus"
	},
	"StatGetSaveMigrationStatus": {
		"body": [
			"StatGetSaveMigrationStatus(${1:data})"
		],
		"scope": "lua",
		"prefix": "StatGetSaveMigrationStatus"
	},
	"StatGetString": {
		"body": [
			"StatGetString(${1:statHash}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "StatGetString"
	},
	"StatGetUserId": {
		"body": [
			"StatGetUserId(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StatGetUserId"
	},
	"StatIncrement": {
		"body": [
			"StatIncrement(${1:statName}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "StatIncrement"
	},
	"StatLoad": {
		"body": [
			"StatLoad(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StatLoad"
	},
	"StatLoadPending": {
		"body": [
			"StatLoadPending(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StatLoadPending"
	},
	"StatMigrateSave": {
		"body": [
			"StatMigrateSave(${1:platformName})"
		],
		"scope": "lua",
		"prefix": "StatMigrateSave"
	},
	"StatSave": {
		"body": [
			"StatSave(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "StatSave"
	},
	"StatSaveMigrationCancel": {
		"body": [
			"StatSaveMigrationCancel()"
		],
		"scope": "lua",
		"prefix": "StatSaveMigrationCancel"
	},
	"StatSaveMigrationConsumeContentUnlock": {
		"body": [
			"StatSaveMigrationConsumeContentUnlock(${1:contentId}, ${2:srcPlatform}, ${3:srcGamerHandle})"
		],
		"scope": "lua",
		"prefix": "StatSaveMigrationConsumeContentUnlock"
	},
	"StatSaveMigrationStatusStart": {
		"body": [
			"StatSaveMigrationStatusStart()"
		],
		"scope": "lua",
		"prefix": "StatSaveMigrationStatusStart"
	},
	"StatSavePending": {
		"body": [
			"StatSavePending()"
		],
		"scope": "lua",
		"prefix": "StatSavePending"
	},
	"StatSavePendingOrRequested": {
		"body": [
			"StatSavePendingOrRequested()"
		],
		"scope": "lua",
		"prefix": "StatSavePendingOrRequested"
	},
	"StatSetBlockSaves": {
		"body": [
			"StatSetBlockSaves(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "StatSetBlockSaves"
	},
	"StatSetBool": {
		"body": [
			"StatSetBool(${1:statName}, ${2:value}, ${3:save})"
		],
		"scope": "lua",
		"prefix": "StatSetBool"
	},
	"StatSetBoolMasked": {
		"body": [
			"StatSetBoolMasked(${1:statName}, ${2:value}, ${3:mask}, ${4:save})"
		],
		"scope": "lua",
		"prefix": "StatSetBoolMasked"
	},
	"StatSetCheatIsActive": {
		"body": [
			"StatSetCheatIsActive()"
		],
		"scope": "lua",
		"prefix": "StatSetCheatIsActive"
	},
	"StatSetCurrentPosixTime": {
		"body": [
			"StatSetCurrentPosixTime(${1:statName}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "StatSetCurrentPosixTime"
	},
	"StatSetDate": {
		"body": [
			"StatSetDate(${1:statName}, ${2:numFields}, ${3:save})"
		],
		"scope": "lua",
		"prefix": "StatSetDate"
	},
	"StatSetFloat": {
		"body": [
			"StatSetFloat(${1:statName}, ${2:value}, ${3:save})"
		],
		"scope": "lua",
		"prefix": "StatSetFloat"
	},
	"StatSetGxtLabel": {
		"body": [
			"StatSetGxtLabel(${1:statName}, ${2:value}, ${3:save})"
		],
		"scope": "lua",
		"prefix": "StatSetGxtLabel"
	},
	"StatSetInt": {
		"body": [
			"StatSetInt(${1:statName}, ${2:value}, ${3:save})"
		],
		"scope": "lua",
		"prefix": "StatSetInt"
	},
	"StatSetLicensePlate": {
		"body": [
			"StatSetLicensePlate(${1:statName}, ${2:str})"
		],
		"scope": "lua",
		"prefix": "StatSetLicensePlate"
	},
	"StatSetMaskedInt": {
		"body": [
			"StatSetMaskedInt(${1:statName}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:save})"
		],
		"scope": "lua",
		"prefix": "StatSetMaskedInt"
	},
	"StatSetPos": {
		"body": [
			"StatSetPos(${1:statName}, ${2:x}, ${3:y}, ${4:z}, ${5:save})"
		],
		"scope": "lua",
		"prefix": "StatSetPos"
	},
	"StatSetProfileSettingValue": {
		"body": [
			"StatSetProfileSettingValue(${1:profileSetting}, ${2:value})"
		],
		"scope": "lua",
		"prefix": "StatSetProfileSettingValue"
	},
	"StatSetString": {
		"body": [
			"StatSetString(${1:statName}, ${2:value}, ${3:save})"
		],
		"scope": "lua",
		"prefix": "StatSetString"
	},
	"StatSetUserId": {
		"body": [
			"StatSetUserId(${1:statName}, ${2:value}, ${3:save})"
		],
		"scope": "lua",
		"prefix": "StatSetUserId"
	},
	"StatSlotIsLoaded": {
		"body": [
			"StatSlotIsLoaded(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StatSlotIsLoaded"
	},
	"StopAlarm": {
		"body": [
			"StopAlarm(${1:alarmName}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "StopAlarm"
	},
	"StopAllAlarms": {
		"body": [
			"StopAllAlarms(${1:stop})"
		],
		"scope": "lua",
		"prefix": "StopAllAlarms"
	},
	"StopAllGarageActivity": {
		"body": [
			"StopAllGarageActivity()"
		],
		"scope": "lua",
		"prefix": "StopAllGarageActivity"
	},
	"StopAnimPlayback": {
		"body": [
			"StopAnimPlayback(${1:ped}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "StopAnimPlayback"
	},
	"StopAnimTask": {
		"body": [
			"StopAnimTask(${1:ped}, ${2:animDictionary}, ${3:animationName}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "StopAnimTask"
	},
	"StopAnyPedModelBeingSuppressed": {
		"body": [
			"StopAnyPedModelBeingSuppressed()"
		],
		"scope": "lua",
		"prefix": "StopAnyPedModelBeingSuppressed"
	},
	"StopAudioScene": {
		"body": [
			"StopAudioScene(${1:scene})"
		],
		"scope": "lua",
		"prefix": "StopAudioScene"
	},
	"StopAudioScenes": {
		"body": [
			"StopAudioScenes()"
		],
		"scope": "lua",
		"prefix": "StopAudioScenes"
	},
	"StopBenchmarkRecording": {
		"body": [
			"StopBenchmarkRecording()"
		],
		"scope": "lua",
		"prefix": "StopBenchmarkRecording"
	},
	"StopBinkMovie": {
		"body": [
			"StopBinkMovie(${1:binkMovie})"
		],
		"scope": "lua",
		"prefix": "StopBinkMovie"
	},
	"StopBringVehicleToHalt": {
		"body": [
			"StopBringVehicleToHalt(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "StopBringVehicleToHalt"
	},
	"StopCamPointing": {
		"body": [
			"StopCamPointing(${1:cam})"
		],
		"scope": "lua",
		"prefix": "StopCamPointing"
	},
	"StopCamShaking": {
		"body": [
			"StopCamShaking(${1:cam}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "StopCamShaking"
	},
	"StopCinematicCamShaking": {
		"body": [
			"StopCinematicCamShaking(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StopCinematicCamShaking"
	},
	"StopCinematicShot": {
		"body": [
			"StopCinematicShot(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StopCinematicShot"
	},
	"StopCurrentPlayingAmbientSpeech": {
		"body": [
			"StopCurrentPlayingAmbientSpeech(${1:ped})"
		],
		"scope": "lua",
		"prefix": "StopCurrentPlayingAmbientSpeech"
	},
	"StopCurrentPlayingSpeech": {
		"body": [
			"StopCurrentPlayingSpeech(${1:ped})"
		],
		"scope": "lua",
		"prefix": "StopCurrentPlayingSpeech"
	},
	"StopCutscene": {
		"body": [
			"StopCutscene(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StopCutscene"
	},
	"StopCutsceneAudio": {
		"body": [
			"StopCutsceneAudio()"
		],
		"scope": "lua",
		"prefix": "StopCutsceneAudio"
	},
	"StopCutsceneCamShaking": {
		"body": [
			"StopCutsceneCamShaking()"
		],
		"scope": "lua",
		"prefix": "StopCutsceneCamShaking"
	},
	"StopCutsceneImmediately": {
		"body": [
			"StopCutsceneImmediately()"
		],
		"scope": "lua",
		"prefix": "StopCutsceneImmediately"
	},
	"StopEntityAnim": {
		"body": [
			"StopEntityAnim(${1:entity}, ${2:animation}, ${3:animGroup}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "StopEntityAnim"
	},
	"StopEntityFire": {
		"body": [
			"StopEntityFire(${1:entity})"
		],
		"scope": "lua",
		"prefix": "StopEntityFire"
	},
	"StopFireInRange": {
		"body": [
			"StopFireInRange(${1:x}, ${2:y}, ${3:z}, ${4:radius})"
		],
		"scope": "lua",
		"prefix": "StopFireInRange"
	},
	"StopGameplayCamShaking": {
		"body": [
			"StopGameplayCamShaking(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StopGameplayCamShaking"
	},
	"StopGameplayHint": {
		"body": [
			"StopGameplayHint(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StopGameplayHint"
	},
	"StopPadShake": {
		"body": [
			"StopPadShake(${1:padIndex})"
		],
		"scope": "lua",
		"prefix": "StopPadShake"
	},
	"StopParticleFxLooped": {
		"body": [
			"StopParticleFxLooped(${1:ptfxHandle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "StopParticleFxLooped"
	},
	"StopPedRingtone": {
		"body": [
			"StopPedRingtone(${1:ped})"
		],
		"scope": "lua",
		"prefix": "StopPedRingtone"
	},
	"StopPedSpeaking": {
		"body": [
			"StopPedSpeaking(${1:ped}, ${2:shaking})"
		],
		"scope": "lua",
		"prefix": "StopPedSpeaking"
	},
	"StopPedWeaponFiringWhenDropped": {
		"body": [
			"StopPedWeaponFiringWhenDropped(${1:ped})"
		],
		"scope": "lua",
		"prefix": "StopPedWeaponFiringWhenDropped"
	},
	"StopPlaybackRecordedVehicle": {
		"body": [
			"StopPlaybackRecordedVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "StopPlaybackRecordedVehicle"
	},
	"StopPlayerSwitch": {
		"body": [
			"StopPlayerSwitch()"
		],
		"scope": "lua",
		"prefix": "StopPlayerSwitch"
	},
	"StopPlayerTeleport": {
		"body": [
			"StopPlayerTeleport()"
		],
		"scope": "lua",
		"prefix": "StopPlayerTeleport"
	},
	"StopRecordingAndDiscardClip": {
		"body": [
			"StopRecordingAndDiscardClip()"
		],
		"scope": "lua",
		"prefix": "StopRecordingAndDiscardClip"
	},
	"StopRecordingAndSaveClip": {
		"body": [
			"StopRecordingAndSaveClip()"
		],
		"scope": "lua",
		"prefix": "StopRecordingAndSaveClip"
	},
	"StopRecordingThisFrame": {
		"body": [
			"StopRecordingThisFrame()"
		],
		"scope": "lua",
		"prefix": "StopRecordingThisFrame"
	},
	"StopRenderingScriptCamsUsingCatchUp": {
		"body": [
			"StopRenderingScriptCamsUsingCatchUp(${1:render}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "StopRenderingScriptCamsUsingCatchUp"
	},
	"StopResource": {
		"body": [
			"StopResource(${1:resourceName})"
		],
		"scope": "lua",
		"prefix": "StopResource"
	},
	"StopRopeUnwindingFront": {
		"body": [
			"StopRopeUnwindingFront(${1:ropeId})"
		],
		"scope": "lua",
		"prefix": "StopRopeUnwindingFront"
	},
	"StopRopeWinding": {
		"body": [
			"StopRopeWinding(${1:ropeId})"
		],
		"scope": "lua",
		"prefix": "StopRopeWinding"
	},
	"StopSaveArray": {
		"body": [
			"StopSaveArray()"
		],
		"scope": "lua",
		"prefix": "StopSaveArray"
	},
	"StopSaveData": {
		"body": [
			"StopSaveData()"
		],
		"scope": "lua",
		"prefix": "StopSaveData"
	},
	"StopSaveStruct": {
		"body": [
			"StopSaveStruct()"
		],
		"scope": "lua",
		"prefix": "StopSaveStruct"
	},
	"StopScriptedConversation": {
		"body": [
			"StopScriptedConversation(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StopScriptedConversation"
	},
	"StopScriptGlobalShaking": {
		"body": [
			"StopScriptGlobalShaking(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StopScriptGlobalShaking"
	},
	"StopSound": {
		"body": [
			"StopSound(${1:soundId})"
		],
		"scope": "lua",
		"prefix": "StopSound"
	},
	"StopStream": {
		"body": [
			"StopStream()"
		],
		"scope": "lua",
		"prefix": "StopStream"
	},
	"StopSynchronizedAudioEvent": {
		"body": [
			"StopSynchronizedAudioEvent(${1:p0})"
		],
		"scope": "lua",
		"prefix": "StopSynchronizedAudioEvent"
	},
	"StopSynchronizedEntityAnim": {
		"body": [
			"StopSynchronizedEntityAnim(${1:entity}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "StopSynchronizedEntityAnim"
	},
	"StopSynchronizedMapEntityAnim": {
		"body": [
			"StopSynchronizedMapEntityAnim(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "StopSynchronizedMapEntityAnim"
	},
	"StreamvolCreateFrustum": {
		"body": [
			"StreamvolCreateFrustum(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "StreamvolCreateFrustum"
	},
	"StreamvolCreateLine": {
		"body": [
			"StreamvolCreateLine(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "StreamvolCreateLine"
	},
	"StreamvolCreateSphere": {
		"body": [
			"StreamvolCreateSphere(${1:x}, ${2:y}, ${3:z}, ${4:rad}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "StreamvolCreateSphere"
	},
	"StreamvolDelete": {
		"body": [
			"StreamvolDelete(${1:unused})"
		],
		"scope": "lua",
		"prefix": "StreamvolDelete"
	},
	"StreamvolHasLoaded": {
		"body": [
			"StreamvolHasLoaded(${1:unused})"
		],
		"scope": "lua",
		"prefix": "StreamvolHasLoaded"
	},
	"StreamvolIsValid": {
		"body": [
			"StreamvolIsValid(${1:unused})"
		],
		"scope": "lua",
		"prefix": "StreamvolIsValid"
	},
	"StringToInt": {
		"body": [
			"StringToInt(${1:string}, ${2:outInteger})"
		],
		"scope": "lua",
		"prefix": "StringToInt"
	},
	"SuppressAgitationEventsNextFrame": {
		"body": [
			"SuppressAgitationEventsNextFrame()"
		],
		"scope": "lua",
		"prefix": "SuppressAgitationEventsNextFrame"
	},
	"SuppressFrontendRenderingThisFrame": {
		"body": [
			"SuppressFrontendRenderingThisFrame()"
		],
		"scope": "lua",
		"prefix": "SuppressFrontendRenderingThisFrame"
	},
	"SuppressShockingEventsNextFrame": {
		"body": [
			"SuppressShockingEventsNextFrame()"
		],
		"scope": "lua",
		"prefix": "SuppressShockingEventsNextFrame"
	},
	"SuppressShockingEventTypeNextFrame": {
		"body": [
			"SuppressShockingEventTypeNextFrame(${1:eventType})"
		],
		"scope": "lua",
		"prefix": "SuppressShockingEventTypeNextFrame"
	},
	"SwitchCrimeType": {
		"body": [
			"SwitchCrimeType(${1:player}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "SwitchCrimeType"
	},
	"SwitchInPlayer": {
		"body": [
			"SwitchInPlayer(${1:ped})"
		],
		"scope": "lua",
		"prefix": "SwitchInPlayer"
	},
	"SwitchOutPlayer": {
		"body": [
			"SwitchOutPlayer(${1:ped}, ${2:flags}, ${3:switchType})"
		],
		"scope": "lua",
		"prefix": "SwitchOutPlayer"
	},
	"SwitchToInputMappingScheme": {
		"body": [
			"SwitchToInputMappingScheme(${1:name})"
		],
		"scope": "lua",
		"prefix": "SwitchToInputMappingScheme"
	},
	"SwitchToInputMappingScheme_2": {
		"body": [
			"SwitchToInputMappingScheme_2(${1:name})"
		],
		"scope": "lua",
		"prefix": "SwitchToInputMappingScheme_2"
	},
	"SwitchTrainTrack": {
		"body": [
			"SwitchTrainTrack(${1:trackId}, ${2:state})"
		],
		"scope": "lua",
		"prefix": "SwitchTrainTrack"
	},
	"TakeControlOfFrontend": {
		"body": [
			"TakeControlOfFrontend()"
		],
		"scope": "lua",
		"prefix": "TakeControlOfFrontend"
	},
	"Tan": {
		"body": [
			"Tan(${1:p0})"
		],
		"scope": "lua",
		"prefix": "Tan"
	},
	"TaskAchieveHeading": {
		"body": [
			"TaskAchieveHeading(${1:ped}, ${2:heading}, ${3:timeout})"
		],
		"scope": "lua",
		"prefix": "TaskAchieveHeading"
	},
	"TaskAgitatedAction": {
		"body": [
			"TaskAgitatedAction(${1:ped}, ${2:ped2})"
		],
		"scope": "lua",
		"prefix": "TaskAgitatedAction"
	},
	"TaskAimGunAtCoord": {
		"body": [
			"TaskAimGunAtCoord(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:time}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "TaskAimGunAtCoord"
	},
	"TaskAimGunAtEntity": {
		"body": [
			"TaskAimGunAtEntity(${1:ped}, ${2:entity}, ${3:duration}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "TaskAimGunAtEntity"
	},
	"TaskAimGunScripted": {
		"body": [
			"TaskAimGunScripted(${1:ped}, ${2:scriptTask}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "TaskAimGunScripted"
	},
	"TaskAimGunScriptedWithTarget": {
		"body": [
			"TaskAimGunScriptedWithTarget(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "TaskAimGunScriptedWithTarget"
	},
	"TaskArrestPed": {
		"body": [
			"TaskArrestPed(${1:ped}, ${2:target})"
		],
		"scope": "lua",
		"prefix": "TaskArrestPed"
	},
	"TaskBoatMission": {
		"body": [
			"TaskBoatMission(${1:pedDriver}, ${2:boat}, ${3:p2}, ${4:p3}, ${5:x}, ${6:y}, ${7:z}, ${8:p7}, ${9:maxSpeed}, ${10:drivingStyle}, ${11:p10}, ${12:p11})"
		],
		"scope": "lua",
		"prefix": "TaskBoatMission"
	},
	"TaskChatToPed": {
		"body": [
			"TaskChatToPed(${1:ped}, ${2:target}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "TaskChatToPed"
	},
	"TaskClearDefensiveArea": {
		"body": [
			"TaskClearDefensiveArea(${1:p0})"
		],
		"scope": "lua",
		"prefix": "TaskClearDefensiveArea"
	},
	"TaskClearLookAt": {
		"body": [
			"TaskClearLookAt(${1:ped})"
		],
		"scope": "lua",
		"prefix": "TaskClearLookAt"
	},
	"TaskClimb": {
		"body": [
			"TaskClimb(${1:ped}, ${2:unused})"
		],
		"scope": "lua",
		"prefix": "TaskClimb"
	},
	"TaskClimbLadder": {
		"body": [
			"TaskClimbLadder(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "TaskClimbLadder"
	},
	"TaskCombatHatedTargetsAroundPed": {
		"body": [
			"TaskCombatHatedTargetsAroundPed(${1:ped}, ${2:radius}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "TaskCombatHatedTargetsAroundPed"
	},
	"TaskCombatHatedTargetsAroundPedTimed": {
		"body": [
			"TaskCombatHatedTargetsAroundPedTimed(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "TaskCombatHatedTargetsAroundPedTimed"
	},
	"TaskCombatHatedTargetsInArea": {
		"body": [
			"TaskCombatHatedTargetsInArea(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:radius}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "TaskCombatHatedTargetsInArea"
	},
	"TaskCombatPed": {
		"body": [
			"TaskCombatPed(${1:ped}, ${2:targetPed}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "TaskCombatPed"
	},
	"TaskCombatPedTimed": {
		"body": [
			"TaskCombatPedTimed(${1:p0}, ${2:ped}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "TaskCombatPedTimed"
	},
	"TaskCower": {
		"body": [
			"TaskCower(${1:ped}, ${2:duration})"
		],
		"scope": "lua",
		"prefix": "TaskCower"
	},
	"TaskDriveBy": {
		"body": [
			"TaskDriveBy(${1:driverPed}, ${2:targetPed}, ${3:targetVehicle}, ${4:targetX}, ${5:targetY}, ${6:targetZ}, ${7:distanceToShoot}, ${8:pedAccuracy}, ${9:p8}, ${10:firingPattern})"
		],
		"scope": "lua",
		"prefix": "TaskDriveBy"
	},
	"TaskEnterVehicle": {
		"body": [
			"TaskEnterVehicle(${1:ped}, ${2:vehicle}, ${3:timeout}, ${4:seat}, ${5:speed}, ${6:flag}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "TaskEnterVehicle"
	},
	"TaskEveryoneLeaveVehicle": {
		"body": [
			"TaskEveryoneLeaveVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "TaskEveryoneLeaveVehicle"
	},
	"TaskExitCover": {
		"body": [
			"TaskExitCover(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "TaskExitCover"
	},
	"TaskExtendRoute": {
		"body": [
			"TaskExtendRoute(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "TaskExtendRoute"
	},
	"TaskFlushRoute": {
		"body": [
			"TaskFlushRoute()"
		],
		"scope": "lua",
		"prefix": "TaskFlushRoute"
	},
	"TaskFollowNavMeshToCoord": {
		"body": [
			"TaskFollowNavMeshToCoord(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:speed}, ${6:timeout}, ${7:stoppingRange}, ${8:persistFollowing}, ${9:unk})"
		],
		"scope": "lua",
		"prefix": "TaskFollowNavMeshToCoord"
	},
	"TaskFollowNavMeshToCoordAdvanced": {
		"body": [
			"TaskFollowNavMeshToCoordAdvanced(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:speed}, ${6:timeout}, ${7:unkFloat}, ${8:unkInt}, ${9:unkX}, ${10:unkY}, ${11:unkZ}, ${12:unk_40000f})"
		],
		"scope": "lua",
		"prefix": "TaskFollowNavMeshToCoordAdvanced"
	},
	"TaskFollowPointRoute": {
		"body": [
			"TaskFollowPointRoute(${1:ped}, ${2:speed}, ${3:unknown})"
		],
		"scope": "lua",
		"prefix": "TaskFollowPointRoute"
	},
	"TaskFollowToOffsetOfEntity": {
		"body": [
			"TaskFollowToOffsetOfEntity(${1:ped}, ${2:entity}, ${3:offsetX}, ${4:offsetY}, ${5:offsetZ}, ${6:movementSpeed}, ${7:timeout}, ${8:stoppingRange}, ${9:persistFollowing})"
		],
		"scope": "lua",
		"prefix": "TaskFollowToOffsetOfEntity"
	},
	"TaskFollowWaypointRecording": {
		"body": [
			"TaskFollowWaypointRecording(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "TaskFollowWaypointRecording"
	},
	"TaskForceMotionState": {
		"body": [
			"TaskForceMotionState(${1:ped}, ${2:state}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "TaskForceMotionState"
	},
	"TaskGetOffBoat": {
		"body": [
			"TaskGetOffBoat(${1:ped}, ${2:boat})"
		],
		"scope": "lua",
		"prefix": "TaskGetOffBoat"
	},
	"TaskGoStraightToCoord": {
		"body": [
			"TaskGoStraightToCoord(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:speed}, ${6:timeout}, ${7:targetHeading}, ${8:distanceToSlide})"
		],
		"scope": "lua",
		"prefix": "TaskGoStraightToCoord"
	},
	"TaskGoStraightToCoordRelativeToEntity": {
		"body": [
			"TaskGoStraightToCoordRelativeToEntity(${1:entity1}, ${2:entity2}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "TaskGoStraightToCoordRelativeToEntity"
	},
	"TaskGoToCoordAndAimAtHatedEntitiesNearCoord": {
		"body": [
			"TaskGoToCoordAndAimAtHatedEntitiesNearCoord(${1:pedHandle}, ${2:goToLocationX}, ${3:goToLocationY}, ${4:goToLocationZ}, ${5:focusLocationX}, ${6:focusLocationY}, ${7:focusLocationZ}, ${8:speed}, ${9:shootAtEnemies}, ${10:distanceToStopAt}, ${11:noRoadsDistance}, ${12:unkTrue}, ${13:unkFlag}, ${14:aimingFlag}, ${15:firingPattern})"
		],
		"scope": "lua",
		"prefix": "TaskGoToCoordAndAimAtHatedEntitiesNearCoord"
	},
	"TaskGoToCoordAnyMeans": {
		"body": [
			"TaskGoToCoordAnyMeans(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:speed}, ${6:p5}, ${7:p6}, ${8:walkingStyle}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "TaskGoToCoordAnyMeans"
	},
	"TaskGoToCoordAnyMeansExtraParams": {
		"body": [
			"TaskGoToCoordAnyMeansExtraParams(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:speed}, ${6:p5}, ${7:p6}, ${8:walkingStyle}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11})"
		],
		"scope": "lua",
		"prefix": "TaskGoToCoordAnyMeansExtraParams"
	},
	"TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed": {
		"body": [
			"TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:speed}, ${6:p5}, ${7:p6}, ${8:walkingStyle}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11}, ${13:p12})"
		],
		"scope": "lua",
		"prefix": "TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed"
	},
	"TaskGoToCoordWhileAimingAtCoord": {
		"body": [
			"TaskGoToCoordWhileAimingAtCoord(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:aimAtX}, ${6:aimAtY}, ${7:aimAtZ}, ${8:moveSpeed}, ${9:shoot}, ${10:p9}, ${11:p10}, ${12:p11}, ${13:flags}, ${14:p13}, ${15:firingPattern})"
		],
		"scope": "lua",
		"prefix": "TaskGoToCoordWhileAimingAtCoord"
	},
	"TaskGoToCoordWhileAimingAtEntity": {
		"body": [
			"TaskGoToCoordWhileAimingAtEntity(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11}, ${13:p12}, ${14:p13})"
		],
		"scope": "lua",
		"prefix": "TaskGoToCoordWhileAimingAtEntity"
	},
	"TaskGoToEntity": {
		"body": [
			"TaskGoToEntity(${1:entity}, ${2:target}, ${3:duration}, ${4:distance}, ${5:speed}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "TaskGoToEntity"
	},
	"TaskGotoEntityAiming": {
		"body": [
			"TaskGotoEntityAiming(${1:ped}, ${2:target}, ${3:distanceToStopAt}, ${4:StartAimingDist})"
		],
		"scope": "lua",
		"prefix": "TaskGotoEntityAiming"
	},
	"TaskGotoEntityOffset": {
		"body": [
			"TaskGotoEntityOffset(${1:ped}, ${2:p1}, ${3:p2}, ${4:x}, ${5:y}, ${6:z}, ${7:duration})"
		],
		"scope": "lua",
		"prefix": "TaskGotoEntityOffset"
	},
	"TaskGotoEntityOffsetXy": {
		"body": [
			"TaskGotoEntityOffsetXy(${1:ped}, ${2:entity}, ${3:duration}, ${4:xOffset}, ${5:yOffset}, ${6:zOffset}, ${7:moveBlendRatio}, ${8:useNavmesh})"
		],
		"scope": "lua",
		"prefix": "TaskGotoEntityOffsetXy"
	},
	"TaskGoToEntityWhileAimingAtCoord": {
		"body": [
			"TaskGoToEntityWhileAimingAtCoord(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:p11})"
		],
		"scope": "lua",
		"prefix": "TaskGoToEntityWhileAimingAtCoord"
	},
	"TaskGoToEntityWhileAimingAtEntity": {
		"body": [
			"TaskGoToEntityWhileAimingAtEntity(${1:ped}, ${2:entityToWalkTo}, ${3:entityToAimAt}, ${4:speed}, ${5:shootatEntity}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:firingPattern})"
		],
		"scope": "lua",
		"prefix": "TaskGoToEntityWhileAimingAtEntity"
	},
	"TaskGuardAssignedDefensiveArea": {
		"body": [
			"TaskGuardAssignedDefensiveArea(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "TaskGuardAssignedDefensiveArea"
	},
	"TaskGuardCurrentPosition": {
		"body": [
			"TaskGuardCurrentPosition(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "TaskGuardCurrentPosition"
	},
	"TaskGuardSphereDefensiveArea": {
		"body": [
			"TaskGuardSphereDefensiveArea(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10})"
		],
		"scope": "lua",
		"prefix": "TaskGuardSphereDefensiveArea"
	},
	"TaskHandsUp": {
		"body": [
			"TaskHandsUp(${1:ped}, ${2:duration}, ${3:facingPed}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "TaskHandsUp"
	},
	"TaskHeliChase": {
		"body": [
			"TaskHeliChase(${1:pilot}, ${2:entityToFollow}, ${3:x}, ${4:y}, ${5:z})"
		],
		"scope": "lua",
		"prefix": "TaskHeliChase"
	},
	"TaskHeliEscortHeli": {
		"body": [
			"TaskHeliEscortHeli(${1:pilot}, ${2:heli1}, ${3:heli2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "TaskHeliEscortHeli"
	},
	"TaskHeliMission": {
		"body": [
			"TaskHeliMission(${1:pilot}, ${2:aircraft}, ${3:targetVehicle}, ${4:targetPed}, ${5:destinationX}, ${6:destinationY}, ${7:destinationZ}, ${8:missionFlag}, ${9:maxSpeed}, ${10:landingRadius}, ${11:targetHeading}, ${12:unk1}, ${13:unk2}, ${14:unk3}, ${15:landingFlags})"
		],
		"scope": "lua",
		"prefix": "TaskHeliMission"
	},
	"TaskJump": {
		"body": [
			"TaskJump(${1:ped}, ${2:unused})"
		],
		"scope": "lua",
		"prefix": "TaskJump"
	},
	"TaskLeaveAnyVehicle": {
		"body": [
			"TaskLeaveAnyVehicle(${1:ped}, ${2:p1}, ${3:flags})"
		],
		"scope": "lua",
		"prefix": "TaskLeaveAnyVehicle"
	},
	"TaskLeaveVehicle": {
		"body": [
			"TaskLeaveVehicle(${1:ped}, ${2:vehicle}, ${3:flags})"
		],
		"scope": "lua",
		"prefix": "TaskLeaveVehicle"
	},
	"TaskLookAtCoord": {
		"body": [
			"TaskLookAtCoord(${1:entity}, ${2:x}, ${3:y}, ${4:z}, ${5:duration}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "TaskLookAtCoord"
	},
	"TaskLookAtEntity": {
		"body": [
			"TaskLookAtEntity(${1:ped}, ${2:lookAt}, ${3:duration}, ${4:unknown1}, ${5:unknown2})"
		],
		"scope": "lua",
		"prefix": "TaskLookAtEntity"
	},
	"TaskMoveNetworkAdvancedByName": {
		"body": [
			"TaskMoveNetworkAdvancedByName(${1:ped}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10}, ${12:animDict}, ${13:flags})"
		],
		"scope": "lua",
		"prefix": "TaskMoveNetworkAdvancedByName"
	},
	"TaskMoveNetworkByName": {
		"body": [
			"TaskMoveNetworkByName(${1:ped}, ${2:task}, ${3:multiplier}, ${4:p3}, ${5:animDict}, ${6:flags})"
		],
		"scope": "lua",
		"prefix": "TaskMoveNetworkByName"
	},
	"TaskMoveNetworkByNameWithInitParams": {
		"body": [
			"TaskMoveNetworkByNameWithInitParams(${1:ped}, ${2:p1}, ${3:p3}, ${4:p4}, ${5:animDict}, ${6:flags})"
		],
		"scope": "lua",
		"prefix": "TaskMoveNetworkByNameWithInitParams"
	},
	"TaskOpenVehicleDoor": {
		"body": [
			"TaskOpenVehicleDoor(${1:ped}, ${2:vehicle}, ${3:timeOut}, ${4:seat}, ${5:speed})"
		],
		"scope": "lua",
		"prefix": "TaskOpenVehicleDoor"
	},
	"TaskParachute": {
		"body": [
			"TaskParachute(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "TaskParachute"
	},
	"TaskParachuteToTarget": {
		"body": [
			"TaskParachuteToTarget(${1:ped}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "TaskParachuteToTarget"
	},
	"TaskPatrol": {
		"body": [
			"TaskPatrol(${1:ped}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "TaskPatrol"
	},
	"TaskPause": {
		"body": [
			"TaskPause(${1:ped}, ${2:ms})"
		],
		"scope": "lua",
		"prefix": "TaskPause"
	},
	"TaskPedSlideToCoord": {
		"body": [
			"TaskPedSlideToCoord(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:heading}, ${6:duration})"
		],
		"scope": "lua",
		"prefix": "TaskPedSlideToCoord"
	},
	"TaskPedSlideToCoordHdgRate": {
		"body": [
			"TaskPedSlideToCoordHdgRate(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:heading}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "TaskPedSlideToCoordHdgRate"
	},
	"TaskPerformSequence": {
		"body": [
			"TaskPerformSequence(${1:ped}, ${2:taskSequenceId})"
		],
		"scope": "lua",
		"prefix": "TaskPerformSequence"
	},
	"TaskPerformSequenceFromProgress": {
		"body": [
			"TaskPerformSequenceFromProgress(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "TaskPerformSequenceFromProgress"
	},
	"TaskPerformSequenceLocally": {
		"body": [
			"TaskPerformSequenceLocally(${1:ped}, ${2:taskSequenceId})"
		],
		"scope": "lua",
		"prefix": "TaskPerformSequenceLocally"
	},
	"TaskPlaneChase": {
		"body": [
			"TaskPlaneChase(${1:pilot}, ${2:entityToFollow}, ${3:x}, ${4:y}, ${5:z})"
		],
		"scope": "lua",
		"prefix": "TaskPlaneChase"
	},
	"TaskPlaneGotoPreciseVtol": {
		"body": [
			"TaskPlaneGotoPreciseVtol(${1:ped}, ${2:vehicle}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "TaskPlaneGotoPreciseVtol"
	},
	"TaskPlaneLand": {
		"body": [
			"TaskPlaneLand(${1:pilot}, ${2:plane}, ${3:runwayStartX}, ${4:runwayStartY}, ${5:runwayStartZ}, ${6:runwayEndX}, ${7:runwayEndY}, ${8:runwayEndZ})"
		],
		"scope": "lua",
		"prefix": "TaskPlaneLand"
	},
	"TaskPlaneMission": {
		"body": [
			"TaskPlaneMission(${1:pilot}, ${2:aircraft}, ${3:targetVehicle}, ${4:targetPed}, ${5:destinationX}, ${6:destinationY}, ${7:destinationZ}, ${8:missionFlag}, ${9:angularDrag}, ${10:unk}, ${11:targetHeading}, ${12:maxZ}, ${13:minZ})"
		],
		"scope": "lua",
		"prefix": "TaskPlaneMission"
	},
	"TaskPlaneTaxi": {
		"body": [
			"TaskPlaneTaxi(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "TaskPlaneTaxi"
	},
	"TaskPlantBomb": {
		"body": [
			"TaskPlantBomb(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:heading})"
		],
		"scope": "lua",
		"prefix": "TaskPlantBomb"
	},
	"TaskPlayAnim": {
		"body": [
			"TaskPlayAnim(${1:ped}, ${2:animDictionary}, ${3:animationName}, ${4:blendInSpeed}, ${5:blendOutSpeed}, ${6:duration}, ${7:flag}, ${8:playbackRate}, ${9:lockX}, ${10:lockY}, ${11:lockZ})"
		],
		"scope": "lua",
		"prefix": "TaskPlayAnim"
	},
	"TaskPlayAnimAdvanced": {
		"body": [
			"TaskPlayAnimAdvanced(${1:ped}, ${2:animDict}, ${3:animName}, ${4:posX}, ${5:posY}, ${6:posZ}, ${7:rotX}, ${8:rotY}, ${9:rotZ}, ${10:animEnterSpeed}, ${11:animExitSpeed}, ${12:duration}, ${13:flag}, ${14:animTime}, ${15:p14}, ${16:p15})"
		],
		"scope": "lua",
		"prefix": "TaskPlayAnimAdvanced"
	},
	"TaskPlayPhoneGestureAnimation": {
		"body": [
			"TaskPlayPhoneGestureAnimation(${1:ped}, ${2:animDict}, ${3:animation}, ${4:boneMaskType}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "TaskPlayPhoneGestureAnimation"
	},
	"TaskPutPedDirectlyIntoCover": {
		"body": [
			"TaskPutPedDirectlyIntoCover(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:timeout}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10})"
		],
		"scope": "lua",
		"prefix": "TaskPutPedDirectlyIntoCover"
	},
	"TaskPutPedDirectlyIntoMelee": {
		"body": [
			"TaskPutPedDirectlyIntoMelee(${1:ped}, ${2:meleeTarget}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "TaskPutPedDirectlyIntoMelee"
	},
	"TaskRappelDownWall": {
		"body": [
			"TaskRappelDownWall(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:p10})"
		],
		"scope": "lua",
		"prefix": "TaskRappelDownWall"
	},
	"TaskRappelFromHeli": {
		"body": [
			"TaskRappelFromHeli(${1:ped}, ${2:unused})"
		],
		"scope": "lua",
		"prefix": "TaskRappelFromHeli"
	},
	"TaskReactAndFleePed": {
		"body": [
			"TaskReactAndFleePed(${1:ped}, ${2:fleeTarget})"
		],
		"scope": "lua",
		"prefix": "TaskReactAndFleePed"
	},
	"TaskReloadWeapon": {
		"body": [
			"TaskReloadWeapon(${1:ped}, ${2:unused})"
		],
		"scope": "lua",
		"prefix": "TaskReloadWeapon"
	},
	"TaskScriptedAnimation": {
		"body": [
			"TaskScriptedAnimation(${1:ped}, ${2:p4}, ${3:p5})"
		],
		"scope": "lua",
		"prefix": "TaskScriptedAnimation"
	},
	"TaskSeekCoverFromPed": {
		"body": [
			"TaskSeekCoverFromPed(${1:ped}, ${2:target}, ${3:duration}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "TaskSeekCoverFromPed"
	},
	"TaskSeekCoverFromPos": {
		"body": [
			"TaskSeekCoverFromPos(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:duration}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "TaskSeekCoverFromPos"
	},
	"TaskSeekCoverToCoords": {
		"body": [
			"TaskSeekCoverToCoords(${1:ped}, ${2:x1}, ${3:y1}, ${4:z1}, ${5:x2}, ${6:y2}, ${7:z2}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "TaskSeekCoverToCoords"
	},
	"TaskSeekCoverToCoverPoint": {
		"body": [
			"TaskSeekCoverToCoverPoint(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6})"
		],
		"scope": "lua",
		"prefix": "TaskSeekCoverToCoverPoint"
	},
	"TaskSetBlockingOfNonTemporaryEvents": {
		"body": [
			"TaskSetBlockingOfNonTemporaryEvents(${1:ped}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "TaskSetBlockingOfNonTemporaryEvents"
	},
	"TaskSetDecisionMaker": {
		"body": [
			"TaskSetDecisionMaker(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "TaskSetDecisionMaker"
	},
	"TaskSetSphereDefensiveArea": {
		"body": [
			"TaskSetSphereDefensiveArea(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "TaskSetSphereDefensiveArea"
	},
	"TaskShockingEventReact": {
		"body": [
			"TaskShockingEventReact(${1:ped}, ${2:eventHandle})"
		],
		"scope": "lua",
		"prefix": "TaskShockingEventReact"
	},
	"TaskShootAtCoord": {
		"body": [
			"TaskShootAtCoord(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:duration}, ${6:firingPattern})"
		],
		"scope": "lua",
		"prefix": "TaskShootAtCoord"
	},
	"TaskShootAtEntity": {
		"body": [
			"TaskShootAtEntity(${1:entity}, ${2:target}, ${3:duration}, ${4:firingPattern})"
		],
		"scope": "lua",
		"prefix": "TaskShootAtEntity"
	},
	"TaskShuffleToNextVehicleSeat": {
		"body": [
			"TaskShuffleToNextVehicleSeat(${1:ped}, ${2:vehicle})"
		],
		"scope": "lua",
		"prefix": "TaskShuffleToNextVehicleSeat"
	},
	"TaskSkyDive": {
		"body": [
			"TaskSkyDive(${1:ped})"
		],
		"scope": "lua",
		"prefix": "TaskSkyDive"
	},
	"TaskSmartFleeCoord": {
		"body": [
			"TaskSmartFleeCoord(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:distance}, ${6:time}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "TaskSmartFleeCoord"
	},
	"TaskSmartFleePed": {
		"body": [
			"TaskSmartFleePed(${1:ped}, ${2:fleeTarget}, ${3:distance}, ${4:fleeTime}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "TaskSmartFleePed"
	},
	"TaskStandGuard": {
		"body": [
			"TaskStandGuard(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:heading}, ${6:scenarioName})"
		],
		"scope": "lua",
		"prefix": "TaskStandGuard"
	},
	"TaskStandStill": {
		"body": [
			"TaskStandStill(${1:ped}, ${2:time})"
		],
		"scope": "lua",
		"prefix": "TaskStandStill"
	},
	"TaskStartScenarioAtPosition": {
		"body": [
			"TaskStartScenarioAtPosition(${1:ped}, ${2:scenarioName}, ${3:x}, ${4:y}, ${5:z}, ${6:heading}, ${7:duration}, ${8:sittingScenario}, ${9:teleport})"
		],
		"scope": "lua",
		"prefix": "TaskStartScenarioAtPosition"
	},
	"TaskStartScenarioInPlace": {
		"body": [
			"TaskStartScenarioInPlace(${1:ped}, ${2:scenarioName}, ${3:unkDelay}, ${4:playEnterAnim})"
		],
		"scope": "lua",
		"prefix": "TaskStartScenarioInPlace"
	},
	"TaskStayInCover": {
		"body": [
			"TaskStayInCover(${1:ped})"
		],
		"scope": "lua",
		"prefix": "TaskStayInCover"
	},
	"TaskStealthKill": {
		"body": [
			"TaskStealthKill(${1:killer}, ${2:target}, ${3:actionType}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "TaskStealthKill"
	},
	"TaskStopPhoneGestureAnimation": {
		"body": [
			"TaskStopPhoneGestureAnimation(${1:ped})"
		],
		"scope": "lua",
		"prefix": "TaskStopPhoneGestureAnimation"
	},
	"TaskSubmarineGotoAndStop": {
		"body": [
			"TaskSubmarineGotoAndStop(${1:p0}, ${2:submarine}, ${3:x}, ${4:y}, ${5:z}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "TaskSubmarineGotoAndStop"
	},
	"TaskSwapWeapon": {
		"body": [
			"TaskSwapWeapon(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "TaskSwapWeapon"
	},
	"TaskSweepAimEntity": {
		"body": [
			"TaskSweepAimEntity(${1:ped}, ${2:anim}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:vehicle}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "TaskSweepAimEntity"
	},
	"TaskSweepAimPosition": {
		"body": [
			"TaskSweepAimPosition(${1:p0}, ${2:p5}, ${3:p6}, ${4:p7}, ${5:p8}, ${6:p9}, ${7:p10})"
		],
		"scope": "lua",
		"prefix": "TaskSweepAimPosition"
	},
	"TaskSynchronizedScene": {
		"body": [
			"TaskSynchronizedScene(${1:ped}, ${2:scene}, ${3:animDictionary}, ${4:animationName}, ${5:speed}, ${6:speedMultiplier}, ${7:duration}, ${8:flag}, ${9:playbackRate}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "TaskSynchronizedScene"
	},
	"TaskThrowProjectile": {
		"body": [
			"TaskThrowProjectile(${1:ped}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "TaskThrowProjectile"
	},
	"TaskToggleDuck": {
		"body": [
			"TaskToggleDuck(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "TaskToggleDuck"
	},
	"TaskTurnPedToFaceCoord": {
		"body": [
			"TaskTurnPedToFaceCoord(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:duration})"
		],
		"scope": "lua",
		"prefix": "TaskTurnPedToFaceCoord"
	},
	"TaskTurnPedToFaceEntity": {
		"body": [
			"TaskTurnPedToFaceEntity(${1:ped}, ${2:entity}, ${3:duration})"
		],
		"scope": "lua",
		"prefix": "TaskTurnPedToFaceEntity"
	},
	"TaskUseMobilePhone": {
		"body": [
			"TaskUseMobilePhone(${1:ped}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "TaskUseMobilePhone"
	},
	"TaskUseMobilePhoneTimed": {
		"body": [
			"TaskUseMobilePhoneTimed(${1:ped}, ${2:duration})"
		],
		"scope": "lua",
		"prefix": "TaskUseMobilePhoneTimed"
	},
	"TaskUseNearestScenarioChainToCoord": {
		"body": [
			"TaskUseNearestScenarioChainToCoord(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "TaskUseNearestScenarioChainToCoord"
	},
	"TaskUseNearestScenarioChainToCoordWarp": {
		"body": [
			"TaskUseNearestScenarioChainToCoordWarp(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "TaskUseNearestScenarioChainToCoordWarp"
	},
	"TaskUseNearestScenarioToCoord": {
		"body": [
			"TaskUseNearestScenarioToCoord(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:distance}, ${6:duration})"
		],
		"scope": "lua",
		"prefix": "TaskUseNearestScenarioToCoord"
	},
	"TaskUseNearestScenarioToCoordWarp": {
		"body": [
			"TaskUseNearestScenarioToCoordWarp(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:radius}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "TaskUseNearestScenarioToCoordWarp"
	},
	"TaskVehicleAimAtCoord": {
		"body": [
			"TaskVehicleAimAtCoord(${1:ped}, ${2:x}, ${3:y}, ${4:z})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleAimAtCoord"
	},
	"TaskVehicleAimAtPed": {
		"body": [
			"TaskVehicleAimAtPed(${1:ped}, ${2:target})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleAimAtPed"
	},
	"TaskVehicleChase": {
		"body": [
			"TaskVehicleChase(${1:driver}, ${2:targetEnt})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleChase"
	},
	"TaskVehicleDriveToCoord": {
		"body": [
			"TaskVehicleDriveToCoord(${1:ped}, ${2:vehicle}, ${3:x}, ${4:y}, ${5:z}, ${6:speed}, ${7:p6}, ${8:vehicleModel}, ${9:drivingMode}, ${10:stopRange}, ${11:p10})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleDriveToCoord"
	},
	"TaskVehicleDriveToCoordLongrange": {
		"body": [
			"TaskVehicleDriveToCoordLongrange(${1:ped}, ${2:vehicle}, ${3:x}, ${4:y}, ${5:z}, ${6:speed}, ${7:driveMode}, ${8:stopRange})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleDriveToCoordLongrange"
	},
	"TaskVehicleDriveWander": {
		"body": [
			"TaskVehicleDriveWander(${1:ped}, ${2:vehicle}, ${3:speed}, ${4:drivingStyle})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleDriveWander"
	},
	"TaskVehicleEscort": {
		"body": [
			"TaskVehicleEscort(${1:ped}, ${2:vehicle}, ${3:targetVehicle}, ${4:mode}, ${5:speed}, ${6:drivingStyle}, ${7:minDistance}, ${8:p7}, ${9:noRoadsDistance})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleEscort"
	},
	"TaskVehicleFollow": {
		"body": [
			"TaskVehicleFollow(${1:driver}, ${2:vehicle}, ${3:targetEntity}, ${4:speed}, ${5:drivingStyle}, ${6:minDistance})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleFollow"
	},
	"TaskVehicleFollowWaypointRecording": {
		"body": [
			"TaskVehicleFollowWaypointRecording(${1:ped}, ${2:vehicle}, ${3:WPRecording}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleFollowWaypointRecording"
	},
	"TaskVehicleGotoNavmesh": {
		"body": [
			"TaskVehicleGotoNavmesh(${1:ped}, ${2:vehicle}, ${3:x}, ${4:y}, ${5:z}, ${6:speed}, ${7:behaviorFlag}, ${8:stoppingRange})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleGotoNavmesh"
	},
	"TaskVehicleHeliProtect": {
		"body": [
			"TaskVehicleHeliProtect(${1:pilot}, ${2:vehicle}, ${3:entityToFollow}, ${4:targetSpeed}, ${5:p4}, ${6:radius}, ${7:altitude}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleHeliProtect"
	},
	"TaskVehicleMission": {
		"body": [
			"TaskVehicleMission(${1:driver}, ${2:vehicle}, ${3:vehicleTarget}, ${4:missionType}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:DriveAgainstTraffic})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleMission"
	},
	"TaskVehicleMissionCoorsTarget": {
		"body": [
			"TaskVehicleMissionCoorsTarget(${1:ped}, ${2:vehicle}, ${3:x}, ${4:y}, ${5:z}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8}, ${10:p9}, ${11:DriveAgainstTraffic})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleMissionCoorsTarget"
	},
	"TaskVehicleMissionPedTarget": {
		"body": [
			"TaskVehicleMissionPedTarget(${1:ped}, ${2:vehicle}, ${3:pedTarget}, ${4:missionType}, ${5:maxSpeed}, ${6:drivingStyle}, ${7:minDistance}, ${8:p7}, ${9:DriveAgainstTraffic})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleMissionPedTarget"
	},
	"TaskVehiclePark": {
		"body": [
			"TaskVehiclePark(${1:ped}, ${2:vehicle}, ${3:x}, ${4:y}, ${5:z}, ${6:heading}, ${7:mode}, ${8:radius}, ${9:keepEngineOn})"
		],
		"scope": "lua",
		"prefix": "TaskVehiclePark"
	},
	"TaskVehiclePlayAnim": {
		"body": [
			"TaskVehiclePlayAnim(${1:vehicle}, ${2:animationSet}, ${3:animationName})"
		],
		"scope": "lua",
		"prefix": "TaskVehiclePlayAnim"
	},
	"TaskVehicleShootAtCoord": {
		"body": [
			"TaskVehicleShootAtCoord(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleShootAtCoord"
	},
	"TaskVehicleShootAtPed": {
		"body": [
			"TaskVehicleShootAtPed(${1:ped}, ${2:target}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleShootAtPed"
	},
	"TaskVehicleTempAction": {
		"body": [
			"TaskVehicleTempAction(${1:driver}, ${2:vehicle}, ${3:action}, ${4:time})"
		],
		"scope": "lua",
		"prefix": "TaskVehicleTempAction"
	},
	"TaskWanderInArea": {
		"body": [
			"TaskWanderInArea(${1:ped}, ${2:x}, ${3:y}, ${4:z}, ${5:radius}, ${6:minimalLength}, ${7:timeBetweenWalks})"
		],
		"scope": "lua",
		"prefix": "TaskWanderInArea"
	},
	"TaskWanderSpecific": {
		"body": [
			"TaskWanderSpecific(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "TaskWanderSpecific"
	},
	"TaskWanderStandard": {
		"body": [
			"TaskWanderStandard(${1:ped}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "TaskWanderStandard"
	},
	"TaskWarpPedIntoVehicle": {
		"body": [
			"TaskWarpPedIntoVehicle(${1:ped}, ${2:vehicle}, ${3:seat})"
		],
		"scope": "lua",
		"prefix": "TaskWarpPedIntoVehicle"
	},
	"TaskWrithe": {
		"body": [
			"TaskWrithe(${1:ped}, ${2:target}, ${3:time}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "TaskWrithe"
	},
	"TempBanPlayer": {
		"body": [
			"TempBanPlayer(${1:playerSrc}, ${2:reason})"
		],
		"scope": "lua",
		"prefix": "TempBanPlayer"
	},
	"TerminateAllScriptsWithThisName": {
		"body": [
			"TerminateAllScriptsWithThisName(${1:scriptName})"
		],
		"scope": "lua",
		"prefix": "TerminateAllScriptsWithThisName"
	},
	"TerminateThisThread": {
		"body": [
			"TerminateThisThread()"
		],
		"scope": "lua",
		"prefix": "TerminateThisThread"
	},
	"TerminateThread": {
		"body": [
			"TerminateThread(${1:threadId})"
		],
		"scope": "lua",
		"prefix": "TerminateThread"
	},
	"TerraingridActivate": {
		"body": [
			"TerraingridActivate(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "TerraingridActivate"
	},
	"TerraingridSetColours": {
		"body": [
			"TerraingridSetColours(${1:lowR}, ${2:lowG}, ${3:lowB}, ${4:lowAlpha}, ${5:R}, ${6:G}, ${7:B}, ${8:Alpha}, ${9:highR}, ${10:highG}, ${11:highB}, ${12:highAlpha})"
		],
		"scope": "lua",
		"prefix": "TerraingridSetColours"
	},
	"TerraingridSetParams": {
		"body": [
			"TerraingridSetParams(${1:x}, ${2:y}, ${3:z}, ${4:p3}, ${5:rotation}, ${6:p5}, ${7:width}, ${8:height}, ${9:p8}, ${10:scale}, ${11:glowIntensity}, ${12:normalHeight}, ${13:heightDiff})"
		],
		"scope": "lua",
		"prefix": "TerraingridSetParams"
	},
	"TestProbeAgainstAllWater": {
		"body": [
			"TestProbeAgainstAllWater(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7})"
		],
		"scope": "lua",
		"prefix": "TestProbeAgainstAllWater"
	},
	"TestProbeAgainstWater": {
		"body": [
			"TestProbeAgainstWater(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:result})"
		],
		"scope": "lua",
		"prefix": "TestProbeAgainstWater"
	},
	"TestVerticalProbeAgainstAllWater": {
		"body": [
			"TestVerticalProbeAgainstAllWater(${1:x}, ${2:y}, ${3:z}, ${4:p3}, ${5:height})"
		],
		"scope": "lua",
		"prefix": "TestVerticalProbeAgainstAllWater"
	},
	"TextureDownloadGetName": {
		"body": [
			"TextureDownloadGetName(${1:p0})"
		],
		"scope": "lua",
		"prefix": "TextureDownloadGetName"
	},
	"TextureDownloadHasFailed": {
		"body": [
			"TextureDownloadHasFailed(${1:p0})"
		],
		"scope": "lua",
		"prefix": "TextureDownloadHasFailed"
	},
	"TextureDownloadRelease": {
		"body": [
			"TextureDownloadRelease(${1:p0})"
		],
		"scope": "lua",
		"prefix": "TextureDownloadRelease"
	},
	"TextureDownloadRequest": {
		"body": [
			"TextureDownloadRequest(${1:FilePath}, ${2:Name}, ${3:p3})"
		],
		"scope": "lua",
		"prefix": "TextureDownloadRequest"
	},
	"ThefeedAddTxdRef": {
		"body": [
			"ThefeedAddTxdRef(${1:txdString1}, ${2:txnString1}, ${3:txdString2}, ${4:txnString2})"
		],
		"scope": "lua",
		"prefix": "ThefeedAddTxdRef"
	},
	"ThefeedClearFrozenPost": {
		"body": [
			"ThefeedClearFrozenPost()"
		],
		"scope": "lua",
		"prefix": "ThefeedClearFrozenPost"
	},
	"ThefeedCommentTeleportPoolOff": {
		"body": [
			"ThefeedCommentTeleportPoolOff()"
		],
		"scope": "lua",
		"prefix": "ThefeedCommentTeleportPoolOff"
	},
	"ThefeedCommentTeleportPoolOn": {
		"body": [
			"ThefeedCommentTeleportPoolOn()"
		],
		"scope": "lua",
		"prefix": "ThefeedCommentTeleportPoolOn"
	},
	"ThefeedDisableLoadingScreenTips": {
		"body": [
			"ThefeedDisableLoadingScreenTips()"
		],
		"scope": "lua",
		"prefix": "ThefeedDisableLoadingScreenTips"
	},
	"ThefeedDisplayLoadingScreenTips": {
		"body": [
			"ThefeedDisplayLoadingScreenTips()"
		],
		"scope": "lua",
		"prefix": "ThefeedDisplayLoadingScreenTips"
	},
	"ThefeedFlushQueue": {
		"body": [
			"ThefeedFlushQueue()"
		],
		"scope": "lua",
		"prefix": "ThefeedFlushQueue"
	},
	"ThefeedForceRenderOff": {
		"body": [
			"ThefeedForceRenderOff()"
		],
		"scope": "lua",
		"prefix": "ThefeedForceRenderOff"
	},
	"ThefeedForceRenderOn": {
		"body": [
			"ThefeedForceRenderOn()"
		],
		"scope": "lua",
		"prefix": "ThefeedForceRenderOn"
	},
	"ThefeedFreezeNextPost": {
		"body": [
			"ThefeedFreezeNextPost()"
		],
		"scope": "lua",
		"prefix": "ThefeedFreezeNextPost"
	},
	"ThefeedGetFirstVisibleDeleteRemaining": {
		"body": [
			"ThefeedGetFirstVisibleDeleteRemaining()"
		],
		"scope": "lua",
		"prefix": "ThefeedGetFirstVisibleDeleteRemaining"
	},
	"ThefeedHideThisFrame": {
		"body": [
			"ThefeedHideThisFrame()"
		],
		"scope": "lua",
		"prefix": "ThefeedHideThisFrame"
	},
	"ThefeedIsPaused": {
		"body": [
			"ThefeedIsPaused()"
		],
		"scope": "lua",
		"prefix": "ThefeedIsPaused"
	},
	"ThefeedOnlyShowTooltips": {
		"body": [
			"ThefeedOnlyShowTooltips(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "ThefeedOnlyShowTooltips"
	},
	"ThefeedPause": {
		"body": [
			"ThefeedPause()"
		],
		"scope": "lua",
		"prefix": "ThefeedPause"
	},
	"ThefeedRemoveItem": {
		"body": [
			"ThefeedRemoveItem(${1:notificationId})"
		],
		"scope": "lua",
		"prefix": "ThefeedRemoveItem"
	},
	"ThefeedResetAllParameters": {
		"body": [
			"ThefeedResetAllParameters()"
		],
		"scope": "lua",
		"prefix": "ThefeedResetAllParameters"
	},
	"ThefeedResume": {
		"body": [
			"ThefeedResume()"
		],
		"scope": "lua",
		"prefix": "ThefeedResume"
	},
	"ThefeedSetAnimpostfxColor": {
		"body": [
			"ThefeedSetAnimpostfxColor(${1:red}, ${2:green}, ${3:blue}, ${4:alpha})"
		],
		"scope": "lua",
		"prefix": "ThefeedSetAnimpostfxColor"
	},
	"ThefeedSetAnimpostfxCount": {
		"body": [
			"ThefeedSetAnimpostfxCount(${1:count})"
		],
		"scope": "lua",
		"prefix": "ThefeedSetAnimpostfxCount"
	},
	"ThefeedSetAnimpostfxSound": {
		"body": [
			"ThefeedSetAnimpostfxSound(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "ThefeedSetAnimpostfxSound"
	},
	"ThefeedSetFlushAnimpostfx": {
		"body": [
			"ThefeedSetFlushAnimpostfx(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "ThefeedSetFlushAnimpostfx"
	},
	"ThefeedSetNextPostBackgroundColor": {
		"body": [
			"ThefeedSetNextPostBackgroundColor(${1:hudColorIndex})"
		],
		"scope": "lua",
		"prefix": "ThefeedSetNextPostBackgroundColor"
	},
	"ThefeedSetScriptedMenuHeight": {
		"body": [
			"ThefeedSetScriptedMenuHeight(${1:pos})"
		],
		"scope": "lua",
		"prefix": "ThefeedSetScriptedMenuHeight"
	},
	"ThefeedSpsExtendWidescreenOff": {
		"body": [
			"ThefeedSpsExtendWidescreenOff()"
		],
		"scope": "lua",
		"prefix": "ThefeedSpsExtendWidescreenOff"
	},
	"ThefeedSpsExtendWidescreenOn": {
		"body": [
			"ThefeedSpsExtendWidescreenOn()"
		],
		"scope": "lua",
		"prefix": "ThefeedSpsExtendWidescreenOn"
	},
	"Timera": {
		"body": [
			"Timera()"
		],
		"scope": "lua",
		"prefix": "Timera"
	},
	"Timerb": {
		"body": [
			"Timerb()"
		],
		"scope": "lua",
		"prefix": "Timerb"
	},
	"Timestep": {
		"body": [
			"Timestep()"
		],
		"scope": "lua",
		"prefix": "Timestep"
	},
	"TitleTextureDownloadRequest": {
		"body": [
			"TitleTextureDownloadRequest(${1:FilePath}, ${2:Name}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "TitleTextureDownloadRequest"
	},
	"ToFloat": {
		"body": [
			"ToFloat(${1:value})"
		],
		"scope": "lua",
		"prefix": "ToFloat"
	},
	"TogglePausedRenderphases": {
		"body": [
			"TogglePausedRenderphases(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "TogglePausedRenderphases"
	},
	"ToggleStealthRadar": {
		"body": [
			"ToggleStealthRadar(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "ToggleStealthRadar"
	},
	"ToggleUsePickupsForPlayer": {
		"body": [
			"ToggleUsePickupsForPlayer(${1:player}, ${2:pickupHash}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "ToggleUsePickupsForPlayer"
	},
	"ToggleVehicleMod": {
		"body": [
			"ToggleVehicleMod(${1:vehicle}, ${2:modType}, ${3:toggle})"
		],
		"scope": "lua",
		"prefix": "ToggleVehicleMod"
	},
	"TrackObjectVisibility": {
		"body": [
			"TrackObjectVisibility(${1:object})"
		],
		"scope": "lua",
		"prefix": "TrackObjectVisibility"
	},
	"TrackVehicleVisibility": {
		"body": [
			"TrackVehicleVisibility(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "TrackVehicleVisibility"
	},
	"TransformSubmarineToVehicle": {
		"body": [
			"TransformSubmarineToVehicle(${1:vehicle}, ${2:instantly})"
		],
		"scope": "lua",
		"prefix": "TransformSubmarineToVehicle"
	},
	"TransformVehicleToSubmarine": {
		"body": [
			"TransformVehicleToSubmarine(${1:vehicle}, ${2:instantly})"
		],
		"scope": "lua",
		"prefix": "TransformVehicleToSubmarine"
	},
	"TriggerClientEventInternal": {
		"body": [
			"TriggerClientEventInternal(${1:eventName}, ${2:eventTarget}, ${3:eventPayload}, ${4:payloadLength})"
		],
		"scope": "lua",
		"prefix": "TriggerClientEventInternal"
	},
	"TriggerEventInternal": {
		"body": [
			"TriggerEventInternal(${1:eventName}, ${2:eventPayload}, ${3:payloadLength})"
		],
		"scope": "lua",
		"prefix": "TriggerEventInternal"
	},
	"TriggerLatentClientEventInternal": {
		"body": [
			"TriggerLatentClientEventInternal(${1:eventName}, ${2:eventTarget}, ${3:eventPayload}, ${4:payloadLength}, ${5:bps})"
		],
		"scope": "lua",
		"prefix": "TriggerLatentClientEventInternal"
	},
	"TriggerLatentServerEventInternal": {
		"body": [
			"TriggerLatentServerEventInternal(${1:eventName}, ${2:eventPayload}, ${3:payloadLength}, ${4:bps})"
		],
		"scope": "lua",
		"prefix": "TriggerLatentServerEventInternal"
	},
	"TriggerMusicEvent": {
		"body": [
			"TriggerMusicEvent(${1:eventName})"
		],
		"scope": "lua",
		"prefix": "TriggerMusicEvent"
	},
	"TriggerScreenblurFadeIn": {
		"body": [
			"TriggerScreenblurFadeIn(${1:transitionTime})"
		],
		"scope": "lua",
		"prefix": "TriggerScreenblurFadeIn"
	},
	"TriggerScreenblurFadeOut": {
		"body": [
			"TriggerScreenblurFadeOut(${1:transitionTime})"
		],
		"scope": "lua",
		"prefix": "TriggerScreenblurFadeOut"
	},
	"TriggerScriptCrcCheckOnPlayer": {
		"body": [
			"TriggerScriptCrcCheckOnPlayer(${1:player}, ${2:p1}, ${3:scriptHash})"
		],
		"scope": "lua",
		"prefix": "TriggerScriptCrcCheckOnPlayer"
	},
	"TriggerScriptEvent": {
		"body": [
			"TriggerScriptEvent(${1:eventGroup}, ${2:eventDataSize}, ${3:playerBits})"
		],
		"scope": "lua",
		"prefix": "TriggerScriptEvent"
	},
	"TriggerScriptEvent_2": {
		"body": [
			"TriggerScriptEvent_2(${1:eventGroup}, ${2:argCount}, ${3:bit})"
		],
		"scope": "lua",
		"prefix": "TriggerScriptEvent_2"
	},
	"TriggerServerEventInternal": {
		"body": [
			"TriggerServerEventInternal(${1:eventName}, ${2:eventPayload}, ${3:payloadLength})"
		],
		"scope": "lua",
		"prefix": "TriggerServerEventInternal"
	},
	"TriggerSiren": {
		"body": [
			"TriggerSiren(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "TriggerSiren"
	},
	"TriggerSonarBlip": {
		"body": [
			"TriggerSonarBlip(${1:posX}, ${2:posY}, ${3:posZ}, ${4:radius}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "TriggerSonarBlip"
	},
	"UgcCancelQuery": {
		"body": [
			"UgcCancelQuery()"
		],
		"scope": "lua",
		"prefix": "UgcCancelQuery"
	},
	"UgcClearCreateResult": {
		"body": [
			"UgcClearCreateResult()"
		],
		"scope": "lua",
		"prefix": "UgcClearCreateResult"
	},
	"UgcClearModifyResult": {
		"body": [
			"UgcClearModifyResult()"
		],
		"scope": "lua",
		"prefix": "UgcClearModifyResult"
	},
	"UgcClearOfflineQuery": {
		"body": [
			"UgcClearOfflineQuery()"
		],
		"scope": "lua",
		"prefix": "UgcClearOfflineQuery"
	},
	"UgcClearQueryResults": {
		"body": [
			"UgcClearQueryResults()"
		],
		"scope": "lua",
		"prefix": "UgcClearQueryResults"
	},
	"UgcCopyContent": {
		"body": [
			"UgcCopyContent()"
		],
		"scope": "lua",
		"prefix": "UgcCopyContent"
	},
	"UgcCreateContent": {
		"body": [
			"UgcCreateContent(${1:data}, ${2:dataCount}, ${3:contentName}, ${4:description}, ${5:tagsCsv}, ${6:contentTypeName}, ${7:publish})"
		],
		"scope": "lua",
		"prefix": "UgcCreateContent"
	},
	"UgcCreateMission": {
		"body": [
			"UgcCreateMission(${1:contentName}, ${2:description}, ${3:tagsCsv}, ${4:contentTypeName}, ${5:publish})"
		],
		"scope": "lua",
		"prefix": "UgcCreateMission"
	},
	"UgcDidGetSucceed": {
		"body": [
			"UgcDidGetSucceed()"
		],
		"scope": "lua",
		"prefix": "UgcDidGetSucceed"
	},
	"UgcGetBookmarkedContent": {
		"body": [
			"UgcGetBookmarkedContent(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "UgcGetBookmarkedContent"
	},
	"UgcGetCachedDescription": {
		"body": [
			"UgcGetCachedDescription(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "UgcGetCachedDescription"
	},
	"UgcGetContentCategory": {
		"body": [
			"UgcGetContentCategory(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentCategory"
	},
	"UgcGetContentDescriptionHash": {
		"body": [
			"UgcGetContentDescriptionHash(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentDescriptionHash"
	},
	"UgcGetContentFileVersion": {
		"body": [
			"UgcGetContentFileVersion(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentFileVersion"
	},
	"UgcGetContentHash": {
		"body": [
			"UgcGetContentHash()"
		],
		"scope": "lua",
		"prefix": "UgcGetContentHash"
	},
	"UgcGetContentHasPlayerBookmarked": {
		"body": [
			"UgcGetContentHasPlayerBookmarked(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentHasPlayerBookmarked"
	},
	"UgcGetContentHasPlayerRecord": {
		"body": [
			"UgcGetContentHasPlayerRecord(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentHasPlayerRecord"
	},
	"UgcGetContentId": {
		"body": [
			"UgcGetContentId(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentId"
	},
	"UgcGetContentIsPublished": {
		"body": [
			"UgcGetContentIsPublished(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentIsPublished"
	},
	"UgcGetContentIsVerified": {
		"body": [
			"UgcGetContentIsVerified(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentIsVerified"
	},
	"UgcGetContentLanguage": {
		"body": [
			"UgcGetContentLanguage(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentLanguage"
	},
	"UgcGetContentName": {
		"body": [
			"UgcGetContentName(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentName"
	},
	"UgcGetContentNum": {
		"body": [
			"UgcGetContentNum()"
		],
		"scope": "lua",
		"prefix": "UgcGetContentNum"
	},
	"UgcGetContentPath": {
		"body": [
			"UgcGetContentPath(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentPath"
	},
	"UgcGetContentRating": {
		"body": [
			"UgcGetContentRating(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentRating"
	},
	"UgcGetContentRatingCount": {
		"body": [
			"UgcGetContentRatingCount(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentRatingCount"
	},
	"UgcGetContentRatingNegativeCount": {
		"body": [
			"UgcGetContentRatingNegativeCount(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentRatingNegativeCount"
	},
	"UgcGetContentRatingPositiveCount": {
		"body": [
			"UgcGetContentRatingPositiveCount(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentRatingPositiveCount"
	},
	"UgcGetContentTotal": {
		"body": [
			"UgcGetContentTotal()"
		],
		"scope": "lua",
		"prefix": "UgcGetContentTotal"
	},
	"UgcGetContentUpdatedDate": {
		"body": [
			"UgcGetContentUpdatedDate(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentUpdatedDate"
	},
	"UgcGetContentUserId": {
		"body": [
			"UgcGetContentUserId(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentUserId"
	},
	"UgcGetContentUserName": {
		"body": [
			"UgcGetContentUserName(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcGetContentUserName"
	},
	"UgcGetCreateContentId": {
		"body": [
			"UgcGetCreateContentId()"
		],
		"scope": "lua",
		"prefix": "UgcGetCreateContentId"
	},
	"UgcGetCreateResult": {
		"body": [
			"UgcGetCreateResult()"
		],
		"scope": "lua",
		"prefix": "UgcGetCreateResult"
	},
	"UgcGetCreatorNum": {
		"body": [
			"UgcGetCreatorNum()"
		],
		"scope": "lua",
		"prefix": "UgcGetCreatorNum"
	},
	"UgcGetCrewContent": {
		"body": [
			"UgcGetCrewContent(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "UgcGetCrewContent"
	},
	"UgcGetFriendContent": {
		"body": [
			"UgcGetFriendContent(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "UgcGetFriendContent"
	},
	"UgcGetGetByCategory": {
		"body": [
			"UgcGetGetByCategory(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "UgcGetGetByCategory"
	},
	"UgcGetModifyResult": {
		"body": [
			"UgcGetModifyResult()"
		],
		"scope": "lua",
		"prefix": "UgcGetModifyResult"
	},
	"UgcGetMyContent": {
		"body": [
			"UgcGetMyContent(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "UgcGetMyContent"
	},
	"UgcGetQueryResult": {
		"body": [
			"UgcGetQueryResult()"
		],
		"scope": "lua",
		"prefix": "UgcGetQueryResult"
	},
	"UgcGetRootContentId": {
		"body": [
			"UgcGetRootContentId(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcGetRootContentId"
	},
	"UgcHasCreateFinished": {
		"body": [
			"UgcHasCreateFinished()"
		],
		"scope": "lua",
		"prefix": "UgcHasCreateFinished"
	},
	"UgcHasGetFinished": {
		"body": [
			"UgcHasGetFinished()"
		],
		"scope": "lua",
		"prefix": "UgcHasGetFinished"
	},
	"UgcHasModifyFinished": {
		"body": [
			"UgcHasModifyFinished()"
		],
		"scope": "lua",
		"prefix": "UgcHasModifyFinished"
	},
	"UgcIsGetting": {
		"body": [
			"UgcIsGetting()"
		],
		"scope": "lua",
		"prefix": "UgcIsGetting"
	},
	"UgcIsLanguageSupported": {
		"body": [
			"UgcIsLanguageSupported(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcIsLanguageSupported"
	},
	"UgcPoliciesMakePrivate": {
		"body": [
			"UgcPoliciesMakePrivate(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcPoliciesMakePrivate"
	},
	"UgcPublish": {
		"body": [
			"UgcPublish(${1:contentId}, ${2:baseContentId}, ${3:contentTypeName})"
		],
		"scope": "lua",
		"prefix": "UgcPublish"
	},
	"UgcQueryByContentId": {
		"body": [
			"UgcQueryByContentId(${1:contentId}, ${2:latestVersion}, ${3:contentTypeName})"
		],
		"scope": "lua",
		"prefix": "UgcQueryByContentId"
	},
	"UgcQueryByContentIds": {
		"body": [
			"UgcQueryByContentIds(${1:count}, ${2:latestVersion}, ${3:contentTypeName})"
		],
		"scope": "lua",
		"prefix": "UgcQueryByContentIds"
	},
	"UgcQueryMyContent": {
		"body": [
			"UgcQueryMyContent(${1:p0}, ${2:p1}, ${3:p3}, ${4:p4}, ${5:p5})"
		],
		"scope": "lua",
		"prefix": "UgcQueryMyContent"
	},
	"UgcQueryRecentlyCreatedContent": {
		"body": [
			"UgcQueryRecentlyCreatedContent(${1:offset}, ${2:count}, ${3:contentTypeName}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "UgcQueryRecentlyCreatedContent"
	},
	"UgcRequestCachedDescription": {
		"body": [
			"UgcRequestCachedDescription(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcRequestCachedDescription"
	},
	"UgcRequestContentDataFromIndex": {
		"body": [
			"UgcRequestContentDataFromIndex(${1:p0}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "UgcRequestContentDataFromIndex"
	},
	"UgcRequestContentDataFromParams": {
		"body": [
			"UgcRequestContentDataFromParams(${1:contentTypeName}, ${2:contentId}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "UgcRequestContentDataFromParams"
	},
	"UgcSetBookmarked": {
		"body": [
			"UgcSetBookmarked(${1:contentId}, ${2:bookmarked}, ${3:contentTypeName})"
		],
		"scope": "lua",
		"prefix": "UgcSetBookmarked"
	},
	"UgcSetDeleted": {
		"body": [
			"UgcSetDeleted(${1:p1})"
		],
		"scope": "lua",
		"prefix": "UgcSetDeleted"
	},
	"UgcSetPlayerData": {
		"body": [
			"UgcSetPlayerData(${1:contentId}, ${2:rating}, ${3:contentTypeName})"
		],
		"scope": "lua",
		"prefix": "UgcSetPlayerData"
	},
	"UgcSetQueryDataFromOffline": {
		"body": [
			"UgcSetQueryDataFromOffline(${1:p0})"
		],
		"scope": "lua",
		"prefix": "UgcSetQueryDataFromOffline"
	},
	"UgcTextureDownloadRequest": {
		"body": [
			"UgcTextureDownloadRequest(${1:p1}, ${2:p2}, ${3:p3}, ${4:p5})"
		],
		"scope": "lua",
		"prefix": "UgcTextureDownloadRequest"
	},
	"UgcUpdateContent": {
		"body": [
			"UgcUpdateContent(${1:contentId}, ${2:dataCount}, ${3:contentName}, ${4:description}, ${5:tagsCsv}, ${6:contentTypeName})"
		],
		"scope": "lua",
		"prefix": "UgcUpdateContent"
	},
	"UgcUpdateMission": {
		"body": [
			"UgcUpdateMission(${1:contentId}, ${2:contentName}, ${3:description}, ${4:tagsCsv}, ${5:contentTypeName})"
		],
		"scope": "lua",
		"prefix": "UgcUpdateMission"
	},
	"Ui3dsceneIsAvailable": {
		"body": [
			"Ui3dsceneIsAvailable()"
		],
		"scope": "lua",
		"prefix": "Ui3dsceneIsAvailable"
	},
	"Ui3dscenePushPreset": {
		"body": [
			"Ui3dscenePushPreset(${1:presetName})"
		],
		"scope": "lua",
		"prefix": "Ui3dscenePushPreset"
	},
	"UiIsSingleplayerPauseMenuActive": {
		"body": [
			"UiIsSingleplayerPauseMenuActive()"
		],
		"scope": "lua",
		"prefix": "UiIsSingleplayerPauseMenuActive"
	},
	"UnblockDecisionMakerEvent": {
		"body": [
			"UnblockDecisionMakerEvent(${1:name}, ${2:eventType})"
		],
		"scope": "lua",
		"prefix": "UnblockDecisionMakerEvent"
	},
	"UncuffPed": {
		"body": [
			"UncuffPed(${1:ped})"
		],
		"scope": "lua",
		"prefix": "UncuffPed"
	},
	"UnfreezeRadioStation": {
		"body": [
			"UnfreezeRadioStation(${1:radioStation})"
		],
		"scope": "lua",
		"prefix": "UnfreezeRadioStation"
	},
	"UnloadCloudHat": {
		"body": [
			"UnloadCloudHat(${1:name}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "UnloadCloudHat"
	},
	"UnloadContentChangeSetGroup": {
		"body": [
			"UnloadContentChangeSetGroup(${1:hash})"
		],
		"scope": "lua",
		"prefix": "UnloadContentChangeSetGroup"
	},
	"UnlockMinimapAngle": {
		"body": [
			"UnlockMinimapAngle()"
		],
		"scope": "lua",
		"prefix": "UnlockMinimapAngle"
	},
	"UnlockMinimapPosition": {
		"body": [
			"UnlockMinimapPosition()"
		],
		"scope": "lua",
		"prefix": "UnlockMinimapPosition"
	},
	"UnlockMissionNewsStory": {
		"body": [
			"UnlockMissionNewsStory(${1:newsStory})"
		],
		"scope": "lua",
		"prefix": "UnlockMissionNewsStory"
	},
	"UnlockRadioStationTrackList": {
		"body": [
			"UnlockRadioStationTrackList(${1:radioStation}, ${2:trackListName})"
		],
		"scope": "lua",
		"prefix": "UnlockRadioStationTrackList"
	},
	"UnpatchDecalDiffuseMap": {
		"body": [
			"UnpatchDecalDiffuseMap(${1:decalType})"
		],
		"scope": "lua",
		"prefix": "UnpatchDecalDiffuseMap"
	},
	"UnpausePlaybackRecordedVehicle": {
		"body": [
			"UnpausePlaybackRecordedVehicle(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "UnpausePlaybackRecordedVehicle"
	},
	"UnpinInterior": {
		"body": [
			"UnpinInterior(${1:interior})"
		],
		"scope": "lua",
		"prefix": "UnpinInterior"
	},
	"UnpinRopeVertex": {
		"body": [
			"UnpinRopeVertex(${1:ropeId}, ${2:vertex})"
		],
		"scope": "lua",
		"prefix": "UnpinRopeVertex"
	},
	"UnregisterPedheadshot": {
		"body": [
			"UnregisterPedheadshot(${1:id})"
		],
		"scope": "lua",
		"prefix": "UnregisterPedheadshot"
	},
	"UnregisterScriptWithAudio": {
		"body": [
			"UnregisterScriptWithAudio()"
		],
		"scope": "lua",
		"prefix": "UnregisterScriptWithAudio"
	},
	"UpdateLightsOnEntity": {
		"body": [
			"UpdateLightsOnEntity(${1:entity})"
		],
		"scope": "lua",
		"prefix": "UpdateLightsOnEntity"
	},
	"UpdateLsur": {
		"body": [
			"UpdateLsur(${1:enableMixes})"
		],
		"scope": "lua",
		"prefix": "UpdateLsur"
	},
	"UpdateMapdataEntity": {
		"body": [
			"UpdateMapdataEntity(${1:mapdata}, ${2:entity}, ${3:entityDef})"
		],
		"scope": "lua",
		"prefix": "UpdateMapdataEntity"
	},
	"UpdateNavmeshBlockingObject": {
		"body": [
			"UpdateNavmeshBlockingObject(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5}, ${7:p6}, ${8:p7}, ${9:p8})"
		],
		"scope": "lua",
		"prefix": "UpdateNavmeshBlockingObject"
	},
	"UpdateOnscreenKeyboard": {
		"body": [
			"UpdateOnscreenKeyboard()"
		],
		"scope": "lua",
		"prefix": "UpdateOnscreenKeyboard"
	},
	"UpdatePedHeadBlendData": {
		"body": [
			"UpdatePedHeadBlendData(${1:ped}, ${2:shapeMix}, ${3:skinMix}, ${4:thirdMix})"
		],
		"scope": "lua",
		"prefix": "UpdatePedHeadBlendData"
	},
	"UpdatePlayerTeleport": {
		"body": [
			"UpdatePlayerTeleport(${1:player})"
		],
		"scope": "lua",
		"prefix": "UpdatePlayerTeleport"
	},
	"UpdateStatFloat": {
		"body": [
			"UpdateStatFloat(${1:statHash}, ${2:value}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "UpdateStatFloat"
	},
	"UpdateStatInt": {
		"body": [
			"UpdateStatInt(${1:statHash}, ${2:value}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "UpdateStatInt"
	},
	"UpdateTaskAimGunScriptedTarget": {
		"body": [
			"UpdateTaskAimGunScriptedTarget(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "UpdateTaskAimGunScriptedTarget"
	},
	"UpdateTaskHandsUpDuration": {
		"body": [
			"UpdateTaskHandsUpDuration(${1:ped}, ${2:duration})"
		],
		"scope": "lua",
		"prefix": "UpdateTaskHandsUpDuration"
	},
	"UpdateTaskSweepAimEntity": {
		"body": [
			"UpdateTaskSweepAimEntity(${1:ped}, ${2:entity})"
		],
		"scope": "lua",
		"prefix": "UpdateTaskSweepAimEntity"
	},
	"UpdateTaskSweepAimPosition": {
		"body": [
			"UpdateTaskSweepAimPosition(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "UpdateTaskSweepAimPosition"
	},
	"UseParticleFxAsset": {
		"body": [
			"UseParticleFxAsset(${1:name})"
		],
		"scope": "lua",
		"prefix": "UseParticleFxAsset"
	},
	"UsePlayerColourInsteadOfTeamColour": {
		"body": [
			"UsePlayerColourInsteadOfTeamColour(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "UsePlayerColourInsteadOfTeamColour"
	},
	"UseSirenAsHorn": {
		"body": [
			"UseSirenAsHorn(${1:vehicle}, ${2:toggle})"
		],
		"scope": "lua",
		"prefix": "UseSirenAsHorn"
	},
	"UseStuntCameraThisFrame": {
		"body": [
			"UseStuntCameraThisFrame()"
		],
		"scope": "lua",
		"prefix": "UseStuntCameraThisFrame"
	},
	"UseWaypointRecordingAsAssistedMovementRoute": {
		"body": [
			"UseWaypointRecordingAsAssistedMovementRoute(${1:name}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "UseWaypointRecordingAsAssistedMovementRoute"
	},
	"UsingMissionCreator": {
		"body": [
			"UsingMissionCreator(${1:toggle})"
		],
		"scope": "lua",
		"prefix": "UsingMissionCreator"
	},
	"Vdist": {
		"body": [
			"Vdist(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2})"
		],
		"scope": "lua",
		"prefix": "Vdist"
	},
	"Vdist2": {
		"body": [
			"Vdist2(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2})"
		],
		"scope": "lua",
		"prefix": "Vdist2"
	},
	"VehicleWaypointPlaybackOverrideSpeed": {
		"body": [
			"VehicleWaypointPlaybackOverrideSpeed(${1:vehicle}, ${2:speed})"
		],
		"scope": "lua",
		"prefix": "VehicleWaypointPlaybackOverrideSpeed"
	},
	"VehicleWaypointPlaybackPause": {
		"body": [
			"VehicleWaypointPlaybackPause(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "VehicleWaypointPlaybackPause"
	},
	"VehicleWaypointPlaybackResume": {
		"body": [
			"VehicleWaypointPlaybackResume(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "VehicleWaypointPlaybackResume"
	},
	"VehicleWaypointPlaybackUseDefaultSpeed": {
		"body": [
			"VehicleWaypointPlaybackUseDefaultSpeed(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "VehicleWaypointPlaybackUseDefaultSpeed"
	},
	"VehToNet": {
		"body": [
			"VehToNet(${1:vehicle})"
		],
		"scope": "lua",
		"prefix": "VehToNet"
	},
	"VerifyPasswordHash": {
		"body": [
			"VerifyPasswordHash(${1:password}, ${2:hash})"
		],
		"scope": "lua",
		"prefix": "VerifyPasswordHash"
	},
	"Vmag": {
		"body": [
			"Vmag(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "Vmag"
	},
	"Vmag2": {
		"body": [
			"Vmag2(${1:x}, ${2:y}, ${3:z})"
		],
		"scope": "lua",
		"prefix": "Vmag2"
	},
	"WasCutsceneSkipped": {
		"body": [
			"WasCutsceneSkipped()"
		],
		"scope": "lua",
		"prefix": "WasCutsceneSkipped"
	},
	"WasEventCanceled": {
		"body": [
			"WasEventCanceled()"
		],
		"scope": "lua",
		"prefix": "WasEventCanceled"
	},
	"WashDecalsFromVehicle": {
		"body": [
			"WashDecalsFromVehicle(${1:vehicle}, ${2:p1})"
		],
		"scope": "lua",
		"prefix": "WashDecalsFromVehicle"
	},
	"WashDecalsInRange": {
		"body": [
			"WashDecalsInRange(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "WashDecalsInRange"
	},
	"WasPedKilledByStealth": {
		"body": [
			"WasPedKilledByStealth(${1:ped})"
		],
		"scope": "lua",
		"prefix": "WasPedKilledByStealth"
	},
	"WasPedKilledByTakedown": {
		"body": [
			"WasPedKilledByTakedown(${1:ped})"
		],
		"scope": "lua",
		"prefix": "WasPedKilledByTakedown"
	},
	"WasPedKnockedOut": {
		"body": [
			"WasPedKnockedOut(${1:ped})"
		],
		"scope": "lua",
		"prefix": "WasPedKnockedOut"
	},
	"WasPedSkeletonUpdated": {
		"body": [
			"WasPedSkeletonUpdated(${1:ped})"
		],
		"scope": "lua",
		"prefix": "WasPedSkeletonUpdated"
	},
	"WaterOverrideFadeIn": {
		"body": [
			"WaterOverrideFadeIn(${1:p0})"
		],
		"scope": "lua",
		"prefix": "WaterOverrideFadeIn"
	},
	"WaterOverrideFadeOut": {
		"body": [
			"WaterOverrideFadeOut(${1:p0})"
		],
		"scope": "lua",
		"prefix": "WaterOverrideFadeOut"
	},
	"WaterOverrideSetOceannoiseminamplitude": {
		"body": [
			"WaterOverrideSetOceannoiseminamplitude(${1:minAmplitude})"
		],
		"scope": "lua",
		"prefix": "WaterOverrideSetOceannoiseminamplitude"
	},
	"WaterOverrideSetOceanwaveamplitude": {
		"body": [
			"WaterOverrideSetOceanwaveamplitude(${1:amplitude})"
		],
		"scope": "lua",
		"prefix": "WaterOverrideSetOceanwaveamplitude"
	},
	"WaterOverrideSetOceanwavemaxamplitude": {
		"body": [
			"WaterOverrideSetOceanwavemaxamplitude(${1:maxAmplitude})"
		],
		"scope": "lua",
		"prefix": "WaterOverrideSetOceanwavemaxamplitude"
	},
	"WaterOverrideSetOceanwaveminamplitude": {
		"body": [
			"WaterOverrideSetOceanwaveminamplitude(${1:minAmplitude})"
		],
		"scope": "lua",
		"prefix": "WaterOverrideSetOceanwaveminamplitude"
	},
	"WaterOverrideSetRipplebumpiness": {
		"body": [
			"WaterOverrideSetRipplebumpiness(${1:bumpiness})"
		],
		"scope": "lua",
		"prefix": "WaterOverrideSetRipplebumpiness"
	},
	"WaterOverrideSetRippledisturb": {
		"body": [
			"WaterOverrideSetRippledisturb(${1:disturb})"
		],
		"scope": "lua",
		"prefix": "WaterOverrideSetRippledisturb"
	},
	"WaterOverrideSetRipplemaxbumpiness": {
		"body": [
			"WaterOverrideSetRipplemaxbumpiness(${1:maxBumpiness})"
		],
		"scope": "lua",
		"prefix": "WaterOverrideSetRipplemaxbumpiness"
	},
	"WaterOverrideSetRippleminbumpiness": {
		"body": [
			"WaterOverrideSetRippleminbumpiness(${1:minBumpiness})"
		],
		"scope": "lua",
		"prefix": "WaterOverrideSetRippleminbumpiness"
	},
	"WaterOverrideSetShorewaveamplitude": {
		"body": [
			"WaterOverrideSetShorewaveamplitude(${1:amplitude})"
		],
		"scope": "lua",
		"prefix": "WaterOverrideSetShorewaveamplitude"
	},
	"WaterOverrideSetShorewavemaxamplitude": {
		"body": [
			"WaterOverrideSetShorewavemaxamplitude(${1:maxAmplitude})"
		],
		"scope": "lua",
		"prefix": "WaterOverrideSetShorewavemaxamplitude"
	},
	"WaterOverrideSetShorewaveminamplitude": {
		"body": [
			"WaterOverrideSetShorewaveminamplitude(${1:minAmplitude})"
		],
		"scope": "lua",
		"prefix": "WaterOverrideSetShorewaveminamplitude"
	},
	"WaterOverrideSetStrength": {
		"body": [
			"WaterOverrideSetStrength(${1:strength})"
		],
		"scope": "lua",
		"prefix": "WaterOverrideSetStrength"
	},
	"WaypointPlaybackGetIsPaused": {
		"body": [
			"WaypointPlaybackGetIsPaused(${1:p0})"
		],
		"scope": "lua",
		"prefix": "WaypointPlaybackGetIsPaused"
	},
	"WaypointPlaybackOverrideSpeed": {
		"body": [
			"WaypointPlaybackOverrideSpeed(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "WaypointPlaybackOverrideSpeed"
	},
	"WaypointPlaybackPause": {
		"body": [
			"WaypointPlaybackPause(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "WaypointPlaybackPause"
	},
	"WaypointPlaybackResume": {
		"body": [
			"WaypointPlaybackResume(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "WaypointPlaybackResume"
	},
	"WaypointPlaybackStartAimingAtCoord": {
		"body": [
			"WaypointPlaybackStartAimingAtCoord(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "WaypointPlaybackStartAimingAtCoord"
	},
	"WaypointPlaybackStartAimingAtPed": {
		"body": [
			"WaypointPlaybackStartAimingAtPed(${1:p0}, ${2:p1}, ${3:p2})"
		],
		"scope": "lua",
		"prefix": "WaypointPlaybackStartAimingAtPed"
	},
	"WaypointPlaybackStartShootingAtCoord": {
		"body": [
			"WaypointPlaybackStartShootingAtCoord(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5})"
		],
		"scope": "lua",
		"prefix": "WaypointPlaybackStartShootingAtCoord"
	},
	"WaypointPlaybackStartShootingAtPed": {
		"body": [
			"WaypointPlaybackStartShootingAtPed(${1:p0}, ${2:p1}, ${3:p2}, ${4:p3})"
		],
		"scope": "lua",
		"prefix": "WaypointPlaybackStartShootingAtPed"
	},
	"WaypointPlaybackStopAimingOrShooting": {
		"body": [
			"WaypointPlaybackStopAimingOrShooting(${1:p0})"
		],
		"scope": "lua",
		"prefix": "WaypointPlaybackStopAimingOrShooting"
	},
	"WaypointPlaybackUseDefaultSpeed": {
		"body": [
			"WaypointPlaybackUseDefaultSpeed(${1:p0})"
		],
		"scope": "lua",
		"prefix": "WaypointPlaybackUseDefaultSpeed"
	},
	"WaypointRecordingGetClosestWaypoint": {
		"body": [
			"WaypointRecordingGetClosestWaypoint(${1:name}, ${2:x}, ${3:y}, ${4:z}, ${5:point})"
		],
		"scope": "lua",
		"prefix": "WaypointRecordingGetClosestWaypoint"
	},
	"WaypointRecordingGetCoord": {
		"body": [
			"WaypointRecordingGetCoord(${1:name}, ${2:point}, ${3:coord})"
		],
		"scope": "lua",
		"prefix": "WaypointRecordingGetCoord"
	},
	"WaypointRecordingGetNumPoints": {
		"body": [
			"WaypointRecordingGetNumPoints(${1:name}, ${2:points})"
		],
		"scope": "lua",
		"prefix": "WaypointRecordingGetNumPoints"
	},
	"WaypointRecordingGetSpeedAtPoint": {
		"body": [
			"WaypointRecordingGetSpeedAtPoint(${1:name}, ${2:point})"
		],
		"scope": "lua",
		"prefix": "WaypointRecordingGetSpeedAtPoint"
	},
	"WithdrawVc": {
		"body": [
			"WithdrawVc(${1:amount})"
		],
		"scope": "lua",
		"prefix": "WithdrawVc"
	},
	"WouldEntityBeOccluded": {
		"body": [
			"WouldEntityBeOccluded(${1:entityModelHash}, ${2:x}, ${3:y}, ${4:z}, ${5:p4})"
		],
		"scope": "lua",
		"prefix": "WouldEntityBeOccluded"
	},
	"DGCore.Commands.Add": {
		"scope": "lua",
		"prefix": "DGCore.Commands.Add",
		"body": [
			"DGCore.Commands.Add(${1:name}, ${2:help}, ${3:arguments}, ${4:argsrequired}, ${5:callback}, ${6:permission})"
		]
	},
	"DGCore.Commands.Refresh": {
		"scope": "lua",
		"prefix": "DGCore.Commands.Refresh",
		"body": [
			"DGCore.Commands.Refresh(${1:source})"
		]
	},
	"DGCore.Functions.ExecuteSql": {
		"scope": "lua",
		"prefix": "DGCore.Functions.ExecuteSql",
		"body": [
			"DGCore.Functions.ExecuteSql(${1:wait}, ${2:query}, ${3:cb})"
		]
	},
	"DGCore.Functions.GetIdentifier": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetIdentifier",
		"body": [
			"DGCore.Functions.GetIdentifier(${1:source}, ${2:idtype})"
		]
	},
	"DGCore.Functions.GetSource": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetSource",
		"body": [
			"DGCore.Functions.GetSource(${1:identifier})"
		]
	},
	"DGCore.Functions.GetPlayer": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetPlayer",
		"body": [
			"DGCore.Functions.GetPlayer(${1:source})"
		]
	},
	"DGCore.Functions.GetPlayerByCitizenId": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetPlayerByCitizenId",
		"body": [
			"DGCore.Functions.GetPlayerByCitizenId(${1:citizenid})"
		]
	},
	"DGCore.Functions.GetPlayerByPhone": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetPlayerByPhone",
		"body": [
			"DGCore.Functions.GetPlayerByPhone(${1:number})"
		]
	},
	"DGCore.Functions.CreateCallback": {
		"scope": "lua",
		"prefix": "DGCore.Functions.CreateCallback",
		"body": [
			"DGCore.Functions.CreateCallback(${1:name}, ${2:cb})"
		]
	},
	"DGCore.Functions.TriggerCallback": {
		"scope": "lua",
		"prefix": "DGCore.Functions.TriggerCallback",
		"body": [
			"DGCore.Functions.TriggerCallback(${1:name}, ${2:source}, ${3:cb}, ${4:...})"
		]
	},
	"DGCore.Functions.CreateUseableItem": {
		"scope": "lua",
		"prefix": "DGCore.Functions.CreateUseableItem",
		"body": [
			"DGCore.Functions.CreateUseableItem(${1:item}, ${2:cb})"
		]
	},
	"DGCore.Functions.CanUseItem": {
		"scope": "lua",
		"prefix": "DGCore.Functions.CanUseItem",
		"body": [
			"DGCore.Functions.CanUseItem(${1:item})"
		]
	},
	"DGCore.Functions.UseItem": {
		"scope": "lua",
		"prefix": "DGCore.Functions.UseItem",
		"body": [
			"DGCore.Functions.UseItem(${1:source}, ${2:item})"
		]
	},
	"DGCore.Functions.Kick": {
		"scope": "lua",
		"prefix": "DGCore.Functions.Kick",
		"body": [
			"DGCore.Functions.Kick(${1:source}, ${2:reason}, ${3:setKickReason}, ${4:deferrals})"
		]
	},
	"DGCore.Functions.IsWhitelisted": {
		"scope": "lua",
		"prefix": "DGCore.Functions.IsWhitelisted",
		"body": [
			"DGCore.Functions.IsWhitelisted(${1:source})"
		]
	},
	"DGCore.Functions.AddPermission": {
		"scope": "lua",
		"prefix": "DGCore.Functions.AddPermission",
		"body": [
			"DGCore.Functions.AddPermission(${1:source}, ${2:permission})"
		]
	},
	"DGCore.Functions.RemovePermission": {
		"scope": "lua",
		"prefix": "DGCore.Functions.RemovePermission",
		"body": [
			"DGCore.Functions.RemovePermission(${1:source})"
		]
	},
	"DGCore.Functions.HasPermission": {
		"scope": "lua",
		"prefix": "DGCore.Functions.HasPermission",
		"body": [
			"DGCore.Functions.HasPermission(${1:source}, ${2:permission})"
		]
	},
	"DGCore.Functions.GetPermission": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetPermission",
		"body": [
			"DGCore.Functions.GetPermission(${1:source})"
		]
	},
	"DGCore.Functions.IsOptin": {
		"scope": "lua",
		"prefix": "DGCore.Functions.IsOptin",
		"body": [
			"DGCore.Functions.IsOptin(${1:source})"
		]
	},
	"DGCore.Functions.ToggleOptin": {
		"scope": "lua",
		"prefix": "DGCore.Functions.ToggleOptin",
		"body": [
			"DGCore.Functions.ToggleOptin(${1:source})"
		]
	},
	"DGCore.Functions.IsPlayerBanned": {
		"scope": "lua",
		"prefix": "DGCore.Functions.IsPlayerBanned",
		"body": [
			"DGCore.Functions.IsPlayerBanned(${1:source})"
		]
	},
	"DGCore.Player.Login": {
		"scope": "lua",
		"prefix": "DGCore.Player.Login",
		"body": [
			"DGCore.Player.Login(${1:source},${2:citizenid},${3:newData})"
		]
	},
	"DGCore.Player.CheckPlayerData": {
		"scope": "lua",
		"prefix": "DGCore.Player.CheckPlayerData",
		"body": [
			"DGCore.Player.CheckPlayerData(${1:source},${2:PlayerData})"
		]
	},
	"DGCore.Player.CreatePlayer": {
		"scope": "lua",
		"prefix": "DGCore.Player.CreatePlayer",
		"body": [
			"DGCore.Player.CreatePlayer(${1:PlayerData})"
		]
	},
	"DGCore.Player.Save": {
		"scope": "lua",
		"prefix": "DGCore.Player.Save",
		"body": [
			"DGCore.Player.Save(${1:source})"
		]
	},
	"DGCore.Player.Logout": {
		"scope": "lua",
		"prefix": "DGCore.Player.Logout",
		"body": [
			"DGCore.Player.Logout(${1:source})"
		]
	},
	"DGCore.Player.DeleteCharacter": {
		"scope": "lua",
		"prefix": "DGCore.Player.DeleteCharacter",
		"body": [
			"DGCore.Player.DeleteCharacter(${1:source},${2:citizenid})"
		]
	},
	"DGCore.Player.LoadInventory": {
		"scope": "lua",
		"prefix": "DGCore.Player.LoadInventory",
		"body": [
			"DGCore.Player.LoadInventory(${1:PlayerData})"
		]
	},
	"DGCore.Player.SaveInventory": {
		"scope": "lua",
		"prefix": "DGCore.Player.SaveInventory",
		"body": [
			"DGCore.Player.SaveInventory(${1:source})"
		]
	},
	"DGCore.Player.GetTotalWeight": {
		"scope": "lua",
		"prefix": "DGCore.Player.GetTotalWeight",
		"body": [
			"DGCore.Player.GetTotalWeight(${1:items})"
		]
	},
	"DGCore.Player.GetSlotsByItem": {
		"scope": "lua",
		"prefix": "DGCore.Player.GetSlotsByItem",
		"body": [
			"DGCore.Player.GetSlotsByItem(${1:items},${2:itemName})"
		]
	},
	"DGCore.Player.GetFirstSlotByItem": {
		"scope": "lua",
		"prefix": "DGCore.Player.GetFirstSlotByItem",
		"body": [
			"DGCore.Player.GetFirstSlotByItem(${1:items},${2:itemName})"
		]
	},
	"DGCore.EscapeSqli": {
		"scope": "lua",
		"prefix": "DGCore.EscapeSqli",
		"body": [
			"DGCore.EscapeSqli(${1:str})"
		]
	},
	"DGCore.Functions.GetPlayerData": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetPlayerData",
		"body": [
			"DGCore.Functions.GetPlayerData(${1:cb})"
		]
	},
	"DGCore.Functions.DrawText": {
		"scope": "lua",
		"prefix": "DGCore.Functions.DrawText",
		"body": [
			"DGCore.Functions.DrawText(${1:x}, ${2:y}, ${3:width}, ${4:height}, ${5:scale}, ${6:r}, ${7:g}, ${8:b}, ${9:a}, ${10:text})"
		]
	},
	"DGCore.Functions.DrawText3D": {
		"scope": "lua",
		"prefix": "DGCore.Functions.DrawText3D",
		"body": [
			"DGCore.Functions.DrawText3D(${1:x}, ${2:y}, ${3:z}, ${4:text})"
		]
	},
	"DGCore.Functions.GetCoords": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetCoords",
		"body": [
			"DGCore.Functions.GetCoords(${1:entity})"
		]
	},
	"DGCore.Functions.SpawnVehicle": {
		"scope": "lua",
		"prefix": "DGCore.Functions.SpawnVehicle",
		"body": [
			"DGCore.Functions.SpawnVehicle(${1:model}, ${2:cb}, ${3:coords}, ${4:isnetworked})"
		]
	},
	"DGCore.Functions.DeleteVehicle": {
		"scope": "lua",
		"prefix": "DGCore.Functions.DeleteVehicle",
		"body": [
			"DGCore.Functions.DeleteVehicle(${1:vehicle})"
		]
	},
	"DGCore.Functions.Notify": {
		"scope": "lua",
		"prefix": "DGCore.Functions.Notify",
		"body": [
			"DGCore.Functions.Notify(${1:text}, ${2:texttype}, ${3:length})"
		]
	},
	"DGCore.Functions.GetVehicles": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetVehicles",
		"body": [
			"DGCore.Functions.GetVehicles()"
		]
	},
	"DGCore.Functions.GetPeds": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetPeds",
		"body": [
			"DGCore.Functions.GetPeds(${1:ignorelist})"
		]
	},
	"DGCore.Functions.GetPlayers": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetPlayers",
		"body": [
			"DGCore.Functions.GetPlayers()"
		]
	},
	"DGCore.Functions.GetClosestVehicle": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetClosestVehicle",
		"body": [
			"DGCore.Functions.GetClosestVehicle(${1:coords})"
		]
	},
	"DGCore.Functions.GetClosestPed": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetClosestPed",
		"body": [
			"DGCore.Functions.GetClosestPed(${1:coords}, ${2:ignoreList})"
		]
	},
	"DGCore.Functions.GetClosestPlayer": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetClosestPlayer",
		"body": [
			"DGCore.Functions.GetClosestPlayer(${1:coords})"
		]
	},
	"DGCore.Functions.GetPlayersFromCoords": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetPlayersFromCoords",
		"body": [
			"DGCore.Functions.GetPlayersFromCoords(${1:coords}, ${2:distance})"
		]
	},
	"DGCore.Functions.HasItem": {
		"scope": "lua",
		"prefix": "DGCore.Functions.HasItem",
		"body": [
			"DGCore.Functions.HasItem(${1:source}, ${2:cb}, ${3:item})"
		]
	},
	"DGCore.Functions.Progressbar": {
		"scope": "lua",
		"prefix": "DGCore.Functions.Progressbar",
		"body": [
			"DGCore.Functions.Progressbar(${1:name}, ${2:label}, ${3:duration}, ${4:useWhileDead}, ${5:canCancel}, ${6:disableControls}, ${7:animation}, ${8:prop}, ${9:propTwo}, ${10:onFinish}, ${11:onCancel})"
		]
	},
	"DGCore.Functions.GetVehicleProperties": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GetVehicleProperties",
		"body": [
			"DGCore.Functions.GetVehicleProperties(${1:vehicle})"
		]
	},
	"DGCore.Functions.SetVehicleProperties": {
		"scope": "lua",
		"prefix": "DGCore.Functions.SetVehicleProperties",
		"body": [
			"DGCore.Functions.SetVehicleProperties(${1:vehicle}, ${2:props})"
		]
	},
	"DGCore.Functions.GenerateId": {
		"scope": "lua",
		"prefix": "DGCore.Functions.GenerateId",
		"body": [
			"DGCore.Functions.GenerateId(${1:length},${2:pattern})"
		],
		"description": [
			"Length: Length of ID \nSyntax:\n. all characters\n%a letters\n%c control characters\n%d digits\n%l lower case letters\n%p punctuation characters\n%s space characters\n%u upper case letters\n%w alphanumeric characters\n%x hexadecimal digits\n%z the character with representation 0"
		]
	},
	"DGCore.Debug": {
		"scope": "lua",
		"prefix": "DGCore.Debug",
		"body": [
			"DGCore.Debug(${1:info})"
		]
	}
}